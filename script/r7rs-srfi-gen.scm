#!/bin/env sash

#!read-macro=sagittarius/regex
(import (rnrs) (util file) (sagittarius regex) (pp)
	(sagittarius control)
	(getopt))

(define (usage args)
  (print "Usage: r7rs-srfi-gen.scm -p [SRFI dir]")
  (exit -1))

(define-constant +prelude+ 
  ";; This file is automatically generated. DO NOT EDIT!!")

(define (main args)
  (with-args (cdr args) ((p* (#\p "path") * (usage args)))
    (dolist (p p*)
     (let ((files (find-files p :pattern #/^%3a\d+\.scm/)))
       (dolist (file files)
	 (let-values (((base name ext) (decompose-path file)))
	   (let* ((num (regex-replace-all #/%3a/ name ""))
		  (new-file (build-path base 
					(string-append num "." ext))))
	     ;; remove file if it's there
	     (when (file-exists? new-file) (delete-file new-file))
	     (call-with-output-file new-file
	       (lambda (out)
		 (let ((n (string->number num)))
		   (display +prelude+ out) (newline out)
		   (pp `(define-library (srfi ,n)
			  (export :all :export-reader-macro)
			  (import (srfi ,(make-keyword (string->symbol num)))))
		       out)))))))))))