name: Sagittarius CI

on:
  push:
    branches: [ master ]

jobs:
  POSIX-Build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { os: 'ubuntu-latest', setup: '.ci/setup-ubuntu.sh' }
          - { os: 'macos-latest',  setup: '.ci/setup-macos.sh' }
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: target
      - name: Install dependencies
        run: |
          bash "target/${{ matrix.config.setup }}" "sudo"
          mkdir current_sagittarius
      - name: Install current sagittarius
        working-directory: current_sagittarius
        run: |
          bash ../target/.ci/build-current.sh 'yes'
      - name: Pre-build
        working-directory: target
        run: |
          ./dist.sh gen
          cmake .
      - name: Build
        working-directory: target
        run: make
      - name: Test
        working-directory: target
        run: ctest -V
  Windows-Build:
    runs-on: ${{ matrix.images.name }}
    strategy:
      matrix:
        images:
          - name: windows-2022
            path: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise'
            arch: x86_amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: target
      - name: Install current sagittarius
        working-directory: target
        run: |
          .\.ci\install-current.ps1
        shell: powershell
      - name: Setup MSVC
        run: |
          "${{ matrix.images.path }}\VC\Auxiliary\Build\vcvarsall.bat" ${{ matrix.images.arch }}
        shell: cmd
      - name: Pre build
        working-directory: target
        run: |
          dist.bat gen
        shell: cmd
      - name: CMake
        working-directory: target
        run: |
          cmake . -G "NMake Makefiles" -DDEBUG_VERSION=OFF
        shell: cmd
      - name: Build
        working-directory: target
        run: |
          nmake
        shell: cmd
      - name: Test
        working-directory: target
        run: |
          ctest -V -LE json 
        shell: cmd
