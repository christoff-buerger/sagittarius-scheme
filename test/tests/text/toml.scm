(import (rnrs)
	(text toml)
	(srfi :64)
	(srfi :19))

(test-begin "TOML")

(test-assert toml-read)
(test-assert (procedure? toml-read))

(define (test-toml-date expected str)
  (define (compare r)
    (define (pair=? p1 p2)
      (cond ((and (null? p1) (null? p2)) #t)
	    ((or (null? p1) (null? p2)) #f)
	    ((and (date? (car p1)) (date? (car p2)))
	     (and (time=? (date->time-utc (car p1)) (date->time-utc (car p2)))
		  (pair=? (cdr p1) (cdr p2))))
	    ((and (equal? (car p1) (car p2)))
	     (pair=? (cdr p1) (cdr p2)))
	    (else #f)))
    (define len (vector-length r))
    (and (= (vector-length expected) len)
	 (let loop ((i 0))
	   (and (= i len)
		(let ((e (vector-ref expected i))
		      (rv (vector-ref r i)))
		  (and (pair=? e rv) (loop (+ i 1))))))))
  (test-assert expected
	       (toml-read (open-string-input-port str))))

(define (test-toml-file expected file)
  (test-equal file expected (call-with-input-file file toml-read)))

(define (make-local-date n s m h d mm y)
  (make-date n s m h d mm y (date-zone-offset (current-date))))

(test-toml-date `#(("date" . ,(make-local-date 0 59 59 12 1 1 2018)))
		"date=2018-01-01T12:59:59.0")
(test-toml-date `#(("date" . ,(make-date 0 59 59 12 1 1 2018 0)))
		"date=2018-01-01T12:59:59.0Z")

(test-toml-file '#(("key" . "val")
		   ("key2" . #t)
		   ("str1" . "str\tstr")
		   ("str2" . "str\\tstr")
		   ("str3" . "\nmulti line\nthis is not wrapped like this\n")
		   ("str4" . "\nmulti line\nthis is wrapped \\\nit shows as it is\n")
		   ("dec1" . 12345678)
		   ("dec2" . -12345678)
		   ("dec3" . 12345678)
		   ("hex1" . #x12ab)
		   ("hex2" . #x1234abcd)
		   ("oct1" . #o1234)
		   ("oct2" . #o1234567)
		   ("bin1" . #b01)
		   ("bin2" . #b11)
		   ("float1" . 10.05e10)
		   ("float1" . 1e10)
		   ("array1" . #())
		   ("array2" . #(1))
		   ("array3" . #(1 2))
		   ("array4" . #(#()))
		   ("array5" . #(#() #()))
		   ("inline-table1" . #())
		   ("inline-table2" . #(("key1" . "key1")))
		   ("inline-table3" . #(("key1" . "key1")
					("key2" . "key2")
					("key3" . #t))))
		"test/data/toml-test1.toml")

(test-toml-file '#(("table-1" . #(("key1" . "some string")
				  ("key2" . 123)))
		   ("table-2" . #(("key1" . "another string")
				  ("key2" . 456)))
		   ("dog" . #(("tater.man" . #(("type" . "pug"))))))
		"test/data/toml-test2.toml")

(test-toml-file '#(("products"
		    #(("name" . "Hammer")
		      ("sku" . 738594937))
		    #()
		    #(("name" . "Nail")
		      ("sku" . 284758393)
		      ("color" . "gray"))))
		"test/data/toml-test3.toml")

(test-toml-file '#(("fruit"
		    #(("name" . "apple")
		      ("physical" . #(("color" . "red")
				      ("shape" . "round")))
		      ("variety"
		       #(("name" . "red delicious"))
		       #(("name" . "granny smith"))))
		    #(("name" . "banana")
		      ("variety"
		       #(("name" . "plantain"))))))
		"test/data/toml-test4.toml")

(test-end)
