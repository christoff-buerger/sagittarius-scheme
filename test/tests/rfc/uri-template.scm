(import (rnrs)
	(rfc uri-template)
	(srfi :64))

(test-begin "RFC URI Template")

(define (uri-parse template)
  (parse-uri-template template))
(define (test-parse expected template)
  (test-equal expected (uri-parse (open-string-input-port template)))
  (test-equal expected (uri-parse template)))

(test-parse '("http://www.example.com/foo" (#\? "query" "number"))
	    "http://www.example.com/foo{?query,number}")
(test-parse '("http://www.example.com/foo" (("query" 6) ("number" *)))
	    "http://www.example.com/foo{query:6,number*}")
(test-parse '("http://www.example.com/foo" (#\+ "query"))
	    "http://www.example.com/foo{+query}")
;; reserved but can be parsed
(test-parse '("http://www.example.com/foo" (#\@ "query"))
	    "http://www.example.com/foo{@query}")

(test-error uri-template-parse-error? (uri-parse "http://www.<>example.com"))
(guard (e ((uri-template-parse-error? e)
	   (test-equal "http://www.<>example.com"
		       (uri-template-parsing-template e)))
	  (else (test-assert "Not an expected condition" #f)))
  (uri-parse "http://www.<>example.com")
  (test-assert "Condition must be raised" #f))

(define (test-rfc-expand template expected)
  (define parameter
    '#(
       ("count" "one" "two" "three")
       ("dom" "example" "com")
       ("dub" . "me/too")
       ("hello" . "Hello World!")
       ("half" . "50%")
       ("var" . "value")
       ("who" . "fred")
       ("base" . "http://example.com/home/")
       ("path" . "/foo/bar")
       ("list" "red" "green" "blue")
       ("keys" . #(("semi" . ";") ("dot" . ".") ("comma" . ",")))
       ("v" . "6")
       ("x" . "1024")
       ("y" . "768")
       ("empty" . "")
       ("empty_keys" . #())
       ("undef" . null)
       ))
  (let ((parsed (parse-uri-template (open-string-input-port template))))
    ;; (print (expand-uri-template parsed parameter))
    (test-equal template expected (expand-uri-template parsed parameter))))

(test-rfc-expand "{var}" "value")
(test-rfc-expand "{hello}" "Hello%20World%21")
(test-rfc-expand "{half}" "50%25")
(test-rfc-expand "O{empty}X" "OX")
(test-rfc-expand "O{undef}X" "OX")
(test-rfc-expand "{x,y}" "1024,768")
(test-rfc-expand "{x,hello,y}" "1024,Hello%20World%21,768")
(test-rfc-expand "?{x,empty}" "?1024,")
(test-rfc-expand "?{x,undef}" "?1024")
(test-rfc-expand "?{undef,y}" "?768")
(test-rfc-expand "{var:3}" "val")
(test-rfc-expand "{var:30}" "value")
(test-rfc-expand "{list}" "red,green,blue")
(test-rfc-expand "{list*}" "red,green,blue")
(test-rfc-expand "{keys}" "semi,%3B,dot,.,comma,%2C")
(test-rfc-expand "{keys*}" "semi=%3B,dot=.,comma=%2C")

(test-rfc-expand "{+var}" "value")
(test-rfc-expand "{+hello}" "Hello%20World!")
(test-rfc-expand "{+half}" "50%25")
(test-rfc-expand "{base}index" "http%3A%2F%2Fexample.com%2Fhome%2Findex")
(test-rfc-expand "{+base}index" "http://example.com/home/index")
(test-rfc-expand "O{+empty}X" "OX")
(test-rfc-expand "O{+undef}X" "OX")
(test-rfc-expand "{+path}/here" "/foo/bar/here")
(test-rfc-expand "here?ref={+path}" "here?ref=/foo/bar")
(test-rfc-expand "up{+path}{var}/here" "up/foo/barvalue/here")
(test-rfc-expand "{+x,hello,y}" "1024,Hello%20World!,768")
(test-rfc-expand "{+path,x}/here" "/foo/bar,1024/here")
(test-rfc-expand "{+path:6}/here" "/foo/b/here")
(test-rfc-expand "{+list}" "red,green,blue")
(test-rfc-expand "{+list*}" "red,green,blue")
(test-rfc-expand "{+keys}" "semi,;,dot,.,comma,,")
(test-rfc-expand "{+keys*}" "semi=;,dot=.,comma=,")

(test-rfc-expand "{#var}" "#value")
(test-rfc-expand "{#hello}" "#Hello%20World!")
(test-rfc-expand "{#half}" "#50%25")
(test-rfc-expand "foo{#empty}" "foo#")
(test-rfc-expand "foo{#undef}" "foo")
(test-rfc-expand "{#x,hello,y}" "#1024,Hello%20World!,768")
(test-rfc-expand "{#path,x}/here" "#/foo/bar,1024/here")
(test-rfc-expand "{#path:6}/here" "#/foo/b/here")
(test-rfc-expand "{#list}" "#red,green,blue")
(test-rfc-expand "{#list*}" "#red,green,blue")
(test-rfc-expand "{#keys}" "#semi,;,dot,.,comma,,")
(test-rfc-expand "{#keys*}" "#semi=;,dot=.,comma=,")

(test-rfc-expand "{.who}" ".fred")
(test-rfc-expand "{.who,who}" ".fred.fred")
(test-rfc-expand "{.half,who}" ".50%25.fred")
(test-rfc-expand "www{.dom*}" "www.example.com")
(test-rfc-expand "X{.var}" "X.value")
(test-rfc-expand "X{.empty}" "X.")
(test-rfc-expand "X{.undef}" "X")
(test-rfc-expand "X{.var:3}" "X.val")
(test-rfc-expand "X{.list}" "X.red,green,blue")
(test-rfc-expand "X{.list*}" "X.red.green.blue")
(test-rfc-expand "X{.keys}" "X.semi,%3B,dot,.,comma,%2C")
(test-rfc-expand "X{.keys*}" "X.semi=%3B.dot=..comma=%2C")
(test-rfc-expand "X{.empty_keys}" "X")
(test-rfc-expand "X{.empty_keys*}" "X")

(test-rfc-expand "{/who}" "/fred")
(test-rfc-expand "{/who,who}" "/fred/fred")
(test-rfc-expand "{/half,who}" "/50%25/fred")
(test-rfc-expand "{/who,dub}" "/fred/me%2Ftoo")
(test-rfc-expand "{/var}" "/value")
(test-rfc-expand "{/var,empty}" "/value/")
(test-rfc-expand "{/var,undef}" "/value")
(test-rfc-expand "{/var,x}/here" "/value/1024/here")
(test-rfc-expand "{/var:1,var}" "/v/value")
(test-rfc-expand "{/list}" "/red,green,blue")
(test-rfc-expand "{/list*}" "/red/green/blue")
(test-rfc-expand "{/list*,path:4}" "/red/green/blue/%2Ffoo")
(test-rfc-expand "{/keys}" "/semi,%3B,dot,.,comma,%2C")
(test-rfc-expand "{/keys*}" "/semi=%3B/dot=./comma=%2C")

(test-rfc-expand "{;who}" ";who=fred")
(test-rfc-expand "{;half}" ";half=50%25")
(test-rfc-expand "{;empty}" ";empty")
(test-rfc-expand "{;v,empty,who}" ";v=6;empty;who=fred")
(test-rfc-expand "{;v,bar,who}" ";v=6;who=fred")
(test-rfc-expand "{;x,y}" ";x=1024;y=768")
(test-rfc-expand "{;x,y,empty}" ";x=1024;y=768;empty")
(test-rfc-expand "{;x,y,undef}" ";x=1024;y=768")
(test-rfc-expand "{;hello:5}" ";hello=Hello")
(test-rfc-expand "{;list}" ";list=red,green,blue")
(test-rfc-expand "{;list*}" ";list=red;list=green;list=blue")
(test-rfc-expand "{;keys}" ";keys=semi,%3B,dot,.,comma,%2C")
(test-rfc-expand "{;keys*}" ";semi=%3B;dot=.;comma=%2C")

(test-rfc-expand "{?who}" "?who=fred")
(test-rfc-expand "{?half}" "?half=50%25")
(test-rfc-expand "{?x,y}" "?x=1024&y=768")
(test-rfc-expand "{?x,y,empty}" "?x=1024&y=768&empty=")
(test-rfc-expand "{?x,y,undef}" "?x=1024&y=768")
(test-rfc-expand "{?var:3}" "?var=val")
(test-rfc-expand "{?list}" "?list=red,green,blue")
(test-rfc-expand "{?list*}" "?list=red&list=green&list=blue")
(test-rfc-expand "{?keys}" "?keys=semi,%3B,dot,.,comma,%2C")
(test-rfc-expand "{?keys*}" "?semi=%3B&dot=.&comma=%2C")

(test-rfc-expand "{&who}" "&who=fred")
(test-rfc-expand "{&half}" "&half=50%25")
(test-rfc-expand "?fixed=yes{&x}" "?fixed=yes&x=1024")
(test-rfc-expand "{&x,y,empty}" "&x=1024&y=768&empty=")
(test-rfc-expand "{&x,y,undef}" "&x=1024&y=768")
(test-rfc-expand "{&var:3}" "&var=val")
(test-rfc-expand "{&list}" "&list=red,green,blue")
(test-rfc-expand "{&list*}" "&list=red&list=green&list=blue")
(test-rfc-expand "{&keys}" "&keys=semi,%3B,dot,.,comma,%2C")
(test-rfc-expand "{&keys*}" "&semi=%3B&dot=.&comma=%2C")

(test-end)
