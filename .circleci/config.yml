version: 2.1

orbs:
  windows: circleci/windows@5.0

jobs:
  posix-build:
     docker:
       - image: buildpack-deps:bionic
         environment:
           ENV: CI
     steps:
       - checkout:
           path: ~/target
       - run:
           name: Installing dependencies
           working_directory: ~/
           command: |
             bash target/.ci/setup-ubuntu.sh
       - run:
           name: Installing current Sagittarius
           working_directory: ~/current_sagittarius
           command: |
             bash ../target/.ci/build-current.sh 'no'
       - run:
           name: Pre-build
           working_directory: ~/target
           command: |
             ./dist.sh gen
             cmake .
       - run:
           name: Build
           working_directory: ~/target
           command: make
       - run:
           name: Test
           working_directory: ~/target
           command: ctest -V
  windows-build:
    parameters:
      executor:
        type: string
      vspath:
        type: string
      arch:
        type: string
    executor: << parameters.executor >>
    steps:
      - checkout
      - run:
          name: Installing current Sagittarius
          command: |
            .\.ci\install-current.ps1
      - run:
          name: Pre-build (set up MSVC)
          command: |
            << parameters.vspath >>\VC\Auxiliary\Build\vcvarsall.bat << parameters.arch >>
            dist.bat gen
            cmake . -G "NMake Makefiles"
          shell: cmd.exe
      - run:
          name: Build
          command: nmake
          shell: cmd.exe
      - run:
          name: Test
          command: ctest -V -LE json
          shell: cmd.exe

workflows:
  ubuntu-build:
    jobs:
      - posix-build
  windows-2022:
    jobs:
      - windows-build:
          matrix:
            parameters:
              executor: [windows/server-2022]
              vspath: [C:\Program Files\Microsoft Visual Studio\2022\Community]
              arch: [x64, x86]
  windows-2019:
    when: false # Circle CI doesn't have MSVC in their VS 2019 installation...
    jobs:
      - windows-build:
          matrix:
            parameters:
              executor: [windows/server-2019]
              vspath: [C:\Program Files (x86)\Microsoft Visual Studio\2019\Community]
              arch: [x64, x86]
      
