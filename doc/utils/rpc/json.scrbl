@; -*- mode:scribble; coding: utf-8 -*-

@subsection[:tag "lib.rpc.json"]{(rpc json) - JSON RPC library}

@define[Library]{@name{(rpc json)}}
@desc{This library provides procedures handling 
@hyperlink[:href "http://www.jsonrpc.org/specification"]{JSON RPC 2.0}.
}

@define[Class]{@name{<json-request>}}
@define[Class]{@name{<json-response>}}
@desc{These classes represents JSON RPC request and response respectively.

The class instance should be created by @code{make-json-request},
@code{json-string->json-request} or @code{json-string->json-response}. Users
should not create an instance directly using @code{make}.
}

@subsubsection{Predicates}

@define[Function]{@name{json-request?} @args{object}}
@define[Function]{@name{json-response?} @args{object}}
@desc{Returns #t if the given @var{object} is an instance of 
@code{<json-request>} and @code{<json-response>} respectively.
}

@subsubsection{Constructors}

@define[Function]{@name{make-json-request} @args{method :key (params '()) id}}
@desc{Creates a JSON RPC request.

@var{method} must be a symbol represents method name to be invoked.

The keyword argument @var{params} is the @code{params} field of the JSON
RPC protocol.

The keyword argument @var{id} is the @code{id} field of the JSON RPC protocol.
If this is not specified then a value generated by UUID v4 will be used.
}

@define[Function]{@name{json-string->json-request} @args{json}}
@define[Function]{@name{json-string->json-response} @args{json}}
@desc{Creates JSON RPC request and response from given JSON string @var{json}.
}

@subsubsection{Accessors}

@define[Function]{@name{json-request-method} @args{json-request}}
@define[Function]{@name{json-request-params} @args{json-request}}
@define[Function]{@name{json-request-id} @args{json-request}}
@desc{Retrieves JSON RPC request's method, params and id respectively from given
json request object @var{json-request}.
}

@define[Function]{@name{json-response-result} @args{json-response}}
@define[Function]{@name{json-response-id} @args{json-response}}
@desc{Retrieves JSON RPC response's result and id respectively from given
json response object @var{json-response}.
}

@subsubsection{Converters}

@define[Function]{@name{json-request->json-string} @args{json-request}}
@define[Function]{@name{json-response->json-string} @args{json-response}}
@desc{Converts given @var{json-request} and @var{json-response} to JSON string.
}

@subsubsection{Implemented methods}

Following methods are currently used only in @code{(rpc http transport)}.
When we support other transport, this implementation may change.

@sub*section{Message methods}

@define[Method]{@name{rpc-marshall-message} @args{(message <json-request>)}}
@desc{Converts to given JSON RPC request object to UTF8 bytes.}

@define[Method]{@name{rpc-unmarshall-message} @args{(type (eql 'json)) body}}
@desc{Converts to given UTF8 bytes to JSON RPC response object.}

@sub*section{Transport methods}

@define[Method]{@name{rpc-http-content-type} @args{(message <json-request>)}}
@desc{Returns @code{application/json} content type header value}

@define[Method]{@name{rpc-http-response-type} @args{(message <json-request>)}}
@desc{Returns @code{json} symbol.}

