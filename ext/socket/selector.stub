;; -*- scheme -*-
#!compatible
(decl-code
 (.include <sagittarius.h>)
 (.define "LIBSAGITTARIUS_EXT_BODY")
 (.include <sagittarius/extend.h>
	   "socket-selector.h"))

(define-type <socket> "SgSocket*")
(define-type <socket-selector> "SgSocketSelector*")

(define-c-proc socket-selector? (o) ::<boolean> :constant SG_SOCKET_SELECTOR_P)
(define-c-proc make-socket-selector () Sg_MakeSocketSelector)

(define-c-proc close-socket-selector! (s::<socket-selector>) ::<void>
  Sg_CloseSocketSelector)

(define-c-proc socket-selector-add! (s::<socket-selector> sock::<socket>
				     :optional (data #f))
  Sg_SocketSelectorAdd)

(define-c-proc socket-selector-wait! (s::<socket-selector> :optional (timeout #f))
  Sg_SocketSelectorWait)

(define-c-proc socket-selector-clear! (s::<socket-selector>)
  Sg_SocketSelectorClear)

(define-c-proc socket-selector-waiting? (s::<socket-selector>) ::<boolean>
  Sg_SocketSelectorWaitingP)

(define-c-proc socket-selector-interrupt! (s::<socket-selector>)
  Sg_SocketSelectorInterrupt)

(define-c-proc socket-selector-size (s::<socket-selector>) ::<fixnum>
  (result (Sg_Length (-> s sockets))))
