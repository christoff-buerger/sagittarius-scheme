(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 101 122 105 232 2 5 101 246 187 10 98 84 210 78 6 128 92 117 182 241 173 129 157 140 73 8 102 131 47 117 203 111 187 116 39 238 228 216 154 118 127 221 80 101 0 3 0 249)
  :der-encode
  #t
  :tests
  '(#(1
      "signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 25 0 158 203 83 17 186 105 46 13 65 213 215 101 77 12 140 78 167 247 30 185 43 46 73 150)
      #t
      ())
    #(2
      "Legacy:ASN encoding of r misses leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #t
      ("MissingZero"))
    #(3
      "valid"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #t
      ())
    #(4
      "long form encoding of length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ("BER"))
    #(5
      "length of sequence contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 130 0 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ("BER"))
    #(6
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(7
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(8
      "uint32 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 1 0 0 0 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(9
      "uint64 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 137 1 0 0 0 0 0 0 0 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(10
      "length of sequence = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 127 255 255 255 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(11
      "length of sequence = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 255 255 255 255 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(12
      "length of sequence = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 255 255 255 255 255 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(13
      "length of sequence = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 136 255 255 255 255 255 255 255 255 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(14
      "incorrect length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 255 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(15
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(16
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 128 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(17
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 128 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(18
      "removing sequence"
      #vu8(49 50 51 52 48 48)
      #vu8()
      #f
      ())
    #(19
      "lonely sequence tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48)
      #f
      ())
    #(20
      "appending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 55 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 0 0)
      #f
      ())
    #(21
      "prepending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 55 0 0 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(22
      "appending unused 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 0 0)
      #f
      ())
    #(23
      "appending null value to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 55 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 5 0)
      #f
      ())
    #(24
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 58 73 129 119 48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(25
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 57 37 0 48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(26
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 55 48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 0 4 222 173 190 239)
      #f
      ())
    #(27
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 58 34 30 73 129 119 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(28
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 57 34 29 37 0 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(29
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 34 27 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 0 4 222 173 190 239 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(30
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 58 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 34 29 73 129 119 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(31
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 57 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 34 28 37 0 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(32
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 34 26 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 0 4 222 173 190 239)
      #f
      ())
    #(33
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 170 0 187 0 205 0 48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(34
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 59 170 2 170 187 48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(35
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 34 33 170 0 187 0 205 0 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(36
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 59 34 31 170 2 170 187 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(37
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 34 32 170 0 187 0 205 0 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(38
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 59 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 34 30 170 2 170 187 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(39
      "truncated length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129)
      #f
      ())
    #(40
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 0 0)
      #f
      ())
    #(41
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 57 34 128 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 0 0 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(42
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 57 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 34 128 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 0 0)
      #f
      ())
    #(43
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 49 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 0 0)
      #f
      ())
    #(44
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 57 34 128 3 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 0 0 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(45
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 57 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 34 128 3 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 0 0)
      #f
      ())
    #(46
      "Replacing sequence with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(5 0)
      #f
      ())
    #(47
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(46 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(48
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(47 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(49
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(49 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(50
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(50 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(51
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(255 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(52
      "dropping value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 0)
      #f
      ())
    #(53
      "using composition for sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 57 48 1 2 48 52 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(54
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179)
      #f
      ())
    #(55
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(56
      "sequence of size 4150 to check for overflows"
      #vu8(49 50 51 52 48 48)
      #vu8(48 130 16 54 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ())
    #(57
      "indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 0 0)
      #f
      ("BER"))
    #(58
      "indefinite length with truncated delimiter"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 0)
      #f
      ())
    #(59
      "indefinite length with additional element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 5 0 0 0)
      #f
      ())
    #(60
      "indefinite length with truncated element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 6 8 17 34 0 0)
      #f
      ())
    #(61
      "indefinite length with garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 0 0 254 2 190 239)
      #f
      ())
    #(62
      "indefinite length with nonempty EOC"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 0 2 190 239)
      #f
      ())
    #(63
      "prepend empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 55 48 0 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(64
      "append empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 55 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 48 0)
      #f
      ())
    #(65
      "append garbage with high tag number"
      #vu8(49 50 51 52 48 48)
      #vu8(48 56 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 191 127 0)
      #f
      ())
    #(66
      "append null with explicit tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 57 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 160 2 5 0)
      #f
      ())
    #(67
      "append null with implicit tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 55 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 160 0)
      #f
      ())
    #(68
      "sequence of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 55 48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(69
      "truncated sequence: removed last 1 elements"
      #vu8(49 50 51 52 48 48)
      #vu8(48 27 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20)
      #f
      ())
    #(70
      "repeating element in sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 79 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(71
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 129 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ("BER"))
    #(72
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 129 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ("BER"))
    #(73
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 55 2 130 0 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ("BER"))
    #(74
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 55 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 130 0 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ("BER"))
    #(75
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 26 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(76
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(77
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 25 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(78
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 23 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(79
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 58 2 133 1 0 0 0 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(80
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 58 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 133 1 0 0 0 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(81
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 137 1 0 0 0 0 0 0 0 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(82
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 137 1 0 0 0 0 0 0 0 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(83
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 57 2 132 127 255 255 255 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(84
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 57 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 132 127 255 255 255 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(85
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 57 2 132 255 255 255 255 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(86
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 57 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 132 255 255 255 255 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(87
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 58 2 133 255 255 255 255 255 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(88
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 58 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 133 255 255 255 255 255 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(89
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 136 255 255 255 255 255 255 255 255 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(90
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 136 255 255 255 255 255 255 255 255 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(91
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 255 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(92
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 255 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(93
      "removing integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(94
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 27 2 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(95
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 28 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2)
      #f
      ())
    #(96
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 55 2 27 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 0 0 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(97
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 55 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 26 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 0 0)
      #f
      ())
    #(98
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 55 2 27 0 0 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ("BER"))
    #(99
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 55 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 26 0 0 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ("BER"))
    #(100
      "appending unused 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 55 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 0 0 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(101
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 55 2 27 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 5 0 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(102
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 55 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 26 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 5 0)
      #f
      ())
    #(103
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 28 2 129 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(104
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 29 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 129)
      #f
      ())
    #(105
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 28 5 0 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(106
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 29 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 5 0)
      #f
      ())
    #(107
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 0 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(108
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 1 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(109
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 3 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(110
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 4 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(111
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 255 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(112
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 0 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(113
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 1 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(114
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 3 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(115
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 4 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(116
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 255 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(117
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 28 2 0 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(118
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 29 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 0)
      #f
      ())
    #(119
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 57 34 29 2 1 0 2 24 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(120
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 57 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 34 28 2 1 97 2 23 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(121
      "modifying first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 2 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(122
      "modifying first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 99 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(123
      "modifying last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 148 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(124
      "modifying last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 119)
      #f
      ())
    #(125
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(126
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 23 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179)
      #f
      ())
    #(127
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 23 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(128
      "integer of size 4122 to check for overflows"
      #vu8(49 50 51 52 48 48)
      #vu8(48 130 16 56 2 130 16 26 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(129
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 26 255 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(130
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 25 255 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(131
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 29 9 1 128 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(132
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 9 1 128)
      #f
      ())
    #(133
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 29 2 1 0 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(134
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 1 0)
      #f
      ())
    #(135
      "integer of size 4121 to check for overflows"
      #vu8(49 50 51 52 48 48)
      #vu8(48 130 16 56 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 130 16 25 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ())
    #(136
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 1 215 129 184 62 88 70 240 4 6 178 63 206 96 76 165 183 96 104 70 244 124 143 165 161 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(137
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 215 129 184 62 88 70 240 4 6 178 63 210 18 102 173 137 65 149 186 31 146 209 170 135 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(138
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 255 40 126 71 193 167 185 15 251 249 77 192 47 198 166 86 95 175 0 255 117 248 79 87 236 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(139
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 40 126 71 193 167 185 15 251 249 77 192 45 237 153 82 118 190 106 69 224 109 46 85 121 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(140
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 254 40 126 71 193 167 185 15 251 249 77 192 49 159 179 90 72 159 151 185 11 131 112 90 95 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(141
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 1 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(142
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 40 126 71 193 167 185 15 251 249 77 192 47 198 166 86 95 175 0 255 117 248 79 87 236 2 24 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(143
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 25 1 97 52 172 238 69 150 209 242 190 42 40 151 0 217 107 223 118 219 110 27 190 143 177 132)
      #f
      ())
    #(144
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 25 255 97 52 172 238 69 150 209 242 190 42 40 154 178 243 115 177 88 8 225 70 212 209 182 106)
      #f
      ())
    #(145
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 24 158 203 83 17 186 105 46 13 65 213 215 103 38 25 144 55 152 141 216 78 182 79 76 9)
      #f
      ())
    #(146
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 25 254 158 203 83 17 186 105 46 13 65 213 215 104 255 38 148 32 137 36 145 228 65 112 78 124)
      #f
      ())
    #(147
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 25 1 97 52 172 238 69 150 209 242 190 42 40 152 217 230 111 200 103 114 39 177 73 176 179 247)
      #f
      ())
    #(148
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 215 129 184 62 88 70 240 4 6 178 63 208 57 89 169 160 80 255 0 138 7 176 168 20 2 25 0 158 203 83 17 186 105 46 13 65 213 215 103 38 25 144 55 152 141 216 78 182 79 76 9)
      #f
      ())
    #(149
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 0)
      #f
      ("EdgeCase"))
    #(150
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 1)
      #f
      ("EdgeCase"))
    #(151
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 255)
      #f
      ("EdgeCase"))
    #(152
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 1 0 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 141)
      #f
      ("EdgeCase"))
    #(153
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 1 0 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 140)
      #f
      ("EdgeCase"))
    #(154
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 1 0 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142)
      #f
      ("EdgeCase"))
    #(155
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 1 0 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 55)
      #f
      ("EdgeCase"))
    #(156
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 1 0 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 56)
      #f
      ("EdgeCase"))
    #(157
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 0 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(158
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 9 1 66)
      #f
      ("EdgeCase"))
    #(159
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 0)
      #f
      ("EdgeCase"))
    #(160
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 1)
      #f
      ("EdgeCase"))
    #(161
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 255)
      #f
      ("EdgeCase"))
    #(162
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 1 1 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 141)
      #f
      ("EdgeCase"))
    #(163
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 1 1 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 140)
      #f
      ("EdgeCase"))
    #(164
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 1 1 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142)
      #f
      ("EdgeCase"))
    #(165
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 1 1 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 55)
      #f
      ("EdgeCase"))
    #(166
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 1 1 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 56)
      #f
      ("EdgeCase"))
    #(167
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(168
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 9 1 66)
      #f
      ("EdgeCase"))
    #(169
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 0)
      #f
      ("EdgeCase"))
    #(170
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 1)
      #f
      ("EdgeCase"))
    #(171
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 255)
      #f
      ("EdgeCase"))
    #(172
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 1 255 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 141)
      #f
      ("EdgeCase"))
    #(173
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 1 255 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 140)
      #f
      ("EdgeCase"))
    #(174
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 1 255 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142)
      #f
      ("EdgeCase"))
    #(175
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 1 255 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 55)
      #f
      ("EdgeCase"))
    #(176
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 1 255 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 56)
      #f
      ("EdgeCase"))
    #(177
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 255 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(178
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 9 1 66)
      #f
      ("EdgeCase"))
    #(179
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 141 2 1 0)
      #f
      ("EdgeCase"))
    #(180
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 141 2 1 1)
      #f
      ("EdgeCase"))
    #(181
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 141 2 1 255)
      #f
      ("EdgeCase"))
    #(182
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 141 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 141)
      #f
      ("EdgeCase"))
    #(183
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 141 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 140)
      #f
      ("EdgeCase"))
    #(184
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 141 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142)
      #f
      ("EdgeCase"))
    #(185
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 141 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 55)
      #f
      ("EdgeCase"))
    #(186
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 141 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 56)
      #f
      ("EdgeCase"))
    #(187
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 32 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 141 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(188
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 141 9 1 66)
      #f
      ("EdgeCase"))
    #(189
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 140 2 1 0)
      #f
      ("EdgeCase"))
    #(190
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 140 2 1 1)
      #f
      ("EdgeCase"))
    #(191
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 140 2 1 255)
      #f
      ("EdgeCase"))
    #(192
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 140 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 141)
      #f
      ("EdgeCase"))
    #(193
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 140 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 140)
      #f
      ("EdgeCase"))
    #(194
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 140 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142)
      #f
      ("EdgeCase"))
    #(195
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 140 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 55)
      #f
      ("EdgeCase"))
    #(196
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 140 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 56)
      #f
      ("EdgeCase"))
    #(197
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 32 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 140 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(198
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 140 9 1 66)
      #f
      ("EdgeCase"))
    #(199
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142 2 1 0)
      #f
      ("EdgeCase"))
    #(200
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142 2 1 1)
      #f
      ("EdgeCase"))
    #(201
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142 2 1 255)
      #f
      ("EdgeCase"))
    #(202
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 141)
      #f
      ("EdgeCase"))
    #(203
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 140)
      #f
      ("EdgeCase"))
    #(204
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142)
      #f
      ("EdgeCase"))
    #(205
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 55)
      #f
      ("EdgeCase"))
    #(206
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 56)
      #f
      ("EdgeCase"))
    #(207
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 32 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(208
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142 9 1 66)
      #f
      ("EdgeCase"))
    #(209
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 55 2 1 0)
      #f
      ("EdgeCase"))
    #(210
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 55 2 1 1)
      #f
      ("EdgeCase"))
    #(211
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 55 2 1 255)
      #f
      ("EdgeCase"))
    #(212
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 55 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 141)
      #f
      ("EdgeCase"))
    #(213
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 55 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 140)
      #f
      ("EdgeCase"))
    #(214
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 55 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142)
      #f
      ("EdgeCase"))
    #(215
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 55 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 55)
      #f
      ("EdgeCase"))
    #(216
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 55 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 56)
      #f
      ("EdgeCase"))
    #(217
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 32 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 55 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(218
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 55 9 1 66)
      #f
      ("EdgeCase"))
    #(219
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 56 2 1 0)
      #f
      ("EdgeCase"))
    #(220
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 56 2 1 1)
      #f
      ("EdgeCase"))
    #(221
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 56 2 1 255)
      #f
      ("EdgeCase"))
    #(222
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 56 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 141)
      #f
      ("EdgeCase"))
    #(223
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 56 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 140)
      #f
      ("EdgeCase"))
    #(224
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 56 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142)
      #f
      ("EdgeCase"))
    #(225
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 56 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 55)
      #f
      ("EdgeCase"))
    #(226
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 56 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 56)
      #f
      ("EdgeCase"))
    #(227
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 32 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 56 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(228
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 56 9 1 66)
      #f
      ("EdgeCase"))
    #(229
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 12 1 48)
      #f
      ())
    #(230
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 5 2 1 1 12 0)
      #f
      ())
    #(231
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 9 12 2 37 115 12 3 115 37 115)
      #f
      ())
    #(232
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 48 3 2 1 0)
      #f
      ())
    #(233
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 3 2 1 1)
      #f
      ())
    #(234
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 1 1 0)
      #f
      ())
    #(235
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 1 1 0 1 1 0)
      #f
      ())
    #(236
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 4 12 0 12 0)
      #f
      ())
    #(237
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 12 1 48 12 1 48)
      #f
      ())
    #(238
      "Edge case for Shamir multiplication"
      #vu8(49 54 48 55 55)
      #vu8(48 52 2 24 12 147 71 188 158 230 69 51 205 26 120 37 181 196 49 127 88 179 194 214 215 87 237 140 2 24 17 237 93 224 120 14 234 89 242 173 103 160 69 226 89 243 66 8 222 16 253 150 60 229)
      #t
      ())
    #(239
      "special case hash"
      #vu8(52 50 54 52 55 57 55 50 52)
      #vu8(48 54 2 25 0 219 133 87 188 121 21 185 174 199 71 190 248 118 54 142 193 63 139 163 127 88 163 76 149 2 25 0 130 58 252 18 37 106 19 210 77 110 196 129 235 103 58 91 94 88 164 39 110 125 196 1)
      #t
      ())
    #(240
      "special case hash"
      #vu8(55 49 51 56 54 56 52 56 57 49)
      #vu8(48 53 2 24 71 113 170 156 215 13 175 233 199 220 204 241 57 181 65 139 182 38 40 10 151 11 49 99 2 25 0 162 62 162 138 228 150 106 98 211 63 135 43 19 121 71 24 40 221 119 255 137 210 17 232)
      #t
      ())
    #(241
      "special case hash"
      #vu8(49 48 51 53 57 51 51 49 54 54 56)
      #vu8(48 54 2 25 0 141 96 202 217 112 189 174 191 30 64 49 231 33 124 51 132 8 128 49 11 47 76 51 82 2 25 0 151 112 64 201 177 176 2 184 247 71 74 172 3 58 138 163 229 166 101 172 49 224 76 110)
      #t
      ())
    #(242
      "special case hash"
      #vu8(51 57 52 57 52 48 49 50 49 53)
      #vu8(48 54 2 25 0 241 95 31 216 172 201 255 18 135 126 160 79 108 170 136 82 68 92 128 179 236 134 97 36 2 25 0 205 42 225 108 80 16 30 239 56 248 120 144 106 205 47 208 160 168 224 98 42 219 18 200)
      #t
      ())
    #(243
      "special case hash"
      #vu8(49 51 52 52 50 57 51 48 55 57)
      #vu8(48 53 2 24 110 214 156 231 98 111 6 119 207 130 161 212 201 255 225 147 12 237 203 108 8 38 192 111 2 25 0 236 35 71 255 73 189 146 65 95 7 49 218 175 115 52 134 49 206 13 203 11 157 144 52)
      #t
      ())
    #(244
      "special case hash"
      #vu8(51 55 48 54 50 49 49 55 49 50)
      #vu8(48 54 2 25 0 163 76 219 180 24 173 130 167 168 225 252 247 9 233 107 204 41 45 76 84 137 149 211 193 2 25 0 173 206 221 124 167 99 223 1 84 241 40 144 29 35 202 231 195 77 247 17 150 108 192 218)
      #t
      ())
    #(245
      "special case hash"
      #vu8(51 52 51 54 56 56 55 49 50)
      #vu8(48 53 2 24 58 75 249 153 89 219 192 75 202 58 227 200 73 91 171 133 144 117 197 237 121 59 142 106 2 25 0 230 66 121 226 155 70 232 255 152 21 115 225 69 252 105 138 147 82 144 53 212 249 167 248)
      #t
      ())
    #(246
      "special case hash"
      #vu8(49 51 53 49 53 51 48 51 55 48)
      #vu8(48 53 2 25 0 153 209 105 246 53 62 7 189 253 36 17 193 157 17 179 40 72 216 111 252 135 242 51 110 2 24 41 177 228 77 90 58 228 51 214 69 205 25 198 165 154 125 171 59 3 182 106 135 48 190)
      #t
      ())
    #(247
      "special case hash"
      #vu8(54 53 53 51 50 48 51 49 50 54)
      #vu8(48 54 2 25 0 153 29 9 211 46 8 21 250 168 22 17 119 24 151 206 187 132 114 193 44 24 252 200 228 2 25 0 145 182 250 157 44 191 128 181 131 4 212 195 170 250 229 194 0 243 71 156 151 225 150 191)
      #t
      ())
    #(248
      "special case hash"
      #vu8(49 53 54 52 51 52 54 54 48 51)
      #vu8(48 53 2 24 75 87 12 194 102 244 132 209 225 143 187 74 79 156 157 103 222 209 196 15 193 174 46 106 2 25 0 179 144 126 1 176 193 178 36 140 2 94 59 124 112 201 180 57 121 211 20 142 178 97 144)
      #t
      ())
    #(249
      "special case hash"
      #vu8(52 52 50 57 53 51 57 49 49 55)
      #vu8(48 52 2 24 37 222 21 110 102 154 179 49 11 205 121 130 26 213 251 151 51 59 251 38 245 186 41 163 2 24 45 238 253 42 195 89 111 177 241 122 61 183 177 127 39 82 218 202 69 62 168 251 23 124)
      #t
      ())
    #(250
      "special case hash"
      #vu8(49 48 57 53 51 50 54 49 51 53 49)
      #vu8(48 52 2 24 79 158 180 241 184 190 59 246 8 201 18 137 208 255 167 40 30 33 118 189 4 226 251 92 2 24 105 76 72 15 176 176 46 220 157 170 80 6 152 106 217 98 22 253 103 59 39 124 133 131)
      #t
      ())
    #(251
      "special case hash"
      #vu8(53 57 56 55 51 53 48 48 52 49)
      #vu8(48 54 2 25 0 219 254 244 171 205 252 108 102 203 228 192 148 1 48 253 229 220 83 35 232 5 55 167 226 2 25 0 193 129 216 41 126 150 45 207 211 140 146 193 104 123 84 203 45 149 0 47 5 104 58 153)
      #t
      ())
    #(252
      "special case hash"
      #vu8(51 52 54 51 48 48 54 56 55 56)
      #vu8(48 54 2 25 0 147 77 183 117 157 11 38 6 63 27 63 233 246 159 78 46 54 59 112 14 103 246 65 108 2 25 0 130 61 196 210 203 148 115 254 208 207 127 136 75 72 240 103 236 70 134 54 40 64 196 66)
      #t
      ())
    #(253
      "special case hash"
      #vu8(57 56 49 55 51 50 48 50 56 55)
      #vu8(48 54 2 25 0 177 30 173 206 239 179 75 96 114 140 175 214 252 138 173 42 101 121 223 74 82 182 145 245 2 25 0 131 214 40 138 246 144 138 26 134 26 201 27 30 184 77 143 38 216 120 247 62 243 65 89)
      #t
      ())
    #(254
      "special case hash"
      #vu8(51 50 50 50 48 52 49 48 52 54)
      #vu8(48 53 2 24 30 29 157 63 63 247 50 97 35 120 224 251 86 79 93 128 202 190 126 75 125 55 196 100 2 25 0 190 92 245 65 48 36 13 165 3 190 103 87 150 55 231 242 69 239 235 64 82 59 72 189)
      #t
      ())
    #(255
      "special case hash"
      #vu8(54 54 54 54 51 48 55 49 48 52)
      #vu8(48 53 2 25 0 252 18 116 184 226 125 192 106 219 122 197 124 6 171 77 58 236 168 99 43 97 20 6 181 2 24 123 85 230 99 125 248 53 96 1 255 189 95 178 227 111 183 55 179 161 221 241 179 91 137)
      #t
      ())
    #(256
      "special case hash"
      #vu8(49 48 51 53 57 53 49 56 57 56)
      #vu8(48 52 2 24 2 222 190 147 146 13 7 154 15 146 57 234 192 63 165 235 32 120 140 249 21 152 41 9 2 24 55 29 9 80 199 211 42 239 110 5 174 92 227 224 67 207 154 18 145 145 137 122 96 171)
      #t
      ())
    #(257
      "special case hash"
      #vu8(49 56 52 54 53 57 55 49 57 53)
      #vu8(48 53 2 25 0 247 147 108 164 197 119 164 232 254 31 220 64 99 129 179 47 130 204 74 82 59 112 35 177 2 24 41 111 105 62 198 54 14 255 196 156 67 149 155 222 98 101 98 90 180 191 194 37 206 121)
      #t
      ())
    #(258
      "special case hash"
      #vu8(51 49 51 54 48 52 54 49 56 57)
      #vu8(48 53 2 25 0 230 162 156 128 50 231 92 88 24 242 39 96 180 113 28 240 165 248 234 58 234 31 48 115 2 24 114 133 82 142 179 4 26 230 246 48 119 142 34 206 74 232 132 251 10 56 220 149 10 197)
      #t
      ())
    #(259
      "special case hash"
      #vu8(50 54 54 51 55 56 52 50 53 52)
      #vu8(48 53 2 25 0 140 182 7 44 18 6 158 91 14 86 136 85 252 32 154 60 172 152 133 34 142 70 78 15 2 24 8 153 50 173 202 229 231 94 172 32 60 18 198 232 111 66 79 191 85 167 23 213 186 114)
      #t
      ())
    #(260
      "special case hash"
      #vu8(49 54 53 50 49 48 48 53 50 52)
      #vu8(48 53 2 24 1 64 158 158 93 212 28 249 229 238 208 44 202 73 195 88 79 126 38 238 69 8 210 68 2 25 0 187 138 244 91 99 193 163 68 200 57 244 235 194 229 253 107 205 72 75 122 241 95 74 71)
      #t
      ())
    #(261
      "special case hash"
      #vu8(53 55 52 56 48 56 49 54 57 54)
      #vu8(48 53 2 25 0 241 71 129 136 26 38 135 195 188 175 178 16 196 149 114 184 2 72 245 243 100 146 211 180 2 24 54 141 89 82 38 93 85 23 173 232 214 56 235 49 43 3 201 37 228 35 74 39 189 161)
      #t
      ())
    #(262
      "special case hash"
      #vu8(54 51 52 51 57 49 51 52 54 56)
      #vu8(48 54 2 25 0 154 197 123 121 5 94 238 156 237 9 172 69 10 160 184 78 254 148 254 247 74 64 217 191 2 25 0 218 79 65 51 43 121 164 111 251 129 31 241 12 164 67 255 92 238 51 1 67 194 198 208)
      #t
      ())
    #(263
      "special case hash"
      #vu8(49 53 52 49 49 48 51 53 57 56)
      #vu8(48 53 2 24 114 124 106 68 198 146 147 75 230 231 97 241 191 137 180 54 236 55 197 232 12 117 96 193 2 25 0 158 237 213 35 248 224 30 99 87 67 162 182 70 25 172 76 62 52 214 56 49 221 161 139)
      #t
      ())
    #(264
      "special case hash"
      #vu8(49 48 52 55 56 53 56 48 49 50 56)
      #vu8(48 53 2 24 72 173 43 148 81 197 166 191 250 255 149 135 77 208 232 0 8 112 223 0 200 158 242 116 2 25 0 215 213 159 234 42 212 197 104 140 38 3 127 137 240 184 216 131 235 84 111 88 67 60 199)
      #t
      ())
    #(265
      "special case hash"
      #vu8(49 48 53 51 54 50 56 53 53 54 56)
      #vu8(48 53 2 24 43 106 149 232 166 1 148 210 216 80 245 16 179 81 32 199 235 69 74 82 220 47 146 249 2 25 0 255 183 6 216 7 230 228 188 253 137 233 182 150 235 226 51 198 44 16 163 1 197 72 88)
      #t
      ())
    #(266
      "special case hash"
      #vu8(57 53 51 57 48 52 49 48 53)
      #vu8(48 53 2 24 42 112 233 162 153 236 201 205 100 144 236 242 99 1 139 26 239 36 143 239 75 219 146 179 2 25 0 193 89 157 172 114 65 248 209 198 48 205 169 165 62 239 30 135 207 91 113 120 132 95 10)
      #t
      ())
    #(267
      "special case hash"
      #vu8(57 55 56 56 52 56 48 51 57)
      #vu8(48 53 2 24 54 150 13 234 141 121 227 35 157 156 132 210 111 69 152 39 38 128 29 115 103 244 175 248 2 25 0 190 35 166 8 220 239 227 199 64 153 120 178 203 133 73 34 126 34 134 236 181 56 192 202)
      #t
      ())
    #(268
      "special case hash"
      #vu8(51 54 49 48 54 55 50 52 52 50)
      #vu8(48 52 2 24 29 161 189 49 249 174 189 180 218 54 47 137 44 233 89 68 80 186 128 142 142 213 165 97 2 24 70 215 85 108 227 211 78 247 140 10 110 196 84 196 202 225 212 70 66 71 191 224 7 197)
      #t
      ())
    #(269
      "special case hash"
      #vu8(49 48 53 52 50 52 48 55 48 53)
      #vu8(48 52 2 24 84 187 201 153 76 22 234 236 70 170 202 149 167 3 211 116 233 16 37 189 107 172 86 118 2 24 102 113 255 52 60 88 250 106 150 92 176 237 102 9 10 14 63 242 238 146 135 220 109 19)
      #t
      ())
    #(270
      "special case hash"
      #vu8(53 49 55 52 52 52 56 49 57 55)
      #vu8(48 53 2 25 0 167 120 202 194 101 48 70 208 190 242 202 219 121 207 36 213 136 21 79 243 95 183 113 216 2 24 106 83 75 150 234 110 77 190 18 22 219 148 166 19 39 103 213 41 16 45 148 231 169 68)
      #t
      ())
    #(271
      "special case hash"
      #vu8(49 57 54 55 53 54 49 50 53 49)
      #vu8(48 54 2 25 0 153 41 105 185 35 149 150 115 175 161 44 173 133 120 251 128 103 182 119 27 63 127 194 216 2 25 0 209 195 222 220 12 230 79 131 245 239 86 165 190 32 189 219 36 41 144 47 146 158 36 91)
      #t
      ())
    #(272
      "special case hash"
      #vu8(51 52 52 55 50 53 51 51 52 51)
      #vu8(48 53 2 25 0 202 171 224 235 236 70 83 9 179 167 128 47 142 149 162 9 101 15 50 255 116 214 101 106 2 24 52 228 10 139 108 170 160 99 176 63 114 176 0 222 170 236 165 0 46 61 62 253 96 101)
      #t
      ())
    #(273
      "special case hash"
      #vu8(51 54 56 50 54 52 51 49 56)
      #vu8(48 53 2 24 5 246 176 31 134 19 145 170 51 38 33 141 242 207 137 197 114 230 94 247 190 180 210 65 2 25 0 201 121 47 60 190 112 235 213 232 163 86 106 232 52 74 88 72 67 5 21 46 182 207 204)
      #t
      ())
    #(274
      "special case hash"
      #vu8(51 50 54 49 49 57 56 54 48 56)
      #vu8(48 52 2 24 4 56 35 69 17 4 15 240 82 250 132 241 90 67 2 47 146 107 183 6 130 29 59 227 2 24 126 133 237 66 188 168 13 82 140 27 107 152 22 119 253 42 179 83 168 26 9 111 187 135)
      #t
      ())
    #(275
      "special case hash"
      #vu8(57 54 55 56 55 56 49 48 57 52)
      #vu8(48 53 2 24 68 134 131 213 0 59 70 107 175 44 55 61 162 68 165 129 37 187 100 154 254 20 250 227 2 25 0 186 37 27 169 159 143 134 36 88 10 161 158 85 133 202 193 155 201 239 245 252 7 131 103)
      #t
      ())
    #(276
      "special case hash"
      #vu8(52 57 53 56 56 50 51 56 50 51)
      #vu8(48 54 2 25 0 156 130 122 184 133 171 67 232 9 219 45 216 129 161 20 30 13 19 118 44 103 22 124 37 2 25 0 230 15 1 133 226 110 248 197 3 14 177 249 23 59 235 159 56 228 211 81 87 35 147 148)
      #t
      ())
    #(277
      "special case hash"
      #vu8(56 50 52 54 51 55 56 51 55)
      #vu8(48 52 2 24 74 233 162 249 114 183 27 40 131 134 45 105 219 144 97 189 31 124 71 174 0 62 70 167 2 24 49 238 85 62 137 64 98 29 135 36 16 62 60 224 128 223 171 97 176 197 31 70 109 164)
      #t
      ())
    #(278
      "special case hash"
      #vu8(49 49 48 50 48 56 51 51 55 55 54)
      #vu8(48 53 2 25 0 128 172 217 196 174 208 245 181 136 76 245 12 15 43 179 34 201 68 92 14 216 228 205 18 2 24 8 205 222 223 129 197 197 251 166 196 44 205 221 31 85 169 7 166 54 33 70 158 40 34)
      #t
      ())
    #(279
      "special case hash"
      #vu8(49 51 51 56 55 49 54 52 56)
      #vu8(48 54 2 25 0 247 36 171 190 192 97 188 41 182 178 211 163 112 40 30 77 86 176 34 82 68 206 184 251 2 25 0 200 0 9 206 141 135 216 152 140 48 93 138 105 187 243 122 125 63 11 30 114 243 68 75)
      #t
      ())
    #(280
      "special case hash"
      #vu8(51 50 50 49 52 52 49 54 50)
      #vu8(48 53 2 25 0 148 211 210 172 62 52 186 66 31 233 25 227 50 104 55 162 158 254 174 70 96 128 152 6 2 24 113 193 161 223 240 220 98 123 24 195 158 80 99 78 11 211 25 105 22 62 151 108 223 118)
      #t
      ())
    #(281
      "special case hash"
      #vu8(49 48 54 56 54 54 53 53 53 52 54)
      #vu8(48 52 2 24 80 137 47 70 176 135 206 32 44 57 203 173 230 243 172 93 52 77 58 155 28 186 229 19 2 24 55 188 23 157 122 160 205 211 108 71 157 241 117 216 150 134 48 224 135 92 184 69 103 214)
      #t
      ())
    #(282
      "special case hash"
      #vu8(54 50 49 53 53 50 52 54)
      #vu8(48 53 2 24 108 168 163 78 26 209 14 70 171 243 239 90 125 139 148 192 222 112 54 17 196 232 224 232 2 25 0 173 193 164 75 237 75 247 58 71 177 31 167 38 137 186 159 99 39 91 228 145 27 163 96)
      #t
      ())
    #(283
      "special case hash"
      #vu8(55 48 51 48 56 49 56 55 55 52)
      #vu8(48 53 2 24 31 222 149 54 8 46 53 158 46 147 14 45 67 227 100 204 98 73 51 133 98 53 16 204 2 25 0 189 92 110 15 143 87 62 96 243 202 27 122 178 154 17 44 80 227 85 188 155 235 2 238)
      #t
      ())
    #(284
      "special case hash"
      #vu8(53 57 50 52 53 50 51 55 52 52)
      #vu8(48 53 2 25 0 173 131 223 109 236 50 72 124 156 206 190 194 249 143 51 92 78 136 155 207 87 61 177 108 2 24 125 132 246 179 42 126 167 231 142 239 5 30 98 108 179 75 24 61 150 193 109 145 139 0)
      #t
      ())
    #(285
      "special case hash"
      #vu8(49 52 57 53 53 56 54 54 50 49)
      #vu8(48 53 2 24 103 83 76 235 245 115 108 121 223 1 168 61 109 103 214 231 87 244 150 204 20 236 182 13 2 25 0 200 77 183 134 10 17 94 176 33 90 65 47 171 149 117 202 153 113 254 78 58 19 192 188)
      #t
      ())
    #(286
      "special case hash"
      #vu8(52 48 48 53 51 49 52 52 48 54)
      #vu8(48 54 2 25 0 133 15 40 145 227 179 135 74 45 230 71 206 119 117 4 6 158 174 90 241 142 100 211 206 2 25 0 199 240 151 63 68 51 187 203 25 116 37 10 247 60 177 36 210 229 89 175 169 17 1 186)
      #t
      ())
    #(287
      "special case hash"
      #vu8(51 48 57 54 52 53 55 53 49 50)
      #vu8(48 53 2 25 0 142 28 146 46 242 211 209 106 198 131 14 13 181 241 111 108 169 253 104 9 145 96 10 146 2 24 100 77 92 36 185 10 157 203 242 250 156 209 90 42 171 47 10 24 155 151 167 54 4 119)
      #t
      ())
    #(288
      "special case hash"
      #vu8(50 55 56 52 48 50 53 54 50 48)
      #vu8(48 54 2 25 0 206 33 30 227 119 65 19 83 230 43 125 7 21 155 167 8 10 137 10 204 249 177 133 209 2 25 0 238 3 245 209 123 84 206 27 164 215 228 74 75 83 68 164 78 227 88 137 136 169 144 157)
      #t
      ())
    #(289
      "special case hash"
      #vu8(50 54 49 56 55 56 55 52 49 56)
      #vu8(48 53 2 25 0 229 145 251 42 253 210 37 10 101 67 174 121 123 167 180 184 99 176 177 24 106 251 46 196 2 24 31 89 215 195 155 76 185 40 22 2 254 231 125 103 119 67 242 110 198 132 46 78 123 83)
      #t
      ())
    #(290
      "special case hash"
      #vu8(49 54 52 50 54 50 53 50 54 50)
      #vu8(48 52 2 24 24 56 85 124 121 67 115 179 22 2 208 101 163 104 83 72 107 44 80 29 83 0 66 148 2 24 56 142 180 129 126 243 178 39 53 99 203 7 175 220 232 174 25 198 170 155 120 216 215 172)
      #t
      ())
    #(291
      "special case hash"
      #vu8(54 56 50 52 49 56 57 52 51 54)
      #vu8(48 53 2 25 0 181 91 110 255 185 169 78 184 29 193 28 177 239 178 19 222 230 43 244 102 209 101 183 90 2 24 75 107 69 111 36 56 125 184 34 217 201 183 150 94 61 131 82 55 234 120 86 92 233 95)
      #t
      ())
    #(292
      "special case hash"
      #vu8(52 56 52 50 52 53 52 50 53)
      #vu8(48 52 2 24 87 244 121 94 218 78 140 224 204 116 71 246 91 28 99 147 140 23 17 38 220 235 63 227 2 24 39 124 4 135 232 43 143 59 188 141 50 11 225 42 94 232 235 242 149 68 87 124 209 70)
      #t
      ())
    #(293
      "Signature generated without truncating the hash"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 197 48 112 190 130 39 37 110 102 13 156 165 114 6 45 45 222 75 229 91 239 239 229 141 2 25 0 195 15 196 10 246 250 111 132 243 33 158 114 165 46 194 149 183 249 68 23 230 124 110 109)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 112 119 159 68 167 113 26 20 204 42 115 40 112 201 105 201 252 62 174 17 114 119 39 167 248 63 87 107 217 52 123 73 24 189 83 51 235 77 147 162 133 231 31 79 168 109 196 9)
  :der-encode
  #t
  :tests
  '(#(294
      "k*G has a large x-coordinate"
      #vu8(49 50 51 52 48 48)
      #vu8(48 42 2 13 1 217 13 3 232 240 150 185 148 139 32 240 169 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 138)
      #t
      ())
    #(295
      "r too large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 238 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 138)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 25 55 165 24 213 23 105 221 104 165 121 115 178 251 76 243 66 238 163 68 148 88 100 108 46 104 136 0 188 162 186 148 24 116 181 168 143 240 155 117 122 64 138 91 9 216 71 75)
  :der-encode
  #t
  :tests
  '(#(296
      "r,s are large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 139 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 138)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 139 232 113 199 44 74 11 63 195 125 10 80 64 31 211 185 104 220 46 171 19 189 54 150 212 229 113 213 187 147 25 58 222 124 251 136 207 197 9 116 34 123 132 115 240 8 220 65)
  :der-encode
  #t
  :tests
  '(#(297
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 2 25 0 218 35 215 12 74 177 26 65 214 180 87 139 83 96 182 7 171 145 59 0 195 107 69 32)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 93 154 88 171 98 146 169 43 109 126 5 15 144 9 78 9 163 187 56 249 143 179 49 170 132 200 175 181 166 166 143 174 126 35 151 30 252 205 21 230 49 200 64 85 9 129 79 165)
  :der-encode
  #t
  :tests
  '(#(298
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 2 25 0 215 103 246 97 221 171 90 176 67 40 38 250 77 162 46 89 104 57 248 242 95 178 213 13)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 110 122 218 52 31 141 24 11 202 4 70 149 175 83 148 227 56 1 100 35 60 249 118 78 0 168 147 190 98 193 180 96 118 127 65 39 97 210 5 59 212 158 175 84 157 241 207 71)
  :der-encode
  #t
  :tests
  '(#(299
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 1)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 124 12 19 107 11 88 217 193 184 173 170 26 45 123 75 191 166 127 72 91 162 88 230 220 86 248 41 247 125 107 238 127 2 187 11 27 11 98 131 55 190 102 216 54 86 234 193 82)
  :der-encode
  #t
  :tests
  '(#(300
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 2)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 74 53 38 97 136 106 31 242 45 19 118 171 243 73 202 234 54 173 168 46 120 86 199 123 107 175 209 17 6 66 114 173 230 195 150 197 132 248 87 180 128 26 85 71 112 47 66 120)
  :der-encode
  #t
  :tests
  '(#(301
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 3)
      #t
      ())
    #(302
      "r is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 142 2 1 3)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 15 115 166 221 27 17 147 222 252 165 179 55 44 120 60 121 56 85 62 143 130 81 234 176 89 133 232 19 136 125 202 65 59 8 45 185 237 100 8 84 217 22 241 253 89 143 255 248)
  :der-encode
  #t
  :tests
  '(#(303
      "s is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 1 1 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 241 212 20)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 10 192 96 30 38 226 159 35 246 222 90 113 230 172 36 115 215 213 200 1 140 4 162 181 240 152 123 248 12 121 84 249 33 28 58 207 124 162 58 0 57 128 12 82 58 194 151 15)
  :der-encode
  #t
  :tests
  '(#(304
      "small r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 2 1 2 2 24 26 52 104 209 163 70 141 26 52 104 209 163 22 32 239 121 74 36 251 29 9 242 138 214)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 28 12 62 87 117 159 254 112 161 29 91 233 149 92 197 89 56 130 254 124 174 35 177 104 193 188 57 205 198 13 49 86 192 74 204 91 133 101 237 132 7 194 81 233 225 255 52 133)
  :der-encode
  #t
  :tests
  '(#(305
      "smallish r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 7 45 155 77 52 121 82 204 2 25 0 174 138 96 115 27 232 151 181 127 174 74 206 114 78 165 47 137 204 5 174 106 62 104 227)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 83 198 47 49 40 69 107 217 107 28 123 149 197 145 255 76 218 67 50 176 213 77 6 41 229 97 48 122 115 242 111 18 23 155 156 253 99 4 192 124 110 194 97 184 208 130 67 169)
  :der-encode
  #t
  :tests
  '(#(306
      "100-bit r and small s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 41 2 13 16 51 230 126 55 179 43 68 85 128 191 78 252 2 24 40 215 40 215 40 215 40 215 40 215 40 214 221 95 138 212 220 155 65 6 6 177 5 150)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 97 230 222 105 6 68 204 89 34 138 127 183 35 244 35 59 54 21 183 40 92 60 174 243 17 62 160 36 57 102 190 14 25 241 70 178 78 254 125 129 46 124 128 3 63 168 160 61)
  :der-encode
  #t
  :tests
  '(#(307
      "small r and 100 bit s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 2 1 2 2 24 24 227 40 201 182 162 114 70 150 109 103 92 204 219 76 48 15 75 2 148 102 238 91 121)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 134 55 211 179 100 56 75 153 158 130 70 11 18 102 0 41 251 141 114 226 228 123 158 174 65 216 229 154 176 172 93 246 254 179 70 57 67 139 30 212 218 42 124 62 188 215 44 248)
  :der-encode
  #t
  :tests
  '(#(308
      "100-bit r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 41 2 13 6 37 34 187 211 236 190 124 57 233 62 124 37 2 24 24 227 40 201 182 162 114 70 150 109 103 92 204 219 76 48 15 75 2 148 102 238 91 121)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 87 41 116 235 217 130 188 10 56 246 84 106 52 119 69 183 160 113 196 214 51 63 238 67 167 140 72 127 111 252 72 16 212 128 201 198 8 106 12 159 143 35 133 231 124 217 39 158)
  :der-encode
  #t
  :tests
  '(#(309
      "r and s^-1 are close to n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 255 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 14 2 24 85 85 85 85 85 85 85 85 85 85 85 84 183 166 84 7 175 205 194 35 124 74 84 132)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 10 3 209 185 183 27 251 146 156 204 47 147 240 242 44 205 1 38 121 172 117 23 80 157 52 37 168 110 9 130 225 94 74 1 45 152 16 105 58 108 161 100 113 117 241 211 161 37)
  :der-encode
  #t
  :tests
  '(#(310
      "s == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 29 2 24 85 85 85 85 85 85 85 85 85 85 85 84 183 166 84 7 175 205 194 35 124 74 84 132 2 1 1)
      #t
      ())
    #(311
      "s == 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 29 2 24 85 85 85 85 85 85 85 85 85 85 85 84 183 166 84 7 175 205 194 35 124 74 84 132 2 1 0)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 62 190 23 142 137 63 88 79 241 92 94 175 134 250 228 34 31 29 227 52 131 75 102 37 49 142 115 130 28 45 99 192 40 145 113 224 160 188 112 37 66 237 74 224 198 102 35 149)
  :der-encode
  #t
  :tests
  '(#(312
      "point at infinity during verify"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 127 255 255 255 255 255 255 255 255 255 255 255 19 121 126 11 135 180 163 53 58 111 126 198 2 24 85 85 85 85 85 85 85 85 85 85 85 84 183 166 84 7 175 205 194 35 124 74 84 132)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 142 106 53 18 147 169 65 9 95 62 173 23 136 53 243 133 7 161 8 197 250 207 223 132 177 98 147 186 111 93 90 214 62 59 185 119 238 122 213 12 219 187 106 143 70 2 170 194)
  :der-encode
  #t
  :tests
  '(#(313
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 127 255 255 255 255 255 255 255 255 255 255 255 19 121 126 11 135 180 163 53 58 111 126 199 2 24 127 255 255 255 255 255 255 255 255 255 255 255 19 121 126 11 135 180 163 53 58 111 126 198)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 128 48 246 114 121 225 9 158 25 177 165 78 190 142 105 69 98 11 16 180 118 146 93 20 42 40 189 160 230 203 43 215 24 233 232 127 178 181 68 28 56 52 122 44 58 1 70 237)
  :der-encode
  #t
  :tests
  '(#(314
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 127 255 255 255 255 255 255 255 255 255 255 255 19 121 126 11 135 180 163 53 58 111 126 199 2 24 127 255 255 255 255 255 255 255 255 255 255 255 19 121 126 11 135 180 163 53 58 111 126 199)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 145 24 91 115 11 233 177 25 250 217 125 33 97 100 179 175 7 251 178 23 212 195 55 206 67 111 217 92 153 183 240 223 136 27 5 134 199 7 180 198 127 184 158 55 58 33 154 210)
  :der-encode
  #t
  :tests
  '(#(315
      "u1 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 85 85 85 85 85 85 85 85 85 85 85 84 183 166 84 7 175 205 194 35 124 74 84 132 2 25 0 187 90 82 244 47 156 146 97 237 67 97 245 148 34 161 227 0 54 231 195 43 39 12 136)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 50 26 118 59 67 75 35 254 229 238 65 179 105 253 72 244 165 182 77 247 63 202 217 234 147 64 217 44 209 246 125 117 57 59 229 3 252 172 231 33 40 118 183 31 76 113 121 150)
  :der-encode
  #t
  :tests
  '(#(316
      "u1 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 85 85 85 85 85 85 85 85 85 85 85 84 183 166 84 7 175 205 194 35 124 74 84 132 2 24 68 165 173 11 208 99 109 158 18 188 158 8 146 208 90 52 15 50 94 167 73 183 241 5)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 197 121 220 228 109 34 216 145 250 47 208 110 63 142 45 6 100 245 240 64 174 66 167 140 72 62 100 7 199 151 191 226 45 203 9 166 106 85 100 182 168 33 32 193 48 161 48 224)
  :der-encode
  #t
  :tests
  '(#(317
      "u2 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 85 85 85 85 85 85 85 85 85 85 85 84 183 166 84 7 175 205 194 35 124 74 84 132 2 24 85 85 85 85 85 85 85 85 85 85 85 84 183 166 84 7 175 205 194 35 124 74 84 132)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 91 110 210 123 201 232 54 184 2 122 98 225 230 212 44 132 120 182 83 46 147 253 177 42 247 216 42 22 34 27 97 54 98 200 182 45 101 7 250 17 133 82 97 116 32 159 21 221)
  :der-encode
  #t
  :tests
  '(#(318
      "u2 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 85 85 85 85 85 85 85 85 85 85 85 84 183 166 84 7 175 205 194 35 124 74 84 132 2 25 0 170 170 170 170 170 170 170 170 170 170 170 169 111 76 168 15 95 155 132 70 248 148 169 9)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 137 139 128 113 119 51 227 149 223 220 162 215 19 95 206 106 156 180 34 234 144 35 20 167 68 32 214 65 149 81 194 213 164 152 152 160 42 180 9 203 133 90 98 191 72 83 222 8)
  :der-encode
  #t
  :tests
  '(#(319
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 25 0 147 200 198 81 101 52 48 203 79 22 117 251 233 7 52 168 175 224 15 100 138 172 174 7)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 213 27 15 135 58 171 62 18 252 242 89 93 240 202 59 1 132 226 3 93 91 59 62 114 212 156 204 48 53 69 241 214 116 127 170 80 214 37 141 85 51 108 133 243 30 157 178 224)
  :der-encode
  #t
  :tests
  '(#(320
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 24 86 9 172 41 242 173 248 241 148 69 88 122 123 8 59 32 1 39 98 60 17 165 63 183)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 228 97 245 5 20 170 0 228 44 242 163 132 60 149 197 230 25 143 182 44 22 218 43 231 70 233 53 237 136 153 237 247 251 140 127 136 10 67 155 137 201 114 18 147 188 58 30 197)
  :der-encode
  #t
  :tests
  '(#(321
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 25 0 151 97 78 230 248 142 106 136 100 141 67 171 146 194 11 220 63 7 78 172 187 38 212 125)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 227 193 126 51 33 187 244 124 216 102 166 64 229 109 159 48 68 10 17 112 176 179 93 234 148 92 135 29 225 100 134 123 80 184 244 65 83 195 93 84 154 9 33 13 62 252 112 150)
  :der-encode
  #t
  :tests
  '(#(322
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 24 13 207 47 38 52 197 72 167 68 165 173 11 182 222 235 197 24 0 225 236 244 171 90 87)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 80 103 53 236 187 29 246 75 197 34 38 129 90 50 49 149 247 156 45 78 125 57 140 118 12 129 70 12 32 16 31 252 36 58 66 162 198 24 8 136 150 199 130 107 124 141 64 216)
  :der-encode
  #t
  :tests
  '(#(323
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 25 0 242 242 99 76 84 138 116 74 90 208 189 4 117 235 173 174 207 166 75 206 70 3 138 212)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 133 65 25 17 122 164 54 147 3 90 241 115 111 128 149 227 211 250 196 13 57 163 213 219 232 63 112 204 183 152 233 185 219 132 169 89 221 223 107 153 197 117 221 149 118 234 213 167)
  :der-encode
  #t
  :tests
  '(#(324
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 25 0 229 228 198 152 169 20 232 148 181 161 122 10 196 228 95 70 143 227 81 50 23 40 24 27)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 172 199 185 137 252 244 39 12 246 136 187 18 225 169 169 142 50 10 25 74 224 169 249 56 133 55 6 143 22 170 60 87 95 24 157 249 190 25 122 125 236 79 247 242 247 54 207 155)
  :der-encode
  #t
  :tests
  '(#(325
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 24 52 197 72 167 68 165 173 11 208 99 109 157 177 57 107 248 255 25 135 229 136 86 122 18)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 65 18 161 235 146 220 111 52 228 206 35 41 11 148 105 114 143 28 116 244 149 162 182 100 144 9 0 215 127 162 62 153 220 169 227 1 94 91 52 205 94 80 53 203 134 188 55 48)
  :der-encode
  #t
  :tests
  '(#(326
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 25 0 168 212 114 163 64 201 194 84 95 142 101 239 207 186 191 146 42 230 69 197 14 190 241 178)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 58 16 122 38 178 121 138 252 17 92 169 207 71 59 128 26 181 56 132 21 205 208 125 66 124 129 92 123 84 45 9 214 33 190 108 158 110 242 153 196 225 214 87 72 176 102 84 0)
  :der-encode
  #t
  :tests
  '(#(327
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 25 0 143 71 186 114 214 83 117 105 54 99 71 133 240 247 141 175 204 72 250 63 59 202 45 105)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 79 145 28 25 148 29 22 40 167 83 53 216 14 52 220 213 156 89 180 110 192 231 167 3 167 7 1 175 90 103 88 25 83 181 180 6 182 92 36 94 111 17 55 171 99 25 154 102)
  :der-encode
  #t
  :tests
  '(#(328
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 24 54 27 156 215 77 101 231 154 88 116 197 1 30 245 227 183 47 196 155 130 245 25 39 195)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 149 4 216 145 98 149 238 14 55 2 140 249 139 74 196 105 95 197 217 22 156 34 195 159 209 221 57 62 118 245 8 113 201 168 236 61 56 28 188 239 20 209 174 87 57 106 122 255)
  :der-encode
  #t
  :tests
  '(#(329
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 24 108 55 57 174 154 203 207 52 176 233 138 2 61 235 199 110 95 137 55 5 234 50 79 134)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 167 87 144 248 239 2 220 41 207 176 149 255 254 69 14 157 229 122 133 195 224 155 14 32 191 2 145 157 26 243 36 9 141 167 115 26 59 172 197 187 113 238 231 171 36 173 143 244)
  :der-encode
  #t
  :tests
  '(#(330
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 25 0 162 82 214 133 232 49 182 207 9 94 79 3 92 225 171 37 143 77 210 136 223 75 119 73)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 86 91 123 141 168 189 29 253 233 135 215 59 48 55 182 176 194 47 15 3 186 82 111 56 234 80 250 159 191 25 113 27 4 164 107 159 227 0 50 244 33 92 199 43 112 243 43 78)
  :der-encode
  #t
  :tests
  '(#(331
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 25 0 203 176 167 115 124 71 53 68 50 70 161 212 220 218 131 249 167 56 74 139 152 2 233 5)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 218 143 163 3 157 233 198 208 128 100 12 198 59 184 5 70 242 198 11 196 16 158 227 253 255 107 148 231 248 108 196 185 217 197 32 40 35 175 28 152 157 111 52 104 109 29 133 196)
  :der-encode
  #t
  :tests
  '(#(332
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 25 0 213 85 85 85 85 85 85 85 85 85 85 84 25 247 82 186 10 70 46 241 163 63 83 178)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 0 227 235 204 150 28 33 229 55 121 147 166 174 86 22 156 251 2 182 178 159 173 164 254 18 169 71 249 72 193 28 176 79 83 73 231 234 179 222 77 185 4 53 158 164 30 123 17)
  :der-encode
  #t
  :tests
  '(#(333
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 24 113 148 122 219 31 236 177 58 123 226 249 88 122 182 210 46 43 136 34 61 20 91 41 72)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 2 92 83 254 162 178 225 1 117 242 136 118 147 36 30 114 113 179 8 81 10 71 151 33 117 11 165 17 2 181 79 42 75 177 15 96 51 200 121 36 21 102 91 133 248 140 136 220)
  :der-encode
  #t
  :tests
  '(#(334
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 25 0 229 248 74 125 73 227 105 171 20 105 209 81 190 236 62 19 127 251 206 131 90 30 61 118)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 182 69 70 140 161 16 122 118 99 135 35 27 75 231 64 105 139 52 104 241 222 108 166 231 211 168 49 118 195 11 124 204 247 254 182 193 226 153 194 139 31 47 203 137 17 37 171 231)
  :der-encode
  #t
  :tests
  '(#(335
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 24 8 15 142 161 88 17 202 235 127 255 255 255 241 26 216 142 33 189 44 61 215 230 244 98)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 87 43 32 87 113 170 138 75 212 9 128 16 60 229 71 225 16 102 183 92 156 152 169 38 190 17 138 103 99 216 103 56 7 94 233 199 87 177 117 108 122 205 69 58 214 213 219 79)
  :der-encode
  #t
  :tests
  '(#(336
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 25 0 248 234 21 129 28 174 183 255 255 255 255 254 52 10 214 148 30 32 168 67 255 199 89 128)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 158 143 176 87 53 131 42 167 79 53 70 202 67 251 145 221 104 118 194 250 119 56 81 215 45 238 1 67 226 68 107 249 187 215 119 159 111 206 157 106 224 147 136 50 220 162 203 166)
  :der-encode
  #t
  :tests
  '(#(337
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 25 0 241 212 43 2 57 93 111 255 255 255 255 254 65 34 177 17 44 216 10 29 138 175 181 115)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 126 30 131 107 0 95 236 145 54 38 22 60 118 164 190 84 26 36 97 132 41 117 171 54 155 8 185 120 100 56 221 252 34 101 134 71 154 215 246 177 188 74 140 229 123 51 232 251)
  :der-encode
  #t
  :tests
  '(#(338
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 24 88 17 202 235 127 255 255 255 255 255 255 255 93 66 165 210 77 190 205 157 139 219 84 83)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 16 146 36 196 89 51 96 175 204 104 185 101 115 81 194 84 126 191 142 110 185 82 145 113 89 1 147 76 222 72 69 17 195 160 146 120 136 250 180 39 152 152 181 177 210 253 36 24)
  :der-encode
  #t
  :tests
  '(#(339
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 24 53 245 245 245 245 245 245 245 245 245 245 245 143 238 34 75 63 143 45 78 45 73 49 171)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 83 17 215 243 142 237 213 128 36 82 7 89 73 85 134 100 252 133 221 56 145 116 144 254 106 126 119 230 51 177 136 108 162 223 59 11 150 233 207 157 147 87 16 253 113 209 159 125)
  :der-encode
  #t
  :tests
  '(#(340
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 25 0 225 175 40 107 202 26 242 134 188 161 175 38 196 136 144 182 81 40 76 122 50 172 146 5)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 70 16 74 102 242 37 188 59 251 167 230 229 87 116 219 170 123 141 79 53 189 4 109 254 218 253 124 42 18 163 202 125 132 34 144 115 166 223 252 93 210 254 150 30 0 131 110 127)
  :der-encode
  #t
  :tests
  '(#(341
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 25 0 149 85 85 85 85 85 85 85 85 85 85 84 25 247 82 186 10 70 46 241 163 63 83 180)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 152 22 163 59 99 88 39 63 58 158 203 37 192 88 124 127 117 204 107 98 97 166 47 25 58 13 1 178 27 40 81 9 38 77 246 93 10 178 244 220 158 138 114 142 2 149 92 68)
  :der-encode
  #t
  :tests
  '(#(342
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 24 42 170 170 170 170 170 170 170 170 170 170 170 12 251 169 93 5 35 23 120 209 159 169 219)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 202 195 41 129 176 238 189 86 65 187 145 24 214 243 171 46 203 193 236 144 24 46 7 152 54 58 2 193 30 87 122 54 96 88 131 15 249 15 136 161 254 47 46 56 14 35 173 191)
  :der-encode
  #t
  :tests
  '(#(343
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 25 0 191 255 255 255 255 255 255 255 255 255 255 254 38 242 252 23 15 105 70 106 116 222 253 143)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 126 212 128 252 42 227 119 211 80 241 232 156 199 4 129 5 34 189 16 16 82 157 235 231 52 60 154 224 238 119 246 115 124 135 69 101 52 100 23 210 109 153 226 149 71 77 70 175)
  :der-encode
  #t
  :tests
  '(#(344
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 24 114 252 37 62 164 241 180 213 138 52 232 168 223 118 31 9 191 253 231 65 173 15 30 187)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 169 33 38 163 18 28 119 204 157 54 192 113 229 210 93 215 119 203 7 81 238 169 96 208 51 42 178 189 230 89 12 110 15 214 194 6 141 56 77 169 151 230 39 79 191 213 189 6)
  :der-encode
  #t
  :tests
  '(#(345
      "point duplication during verification"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 76 167 49 238 45 126 172 87 87 132 82 107 119 194 80 3 178 78 114 213 8 77 132 86 2 25 0 161 38 41 170 225 196 54 12 126 86 12 12 1 136 208 145 113 191 182 32 33 94 8 160)
      #t
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 169 33 38 163 18 28 119 204 157 54 192 113 229 210 93 215 119 203 7 81 238 169 96 208 204 213 77 66 25 166 243 145 240 41 61 249 114 199 178 86 104 25 216 175 64 42 49 49)
  :der-encode
  #t
  :tests
  '(#(346
      "duplication bug"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 76 167 49 238 45 126 172 87 87 132 82 107 119 194 80 3 178 78 114 213 8 77 132 86 2 25 0 161 38 41 170 225 196 54 12 126 86 12 12 1 136 208 145 113 191 182 32 33 94 8 160)
      #f
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 251 43 32 191 167 169 146 80 6 98 60 83 128 214 135 10 159 252 17 81 235 84 145 156 129 188 23 127 229 35 206 74 137 23 14 139 3 104 1 50 214 145 29 198 209 84 195 41)
  :der-encode
  #t
  :tests
  '(#(347
      "comparison with point at infinity "
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 85 85 85 85 85 85 85 85 85 85 85 84 183 166 84 7 175 205 194 35 124 74 84 132 2 24 51 51 51 51 51 51 51 51 51 51 51 50 212 150 255 55 207 225 218 226 23 95 204 79)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 70 33 75 233 243 133 141 54 10 34 248 229 211 103 194 70 27 84 33 103 54 74 237 84 186 22 47 223 148 111 162 218 145 117 182 28 152 237 137 64 45 140 227 116 78 1 117 176)
  :der-encode
  #t
  :tests
  '(#(348
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 240 145 207 99 49 177 116 118 132 245 210 84 156 209 212 179 168 190 217 59 148 249 60 182 2 24 85 85 85 85 85 85 85 85 85 85 85 84 183 166 84 7 175 205 194 35 124 74 84 132)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 217 195 223 134 188 215 90 33 52 53 124 214 23 23 50 65 75 224 48 244 84 184 114 102 239 183 28 139 219 82 106 146 56 250 186 239 191 220 36 11 168 106 31 49 92 185 151 115)
  :der-encode
  #t
  :tests
  '(#(349
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 240 145 207 99 49 177 116 118 132 245 210 84 156 209 212 179 168 190 217 59 148 249 60 182 2 25 0 182 219 109 182 219 109 182 219 109 182 219 108 100 246 180 16 120 184 233 39 120 12 254 64)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 122 169 64 202 228 172 31 159 59 44 168 130 101 65 197 217 2 140 51 116 25 156 11 56 211 136 33 250 16 79 88 42 119 156 196 238 207 186 40 152 77 241 205 82 193 191 113 51)
  :der-encode
  #t
  :tests
  '(#(350
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 240 145 207 99 49 177 116 118 132 245 210 84 156 209 212 179 168 190 217 59 148 249 60 182 2 25 0 153 153 153 153 153 153 153 153 153 153 153 152 125 196 253 167 111 165 144 166 70 31 100 238)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 116 57 58 227 130 125 153 20 108 147 18 30 9 242 12 138 190 239 36 160 223 58 162 77 138 12 120 175 104 240 203 206 9 206 183 16 17 190 91 26 103 182 83 181 202 90 158 101)
  :der-encode
  #t
  :tests
  '(#(351
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 240 145 207 99 49 177 116 118 132 245 210 84 156 209 212 179 168 190 217 59 148 249 60 182 2 24 102 102 102 102 102 102 102 102 102 102 102 101 169 45 254 111 159 195 181 196 46 191 152 159)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 130 35 107 202 17 48 232 20 34 110 189 197 28 238 247 123 18 240 172 247 85 41 32 156 210 178 232 37 181 238 208 89 168 178 132 199 104 178 202 136 121 81 166 186 206 199 181 5)
  :der-encode
  #t
  :tests
  '(#(352
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 240 145 207 99 49 177 116 118 132 245 210 84 156 209 212 179 168 190 217 59 148 249 60 182 2 24 73 36 146 73 36 146 73 36 146 73 36 145 193 252 72 6 150 176 93 66 252 209 255 77)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 94 176 16 63 253 25 28 126 116 51 40 234 223 101 213 224 209 17 244 156 247 213 251 139 221 163 90 98 84 150 168 0 120 119 160 180 6 50 147 4 2 189 176 151 103 205 33 141)
  :der-encode
  #t
  :tests
  '(#(353
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 240 145 207 99 49 177 116 118 132 245 210 84 156 209 212 179 168 190 217 59 148 249 60 182 2 24 14 177 14 91 184 55 162 184 5 108 54 29 173 87 10 158 215 228 209 65 20 254 110 14)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 27 41 136 111 251 118 68 123 5 177 157 195 179 13 56 222 228 85 19 80 38 218 131 87 189 229 212 214 64 4 136 199 100 65 30 195 158 120 165 138 29 34 120 158 51 69 145 20)
  :der-encode
  #t
  :tests
  '(#(354
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 219 79 241 14 192 87 233 174 38 176 125 2 128 183 244 52 29 165 209 177 234 224 108 125 2 24 85 85 85 85 85 85 85 85 85 85 85 84 183 166 84 7 175 205 194 35 124 74 84 132)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 206 56 235 72 159 71 145 186 112 33 109 37 169 112 57 250 28 41 239 3 71 252 200 90 219 241 164 84 40 85 10 109 230 69 176 121 109 78 195 62 115 23 73 152 177 221 57 68)
  :der-encode
  #t
  :tests
  '(#(355
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 219 79 241 14 192 87 233 174 38 176 125 2 128 183 244 52 29 165 209 177 234 224 108 125 2 25 0 182 219 109 182 219 109 182 219 109 182 219 108 100 246 180 16 120 184 233 39 120 12 254 64)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 236 43 92 229 100 221 182 120 92 118 135 209 225 41 122 6 107 140 239 103 145 30 49 242 110 15 44 90 210 207 149 178 117 61 125 233 235 181 255 13 107 185 84 85 222 134 84 136)
  :der-encode
  #t
  :tests
  '(#(356
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 25 0 219 79 241 14 192 87 233 174 38 176 125 2 128 183 244 52 29 165 209 177 234 224 108 125 2 25 0 153 153 153 153 153 153 153 153 153 153 153 152 125 196 253 167 111 165 144 166 70 31 100 238)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 172 190 185 69 245 166 236 90 111 148 77 244 104 138 109 56 242 153 93 179 8 153 24 235 242 181 229 34 169 123 175 62 106 250 203 202 119 158 190 6 102 94 99 144 187 136 249 80)
  :der-encode
  #t
  :tests
  '(#(357
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 219 79 241 14 192 87 233 174 38 176 125 2 128 183 244 52 29 165 209 177 234 224 108 125 2 24 102 102 102 102 102 102 102 102 102 102 102 101 169 45 254 111 159 195 181 196 46 191 152 159)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 183 198 128 7 204 64 23 199 120 124 75 238 201 132 37 46 235 175 87 244 182 153 240 3 193 216 218 167 160 49 46 196 222 90 250 80 36 245 118 47 162 218 119 56 0 150 48 24)
  :der-encode
  #t
  :tests
  '(#(358
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 219 79 241 14 192 87 233 174 38 176 125 2 128 183 244 52 29 165 209 177 234 224 108 125 2 24 73 36 146 73 36 146 73 36 146 73 36 145 193 252 72 6 150 176 93 66 252 209 255 77)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 125 124 47 167 101 153 234 246 100 221 215 92 122 177 234 125 235 81 145 235 51 39 196 139 120 192 41 136 110 68 103 180 154 220 84 96 251 122 214 250 207 90 41 2 187 28 9 116)
  :der-encode
  #t
  :tests
  '(#(359
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 219 79 241 14 192 87 233 174 38 176 125 2 128 183 244 52 29 165 209 177 234 224 108 125 2 24 14 177 14 91 184 55 162 184 5 108 54 29 173 87 10 158 215 228 209 65 20 254 110 14)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 219 79 241 14 192 87 233 174 38 176 125 2 128 183 244 52 29 165 209 177 234 224 108 125 155 47 47 109 156 86 40 167 132 65 99 208 21 190 134 52 64 130 170 136 217 94 47 157)
  :der-encode
  #t
  :tests
  '(#(360
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 187 90 82 244 47 156 146 97 237 67 97 245 148 34 161 227 0 54 231 195 43 39 12 136 2 24 36 146 73 36 146 73 36 146 73 36 146 72 224 254 36 3 75 88 46 161 126 104 255 166)
      #f
      ())
    #(361
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 68 165 173 11 208 99 109 158 18 188 158 8 146 208 90 52 15 50 94 167 73 183 241 5 2 24 36 146 73 36 146 73 36 146 73 36 146 72 224 254 36 3 75 88 46 161 126 104 255 166)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 219 79 241 14 192 87 233 174 38 176 125 2 128 183 244 52 29 165 209 177 234 224 108 125 100 208 208 146 99 169 215 88 123 190 156 47 234 65 121 203 191 125 85 118 38 161 190 154)
  :der-encode
  #t
  :tests
  '(#(362
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 25 0 187 90 82 244 47 156 146 97 237 67 97 245 148 34 161 227 0 54 231 195 43 39 12 136 2 24 36 146 73 36 146 73 36 146 73 36 146 72 224 254 36 3 75 88 46 161 126 104 255 166)
      #f
      ())
    #(363
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 24 68 165 173 11 208 99 109 158 18 188 158 8 146 208 90 52 15 50 94 167 73 183 241 5 2 24 36 146 73 36 146 73 36 146 73 36 146 72 224 254 36 3 75 88 46 161 126 104 255 166)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192k1_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 70 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 31 3 50 0 4 4 164 231 190 220 125 129 55 170 222 134 193 164 210 35 173 112 78 99 218 212 113 124 73 62 252 25 109 239 28 173 152 35 201 31 107 139 226 97 17 100 185 60 202 75 178 197 89)
  :der-encode
  #t
  :tests
  '(#(364
      "pseudorandom signature"
      #vu8()
      #vu8(48 52 2 24 92 165 100 128 28 114 78 144 39 230 211 159 0 110 195 246 59 216 211 130 159 221 120 80 2 24 110 174 196 178 20 115 219 50 46 153 36 241 45 42 38 4 103 192 237 88 136 46 113 52)
      #t
      ())
    #(365
      "pseudorandom signature"
      #vu8(77 115 103)
      #vu8(48 53 2 24 84 110 124 254 95 102 15 16 160 44 239 220 180 187 78 12 199 169 253 67 204 158 68 63 2 25 0 134 211 169 53 221 98 213 219 113 1 225 40 243 246 4 140 73 0 114 164 154 94 240 71)
      #t
      ())
    #(366
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 24 78 100 99 76 230 22 59 152 171 57 213 115 105 142 160 86 32 114 31 56 159 194 125 167 2 25 0 223 7 153 66 187 129 159 83 58 98 153 69 201 112 19 77 16 23 232 174 142 222 37 218)
      #t
      ())
    #(367
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(48 53 2 24 40 217 23 133 192 5 196 22 196 54 34 42 6 87 137 57 209 44 158 173 28 252 214 60 2 25 0 130 137 33 179 230 50 66 76 170 8 206 148 125 46 244 58 59 156 203 137 245 167 72 32)
      #t
      ())))
