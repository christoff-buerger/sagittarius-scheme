(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 184 56 255 68 229 188 23 123 242 17 137 208 118 96 130 252 157 132 50 38 136 127 201 118 3 113 16 11 126 226 10 111 240 201 215 91 251 167 179 26 107 202 25 116 73 110 235 86 222 53 112 113 149 93 131 196 177 186 218 160 178 24 50 233)
  :der-encode
  #t
  :tests
  '(#(1
      "signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 32 52 210 241 165 103 215 230 71 177 120 85 45 236 53 135 90 44 198 29 243 206 138 226 193 53 126 168 197 255 80 85 97)
      #t
      ())
    #(2
      "Legacy:ASN encoding of s misses leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 32 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #t
      ("MissingZero"))
    #(3
      "valid"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #t
      ())
    #(4
      "long form encoding of length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ("BER"))
    #(5
      "length of sequence contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 130 0 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ("BER"))
    #(6
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(7
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(8
      "uint32 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 1 0 0 0 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(9
      "uint64 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 137 1 0 0 0 0 0 0 0 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(10
      "length of sequence = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 127 255 255 255 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(11
      "length of sequence = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 255 255 255 255 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(12
      "length of sequence = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 255 255 255 255 255 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(13
      "length of sequence = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 136 255 255 255 255 255 255 255 255 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(14
      "incorrect length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 255 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(15
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(16
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 128 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(17
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 128 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(18
      "removing sequence"
      #vu8(49 50 51 52 48 48)
      #vu8()
      #f
      ())
    #(19
      "lonely sequence tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48)
      #f
      ())
    #(20
      "appending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 0 0)
      #f
      ())
    #(21
      "prepending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 0 0 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(22
      "appending unused 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 0 0)
      #f
      ())
    #(23
      "appending null value to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 5 0)
      #f
      ())
    #(24
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 73 129 119 48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(25
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 37 0 48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(26
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 0 4 222 173 190 239)
      #f
      ())
    #(27
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 34 37 73 129 119 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(28
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 34 36 37 0 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(29
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 34 34 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 0 4 222 173 190 239 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(30
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 34 38 73 129 119 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(31
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 34 37 37 0 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(32
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 34 35 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 0 4 222 173 190 239)
      #f
      ())
    #(33
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 170 0 187 0 205 0 48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(34
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 75 170 2 170 187 48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(35
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 34 40 170 0 187 0 205 0 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(36
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 75 34 38 170 2 170 187 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(37
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 34 41 170 0 187 0 205 0 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(38
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 75 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 34 39 170 2 170 187 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(39
      "truncated length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129)
      #f
      ())
    #(40
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 0 0)
      #f
      ())
    #(41
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 34 128 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 0 0 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(42
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 34 128 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 0 0)
      #f
      ())
    #(43
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 49 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 0 0)
      #f
      ())
    #(44
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 34 128 3 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 0 0 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(45
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 34 128 3 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 0 0)
      #f
      ())
    #(46
      "Replacing sequence with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(5 0)
      #f
      ())
    #(47
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(46 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(48
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(47 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(49
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(49 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(50
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(50 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(51
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(255 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(52
      "dropping value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 0)
      #f
      ())
    #(53
      "using composition for sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 48 1 2 48 68 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(54
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235)
      #f
      ())
    #(55
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(56
      "indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 0 0)
      #f
      ("BER"))
    #(57
      "indefinite length with truncated delimiter"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 0)
      #f
      ())
    #(58
      "indefinite length with additional element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 5 0 0 0)
      #f
      ())
    #(59
      "indefinite length with truncated element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 6 8 17 34 0 0)
      #f
      ())
    #(60
      "indefinite length with garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 0 0 254 2 190 239)
      #f
      ())
    #(61
      "indefinite length with nonempty EOC"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 0 2 190 239)
      #f
      ())
    #(62
      "prepend empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 48 0 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(63
      "append empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 48 0)
      #f
      ())
    #(64
      "append garbage with high tag number"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 191 127 0)
      #f
      ())
    #(65
      "sequence of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(66
      "truncated sequence: removed last 1 elements"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233)
      #f
      ())
    #(67
      "repeating element in sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 104 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(68
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 129 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ("BER"))
    #(69
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 129 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ("BER"))
    #(70
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 130 0 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ("BER"))
    #(71
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 130 0 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ("BER"))
    #(72
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(73
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 31 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(74
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 34 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(75
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 32 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(76
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 133 1 0 0 0 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(77
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 133 1 0 0 0 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(78
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 78 2 137 1 0 0 0 0 0 0 0 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(79
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 78 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 137 1 0 0 0 0 0 0 0 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(80
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 132 127 255 255 255 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(81
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 132 127 255 255 255 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(82
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 132 255 255 255 255 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(83
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 132 255 255 255 255 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(84
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 133 255 255 255 255 255 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(85
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 133 255 255 255 255 255 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(86
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 2 136 255 255 255 255 255 255 255 255 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(87
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 136 255 255 255 255 255 255 255 255 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(88
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 255 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(89
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 255 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(90
      "removing integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 35 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(91
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(92
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 35 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2)
      #f
      ())
    #(93
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 34 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 0 0 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(94
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 35 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 0 0)
      #f
      ())
    #(95
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 34 0 0 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ("BER"))
    #(96
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 35 0 0 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ("BER"))
    #(97
      "appending unused 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 0 0 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(98
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 34 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 5 0 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(99
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 35 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224 5 0)
      #f
      ())
    #(100
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 129 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(101
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 129)
      #f
      ())
    #(102
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 5 0 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(103
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 5 0)
      #f
      ())
    #(104
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 0 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(105
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 1 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(106
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 3 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(107
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 4 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(108
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 255 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(109
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 0 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(110
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 1 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(111
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 3 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(112
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 4 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(113
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 255 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(114
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 0 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(115
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 0)
      #f
      ())
    #(116
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 34 36 2 1 108 2 31 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(117
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 34 37 2 1 0 2 32 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(118
      "modify first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 110 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(119
      "modify first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 2 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(120
      "modify last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 105 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(121
      "modify last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 96)
      #f
      ())
    #(122
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 31 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(123
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 31 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(124
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 32 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235)
      #f
      ())
    #(125
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 255 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(126
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 34 255 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(127
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 9 1 128 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(128
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 9 1 128)
      #f
      ())
    #(129
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(130
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 1 0)
      #f
      ())
    #(131
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 1 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 222 25 154 182 191 35 206 195 161 32 245 109 165 132 61 227 42 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(132
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 255 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 224 164 60 252 241 197 61 131 41 161 80 176 139 227 209 96 168 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(133
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 147 70 235 219 145 227 109 250 245 252 38 79 75 15 162 32 161 20 38 39 139 121 220 154 158 220 240 231 75 248 94 23 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(134
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 147 70 235 219 145 227 109 250 245 252 38 79 75 15 162 31 91 195 3 14 58 194 124 214 94 175 79 116 28 46 159 88 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(135
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 254 147 70 235 219 145 227 109 250 245 252 38 79 75 15 162 33 230 101 73 64 220 49 60 94 223 10 146 90 123 194 28 214 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(136
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 1 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(137
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 147 70 235 219 145 227 109 250 245 252 38 79 75 15 162 32 161 20 38 39 139 121 220 154 158 220 240 231 75 248 94 23 2 33 0 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(138
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 1 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 163 72 151 155 217 144 6 93 182 74 38 20 83 161 28 45 33)
      #f
      ())
    #(139
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 32 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 165 211 57 226 12 49 117 29 62 202 129 87 58 0 175 170 159)
      #f
      ())
    #(140
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 255 52 210 241 165 103 215 230 71 177 120 85 45 236 53 135 91 114 23 65 13 31 66 66 133 117 172 74 57 47 26 20 32)
      #f
      ())
    #(141
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 254 52 210 241 165 103 215 230 71 177 120 85 45 236 53 135 92 183 104 100 38 111 249 162 73 181 217 235 172 94 227 210 223)
      #f
      ())
    #(142
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 33 1 203 45 14 90 152 40 25 184 78 135 170 210 19 202 120 164 141 232 190 242 224 189 189 122 138 83 181 198 208 229 235 224)
      #f
      ())
    #(143
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 108 185 20 36 110 28 146 5 10 3 217 176 180 240 93 223 94 235 217 216 116 134 35 101 97 35 15 24 180 7 161 233 2 32 52 210 241 165 103 215 230 71 177 120 85 45 236 53 135 91 114 23 65 13 31 66 66 133 117 172 74 57 47 26 20 32)
      #f
      ())
    #(144
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 0)
      #f
      ("EdgeCase"))
    #(145
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 1)
      #f
      ("EdgeCase"))
    #(146
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 255)
      #f
      ("EdgeCase"))
    #(147
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(148
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(149
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(150
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(151
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(152
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 0 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(153
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 9 1 66)
      #f
      ("EdgeCase"))
    #(154
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 0)
      #f
      ("EdgeCase"))
    #(155
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 1)
      #f
      ("EdgeCase"))
    #(156
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 255)
      #f
      ("EdgeCase"))
    #(157
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(158
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(159
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(160
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(161
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(162
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(163
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 9 1 66)
      #f
      ("EdgeCase"))
    #(164
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 0)
      #f
      ("EdgeCase"))
    #(165
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 1)
      #f
      ("EdgeCase"))
    #(166
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 255)
      #f
      ("EdgeCase"))
    #(167
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(168
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(169
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(170
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(171
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(172
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 255 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(173
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 9 1 66)
      #f
      ("EdgeCase"))
    #(174
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 2 1 0)
      #f
      ("EdgeCase"))
    #(175
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 2 1 1)
      #f
      ("EdgeCase"))
    #(176
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 2 1 255)
      #f
      ("EdgeCase"))
    #(177
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(178
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(179
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(180
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(181
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(182
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(183
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 9 1 66)
      #f
      ("EdgeCase"))
    #(184
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 2 1 0)
      #f
      ("EdgeCase"))
    #(185
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 2 1 1)
      #f
      ("EdgeCase"))
    #(186
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 2 1 255)
      #f
      ("EdgeCase"))
    #(187
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(188
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(189
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(190
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(191
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(192
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(193
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 9 1 66)
      #f
      ("EdgeCase"))
    #(194
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 2 1 0)
      #f
      ("EdgeCase"))
    #(195
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 2 1 1)
      #f
      ("EdgeCase"))
    #(196
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 2 1 255)
      #f
      ("EdgeCase"))
    #(197
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(198
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(199
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(200
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(201
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(202
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(203
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 9 1 66)
      #f
      ("EdgeCase"))
    #(204
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 2 1 0)
      #f
      ("EdgeCase"))
    #(205
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 2 1 1)
      #f
      ("EdgeCase"))
    #(206
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 2 1 255)
      #f
      ("EdgeCase"))
    #(207
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(208
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(209
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(210
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(211
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(212
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(213
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 9 1 66)
      #f
      ("EdgeCase"))
    #(214
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 2 1 0)
      #f
      ("EdgeCase"))
    #(215
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 2 1 1)
      #f
      ("EdgeCase"))
    #(216
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 2 1 255)
      #f
      ("EdgeCase"))
    #(217
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(218
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(219
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(220
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(221
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(222
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(223
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 9 1 66)
      #f
      ("EdgeCase"))
    #(224
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 12 1 48)
      #f
      ())
    #(225
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 5 2 1 1 12 0)
      #f
      ())
    #(226
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 9 12 2 37 115 12 3 115 37 115)
      #f
      ())
    #(227
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 48 3 2 1 0)
      #f
      ())
    #(228
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 3 2 1 1)
      #f
      ())
    #(229
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 1 1 0)
      #f
      ())
    #(230
      "Edge case for Shamir multiplication"
      #vu8(49 50 54 55 57 57)
      #vu8(48 69 2 33 0 221 27 125 9 167 189 130 24 150 16 52 163 154 135 254 207 83 20 240 12 77 37 235 88 160 122 200 94 133 234 181 22 2 32 44 138 121 180 156 174 78 193 93 41 53 117 165 161 175 91 77 110 251 116 239 92 44 27 227 78 51 205 235 113 19 204)
      #t
      ())
    #(231
      "special case hash"
      #vu8(51 57 52 57 49 57 52 49 55 50)
      #vu8(48 69 2 33 0 215 67 197 215 110 17 147 165 116 56 241 180 59 27 14 51 208 209 171 21 189 61 87 165 207 106 235 179 112 212 108 224 2 32 125 242 124 183 48 179 61 254 1 227 74 0 103 229 72 169 140 86 132 109 154 76 214 74 147 12 150 191 217 23 207 8)
      #t
      ())
    #(232
      "special case hash"
      #vu8(53 51 54 55 54 52 49 56 55 55)
      #vu8(48 69 2 33 0 186 48 244 221 243 52 143 38 131 94 156 80 246 162 213 2 58 154 31 95 226 233 207 20 179 39 0 21 218 194 131 254 2 32 29 22 22 171 178 4 246 21 251 233 152 96 216 145 88 195 38 65 130 214 23 172 159 21 96 250 130 145 179 73 213 121)
      #t
      ())
    #(233
      "special case hash"
      #vu8(53 54 55 49 52 56 49 48 57 53)
      #vu8(48 69 2 32 85 29 114 230 63 123 39 40 60 65 7 247 216 81 243 135 182 15 63 71 19 165 211 92 33 250 51 47 190 237 68 148 2 33 0 128 145 76 195 122 63 225 58 116 219 127 204 82 38 56 141 149 3 74 80 168 154 155 47 233 191 66 234 41 229 113 77)
      #t
      ())
    #(234
      "special case hash"
      #vu8(49 49 50 48 55 49 55 50 57 48 57)
      #vu8(48 70 2 33 0 128 206 173 61 22 92 224 92 124 248 70 159 28 53 197 163 166 65 105 108 132 59 239 15 2 42 108 104 19 61 196 158 2 33 0 234 132 9 215 67 164 173 94 19 98 7 115 108 58 215 156 140 252 123 87 235 209 189 155 138 89 102 112 173 18 212 28)
      #t
      ())
    #(235
      "special case hash"
      #vu8(49 49 50 57 56 48 51 52 50 51 54)
      #vu8(48 70 2 33 0 187 192 232 183 114 16 101 165 27 172 156 58 173 100 22 137 152 204 14 250 35 41 131 64 212 54 134 124 200 107 168 71 2 33 0 174 59 170 19 26 131 21 60 179 29 226 247 88 228 81 57 246 47 230 204 156 227 148 28 107 23 137 220 16 16 243 226)
      #t
      ())
    #(236
      "special case hash"
      #vu8(57 56 55 54 48 50 57 54 56 51)
      #vu8(48 68 2 32 58 91 169 57 23 185 84 97 123 64 225 216 102 134 13 21 34 176 211 16 202 194 69 118 54 229 78 47 253 234 136 142 2 32 62 172 111 231 98 174 225 39 131 124 44 101 253 156 31 101 180 4 178 195 27 185 69 231 93 97 102 80 63 181 200 189)
      #t
      ())
    #(237
      "special case hash"
      #vu8(50 48 50 48 52 50 57 54 53 49 57)
      #vu8(48 68 2 32 100 127 43 75 239 109 30 167 144 138 197 243 223 215 5 73 76 37 135 69 101 87 128 95 230 74 112 59 43 23 80 60 2 32 32 225 100 187 181 5 198 223 86 69 89 8 0 140 249 98 109 243 32 244 138 163 252 157 12 200 173 139 207 7 140 178)
      #t
      ())
    #(238
      "special case hash"
      #vu8(49 52 53 49 54 54 57 49 56 48)
      #vu8(48 70 2 33 0 138 166 83 207 160 1 121 140 71 30 234 49 153 220 151 90 77 234 79 124 30 222 71 69 52 9 230 6 208 92 235 81 2 33 0 202 178 9 103 160 86 192 234 127 233 205 248 225 152 15 85 177 89 122 45 173 128 201 34 58 15 171 21 195 20 254 109)
      #t
      ())
    #(239
      "special case hash"
      #vu8(49 48 57 51 54 56 53 57 53 49)
      #vu8(48 69 2 33 0 132 46 66 31 51 190 36 29 39 241 47 135 83 85 144 42 37 129 159 33 11 54 133 173 83 110 35 89 64 18 217 208 2 32 79 184 148 174 14 156 36 182 237 40 14 34 74 176 129 20 105 41 106 152 55 209 233 91 93 157 102 29 33 161 194 85)
      #t
      ())
    #(240
      "special case hash"
      #vu8(54 50 49 57 53 54 48 50 48 49)
      #vu8(48 68 2 32 11 112 63 215 91 221 141 206 72 32 254 19 10 11 10 241 122 173 78 70 129 176 37 72 100 213 214 248 147 31 245 115 2 32 64 69 33 172 248 78 114 255 34 194 238 5 209 74 75 199 183 14 105 173 199 140 175 129 53 14 1 55 150 148 195 232)
      #t
      ())
    #(241
      "special case hash"
      #vu8(53 54 56 50 52 55 52 51 48 51)
      #vu8(48 69 2 32 98 240 223 22 80 86 10 88 0 250 103 3 119 164 49 122 96 77 100 117 196 144 6 108 225 86 56 248 209 51 11 99 2 33 0 150 62 223 144 81 151 9 104 24 54 138 153 63 191 254 50 144 138 87 21 62 106 22 18 186 230 238 158 232 168 167 25)
      #t
      ())
    #(242
      "special case hash"
      #vu8(51 55 51 54 53 51 49 55 56 54)
      #vu8(48 69 2 32 41 1 173 230 148 212 185 195 118 179 36 64 24 229 123 205 231 5 126 142 17 221 15 125 7 8 12 221 26 57 25 75 2 33 0 238 101 164 194 186 167 15 142 35 108 235 169 238 212 0 216 153 247 82 118 249 78 75 121 151 178 176 26 192 8 187 188)
      #t
      ())
    #(243
      "special case hash"
      #vu8(52 55 57 53 57 48 51 55 57 50)
      #vu8(48 70 2 33 0 170 156 142 83 17 178 50 180 206 157 176 56 146 242 110 183 125 101 92 111 240 154 89 148 36 171 189 75 17 231 80 190 2 33 0 193 3 76 68 176 46 47 223 5 225 186 94 235 223 149 76 90 1 121 70 0 5 158 5 229 199 61 84 45 163 238 56)
      #t
      ())
    #(244
      "special case hash"
      #vu8(57 51 57 57 54 49 49 48 48 55)
      #vu8(48 69 2 32 47 235 234 1 110 85 5 158 145 225 87 185 136 248 96 72 219 87 195 127 209 34 245 204 96 22 159 244 252 180 134 60 2 33 0 235 25 203 195 91 48 97 225 172 75 89 185 45 31 115 44 234 50 18 220 190 148 60 202 216 45 50 116 11 194 44 51)
      #t
      ())
    #(245
      "special case hash"
      #vu8(49 48 56 55 52 57 49 49 56 53)
      #vu8(48 69 2 32 43 228 99 255 6 175 32 150 221 98 240 50 110 26 245 28 88 95 24 202 143 138 163 97 222 220 245 93 84 62 107 125 2 33 0 245 106 253 89 218 212 37 48 217 79 17 197 154 100 8 197 72 38 183 169 239 131 244 208 32 242 9 215 31 155 116 197)
      #t
      ())
    #(246
      "special case hash"
      #vu8(51 50 51 54 54 55 56 53 48 48)
      #vu8(48 70 2 33 0 246 31 100 222 252 69 171 226 132 179 145 97 180 149 133 242 30 222 241 232 141 6 56 158 91 90 172 187 57 76 228 220 2 33 0 165 162 126 23 223 16 174 218 206 151 235 44 72 101 159 105 181 140 254 118 161 241 172 48 254 163 4 54 85 189 229 21)
      #t
      ())
    #(247
      "special case hash"
      #vu8(49 52 52 56 57 57 55 55 48 51)
      #vu8(48 68 2 32 5 33 52 234 225 60 29 236 90 197 170 70 24 99 145 120 111 91 96 89 28 176 221 48 191 198 30 137 72 106 191 226 2 32 9 205 170 39 156 79 13 61 90 224 14 13 116 231 51 162 96 184 177 32 161 189 167 229 169 1 148 236 68 46 89 45)
      #t
      ())
    #(248
      "special case hash"
      #vu8(53 55 49 52 54 51 50 56 48 55)
      #vu8(48 68 2 32 36 130 70 20 104 107 128 243 183 56 151 10 39 129 111 88 207 16 60 74 147 194 214 176 245 246 222 101 166 85 1 227 2 32 24 14 88 1 165 147 6 62 117 184 60 215 171 142 82 87 90 1 58 27 229 205 238 176 91 48 227 172 157 196 237 130)
      #t
      ())
    #(249
      "special case hash"
      #vu8(50 50 54 52 56 55 52 57 50)
      #vu8(48 68 2 32 47 247 165 171 47 26 51 35 101 26 13 23 196 38 54 114 238 77 44 86 12 218 148 231 213 46 231 85 19 139 176 69 2 32 84 44 232 61 141 157 68 19 87 226 75 97 139 86 149 22 77 67 145 121 28 255 98 238 176 22 9 209 215 203 28 10)
      #t
      ())
    #(250
      "special case hash"
      #vu8(53 51 53 51 52 52 57 52 55 57)
      #vu8(48 69 2 33 0 174 68 109 26 129 118 109 33 221 127 197 21 208 169 86 96 93 12 222 38 214 8 106 118 248 255 200 26 109 251 234 70 2 32 79 204 239 159 117 233 74 188 126 179 242 189 202 253 197 217 125 97 185 217 80 160 96 16 171 76 84 227 218 127 212 224)
      #t
      ())
    #(251
      "special case hash"
      #vu8(52 55 56 55 51 48 51 56 56 48)
      #vu8(48 68 2 32 57 87 207 244 167 95 198 3 156 11 12 46 71 235 155 7 255 110 197 220 138 60 51 22 89 10 126 201 161 215 217 147 2 32 78 87 142 230 89 74 0 203 128 198 64 203 149 137 214 22 219 209 206 205 162 209 93 204 0 98 243 6 134 214 7 59)
      #t
      ())
    #(252
      "special case hash"
      #vu8(50 50 51 50 49 57 53 56 50 51)
      #vu8(48 69 2 32 67 124 54 3 23 55 163 20 13 195 14 237 40 26 218 200 233 7 65 135 170 212 21 2 163 185 163 191 212 239 37 44 2 33 0 218 19 248 143 99 50 2 185 185 81 123 147 166 192 138 123 142 104 88 115 78 136 148 177 166 76 110 192 143 29 4 35)
      #t
      ())
    #(253
      "special case hash"
      #vu8(49 48 55 51 57 51 57 49 57 49 55)
      #vu8(48 69 2 33 0 130 140 18 253 159 227 31 145 189 143 88 170 199 46 230 72 94 52 206 221 249 25 39 207 58 9 182 51 99 185 216 233 2 32 14 136 150 100 168 201 134 25 202 181 114 104 112 100 237 180 240 80 15 131 36 165 223 11 251 90 67 26 60 177 202 57)
      #t
      ())
    #(254
      "special case hash"
      #vu8(49 56 56 49 48 50 55 51 49 53)
      #vu8(48 69 2 33 0 128 124 179 74 166 234 72 177 117 244 31 58 253 247 10 16 157 43 116 106 228 142 8 103 124 218 252 51 217 22 178 218 2 32 65 152 14 111 122 209 153 68 210 120 133 31 152 224 166 34 10 232 136 150 74 232 26 102 122 99 254 194 20 73 51 77)
      #t
      ())
    #(255
      "special case hash"
      #vu8(54 48 54 49 54 57 51 57 48 55)
      #vu8(48 70 2 33 0 169 152 249 240 218 240 47 113 127 82 146 20 45 202 68 124 114 45 35 148 218 224 200 73 16 67 55 84 102 151 22 172 2 33 0 130 111 195 114 105 83 156 248 169 137 151 248 160 38 139 255 254 136 141 108 35 188 104 173 124 117 157 180 127 101 169 37)
      #t
      ())
    #(256
      "special case hash"
      #vu8(56 56 57 53 50 50 55 48 57 52)
      #vu8(48 69 2 33 0 241 81 182 20 175 229 188 157 81 29 12 52 167 235 68 40 57 33 39 46 145 179 229 208 40 33 207 122 67 169 43 197 2 32 9 122 163 61 197 14 191 143 234 3 108 215 226 36 164 211 138 162 7 115 229 167 141 219 131 162 243 181 121 178 239 108)
      #t
      ())
    #(257
      "special case hash"
      #vu8(49 53 56 48 50 51 52 48 57 52)
      #vu8(48 69 2 32 95 33 88 83 129 245 244 46 159 118 190 63 97 244 207 214 71 110 204 111 6 205 79 188 241 62 8 194 127 66 97 72 2 33 0 149 213 178 222 171 241 152 145 237 212 26 197 45 144 114 250 222 187 47 1 69 190 201 185 22 246 143 209 251 207 179 207)
      #t
      ())
    #(258
      "special case hash"
      #vu8(51 57 54 53 57 57 49 53 49 50)
      #vu8(48 69 2 33 0 189 195 97 230 137 132 72 45 123 22 155 197 230 204 248 45 34 99 135 27 231 73 214 122 68 245 72 211 43 202 245 241 2 32 55 86 20 250 65 52 213 5 90 193 23 166 234 148 139 116 38 155 128 99 227 146 89 212 148 167 84 74 251 98 145 171)
      #t
      ())
    #(259
      "special case hash"
      #vu8(50 50 56 56 55 51 50 49 57 56)
      #vu8(48 69 2 32 87 115 176 22 223 250 200 101 171 0 138 190 138 6 53 61 25 123 77 255 50 64 61 124 233 138 218 77 32 234 138 0 2 33 0 214 13 233 201 140 245 14 255 5 21 185 98 223 253 106 172 138 27 114 188 156 250 246 189 161 43 153 246 62 185 118 210)
      #t
      ())
    #(260
      "special case hash"
      #vu8(50 50 51 48 56 56 55 51 49 57)
      #vu8(48 68 2 32 87 183 71 210 31 200 152 71 42 136 139 136 105 58 152 158 171 175 20 51 150 228 203 45 228 175 25 56 111 186 56 79 2 32 124 153 246 57 4 25 26 68 100 208 210 60 165 96 213 85 136 149 205 207 249 58 244 176 12 28 102 202 45 151 67 147)
      #t
      ())
    #(261
      "special case hash"
      #vu8(49 50 57 48 53 54 57 51 55)
      #vu8(48 70 2 33 0 133 75 226 191 48 42 45 109 180 55 235 158 120 112 54 115 193 199 55 19 153 230 140 170 134 37 187 19 199 170 15 236 2 33 0 143 210 38 7 224 22 158 178 226 224 12 74 248 152 253 42 96 157 197 122 159 169 74 127 147 55 32 152 250 103 86 73)
      #t
      ())
    #(262
      "special case hash"
      #vu8(50 55 52 56 54 53 54 52 51 56)
      #vu8(48 70 2 33 0 235 179 53 157 227 177 58 81 133 69 168 107 127 221 146 244 121 50 37 184 202 69 85 166 189 65 130 146 43 4 82 190 2 33 0 131 250 167 223 241 170 14 237 137 167 221 205 170 93 113 107 166 37 60 92 33 247 18 44 39 85 235 120 178 136 132 196)
      #t
      ())
    #(263
      "special case hash"
      #vu8(55 53 56 51 53 48 50 54 48 52)
      #vu8(48 70 2 33 0 139 201 28 252 252 133 186 138 161 113 183 3 163 48 227 152 223 68 96 210 38 2 231 62 50 116 35 235 249 139 246 50 2 33 0 236 117 105 7 42 167 63 241 159 24 61 175 67 58 191 241 66 215 213 237 206 178 91 119 29 133 58 207 15 189 104 182)
      #t
      ())
    #(264
      "special case hash"
      #vu8(50 51 50 55 55 53 52 50 55 57)
      #vu8(48 70 2 33 0 137 91 7 192 69 14 214 244 148 22 51 160 83 201 120 18 140 70 229 34 92 0 235 0 156 60 108 238 94 178 184 66 2 33 0 201 130 129 139 38 15 22 80 224 62 186 143 157 177 162 202 121 195 248 4 219 231 209 114 35 50 96 225 169 193 6 64)
      #t
      ())
    #(265
      "special case hash"
      #vu8(55 55 53 53 48 56 53 56 52)
      #vu8(48 69 2 33 0 213 225 82 236 48 64 144 215 100 253 122 230 26 190 234 223 242 254 232 223 61 204 216 251 68 210 175 90 141 190 224 188 2 32 114 81 141 193 236 201 147 250 173 255 195 66 101 148 254 32 36 199 200 75 161 1 169 39 77 136 0 147 147 16 63 246)
      #t
      ())
    #(266
      "special case hash"
      #vu8(49 55 57 56 50 54 52 56 51 56 50)
      #vu8(48 69 2 32 18 152 177 49 206 151 165 40 229 218 224 93 146 178 134 226 68 123 23 236 0 34 103 185 232 240 55 132 212 7 75 209 2 33 0 237 242 35 173 156 48 138 239 34 225 224 194 74 32 38 143 150 108 194 185 202 77 148 25 69 187 202 5 125 185 45 76)
      #t
      ())
    #(267
      "special case hash"
      #vu8(50 51 57 54 55 55 55 51 54 53)
      #vu8(48 69 2 32 30 121 179 146 29 35 210 144 165 125 8 149 141 58 216 48 94 196 68 239 225 40 28 152 253 164 78 138 247 100 143 73 2 33 0 244 199 97 10 209 186 147 57 23 140 80 231 151 155 90 169 175 7 216 20 62 89 209 58 46 132 249 143 55 16 30 59)
      #t
      ())
    #(268
      "special case hash"
      #vu8(53 57 57 56 49 48 53 56 48 49)
      #vu8(48 69 2 33 0 228 85 244 100 224 237 255 156 149 159 132 240 129 130 136 150 20 154 51 3 97 255 45 22 213 162 68 140 157 104 54 132 2 32 53 28 250 47 41 161 49 142 187 58 70 240 163 109 248 149 64 67 148 155 141 124 234 148 234 207 153 16 139 77 63 160)
      #t
      ())
    #(269
      "special case hash"
      #vu8(49 54 54 55 55 56 50 55 48 53 55)
      #vu8(48 70 2 33 0 168 133 119 12 159 254 243 63 12 17 36 80 100 147 110 61 209 101 234 38 51 87 90 106 21 83 104 103 3 81 247 38 2 33 0 222 49 230 165 134 38 164 31 208 41 207 118 110 244 75 130 115 184 133 88 226 69 46 137 57 120 251 221 161 227 33 209)
      #t
      ())
    #(270
      "special case hash"
      #vu8(50 48 54 50 49 52 51 54 50)
      #vu8(48 69 2 32 75 107 69 20 120 186 37 58 227 199 92 165 177 139 112 204 211 204 164 8 237 36 92 178 175 51 105 84 141 210 229 7 2 33 0 254 71 155 99 26 52 49 180 39 114 146 92 191 232 231 137 249 197 95 178 253 29 122 181 22 100 204 47 165 113 173 147)
      #t
      ())
    #(271
      "special case hash"
      #vu8(54 56 52 50 52 57 54 48 52 53)
      #vu8(48 69 2 32 124 167 3 118 84 122 214 209 143 142 83 159 9 220 38 158 186 160 104 84 193 173 172 213 143 220 115 94 211 207 12 22 2 33 0 244 118 84 244 192 172 27 14 101 183 18 48 14 59 180 114 152 59 17 109 181 32 101 32 234 189 136 109 199 6 178 102)
      #t
      ())
    #(272
      "special case hash"
      #vu8(51 50 54 57 56 57 55 51 50 49)
      #vu8(48 69 2 32 56 133 20 209 71 102 79 187 55 39 28 184 105 62 71 69 156 6 39 214 177 221 82 223 241 211 148 125 252 156 171 236 2 33 0 153 211 212 8 20 170 23 123 233 158 72 25 105 105 150 188 117 7 63 69 24 149 85 135 205 86 181 173 139 188 44 88)
      #t
      ())
    #(273
      "special case hash"
      #vu8(49 51 56 55 51 50 52 54 57 50)
      #vu8(48 68 2 32 68 211 172 80 217 182 86 1 215 155 71 214 197 217 131 148 206 241 85 33 31 243 125 75 172 21 224 212 137 8 9 184 2 32 62 160 56 41 175 176 84 94 8 131 97 168 207 149 42 236 23 186 183 99 127 221 214 219 53 240 57 128 53 35 201 33)
      #t
      ())
    #(274
      "special case hash"
      #vu8(52 49 49 56 56 56 55 53 51 54)
      #vu8(48 70 2 33 0 163 48 4 162 205 80 164 247 4 71 253 56 46 127 220 146 87 196 217 190 123 22 230 134 197 8 42 35 30 231 176 16 2 33 0 216 123 150 237 59 238 165 70 82 96 112 23 112 44 252 229 212 231 252 236 31 221 40 244 22 129 171 128 165 197 182 60)
      #t
      ())
    #(275
      "special case hash"
      #vu8(57 56 56 54 48 54 53 52 53)
      #vu8(48 69 2 32 102 138 209 140 194 44 29 20 152 204 142 90 17 226 191 196 193 225 252 240 167 53 10 88 6 197 83 58 227 50 240 177 2 33 0 245 139 73 54 151 113 189 32 187 8 182 61 74 146 18 226 220 113 218 146 87 237 55 16 217 234 239 155 238 70 158 178)
      #t
      ())
    #(276
      "special case hash"
      #vu8(50 52 55 57 49 49 53 56 52 53)
      #vu8(48 70 2 33 0 247 205 203 2 129 199 7 134 204 54 83 130 13 23 86 167 131 149 169 238 234 178 164 209 100 226 96 246 78 191 214 168 2 33 0 217 102 199 68 153 202 201 124 168 238 103 64 13 240 27 20 121 59 109 125 7 102 143 194 2 169 145 143 60 4 110 155)
      #t
      ())
    #(277
      "special case hash"
      #vu8(53 48 55 54 56 56 55 51 54 55)
      #vu8(48 69 2 33 0 222 14 120 29 158 62 127 115 2 20 88 252 18 1 252 2 30 92 84 241 254 64 177 177 13 184 252 241 110 247 229 74 2 32 125 157 185 35 33 181 229 187 16 89 144 20 83 144 151 147 144 211 35 148 17 111 78 120 175 52 184 81 5 222 232 233)
      #t
      ())
    #(278
      "special case hash"
      #vu8(57 56 56 53 48 54 57 54 55)
      #vu8(48 68 2 32 1 29 172 142 163 127 123 198 165 48 164 45 14 59 236 140 132 86 148 247 59 236 105 80 8 26 111 153 156 205 251 198 2 32 21 62 87 238 69 224 163 121 131 159 59 143 111 175 134 222 122 98 107 33 15 76 16 7 228 49 248 66 227 155 247 213)
      #t
      ())
    #(279
      "special case hash"
      #vu8(50 55 50 49 51 48 54 49 51 49)
      #vu8(48 68 2 32 99 249 196 58 140 171 73 245 24 104 90 18 11 215 58 78 89 86 249 241 103 167 141 70 97 252 121 93 65 190 42 225 2 32 106 175 79 51 132 241 72 158 240 38 203 41 233 126 161 181 86 47 232 206 185 151 141 80 111 183 6 79 66 123 159 49)
      #t
      ())
    #(280
      "special case hash"
      #vu8(51 50 48 52 49 48 49 54 53 53)
      #vu8(48 68 2 32 127 15 211 115 97 102 25 91 168 16 213 162 223 181 225 240 58 236 226 23 5 16 200 170 76 196 160 201 116 167 197 214 2 32 55 12 135 114 167 93 50 232 201 204 16 48 4 231 94 109 48 168 172 134 17 184 75 137 196 28 101 84 33 113 188 91)
      #t
      ())
    #(281
      "special case hash"
      #vu8(51 49 53 48 54 56 48 57 53 48)
      #vu8(48 69 2 33 0 249 117 25 96 134 209 15 104 63 74 161 163 194 213 254 19 253 15 82 238 114 170 63 120 80 6 170 2 76 117 135 53 2 32 106 102 54 65 86 239 33 181 223 220 238 96 204 232 251 9 193 32 25 188 87 104 72 255 115 219 73 133 106 247 70 129)
      #t
      ())
    #(282
      "special case hash"
      #vu8(49 55 50 55 52 54 48 49 48 51)
      #vu8(48 69 2 32 53 254 109 155 249 247 212 118 18 195 245 190 106 78 154 15 176 193 72 84 209 163 119 173 251 84 133 214 227 131 92 111 2 33 0 249 101 135 252 70 14 125 7 57 111 159 45 6 6 147 218 230 50 114 18 89 231 124 144 184 49 64 2 165 35 93 208)
      #t
      ())
    #(283
      "special case hash"
      #vu8(49 52 53 55 49 52 54 49 50 50 53)
      #vu8(48 69 2 32 33 12 124 155 35 18 147 200 236 9 176 246 16 211 23 36 160 69 246 163 63 132 66 63 221 84 26 193 31 247 137 98 2 33 0 229 164 14 107 128 218 153 207 196 156 233 105 241 245 145 70 131 81 131 230 16 1 180 81 63 146 123 113 236 59 42 19)
      #t
      ())
    #(284
      "special case hash"
      #vu8(52 49 55 57 53 49 54 48 57 48)
      #vu8(48 68 2 32 9 183 220 250 210 200 75 137 130 92 243 170 175 254 213 22 100 250 204 192 209 113 164 51 135 166 255 152 170 18 138 4 2 32 39 43 0 230 224 145 122 254 79 190 120 38 4 66 142 9 253 145 195 129 37 213 28 59 160 108 227 25 142 107 247 54)
      #t
      ())
    #(285
      "special case hash"
      #vu8(53 56 57 50 55 49 51 48 53 52)
      #vu8(48 69 2 32 9 199 201 150 129 201 21 155 34 192 164 103 153 149 89 163 30 39 144 117 211 126 248 114 168 138 225 53 101 246 20 155 2 33 0 176 255 149 59 225 148 13 44 245 72 102 60 27 77 183 180 22 82 29 178 137 70 119 51 185 167 102 41 248 171 38 31)
      #t
      ())
    #(286
      "special case hash"
      #vu8(51 56 57 54 49 56 50 50 57 55)
      #vu8(48 69 2 32 43 250 174 14 166 216 186 171 62 2 173 127 163 221 163 206 7 37 209 21 51 227 102 100 119 245 77 105 126 44 169 188 2 33 0 146 137 213 218 68 51 149 188 161 143 233 209 164 175 190 4 163 43 78 205 37 142 202 108 23 114 172 255 45 11 154 137)
      #t
      ())
    #(287
      "special case hash"
      #vu8(56 50 56 51 51 52 54 55 51 50)
      #vu8(48 68 2 32 54 136 70 237 198 119 174 143 194 55 6 156 218 113 154 243 215 241 124 193 54 254 68 59 42 246 20 204 251 72 68 171 2 32 94 190 108 29 62 136 188 78 41 24 65 234 151 200 54 189 207 103 217 234 190 146 99 70 197 244 33 5 247 179 143 103)
      #t
      ())
    #(288
      "special case hash"
      #vu8(51 51 54 54 57 55 52 56 57 49)
      #vu8(48 70 2 33 0 243 54 218 130 190 162 161 17 189 222 246 162 93 228 171 135 215 201 90 168 13 33 131 143 58 78 250 61 147 70 85 93 2 33 0 218 90 182 18 179 39 170 15 233 93 28 175 133 243 182 105 140 35 164 114 18 0 108 86 103 207 169 42 163 239 77 173)
      #t
      ())
    #(289
      "special case hash"
      #vu8(50 49 57 57 49 53 51 50 50 57)
      #vu8(48 70 2 33 0 151 194 251 152 101 249 231 111 141 84 206 149 113 32 182 140 203 4 205 49 131 218 231 19 15 115 19 156 213 102 85 207 2 33 0 251 99 227 129 118 255 172 55 208 236 30 73 194 226 239 239 240 77 255 218 213 167 95 53 118 248 39 108 204 238 152 81)
      #t
      ())
    #(290
      "special case hash"
      #vu8(53 54 48 48 51 49 54 56 50 50)
      #vu8(48 68 2 32 115 147 224 32 126 7 189 115 182 116 211 102 125 251 201 195 0 34 87 77 99 7 154 4 10 35 192 205 126 27 106 166 2 32 41 148 179 70 132 50 254 205 10 50 19 65 113 23 157 40 9 36 77 88 107 217 113 18 156 219 167 63 211 220 136 118)
      #t
      ())
    #(291
      "special case hash"
      #vu8(56 54 57 54 53 49 54 57 53)
      #vu8(48 68 2 32 33 225 148 61 125 57 106 140 70 101 139 237 228 206 21 92 154 6 249 41 207 106 210 146 211 44 145 207 143 73 56 135 2 32 48 120 60 104 44 235 255 254 197 120 125 118 43 215 37 186 252 156 64 117 173 142 177 88 33 136 244 192 93 213 22 157)
      #t
      ())
    #(292
      "special case hash"
      #vu8(54 53 56 51 57 50 54 51 55 50)
      #vu8(48 69 2 32 90 38 158 180 78 145 11 254 138 38 86 222 228 117 86 203 144 138 65 121 23 226 6 142 32 210 1 114 31 68 249 177 2 33 0 230 157 70 50 4 220 231 124 36 148 57 242 47 119 204 76 136 19 64 18 162 134 179 106 149 89 246 148 32 55 102 198)
      #t
      ())
    #(293
      "special case hash"
      #vu8(49 51 50 48 53 48 49 53 55 50 53)
      #vu8(48 69 2 33 0 203 140 20 111 179 213 136 70 229 116 140 72 116 42 242 241 183 120 5 246 205 30 78 185 141 140 102 203 223 93 100 85 2 32 23 172 153 46 16 37 30 51 68 103 248 229 126 46 28 38 157 184 177 148 105 50 28 116 180 67 151 42 128 243 139 45)
      #t
      ())
    #(294
      "special case hash"
      #vu8(53 48 56 53 51 51 48 55 57 49)
      #vu8(48 68 2 32 33 45 132 161 83 219 129 206 165 33 47 167 222 227 29 89 189 202 19 7 39 122 1 181 147 108 58 234 211 27 241 228 2 32 82 3 5 219 239 43 218 101 38 250 44 252 167 137 161 201 172 165 194 173 76 0 39 204 140 243 136 24 19 218 138 114)
      #t
      ())
    #(295
      "special case hash"
      #vu8(55 56 54 54 56 49 51 49 49 57)
      #vu8(48 69 2 32 49 12 130 137 47 87 17 52 163 103 37 244 163 28 92 186 139 196 110 101 0 45 115 177 19 100 8 68 51 216 218 74 2 33 0 156 165 82 172 168 75 150 204 148 97 226 182 90 100 151 81 24 234 120 184 179 85 160 235 204 26 97 222 55 135 125 19)
      #t
      ())
    #(296
      "special case hash"
      #vu8(50 48 56 50 53 51 57 52 50 57)
      #vu8(48 68 2 32 72 157 237 165 128 198 37 51 120 61 249 254 98 222 52 194 226 202 185 29 103 103 9 190 239 241 58 250 200 233 13 185 2 32 50 168 90 156 86 243 8 183 167 148 220 206 97 74 94 215 224 133 112 48 184 66 159 227 180 224 122 213 51 165 160 10)
      #t
      ())
    #(297
      "special case hash"
      #vu8(49 48 48 54 53 57 53 54 54 57 55)
      #vu8(48 70 2 33 0 232 137 124 28 173 31 200 112 167 211 100 103 106 157 127 124 211 172 149 31 59 195 169 239 31 114 49 70 108 52 147 215 2 33 0 221 33 40 232 118 214 45 168 44 252 95 197 8 211 59 246 107 113 192 168 77 10 155 126 71 223 198 32 245 132 107 198)
      #t
      ())
    #(298
      "special case hash"
      #vu8(51 48 50 52 49 56 49 54 48 52)
      #vu8(48 70 2 33 0 180 215 113 209 159 255 177 254 94 173 37 239 93 191 107 83 212 211 218 210 132 100 17 8 173 132 178 84 26 212 53 164 2 33 0 132 62 205 194 100 27 51 163 174 154 225 93 85 159 98 41 215 48 78 229 236 171 224 13 183 59 242 182 181 198 194 31)
      #t
      ())
    #(299
      "special case hash"
      #vu8(55 55 54 55 56 53 50 56 55 52)
      #vu8(48 69 2 32 90 181 251 49 54 250 189 189 34 0 150 66 223 3 104 89 53 129 152 149 214 117 252 40 78 139 129 18 219 82 45 8 2 33 0 216 126 200 129 115 232 35 237 112 67 143 177 8 139 0 104 147 82 84 47 171 173 94 159 214 212 195 197 143 114 47 134)
      #t
      ())
    #(300
      "special case hash"
      #vu8(53 52 52 49 57 57 57 55 52)
      #vu8(48 69 2 33 0 190 49 1 32 22 159 141 72 140 110 94 197 181 229 136 171 138 101 4 1 105 217 239 211 6 46 13 5 253 125 88 223 2 32 69 3 63 41 31 162 26 133 204 8 247 143 236 45 189 148 19 85 32 222 38 19 96 114 139 135 67 181 88 237 22 248)
      #t
      ())
    #(301
      "special case hash"
      #vu8(53 56 52 51 52 56 48 51 57 49)
      #vu8(48 69 2 33 0 205 127 179 242 194 93 250 182 249 238 131 252 187 8 105 134 128 233 209 243 212 120 21 188 119 45 113 122 118 79 153 151 2 32 40 125 216 91 151 109 127 86 210 58 231 131 115 152 193 24 147 42 173 201 130 246 117 249 65 3 3 103 41 164 124 124)
      #t
      ())
    #(302
      "special case hash"
      #vu8(55 49 56 56 57 50 54 50 57)
      #vu8(48 69 2 32 105 241 140 6 74 210 104 60 193 182 216 183 144 32 170 205 24 107 106 209 153 158 110 85 191 40 187 29 172 51 243 57 2 33 0 239 102 230 96 1 252 194 25 201 169 39 215 240 184 72 99 72 59 253 31 250 96 134 192 105 33 144 83 16 199 147 225)
      #t
      ())
    #(303
      "special case hash"
      #vu8(49 55 52 51 50 50 51 52 52 51)
      #vu8(48 67 2 31 84 124 107 180 15 82 210 7 255 247 150 162 159 109 190 98 5 142 80 251 115 189 230 185 198 202 17 52 111 216 232 2 32 43 200 43 211 239 201 254 190 133 120 172 219 195 20 139 180 108 65 163 155 233 174 25 148 173 82 216 191 19 25 93 9)
      #t
      ())
    #(304
      "special case hash"
      #vu8(50 52 48 54 48 48 53 57 51 54)
      #vu8(48 69 2 33 0 168 4 150 173 206 66 231 151 30 190 145 48 7 16 207 79 83 95 173 38 102 104 215 109 114 201 95 255 228 212 37 112 2 32 13 67 56 202 50 133 126 20 224 234 128 38 188 25 66 39 185 16 185 133 9 200 201 48 123 13 141 147 212 123 25 27)
      #t
      ())
    #(305
      "special case hash"
      #vu8(49 54 49 52 48 51 54 57 56 56)
      #vu8(48 69 2 32 61 228 6 52 209 26 122 107 103 2 59 132 101 4 32 103 60 230 219 173 177 21 151 104 204 15 213 95 55 132 236 136 2 33 0 164 85 251 8 229 27 132 147 23 125 136 252 164 58 239 243 6 225 73 13 127 109 36 214 169 16 151 10 61 134 25 222)
      #t
      ())
    #(306
      "special case hash"
      #vu8(50 48 57 53 52 50 53 54 56 53)
      #vu8(48 70 2 33 0 193 242 41 192 85 125 76 71 150 37 147 120 27 201 108 247 69 243 189 98 154 216 84 52 220 46 238 69 109 219 48 49 2 33 0 134 56 246 192 28 21 210 61 178 75 184 81 246 198 60 118 60 31 4 9 118 243 242 179 44 75 177 185 80 108 28 18)
      #t
      ())
    #(307
      "special case hash"
      #vu8(49 48 48 56 48 57 56 57 56 51)
      #vu8(48 69 2 32 53 221 73 87 179 82 232 177 187 200 13 29 235 33 249 176 152 145 136 173 227 251 228 111 117 16 109 161 104 78 29 109 2 33 0 139 80 142 46 215 165 30 254 160 223 175 55 127 107 213 212 174 19 60 196 201 54 80 96 11 229 69 175 93 58 205 117)
      #t
      ())
    #(308
      "special case hash"
      #vu8(49 53 55 52 49 52 55 57 50 55)
      #vu8(48 69 2 32 65 10 169 201 67 230 99 8 44 111 118 184 68 105 201 132 94 13 67 155 167 255 199 202 192 65 142 234 14 32 230 56 2 33 0 200 115 171 92 33 201 240 206 11 247 132 132 2 135 150 183 116 81 225 24 114 80 238 51 83 93 172 251 60 238 95 97)
      #t
      ())
    #(309
      "special case hash"
      #vu8(50 56 54 54 55 55 49 53 50 50)
      #vu8(48 70 2 33 0 129 145 219 6 155 87 28 212 15 38 118 52 132 51 67 13 58 101 21 92 35 60 70 164 42 66 153 230 245 190 128 108 2 33 0 243 103 158 248 175 11 27 58 58 234 167 188 238 81 206 150 4 65 98 46 159 242 220 178 42 142 200 222 114 78 10 12)
      #t
      ())
    #(310
      "special case hash"
      #vu8(49 54 57 52 50 56 48 55 56 55)
      #vu8(48 70 2 33 0 136 156 68 237 191 56 37 177 141 147 58 236 213 239 112 209 46 187 0 191 121 85 4 81 32 95 214 245 186 127 55 43 2 33 0 236 182 113 148 190 210 184 23 96 119 98 45 88 201 171 79 228 202 52 96 29 236 192 159 147 134 184 196 68 92 114 36)
      #t
      ())
    #(311
      "special case hash"
      #vu8(57 57 50 49 54 57 50 53 54 56)
      #vu8(48 69 2 33 0 170 135 17 58 255 46 26 214 70 17 145 36 31 144 162 59 145 36 45 0 102 119 157 170 169 80 106 65 136 171 196 39 2 32 51 219 170 197 172 68 63 180 217 82 159 131 36 127 148 192 173 19 96 212 208 186 142 22 42 55 121 70 198 171 154 226)
      #t
      ())
    #(312
      "special case hash"
      #vu8(49 49 54 48 57 52 51 57 55 57 56)
      #vu8(48 68 2 32 14 19 246 106 143 253 13 161 196 182 127 77 128 89 65 233 15 152 206 56 101 64 196 128 25 193 172 16 84 7 86 131 2 32 12 180 137 232 213 172 252 165 36 93 146 146 245 156 110 222 82 66 81 87 175 119 184 190 239 56 210 59 110 106 222 19)
      #t
      ())
    #(313
      "special case hash"
      #vu8(55 49 56 54 49 54 50 49 48 48)
      #vu8(48 68 2 32 108 24 19 246 96 199 139 218 149 108 22 133 188 146 79 105 209 187 172 95 173 243 228 176 39 171 4 155 200 42 209 52 2 32 32 222 137 238 0 93 118 70 240 112 189 172 121 76 204 226 77 102 27 57 10 120 133 29 53 254 111 181 178 91 62 186)
      #t
      ())
    #(314
      "special case hash"
      #vu8(51 50 57 52 51 52 55 49 55 55)
      #vu8(48 69 2 32 72 220 131 11 99 38 236 33 129 68 57 27 101 141 82 4 94 248 110 249 24 168 212 28 89 19 25 18 177 164 111 177 2 33 0 164 49 145 108 183 207 121 18 155 144 240 152 66 179 242 22 74 108 246 3 219 136 242 217 153 68 20 44 0 180 37 89)
      #t
      ())
    #(315
      "special case hash"
      #vu8(49 56 53 49 52 52 53 53 49 50 48)
      #vu8(48 69 2 32 77 69 120 43 225 69 162 122 233 236 182 202 193 185 227 11 232 124 13 19 183 214 173 169 247 149 255 5 19 81 172 112 2 33 0 207 113 209 235 21 232 132 70 221 185 0 242 13 30 7 57 218 73 157 233 150 63 233 157 237 0 166 45 166 70 45 98)
      #t
      ())
    #(316
      "special case hash"
      #vu8(52 55 54 48 52 51 57 51 48)
      #vu8(48 68 2 32 17 172 216 184 215 54 231 240 4 118 73 88 3 251 210 10 211 81 50 30 128 12 251 221 189 106 125 214 16 197 171 140 2 32 115 64 39 170 188 202 148 135 119 61 195 171 6 155 128 44 0 245 182 229 82 14 119 97 73 106 193 231 199 140 237 145)
      #t
      ())
    #(317
      "special case hash"
      #vu8(50 53 54 55 51 55 56 55 52 49)
      #vu8(48 69 2 32 65 190 139 59 244 26 76 80 125 225 47 9 143 125 64 154 31 148 31 239 132 217 55 148 196 151 247 36 42 124 56 44 2 33 0 129 247 231 36 49 22 242 75 132 176 50 30 147 238 211 94 43 220 50 176 10 168 235 149 131 190 62 155 122 9 164 243)
      #t
      ())
    #(318
      "special case hash"
      #vu8(53 55 51 57 57 51 52 57 57 53)
      #vu8(48 70 2 33 0 234 3 47 244 27 6 30 147 228 86 165 240 169 205 239 54 192 115 45 244 213 90 180 211 134 116 132 176 252 73 217 235 2 33 0 171 41 141 216 17 130 106 106 147 25 195 99 42 150 37 60 49 193 79 117 186 239 83 106 100 84 32 68 43 171 77 67)
      #t
      ())
    #(319
      "special case hash"
      #vu8(51 52 55 56 51 54 54 49 51 57)
      #vu8(48 70 2 33 0 139 31 241 64 198 90 220 162 46 85 150 255 185 90 81 33 195 86 210 212 5 95 20 96 100 69 36 154 87 37 104 111 2 33 0 239 140 22 255 34 129 20 167 227 59 53 173 70 95 149 117 119 222 164 5 251 223 63 175 7 122 135 135 84 229 139 239)
      #t
      ())
    #(320
      "special case hash"
      #vu8(54 52 57 48 53 50 54 48 50)
      #vu8(48 68 2 32 58 64 232 220 62 190 158 25 220 208 212 209 182 152 171 42 73 52 161 70 222 245 66 123 58 106 143 191 191 52 120 70 2 32 84 246 94 54 8 141 45 69 67 1 28 148 177 229 55 22 151 32 45 72 139 52 45 214 247 122 105 148 65 40 34 61)
      #t
      ())
    #(321
      "special case hash"
      #vu8(52 55 54 51 56 56 55 52 57 54)
      #vu8(48 68 2 32 21 254 205 67 145 55 223 116 130 7 39 247 18 24 64 92 190 82 93 64 60 87 68 113 216 163 111 164 177 245 146 171 2 32 24 236 41 9 113 237 10 34 126 196 127 30 33 66 243 184 254 91 23 51 99 80 197 81 93 74 135 235 51 130 252 182)
      #t
      ())
    #(322
      "special case hash"
      #vu8(53 55 57 48 50 48 48 56 48)
      #vu8(48 70 2 33 0 230 118 232 74 41 159 72 26 32 124 222 106 66 113 200 125 115 226 157 30 73 33 99 147 41 35 35 188 220 35 136 68 2 33 0 184 169 140 118 155 248 20 41 100 71 88 200 248 3 221 190 223 129 99 78 83 9 156 67 173 12 164 47 66 7 186 22)
      #t
      ())
    #(323
      "special case hash"
      #vu8(53 51 52 52 55 56 55 56 52 56)
      #vu8(48 68 2 32 81 22 248 240 175 18 180 123 208 37 170 110 174 197 0 125 78 60 90 58 114 203 76 51 31 86 149 129 173 176 27 251 2 32 105 98 37 29 167 186 154 201 81 207 189 32 81 188 183 217 83 0 92 185 89 154 224 173 156 95 81 57 186 172 185 118)
      #t
      ())
    #(324
      "special case hash"
      #vu8(49 57 50 54 54 52 49 48 57 50 48)
      #vu8(48 70 2 33 0 184 63 57 24 182 197 80 109 100 139 163 219 163 103 98 219 89 58 212 183 145 69 107 171 204 60 26 73 102 49 122 230 2 33 0 140 208 22 96 71 206 200 153 99 233 200 202 67 181 86 172 23 208 214 33 119 169 189 163 94 97 208 187 22 221 71 29)
      #t
      ())
    #(325
      "special case hash"
      #vu8(51 55 48 51 57 49 53 55 48 53)
      #vu8(48 68 2 32 7 120 88 168 64 35 12 162 19 133 196 171 76 54 203 211 255 175 133 101 98 2 251 165 143 30 169 149 245 46 188 76 2 32 84 62 94 50 166 210 245 192 134 100 237 114 23 90 218 162 92 219 93 106 117 75 12 177 132 230 153 78 222 102 197 185)
      #t
      ())
    #(326
      "special case hash"
      #vu8(56 49 53 52 53 55 55 48)
      #vu8(48 68 2 32 83 138 216 121 122 57 116 20 172 130 40 124 146 22 228 25 21 201 227 218 219 212 147 160 187 239 92 176 220 121 53 236 2 32 44 148 207 218 231 191 118 249 11 60 199 209 159 238 164 0 91 56 126 49 42 212 17 102 84 214 60 251 236 242 174 26)
      #t
      ())
    #(327
      "special case hash"
      #vu8(49 57 53 53 51 48 51 55 55)
      #vu8(48 70 2 33 0 255 139 189 27 100 65 56 140 184 213 98 194 140 226 159 190 81 222 17 80 47 200 37 119 61 237 63 13 242 37 178 54 2 33 0 142 204 202 1 72 184 47 223 179 112 205 208 115 170 6 52 179 156 199 13 13 82 68 167 49 158 75 19 121 30 44 42)
      #t
      ())
    #(328
      "special case hash"
      #vu8(49 50 54 55 56 49 48 57 48 51)
      #vu8(48 68 2 32 124 23 154 1 15 81 214 110 200 47 229 213 212 91 216 103 180 178 54 162 123 232 130 230 39 80 111 114 134 237 123 170 2 32 94 56 192 72 251 15 189 129 196 13 243 220 22 8 125 154 171 235 81 161 147 16 116 153 210 157 140 249 156 56 138 33)
      #t
      ())
    #(329
      "special case hash"
      #vu8(49 49 49 56 48 55 50 48 56 49 53)
      #vu8(48 69 2 32 126 8 16 136 91 64 93 84 206 178 235 24 202 224 141 226 6 47 97 183 237 148 171 103 235 21 232 123 100 231 48 239 2 33 0 245 17 167 145 158 110 77 112 200 214 27 131 30 56 63 88 222 165 135 138 108 140 95 4 54 238 5 141 216 10 118 104)
      #t
      ())
    #(330
      "special case hash"
      #vu8(56 51 56 49 56 54 57 50 57 48)
      #vu8(48 69 2 33 0 198 101 213 88 221 99 142 242 122 40 85 124 61 235 138 47 84 171 249 189 11 250 3 44 126 201 165 20 218 154 158 158 2 32 101 201 239 195 85 152 31 145 119 130 39 238 250 207 27 178 254 219 152 101 126 108 216 103 79 221 66 174 0 214 25 237)
      #t
      ())
    #(331
      "special case hash"
      #vu8(51 49 51 49 50 56 55 50 55 55)
      #vu8(48 68 2 32 79 6 184 42 160 208 112 160 4 167 253 17 53 188 58 11 195 111 202 238 202 53 227 237 240 15 88 149 57 77 89 171 2 32 101 247 29 215 64 106 23 191 25 228 52 164 99 84 121 52 2 4 221 134 42 159 44 70 83 226 250 57 177 120 40 108)
      #t
      ())
    #(332
      "special case hash"
      #vu8(49 52 51 51 49 57 50 54 53 51 56)
      #vu8(48 69 2 32 83 156 143 229 113 92 61 200 147 129 94 194 240 14 32 59 76 212 248 253 54 204 87 66 204 129 206 210 102 224 46 59 2 33 0 165 150 75 45 81 87 98 76 244 43 103 38 174 35 167 213 239 131 165 209 241 70 11 213 115 213 161 83 22 190 91 242)
      #t
      ())
    #(333
      "special case hash"
      #vu8(51 52 52 57 48 56 50 51 54)
      #vu8(48 69 2 32 37 243 55 39 53 145 242 118 132 156 216 85 176 61 7 203 203 32 89 36 205 164 246 42 7 149 145 96 44 193 10 140 2 33 0 215 184 44 143 179 139 189 80 61 146 229 174 147 3 232 103 60 109 208 233 56 159 90 245 51 102 187 171 133 31 4 112)
      #t
      ())
    #(334
      "special case hash"
      #vu8(54 56 50 57 56 51 53 57 50 57)
      #vu8(48 69 2 33 0 243 96 24 148 93 36 200 150 120 206 44 140 243 203 79 147 195 139 218 211 88 152 145 165 186 162 147 116 77 77 170 32 2 32 25 239 5 135 141 252 99 106 70 98 253 93 209 39 201 8 215 148 137 145 163 36 132 3 35 200 174 244 252 47 248 172)
      #t
      ())
    #(335
      "special case hash"
      #vu8(51 52 52 53 49 53 56 48 50 51)
      #vu8(48 69 2 32 67 32 60 137 173 67 162 187 25 16 231 14 161 4 52 126 132 118 69 153 83 93 70 218 187 229 71 57 91 20 99 244 2 33 0 237 61 41 199 197 6 236 201 136 97 75 54 139 56 221 91 79 30 51 12 27 134 30 252 168 21 42 112 75 145 70 229)
      #t
      ())
    #(336
      "special case hash"
      #vu8(49 50 54 57 55 57 56 55 54 52 52)
      #vu8(48 70 2 33 0 194 116 11 251 63 56 125 241 181 100 227 255 72 131 91 158 56 1 4 113 111 88 197 164 62 151 187 44 45 132 208 74 2 33 0 231 96 238 93 9 80 181 18 246 194 113 205 26 135 97 155 131 13 248 63 212 13 68 185 40 53 57 179 170 56 0 25)
      #t
      ())
    #(337
      "special case hash"
      #vu8(51 57 57 50 52 50 53 53 51)
      #vu8(48 70 2 33 0 236 7 236 83 120 237 19 27 45 234 122 233 119 107 165 54 218 239 42 252 56 226 85 106 112 184 155 151 82 235 31 113 2 33 0 254 162 91 158 80 177 207 162 207 71 93 187 34 69 118 29 95 69 133 251 188 67 141 151 34 108 100 255 116 191 241 158)
      #t
      ())
    #(338
      "special case hash"
      #vu8(49 54 48 49 57 55 55 57 55 55)
      #vu8(48 70 2 33 0 228 56 48 60 203 190 227 89 200 101 153 126 70 17 43 10 253 122 100 124 89 52 41 41 19 152 240 196 50 223 185 240 2 33 0 132 135 224 122 83 218 24 121 63 139 82 112 105 230 32 228 69 135 228 32 36 93 110 200 39 187 53 204 207 174 122 71)
      #t
      ())
    #(339
      "special case hash"
      #vu8(49 48 56 55 56 55 53 53 49 52 53)
      #vu8(48 69 2 33 0 252 9 250 48 232 154 43 163 208 196 217 217 53 14 113 113 104 194 18 83 55 19 89 192 243 203 140 136 7 189 171 86 2 32 93 108 71 102 188 164 98 207 149 180 174 184 245 136 107 82 252 50 134 100 47 254 232 208 189 127 253 74 247 186 219 74)
      #t
      ())
    #(340
      "special case hash"
      #vu8(55 48 48 52 50 53 50 57 57 57)
      #vu8(48 68 2 32 79 24 79 186 43 227 144 120 56 82 144 172 180 204 75 63 57 176 153 195 48 12 118 45 242 5 198 5 198 179 14 26 2 32 80 100 129 210 1 139 58 76 10 213 88 240 41 200 46 6 37 200 51 203 190 233 120 190 231 181 137 116 46 225 227 119)
      #t
      ())
    #(341
      "special case hash"
      #vu8(49 53 54 53 51 50 53 50 56 51)
      #vu8(48 69 2 33 0 233 162 117 51 165 14 175 176 149 97 220 51 93 103 248 229 229 59 79 193 107 48 19 240 98 229 129 173 2 126 17 14 2 32 126 65 80 222 243 104 249 105 172 224 252 40 202 199 163 49 45 107 154 245 56 196 18 4 139 225 118 62 168 31 63 68)
      #t
      ())
    #(342
      "special case hash"
      #vu8(50 51 56 50 54 51 52 50 51 53 48)
      #vu8(48 70 2 33 0 250 194 77 84 56 114 2 191 240 26 145 245 80 79 119 140 24 58 10 121 48 192 42 240 182 24 238 100 209 177 228 56 2 33 0 243 165 60 182 249 111 238 164 92 202 220 223 154 199 140 215 53 236 51 66 22 62 87 61 33 37 202 160 216 213 7 187)
      #t
      ())
    #(343
      "special case hash"
      #vu8(49 52 52 55 56 52 55 48 54 53)
      #vu8(48 69 2 32 53 68 89 10 15 159 165 212 58 212 224 160 3 168 215 219 88 184 87 9 81 101 122 171 59 171 115 39 39 209 187 194 2 33 0 242 87 190 172 16 213 62 128 18 236 210 54 121 61 40 0 38 197 207 28 4 170 229 34 1 155 135 224 3 80 14 197)
      #t
      ())
    #(344
      "special case hash"
      #vu8(49 52 50 54 48 50 48 53 53 52 52)
      #vu8(48 69 2 33 0 188 7 38 56 100 151 200 93 168 244 5 90 114 123 25 56 233 103 134 176 9 230 132 122 8 10 138 174 87 27 7 83 2 32 84 177 177 95 199 136 111 9 177 33 175 101 32 208 244 51 109 37 157 115 71 19 252 62 151 60 242 131 104 131 14 255)
      #t
      ())
    #(345
      "special case hash"
      #vu8(49 57 57 51 56 51 53 50 56 53)
      #vu8(48 69 2 32 33 111 128 81 249 206 237 91 92 193 8 95 131 239 216 113 18 140 180 75 38 10 193 44 72 108 14 160 108 113 170 85 2 33 0 223 144 52 108 176 40 36 90 114 172 125 128 148 73 127 14 251 131 167 196 75 163 178 88 135 49 39 53 94 59 46 223)
      #t
      ())
    #(346
      "special case hash"
      #vu8(52 50 57 50 49 53 51 53 50 51)
      #vu8(48 69 2 33 0 203 118 101 46 25 214 231 167 44 156 172 53 194 174 70 23 141 140 15 245 155 6 176 203 151 195 26 173 57 236 27 9 2 32 92 71 184 137 162 156 120 21 64 184 120 60 162 78 42 204 52 1 120 104 93 115 49 1 126 41 180 239 233 45 159 189)
      #t
      ())
    #(347
      "special case hash"
      #vu8(52 52 53 57 57 48 49 52 57 54)
      #vu8(48 69 2 33 0 237 252 3 25 12 131 149 40 186 42 160 186 58 35 181 150 252 254 193 191 43 191 68 103 241 253 136 57 140 171 138 210 2 32 69 180 31 164 158 15 167 240 96 172 27 163 138 180 210 213 171 91 159 165 76 165 146 133 174 224 156 238 221 152 101 163)
      #t
      ())
    #(348
      "special case hash"
      #vu8(49 51 57 51 57 55 49 49 55 49)
      #vu8(48 70 2 33 0 231 99 31 3 217 223 221 198 76 253 42 151 21 35 222 246 140 185 248 166 78 7 235 34 53 199 37 10 220 54 72 11 2 33 0 160 4 203 172 62 4 5 108 126 101 253 180 139 224 81 233 165 42 180 39 200 38 200 78 44 178 34 146 82 152 54 99)
      #t
      ())
    #(349
      "special case hash"
      #vu8(50 51 57 48 54 57 54 52 57 53)
      #vu8(48 69 2 32 21 227 106 66 81 81 24 2 31 111 83 114 236 191 249 7 85 216 174 119 249 221 104 57 114 210 242 106 166 113 100 81 2 33 0 141 28 217 136 186 10 27 217 25 210 249 181 200 163 81 126 181 158 247 118 202 236 223 43 90 194 247 167 33 133 131 21)
      #t
      ())
    #(350
      "special case hash"
      #vu8(49 49 52 52 54 48 53 54 50 54 52)
      #vu8(48 69 2 32 109 170 203 193 18 92 179 105 14 67 225 107 65 64 119 192 221 39 75 150 237 97 137 43 173 90 81 146 116 240 27 35 2 33 0 208 68 150 88 17 180 5 12 122 133 2 30 136 39 99 92 249 244 98 96 252 51 187 124 181 107 27 55 24 12 66 32)
      #t
      ())
    #(351
      "special case hash"
      #vu8(54 56 53 48 48 52 55 53 48)
      #vu8(48 68 2 32 55 229 7 117 238 6 2 77 89 110 212 152 36 177 230 164 158 250 226 92 125 206 129 129 222 51 249 60 227 74 195 206 2 32 97 106 62 157 31 237 8 97 56 246 254 239 101 50 100 124 2 189 50 75 164 168 191 234 32 100 13 34 245 73 68 41)
      #t
      ())
    #(352
      "special case hash"
      #vu8(50 50 50 48 53 51 54 48 54 49 57)
      #vu8(48 70 2 33 0 213 182 76 223 130 227 84 186 106 1 119 47 125 56 232 212 106 114 155 128 138 174 215 54 22 237 65 169 175 200 61 183 2 33 0 181 196 86 201 18 84 229 112 19 34 140 151 36 187 127 151 170 241 142 27 253 76 153 211 202 158 170 130 20 56 42 16)
      #t
      ())
    #(353
      "special case hash"
      #vu8(54 50 49 53 54 54 53 49 50 52)
      #vu8(48 69 2 33 0 145 87 121 185 10 230 246 193 251 130 193 152 201 240 113 156 226 234 55 190 15 38 30 54 88 94 200 154 218 237 210 182 2 32 125 5 231 121 74 197 117 120 121 8 8 192 172 82 202 58 81 209 57 159 26 76 113 115 167 237 25 134 119 50 179 217)
      #t
      ())
    #(354
      "Signature generated without truncating the hash"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 9 122 4 238 3 161 60 81 29 147 158 139 190 20 113 197 122 113 2 14 22 142 38 137 198 154 86 37 104 110 36 173 2 32 64 210 77 82 243 112 26 200 218 149 149 96 195 110 208 117 10 28 240 49 183 40 169 19 78 43 113 237 61 222 248 137)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 18 201 10 93 235 216 141 66 104 107 132 34 125 188 117 83 81 183 142 124 108 184 108 11 34 83 111 57 70 3 100 110 208 61 150 88 81 188 65 187 8 148 153 197 25 135 184 153 168 53 61 153 126 4 15 221 53 41 10 38 39 240 163 171)
  :der-encode
  #t
  :tests
  '(#(355
      "k*G has a large x-coordinate"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 17 1 69 81 35 25 80 183 95 196 64 45 161 114 47 201 186 235 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 62)
      #t
      ())
    #(356
      "r too large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 44 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 62)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 145 62 208 67 2 46 229 144 245 158 68 245 25 229 207 217 214 241 184 74 80 251 65 126 154 208 102 131 198 175 161 148 182 143 184 13 110 242 97 181 166 59 87 248 113 210 234 114 36 49 159 95 163 237 61 215 127 16 18 219 161 157 3 149)
  :der-encode
  #t
  :tests
  '(#(357
      "r,s are large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 63 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 62)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 100 76 197 78 132 70 114 19 250 254 42 68 81 219 165 80 243 234 118 234 153 112 189 98 81 252 119 131 164 32 216 181 28 217 67 145 85 236 69 213 99 70 119 194 129 21 75 189 249 159 228 64 81 220 236 50 32 83 202 105 234 136 41 124)
  :der-encode
  #t
  :tests
  '(#(358
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 62 154 117 130 136 96 137 198 47 184 64 207 59 131 6 28 209 207 243 174 67 65 128 139 181 189 238 97 145 23 65 119)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 10 17 212 33 84 189 45 225 12 169 35 33 251 107 62 99 142 232 181 167 251 79 181 245 1 180 69 21 207 96 232 201 6 204 170 184 116 140 211 142 206 115 221 201 117 188 48 126 125 225 114 53 126 20 205 150 169 75 179 70 29 50 213 14)
  :der-encode
  #t
  :tests
  '(#(359
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 36 35 142 112 180 49 177 166 78 253 249 3 38 105 147 157 75 119 242 73 80 63 198 144 95 235 117 64 222 163 230 210)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 159 162 195 43 179 73 132 106 203 90 241 78 28 103 172 253 216 150 62 210 81 196 181 120 60 173 75 205 208 253 80 93 111 114 73 55 33 125 30 84 131 146 4 5 207 27 32 32 7 151 82 28 70 74 35 85 253 222 83 6 242 169 228 72)
  :der-encode
  #t
  :tests
  '(#(360
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 1)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 96 234 206 149 0 18 1 207 76 131 181 128 251 105 139 182 171 244 70 229 197 111 249 69 235 87 105 177 164 119 181 80 105 245 53 74 119 254 45 96 21 40 241 38 201 166 133 141 238 221 185 229 236 64 131 86 208 94 213 200 13 98 184 225)
  :der-encode
  #t
  :tests
  '(#(361
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 2)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 241 165 125 147 70 132 35 16 151 94 211 86 103 42 72 160 106 112 181 239 188 12 35 40 124 155 153 82 236 149 91 51 0 145 174 225 34 78 205 105 121 24 86 197 33 177 45 241 114 180 90 92 226 71 230 220 172 167 52 150 132 39 143 35)
  :der-encode
  #t
  :tests
  '(#(362
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 3)
      #t
      ())
    #(363
      "r is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 2 1 3)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 150 138 73 63 39 156 15 142 169 242 68 110 54 30 229 185 117 112 57 213 122 128 3 230 253 115 29 77 198 162 210 202 103 132 197 72 79 231 151 200 48 170 73 167 44 248 83 117 82 50 40 57 59 115 11 32 176 74 25 32 50 175 77 41)
  :der-encode
  #t
  :tests
  '(#(364
      "s is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 73 23 200)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 179 199 251 223 29 116 114 247 189 87 135 87 118 44 142 188 146 47 240 99 176 174 156 58 169 205 129 96 10 190 167 108 3 142 235 56 82 184 54 192 100 159 216 47 229 209 208 44 61 13 187 48 251 205 127 228 24 102 235 195 189 146 124 105)
  :der-encode
  #t
  :tests
  '(#(365
      "small r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 39 2 2 1 1 2 33 0 197 139 22 44 88 177 98 197 139 22 44 88 177 98 197 138 27 36 41 115 133 62 22 219 117 200 161 167 29 164 211 157)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 117 159 221 26 100 192 0 24 139 135 235 13 221 41 26 80 53 143 202 43 10 91 146 240 39 87 56 69 220 64 178 122 18 236 27 40 146 239 70 112 15 19 207 248 235 136 244 0 118 204 129 20 120 176 8 245 170 190 228 167 75 69 70 241)
  :der-encode
  #t
  :tests
  '(#(366
      "smallish r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 7 45 155 77 52 121 82 204 2 33 0 252 188 81 3 208 218 38 116 119 209 121 20 97 207 42 164 75 249 212 49 152 247 149 7 189 135 121 214 154 19 16 142)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 72 130 130 90 137 45 48 38 114 100 227 0 232 104 171 93 75 15 252 158 243 194 203 110 144 214 29 35 141 174 216 86 228 200 36 138 24 158 179 109 131 116 15 89 40 203 128 47 185 197 11 90 24 201 25 99 68 160 194 203 116 65 100 35)
  :der-encode
  #t
  :tests
  '(#(367
      "100-bit r and small s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 50 2 13 16 51 230 126 55 179 43 68 85 128 191 78 252 2 33 0 144 111 144 111 144 111 144 111 144 111 144 111 144 111 144 110 216 228 38 247 177 150 140 53 162 4 35 106 87 151 35 210)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 196 209 177 253 242 116 207 131 243 57 90 112 163 108 148 247 197 31 26 49 233 149 20 180 239 16 186 19 4 117 108 175 78 175 67 91 32 221 118 214 239 68 120 105 80 61 169 178 143 14 160 142 223 40 116 36 212 74 160 75 37 76 23 54)
  :der-encode
  #t
  :tests
  '(#(368
      "small r and 100 bit s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 2 1 1 2 32 120 50 102 233 15 67 218 254 92 217 179 176 190 134 222 34 249 222 131 103 125 15 80 113 58 70 142 199 47 207 93 87)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 51 118 223 115 118 213 230 81 212 91 142 194 229 255 157 137 28 111 221 109 187 181 43 4 110 107 90 196 201 250 206 223 118 207 39 249 252 182 84 3 177 245 133 162 218 254 38 180 62 189 98 43 172 205 230 153 216 28 155 233 141 249 244 223)
  :der-encode
  #t
  :tests
  '(#(369
      "100-bit r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 49 2 13 6 37 34 187 211 236 190 124 57 233 62 124 38 2 32 120 50 102 233 15 67 218 254 92 217 179 176 190 134 222 34 249 222 131 103 125 15 80 113 58 70 142 199 47 207 93 87)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 80 119 253 210 2 253 180 25 75 5 73 27 108 5 63 255 135 96 105 117 49 252 82 39 135 158 156 190 195 48 149 133 208 181 207 251 62 15 223 177 192 110 109 17 161 24 39 82 115 12 254 67 159 122 79 138 73 185 194 146 79 73 236 20)
  :der-encode
  #t
  :tests
  '(#(370
      "r and s^-1 are close to n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 64 193 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 192)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 27 31 119 59 71 45 172 94 26 223 148 230 157 134 91 64 77 44 201 44 255 123 182 108 242 25 121 120 246 196 93 8 169 114 87 145 197 243 55 135 151 122 157 223 166 146 150 190 153 138 150 140 81 236 127 28 84 71 121 59 197 98 134 179)
  :der-encode
  #t
  :tests
  '(#(371
      "s == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 193 2 1 1)
      #t
      ())
    #(372
      "s == 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 193 2 1 0)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 47 32 188 34 50 180 186 157 117 254 166 169 43 200 39 217 28 90 143 92 136 127 78 48 77 118 101 107 161 89 153 234 95 131 36 46 251 213 125 209 109 189 61 224 145 91 219 45 222 194 1 210 247 73 177 63 194 44 34 58 38 68 220 220)
  :der-encode
  #t
  :tests
  '(#(373
      "point at infinity during verify"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 93 87 110 115 87 164 80 29 223 233 47 70 104 27 32 160 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 192)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 158 0 156 208 161 167 208 197 23 101 22 156 70 142 98 229 111 196 243 255 2 232 102 108 85 72 52 25 162 86 0 50 205 54 215 19 172 213 4 89 143 243 180 245 128 70 164 105 15 85 11 214 14 244 200 35 197 197 129 198 184 153 49 94)
  :der-encode
  #t
  :tests
  '(#(374
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 93 87 110 115 87 164 80 29 223 233 47 70 104 27 32 160 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 93 87 110 115 87 164 80 29 223 233 47 70 104 27 32 160)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 175 88 166 236 200 37 75 155 131 26 224 68 28 19 153 8 2 195 214 140 48 29 67 99 76 113 241 151 76 9 231 4 217 32 97 45 130 243 47 202 67 108 92 80 151 80 82 113 73 72 117 64 39 49 208 61 186 148 43 53 83 6 199 131)
  :der-encode
  #t
  :tests
  '(#(375
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 93 87 110 115 87 164 80 29 223 233 47 70 104 27 32 160 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 93 87 110 115 87 164 80 29 223 233 47 70 104 27 32 161)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 74 114 23 202 188 149 180 150 243 244 225 45 84 233 222 247 101 27 134 107 230 157 54 149 205 119 173 46 58 63 19 209 208 250 113 191 33 210 192 11 31 244 204 118 181 58 156 92 42 138 139 107 76 46 200 139 153 238 83 122 198 38 43 61)
  :der-encode
  #t
  :tests
  '(#(376
      "u1 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 184 2 32 67 248 0 251 234 249 35 140 88 175 121 91 205 173 4 188 73 205 133 12 57 77 51 130 149 51 86 176 35 33 2 129)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 0 164 46 39 124 230 87 251 61 208 126 19 90 60 185 176 167 90 48 189 139 100 145 22 6 238 104 55 30 86 18 68 103 207 34 226 106 112 9 4 91 115 255 25 205 121 133 28 206 170 217 174 114 239 45 4 61 117 54 82 69 190 250 6)
  :der-encode
  #t
  :tests
  '(#(377
      "u1 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 184 2 33 0 188 7 255 4 21 6 220 115 167 80 134 164 50 82 251 66 112 225 87 218 117 251 108 185 42 159 7 220 173 21 62 192)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 133 32 185 80 47 154 94 215 83 240 154 82 130 202 215 33 245 235 251 61 180 20 45 102 124 98 121 134 158 118 188 241 103 142 155 189 4 165 20 96 175 196 10 62 12 183 176 248 184 173 216 155 41 121 117 138 90 31 254 180 88 78 228 158)
  :der-encode
  #t
  :tests
  '(#(378
      "u2 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 184 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 184)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 181 222 202 15 224 41 105 5 170 194 126 54 4 169 90 10 46 203 238 159 196 83 210 225 22 70 50 150 68 84 208 201 79 158 78 133 161 67 238 103 125 64 145 156 113 1 78 140 171 244 217 219 116 66 254 75 150 41 143 153 249 12 166 127)
  :der-encode
  #t
  :tests
  '(#(379
      "u2 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 184 2 33 0 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 169 209 201 232 153 202 48 106 210 127 225 148 93 224 36 43 137)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 93 203 39 103 220 133 30 32 145 30 215 190 57 221 135 186 129 199 166 209 2 85 223 184 37 242 65 72 111 152 174 16 248 169 239 115 107 62 17 215 213 74 14 8 105 2 251 71 114 70 236 140 87 222 101 211 54 87 11 101 246 94 13 131)
  :der-encode
  #t
  :tests
  '(#(380
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 107 253 85 169 78 83 11 217 114 229 40 115 239 57 172 62 86 212 32 166 77 135 70 148 199 1 231 20 81 29 22 150)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 200 225 68 200 83 167 225 166 245 187 171 231 239 145 239 91 21 33 19 33 13 68 253 88 211 203 97 133 24 78 22 138 172 64 251 54 24 136 33 147 252 109 17 55 96 228 118 70 93 244 144 103 72 10 10 124 255 230 134 81 91 51 145 168)
  :der-encode
  #t
  :tests
  '(#(381
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 180 148 189 103 194 9 165 173 177 201 160 147 55 226 98 155 3 248 169 36 190 83 197 66 71 142 88 100 237 38 34 173)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 127 254 24 90 35 235 91 115 103 4 56 126 99 87 98 138 101 152 73 133 119 59 68 115 207 158 245 96 179 250 80 81 71 64 203 18 23 241 173 43 89 16 215 247 73 6 96 43 31 149 80 179 209 28 255 112 91 53 140 59 203 247 44 61)
  :der-encode
  #t
  :tests
  '(#(382
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 170 212 226 182 154 159 55 141 174 120 115 180 15 124 21 203 69 101 252 200 203 192 236 85 176 189 63 233 216 98 107 44)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 138 133 130 38 21 94 52 219 183 229 218 199 241 49 39 200 28 108 232 201 216 145 145 140 103 200 115 141 126 75 70 233 108 19 134 232 76 97 35 18 222 83 233 228 175 52 217 189 87 249 61 154 6 184 85 182 224 176 106 212 19 127 245 124)
  :der-encode
  #t
  :tests
  '(#(383
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 115 254 196 153 94 157 49 64 188 7 255 4 21 6 220 115 19 233 83 137 251 89 157 34 242 64 57 57 42 64 20 211)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 174 192 190 114 155 2 242 102 197 66 209 57 163 224 65 16 201 51 232 236 161 0 142 141 186 56 215 94 127 143 171 83 44 214 136 217 36 180 86 132 139 213 198 81 68 76 103 169 57 159 223 181 181 185 105 49 98 193 114 139 250 220 16 70)
  :der-encode
  #t
  :tests
  '(#(384
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 236 73 149 233 211 20 11 192 127 240 65 80 109 199 58 115 220 37 244 37 122 145 30 49 14 56 116 75 72 42 90 1)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 1 237 75 95 148 31 68 59 49 167 226 88 62 161 101 85 29 24 21 181 71 64 222 177 46 159 222 255 50 226 48 97 132 56 92 164 72 204 93 215 17 57 189 163 171 66 208 182 228 77 113 158 82 255 246 77 151 24 118 239 169 16 159 178)
  :der-encode
  #t
  :tests
  '(#(385
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 216 147 43 211 166 40 23 128 255 224 130 160 219 142 116 232 253 157 11 100 69 217 156 38 92 158 138 9 192 30 114 193)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 89 196 39 203 101 37 234 181 17 160 110 3 224 12 242 170 180 171 197 135 194 96 21 52 51 138 80 188 37 112 26 112 62 78 179 136 180 83 203 174 165 148 214 181 193 74 81 154 195 253 167 112 197 53 128 190 239 198 143 9 32 13 85 255)
  :der-encode
  #t
  :tests
  '(#(386
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 94 157 49 64 188 7 255 4 21 6 220 115 167 80 134 163 186 23 111 6 194 182 227 115 99 226 206 28 20 31 60 39)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 4 172 187 205 35 207 46 200 25 253 41 122 178 203 84 7 237 230 49 149 24 101 26 57 30 148 28 200 0 53 104 51 18 6 221 0 223 35 188 140 224 184 90 1 140 75 52 233 195 180 27 78 245 156 113 73 47 166 45 19 71 114 249 126)
  :der-encode
  #t
  :tests
  '(#(387
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 253 109 199 26 113 241 213 13 27 189 151 106 244 53 123 228 221 47 232 80 112 124 67 31 211 118 229 61 23 108 107 98)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 204 172 188 98 111 214 234 49 23 88 21 207 249 88 202 22 55 50 56 119 211 189 240 152 150 181 39 191 78 37 94 133 113 248 162 126 99 9 189 155 155 21 215 141 82 112 1 42 210 237 21 167 255 254 2 79 192 236 166 63 182 172 47 141)
  :der-encode
  #t
  :tests
  '(#(388
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 126 231 90 210 165 128 28 84 114 46 183 217 91 166 127 235 207 195 153 185 86 183 182 130 254 137 99 141 227 105 11 241)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 204 195 11 101 202 211 221 29 121 59 109 184 15 87 178 225 35 121 115 228 38 76 61 155 188 37 81 236 104 160 183 190 117 255 109 31 79 83 90 19 26 165 115 246 226 214 145 44 57 113 84 147 55 80 65 125 40 228 101 36 57 37 146 222)
  :der-encode
  #t
  :tests
  '(#(389
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 245 51 119 111 17 196 126 208 167 181 226 90 206 122 59 146 24 102 115 60 116 84 178 198 120 184 148 61 251 76 242 50)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 204 147 73 172 160 203 208 178 223 13 238 205 136 237 57 230 216 199 195 215 180 34 253 93 146 67 27 175 114 37 252 192 237 73 75 230 152 214 243 133 11 226 119 194 104 121 36 0 243 150 2 92 250 149 207 86 1 139 203 194 67 229 18 235)
  :der-encode
  #t
  :tests
  '(#(390
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 232 219 255 238 1 128 125 117 249 170 82 194 149 225 91 21 241 56 67 158 122 25 90 64 112 155 26 191 81 29 188 106)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 0 14 124 48 210 242 89 247 193 63 25 67 32 228 57 5 208 234 215 39 126 40 62 137 24 67 124 16 249 208 82 176 43 57 182 109 187 162 177 207 93 172 27 65 210 222 198 241 251 8 189 209 77 66 13 112 57 134 246 58 237 235 92 71)
  :der-encode
  #t
  :tests
  '(#(391
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 202 1 85 43 88 214 122 19 70 141 107 198 8 99 41 223 143 68 204 147 136 132 252 241 92 81 107 2 167 167 181 246)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 143 162 152 192 10 201 63 124 54 137 44 82 153 0 90 15 104 67 249 207 6 105 253 187 125 109 129 224 52 24 3 237 76 171 51 204 40 33 178 218 132 159 144 239 32 220 30 184 150 252 103 22 20 64 179 197 44 11 30 136 98 126 80 140)
  :der-encode
  #t
  :tests
  '(#(392
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 148 2 170 86 177 172 244 38 141 26 215 140 16 198 83 192 99 218 188 64 97 193 89 166 248 208 119 120 127 25 42 171)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 111 191 96 138 131 227 126 194 107 55 218 3 62 6 152 22 104 11 119 11 167 102 251 140 68 252 224 3 150 5 98 241 4 95 38 140 204 94 9 73 33 63 127 47 31 165 124 254 173 4 98 94 195 204 252 156 51 53 150 228 135 178 5 111)
  :der-encode
  #t
  :tests
  '(#(393
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 94 3 255 130 10 131 110 57 211 168 67 82 25 41 125 161 56 112 171 237 58 253 182 92 149 79 131 238 86 138 159 96)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 196 221 84 122 215 80 23 65 121 186 200 184 206 39 72 28 88 184 19 71 119 98 32 161 181 42 218 19 214 92 129 36 249 194 239 59 91 73 87 207 105 211 161 57 137 22 130 54 60 4 6 16 242 0 244 195 24 229 154 166 143 41 138 240)
  :der-encode
  #t
  :tests
  '(#(394
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 85 106 113 91 77 79 155 198 215 60 57 218 7 190 10 229 162 178 254 100 101 224 118 42 216 94 159 244 236 49 53 150)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 0 5 93 121 251 38 40 107 182 40 154 121 131 162 178 59 245 195 12 195 215 3 99 181 89 173 245 84 138 249 145 248 202 232 177 176 172 227 47 215 74 134 238 26 103 28 195 108 5 42 71 150 234 227 35 190 50 224 44 233 160 251 98 39)
  :der-encode
  #t
  :tests
  '(#(395
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 213 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 124 116 147 68 116 219 21 125 42 140 63 8 138 206 214 42)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 13 181 28 116 211 78 65 186 186 103 193 58 96 175 64 78 232 45 143 27 3 134 176 150 150 238 30 110 161 50 123 134 65 56 134 196 98 63 194 34 166 149 12 60 58 9 243 253 134 122 86 107 253 52 94 6 176 158 198 197 194 228 161 146)
  :der-encode
  #t
  :tests
  '(#(396
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 193 119 124 136 83 147 142 83 98 19 192 36 100 169 54 0 11 161 226 28 15 198 32 117 212 108 98 78 35 181 47 49)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 188 47 123 199 76 179 188 126 121 123 6 204 62 100 155 243 64 125 26 85 180 234 173 221 40 211 220 250 255 44 55 55 162 59 179 100 225 106 199 147 152 192 19 206 41 162 46 118 44 13 96 103 170 239 218 149 132 116 170 209 148 169 46 138)
  :der-encode
  #t
  :tests
  '(#(397
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 48 187 183 148 219 88 131 99 180 6 121 246 193 130 165 13 60 233 103 154 205 211 255 190 54 215 129 61 172 189 200 24)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 215 237 199 198 69 239 255 106 248 130 26 234 91 127 150 159 86 239 110 97 88 98 176 143 186 62 175 1 17 192 111 103 228 127 208 218 97 104 42 220 196 5 243 41 20 139 241 195 91 137 203 94 197 169 237 13 152 164 16 226 97 166 180 26)
  :der-encode
  #t
  :tests
  '(#(398
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 44 55 253 153 86 34 196 251 127 255 255 255 255 255 255 255 199 206 231 69 17 12 180 90 181 88 237 124 144 193 90 47)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 107 253 122 208 27 93 207 176 77 228 100 8 61 60 167 239 80 84 80 97 17 223 146 239 2 255 118 144 217 166 236 147 6 196 105 254 76 90 30 4 241 20 225 147 180 187 25 125 226 200 227 80 137 3 126 90 32 39 91 207 103 217 191 115)
  :der-encode
  #t
  :tests
  '(#(399
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 127 217 149 98 44 79 183 255 255 255 255 255 255 255 255 255 93 136 63 250 181 179 38 82 204 220 170 41 15 204 185 125)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 138 144 118 201 35 2 29 92 94 248 88 148 23 110 187 92 58 116 171 167 91 57 68 201 111 23 222 188 33 115 186 153 229 96 29 17 91 240 141 55 174 17 92 77 24 107 194 17 39 187 251 33 208 98 155 222 39 161 110 158 215 33 183 64)
  :der-encode
  #t
  :tests
  '(#(400
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 255 179 42 196 88 159 111 255 255 255 255 255 255 255 255 254 187 16 127 245 107 102 76 165 153 185 84 82 31 153 114 250)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 15 236 106 133 224 119 239 66 64 185 140 98 171 59 147 226 206 188 173 10 233 97 127 123 4 113 80 77 177 244 90 101 36 90 95 208 173 122 109 133 65 37 237 118 212 120 127 119 204 25 131 236 168 198 186 140 1 149 35 160 136 196 208 243)
  :der-encode
  #t
  :tests
  '(#(401
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 86 34 196 251 127 255 255 255 255 255 255 255 255 255 255 255 146 138 143 28 122 199 190 193 128 139 159 97 192 30 195 39)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 211 171 148 216 112 79 181 23 116 220 195 131 138 217 112 48 113 224 133 29 233 178 214 202 116 204 215 155 133 85 129 145 78 73 121 182 127 55 116 25 229 169 212 240 48 18 183 231 86 86 85 111 35 117 109 77 190 225 69 131 76 130 121 239)
  :der-encode
  #t
  :tests
  '(#(402
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 68 16 65 4 16 65 4 16 65 4 16 65 4 16 65 3 184 120 83 253 59 125 63 142 23 81 37 180 56 47 37 237)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 73 225 60 212 76 139 131 80 165 234 202 33 129 191 150 219 18 11 118 139 222 136 0 243 121 244 62 145 152 51 60 117 3 10 217 251 75 11 35 59 220 16 202 13 196 194 19 75 24 182 145 228 108 113 81 227 87 58 162 182 40 145 230 157)
  :der-encode
  #t
  :tests
  '(#(403
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 39 57 206 115 156 231 57 206 115 156 231 57 206 115 156 231 5 86 2 152 209 242 240 141 196 25 172 39 58 91 84 217)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 69 116 253 148 173 3 130 133 136 203 11 194 212 52 132 46 224 147 239 230 57 1 92 193 7 209 234 55 16 242 17 45 23 134 214 239 29 65 28 189 26 245 181 238 136 69 153 62 115 143 182 69 25 180 50 157 4 190 33 247 144 42 28 29)
  :der-encode
  #t
  :tests
  '(#(404
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 183 119 119 119 119 119 119 119 119 119 119 119 119 119 119 118 136 230 161 254 128 138 151 163 72 103 18 34 255 22 184 99)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 238 130 77 129 135 104 241 63 160 235 144 142 57 110 161 197 107 17 119 76 230 157 1 229 99 170 54 187 65 214 55 28 153 2 145 206 42 188 85 187 102 130 213 2 174 1 41 231 197 126 20 110 150 212 71 87 218 170 31 148 201 62 11 23)
  :der-encode
  #t
  :tests
  '(#(405
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 100 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 6 221 58 25 184 213 251 135 82 53 150 60 89 59 210 211)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 72 37 238 70 178 210 21 100 114 106 50 169 34 245 227 242 218 96 152 247 128 225 241 92 107 241 100 6 105 196 31 231 41 44 6 106 36 240 244 80 194 96 63 24 55 33 8 152 248 232 15 163 132 170 240 119 235 92 126 135 198 178 105 118)
  :der-encode
  #t
  :tests
  '(#(406
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 149 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 124 116 147 68 116 219 21 125 42 140 63 8 138 206 214 44)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 65 52 142 122 193 142 177 244 133 40 1 70 123 176 160 227 98 9 50 26 138 244 180 16 253 6 240 112 168 31 93 230 3 181 89 79 26 90 121 210 48 137 228 158 62 55 159 42 108 177 79 146 48 28 105 153 229 16 184 200 220 55 251 75)
  :der-encode
  #t
  :tests
  '(#(407
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 42 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 62 58 73 162 58 109 138 190 149 70 31 132 69 103 107 23)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 117 60 116 229 163 110 26 75 97 190 119 135 32 44 152 224 88 65 254 162 176 57 43 106 182 158 226 232 167 71 226 182 24 151 29 161 200 88 37 193 216 20 24 134 17 93 39 203 42 221 134 84 94 105 113 187 131 90 47 69 44 222 30 82)
  :der-encode
  #t
  :tests
  '(#(408
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 191 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 67)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 73 192 37 71 36 87 107 9 73 130 124 228 98 64 217 12 180 7 92 209 151 138 65 100 149 164 85 240 106 137 85 4 223 125 100 195 88 83 53 59 212 217 5 218 106 219 136 242 110 98 165 242 11 60 214 56 42 223 44 90 66 216 80 83)
  :der-encode
  #t
  :tests
  '(#(409
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 24 93 219 202 109 172 65 177 218 3 60 251 96 193 82 134 158 116 179 205 102 233 255 223 27 107 192 158 214 94 228 12)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 176 94 152 232 78 44 25 116 60 29 207 78 13 223 11 177 243 40 84 3 61 230 63 207 62 96 95 187 46 217 76 177 135 29 116 21 213 246 197 124 132 6 120 247 225 161 193 227 35 81 154 70 71 251 63 111 82 171 180 100 123 155 109 112)
  :der-encode
  #t
  :tests
  '(#(410
      "point duplication during verification"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 50 176 209 13 141 14 4 188 141 77 6 77 39 6 153 232 124 255 201 180 156 92 32 115 14 28 38 246 16 93 220 218 2 32 111 216 72 48 110 150 142 58 193 246 228 67 87 124 71 163 194 11 240 208 26 93 195 156 120 194 198 157 104 24 80 244)
      #t
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 176 94 152 232 78 44 25 116 60 29 207 78 13 223 11 177 243 40 84 3 61 230 63 207 62 96 95 187 46 217 76 177 120 226 139 234 42 9 58 131 123 249 135 8 30 94 62 28 220 174 101 185 184 4 192 144 173 84 75 154 132 100 142 191)
  :der-encode
  #t
  :tests
  '(#(411
      "duplication bug"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 50 176 209 13 141 14 4 188 141 77 6 77 39 6 153 232 124 255 201 180 156 92 32 115 14 28 38 246 16 93 220 218 2 32 111 216 72 48 110 150 142 58 193 246 228 67 87 124 71 163 194 11 240 208 26 93 195 156 120 194 198 157 104 24 80 244)
      #f
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 164 159 158 188 8 44 6 77 97 192 234 181 248 191 35 32 123 6 227 166 137 223 196 250 40 150 237 17 77 26 136 171 85 120 58 107 175 148 1 151 125 17 124 203 116 140 13 92 36 165 211 189 33 51 214 44 116 222 43 231 204 125 157 64)
  :der-encode
  #t
  :tests
  '(#(412
      "comparison with point at infinity "
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 192 2 32 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 50 242 34 248 250 239 219 83 63 38 93 70 28 41 164 115 115)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 249 86 122 67 27 113 99 136 66 133 16 57 59 55 254 239 211 175 207 198 220 56 129 246 35 192 160 153 94 70 30 195 251 162 249 16 206 209 159 142 120 155 21 131 144 162 149 230 54 197 136 198 34 213 79 143 239 251 210 133 46 41 17 169)
  :der-encode
  #t
  :tests
  '(#(413
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 198 4 127 148 65 237 125 109 48 69 64 110 149 192 124 216 92 119 142 75 140 239 60 167 171 172 9 185 92 112 158 229 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 192)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 38 9 94 249 59 16 191 80 254 40 63 76 153 19 111 184 31 162 151 129 79 9 151 126 142 56 163 191 184 55 246 27 175 141 124 252 70 193 146 134 36 242 1 237 20 167 7 1 188 85 49 191 244 226 229 120 213 201 45 171 221 188 117 128)
  :der-encode
  #t
  :tests
  '(#(414
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 198 4 127 148 65 237 125 109 48 69 64 110 149 192 124 216 92 119 142 75 140 239 60 167 171 172 9 185 92 112 158 229 2 33 0 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 181 243 15 48 18 125 51 224 42 173 150 67 137 39 2 46 156)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 122 75 88 238 118 212 97 161 195 205 230 132 0 160 187 238 171 52 110 230 147 21 190 214 63 23 0 198 108 245 230 204 166 66 174 64 120 187 107 187 183 96 40 151 120 130 233 200 55 79 38 122 44 237 19 16 41 174 137 86 12 226 152 37)
  :der-encode
  #t
  :tests
  '(#(415
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 198 4 127 148 65 237 125 109 48 69 64 110 149 192 124 216 92 119 142 75 140 239 60 167 171 172 9 185 92 112 158 229 2 33 0 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 152 214 104 234 240 207 145 249 189 115 23 210 84 124 237 90 90)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 242 161 17 235 36 201 210 128 217 166 110 79 241 134 129 210 34 221 106 24 40 235 196 82 143 43 235 227 226 82 40 161 160 105 155 206 197 7 253 14 200 61 165 65 165 166 20 62 46 104 228 175 114 252 220 200 162 174 162 177 116 120 204 138)
  :der-encode
  #t
  :tests
  '(#(416
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 198 4 127 148 65 237 125 109 48 69 64 110 149 192 124 216 92 119 142 75 140 239 60 167 171 172 9 185 92 112 158 229 2 32 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 101 228 69 241 245 223 182 166 126 76 186 140 56 83 72 230 231)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 229 0 84 179 228 164 209 254 249 136 229 165 232 48 21 90 188 41 63 234 53 152 175 76 93 218 161 10 205 17 18 116 235 113 13 24 52 86 140 179 121 161 209 243 214 145 168 192 220 25 249 1 254 50 37 194 182 105 29 245 239 83 51 254)
  :der-encode
  #t
  :tests
  '(#(417
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 198 4 127 148 65 237 125 109 48 69 64 110 149 192 124 216 92 119 142 75 140 239 60 167 171 172 9 185 92 112 158 229 2 32 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 72 199 159 172 212 50 20 192 17 18 60 27 3 169 52 18 165)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 237 193 124 212 202 111 153 136 253 165 175 64 66 227 249 235 66 208 247 182 161 192 21 110 26 42 245 102 183 129 3 84 138 93 53 119 119 179 6 233 100 5 241 46 38 23 193 178 158 141 87 78 95 109 102 209 188 143 247 234 124 75 104 60)
  :der-encode
  #t
  :tests
  '(#(418
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 198 4 127 148 65 237 125 109 48 69 64 110 149 192 124 216 92 119 142 75 140 239 60 167 171 172 9 185 92 112 158 229 2 32 14 177 14 90 185 95 47 39 83 72 216 42 210 228 215 148 156 129 147 128 13 140 156 117 223 88 227 67 240 235 186 123)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 109 38 124 16 210 49 91 66 219 175 52 201 124 60 13 51 31 171 172 175 96 33 223 77 200 91 62 158 99 220 7 152 237 21 75 17 250 58 94 217 82 193 77 138 45 210 66 222 43 108 206 60 34 223 66 205 151 222 48 5 74 25 85 94)
  :der-encode
  #t
  :tests
  '(#(419
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 192)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 194 75 247 169 132 201 110 206 16 7 122 157 239 56 203 208 216 152 171 213 85 241 102 142 6 194 124 171 192 15 111 103 159 105 178 56 225 249 94 153 229 181 88 224 3 98 115 235 214 195 109 18 180 81 83 72 184 90 33 246 40 63 80 22)
  :der-encode
  #t
  :tests
  '(#(420
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 2 33 0 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 181 243 15 48 18 125 51 224 42 173 150 67 137 39 2 46 156)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 28 210 109 102 136 7 200 21 237 63 83 44 29 184 26 196 115 251 54 143 15 126 241 175 242 89 46 166 250 108 70 36 162 41 185 171 87 70 207 188 71 40 12 1 154 66 72 84 83 84 202 32 136 15 244 28 172 46 37 43 201 180 151 4)
  :der-encode
  #t
  :tests
  '(#(421
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 2 33 0 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 152 214 104 234 240 207 145 249 189 115 23 210 84 124 237 90 90)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 252 120 7 119 163 40 154 246 99 250 2 177 194 98 168 55 59 132 97 78 101 156 26 180 105 66 241 224 88 146 111 248 33 150 198 188 174 11 39 152 41 141 70 59 229 200 121 36 52 61 127 16 58 39 19 30 12 127 77 96 210 181 218 140)
  :der-encode
  #t
  :tests
  '(#(422
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 2 32 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 101 228 69 241 245 223 182 166 126 76 186 140 56 83 72 230 231)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 94 37 226 238 138 245 239 138 62 9 8 52 31 152 132 80 31 181 138 47 210 52 177 219 111 34 213 97 2 85 36 244 73 29 151 167 121 60 157 154 31 53 187 53 241 33 33 185 219 224 117 216 80 28 189 77 182 105 126 62 10 217 139 192)
  :der-encode
  #t
  :tests
  '(#(423
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 2 32 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 72 199 159 172 212 50 20 192 17 18 60 27 3 169 52 18 165)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 61 223 41 32 96 125 245 150 218 144 18 62 165 103 73 88 5 76 142 215 117 134 97 184 19 241 170 48 241 151 120 176 112 114 67 225 167 188 194 100 181 66 137 131 46 149 12 39 86 56 86 36 27 121 194 67 208 252 84 247 173 36 188 37)
  :der-encode
  #t
  :tests
  '(#(424
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 2 32 14 177 14 90 185 95 47 39 83 72 216 42 210 228 215 148 156 129 147 128 13 140 156 117 223 88 227 67 240 235 186 123)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 72 58 218 119 38 163 196 101 93 164 251 252 14 17 8 168 253 23 180 72 166 133 84 25 156 71 208 143 251 16 212 184)
  :der-encode
  #t
  :tests
  '(#(425
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 67 248 0 251 234 249 35 140 88 175 121 91 205 173 4 188 73 205 133 12 57 77 51 130 149 51 86 176 35 33 2 129 2 32 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 99 207 214 106 25 10 96 8 137 30 13 129 212 154 9 82)
      #f
      ())
    #(426
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 188 7 255 4 21 6 220 115 167 80 134 164 50 82 251 66 112 225 87 218 117 251 108 185 42 159 7 220 173 21 62 192 2 32 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 99 207 214 106 25 10 96 8 137 30 13 129 212 154 9 82)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 183 197 37 136 217 92 59 154 162 91 4 3 241 238 247 87 2 232 75 183 89 122 171 230 99 184 47 111 4 239 39 119)
  :der-encode
  #t
  :tests
  '(#(427
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 67 248 0 251 234 249 35 140 88 175 121 91 205 173 4 188 73 205 133 12 57 77 51 130 149 51 86 176 35 33 2 129 2 32 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 99 207 214 106 25 10 96 8 137 30 13 129 212 154 9 82)
      #f
      ())
    #(428
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 188 7 255 4 21 6 220 115 167 80 134 164 50 82 251 66 112 225 87 218 117 251 108 185 42 159 7 220 173 21 62 192 2 32 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 99 207 214 106 25 10 96 8 137 30 13 129 212 154 9 82)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 120 44 142 209 126 59 42 120 59 84 100 243 59 9 101 42 113 198 120 224 94 197 30 132 226 188 252 102 58 61 233 99 175 154 203 66 128 184 199 247 196 47 78 249 171 166 36 94 193 236 23 18 253 56 160 250 150 65 141 140 214 170 97 82)
  :der-encode
  #t
  :tests
  '(#(429
      "pseudorandom signature"
      #vu8()
      #vu8(48 69 2 32 102 50 71 60 144 148 37 182 250 55 9 83 152 226 83 141 170 184 85 36 64 50 15 159 225 144 219 168 246 114 121 107 2 33 0 168 195 170 204 233 255 228 188 23 192 83 7 56 241 56 111 157 149 121 240 41 255 58 119 145 177 110 152 66 34 101 227)
      #t
      ())
    #(430
      "pseudorandom signature"
      #vu8(77 115 103)
      #vu8(48 67 2 32 70 91 15 176 92 20 205 77 222 242 62 19 172 190 95 35 55 196 94 163 129 101 54 103 12 250 127 42 185 9 6 25 2 31 94 82 94 131 124 64 108 248 148 67 131 226 11 206 227 33 18 216 218 91 66 180 15 136 65 80 152 247 34 170 137)
      #t
      ())
    #(431
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 123 21 83 228 214 80 199 31 212 154 163 108 238 213 111 4 56 176 6 94 27 35 68 69 19 75 247 200 50 49 202 157 2 33 0 227 105 162 15 166 67 75 209 56 176 146 136 90 137 229 58 63 11 107 220 197 210 101 62 19 108 84 7 0 129 220 90)
      #t
      ())
    #(432
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(48 69 2 33 0 199 186 28 115 189 196 54 79 108 124 97 171 31 236 192 84 127 141 111 203 235 37 31 115 73 100 64 117 54 53 63 50 2 32 123 58 111 178 254 96 248 134 30 158 9 85 102 63 87 3 161 127 94 204 58 91 81 64 235 135 234 243 90 58 80 144)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 110 130 53 85 69 41 20 9 145 130 198 178 193 214 240 181 210 141 80 204 208 5 175 44 225 187 165 65 170 64 202 255 0 0 0 1 6 4 146 213 165 103 62 15 37 216 213 15 183 229 140 73 216 109 70 212 33 105 85 224 170 61 64 225)
  :der-encode
  #t
  :tests
  '(#(433
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 43 156 159 133 89 111 237 112 139 58 248 3 147 178 126 223 208 181 174 47 0 116 39 10 86 54 47 95 159 98 180 225 2 32 47 174 131 117 3 186 44 29 76 148 94 9 19 148 158 240 148 206 11 128 134 53 155 187 93 186 74 18 112 124 86 0)
      #t
      ())
    #(434
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 92 215 101 32 144 33 216 193 168 174 244 255 97 214 250 110 121 147 191 159 234 11 147 96 158 234 19 13 229 54 252 204 2 32 79 16 199 152 149 135 254 48 25 227 109 133 170 2 75 242 13 182 115 124 79 40 144 12 28 150 98 242 120 33 67 224)
      #t
      ())
    #(435
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 32 76 26 89 177 229 120 215 111 21 149 225 59 85 112 87 85 159 38 171 85 158 193 223 63 69 236 152 185 15 165 38 206 2 33 0 198 135 47 9 75 219 63 130 227 31 147 173 101 53 126 45 170 254 102 243 4 175 25 112 137 239 13 201 79 249 6 36)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 110 130 53 85 69 41 20 9 145 130 198 178 193 214 240 181 210 141 80 204 208 5 175 44 225 187 165 65 170 64 202 255 255 255 255 254 249 251 109 42 90 152 193 240 218 39 42 240 72 26 115 182 39 146 185 43 222 150 170 30 85 194 187 78)
  :der-encode
  #t
  :tests
  '(#(436
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 163 93 20 0 212 204 122 143 97 123 114 31 174 231 17 138 116 16 60 70 48 222 197 170 71 224 151 149 29 175 193 167 2 33 0 149 130 33 2 48 36 233 126 246 223 53 162 46 130 12 123 197 225 98 153 243 241 46 157 155 27 114 124 70 215 149 230)
      #t
      ())
    #(437
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 127 183 51 237 115 199 47 196 244 207 6 94 55 12 115 3 1 49 111 244 233 198 168 167 1 23 15 96 76 45 112 183 2 32 124 169 202 152 93 61 244 137 120 179 162 249 192 187 138 88 178 22 199 149 230 135 247 70 35 163 50 20 72 191 167 60)
      #t
      ())
    #(438
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 33 0 149 174 77 242 251 168 82 78 17 81 203 154 156 92 30 193 53 122 102 55 34 161 131 41 48 61 134 165 142 112 71 84 2 32 89 30 166 68 177 220 111 76 124 213 215 217 57 57 127 132 217 224 119 16 7 96 240 129 106 229 178 42 230 167 66 3)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 0 0 0 1 63 210 34 72 214 77 149 247 60 41 180 138 180 134 49 133 11 229 3 253 0 248 70 139 95 15 112 224 246 238 122 164 59 194 198 253 37 177 216 38 146 65 203 221 157 187 13 172 150 220 150 35 31 67 7 5 248 56 113 125)
  :der-encode
  #t
  :tests
  '(#(439
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 113 121 37 240 221 92 244 94 116 110 135 247 156 158 169 125 17 235 1 68 64 82 194 112 174 204 239 86 194 233 88 40 2 32 120 87 135 182 100 19 112 128 56 61 47 197 0 69 159 167 19 37 130 5 253 174 151 179 36 15 182 75 182 56 166 87)
      #t
      ())
    #(440
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 138 223 222 174 59 88 99 21 208 97 131 97 13 39 31 196 35 204 120 153 8 184 245 220 86 50 83 163 199 130 81 10 2 33 0 129 55 190 219 180 230 13 162 96 65 179 81 247 42 107 195 183 116 31 116 87 67 240 115 59 64 183 252 86 254 189 4)
      #t
      ())
    #(441
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 33 0 146 222 209 78 25 185 77 23 199 155 6 58 3 75 18 44 227 185 58 37 2 242 242 35 250 211 70 26 191 99 22 50 2 32 82 255 138 209 75 163 101 114 66 226 148 64 208 28 171 54 235 182 3 62 227 96 33 220 141 155 56 240 128 138 144 188)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 37 175 214 137 172 171 174 214 124 31 41 109 229 148 6 248 197 80 245 113 70 160 180 236 44 151 135 109 255 255 255 255 250 70 167 110 82 3 34 223 188 73 30 196 240 204 25 116 32 252 78 165 136 61 143 109 213 60 53 75 196 246 124 53)
  :der-encode
  #t
  :tests
  '(#(442
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 212 131 115 72 62 15 162 241 28 253 250 234 111 29 229 158 104 97 233 232 124 79 100 70 96 43 160 18 90 183 222 70 2 33 0 157 117 59 186 58 123 224 138 171 69 110 147 166 80 13 71 129 121 94 213 154 248 189 109 97 51 18 154 190 241 173 152)
      #t
      ())
    #(443
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 241 20 115 17 123 102 229 216 74 46 205 15 139 126 196 162 204 42 238 137 174 2 32 32 35 87 119 48 81 66 244 152 2 33 0 254 92 228 60 237 40 243 246 159 101 232 16 103 138 254 253 43 222 239 176 81 40 10 210 136 1 87 253 162 139 42 177)
      #t
      ())
    #(444
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 32 60 159 91 221 231 49 11 86 150 201 60 134 32 63 201 126 17 167 7 57 226 12 113 201 231 34 48 141 69 165 158 108 2 33 0 192 158 251 154 4 90 71 204 231 153 183 104 137 11 177 120 51 160 33 13 134 154 54 190 29 163 63 37 133 71 124 50)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 209 46 108 102 182 119 52 195 200 77 38 1 207 93 53 220 9 126 39 99 127 10 202 74 79 219 116 182 170 221 59 185 63 91 223 248 139 213 115 109 248 152 230 153 0 110 215 80 241 28 240 124 88 102 205 122 215 12 113 33 255 255 255 255)
  :der-encode
  #t
  :tests
  '(#(445
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 105 83 68 44 72 127 36 4 135 210 175 129 249 130 92 137 75 31 194 83 67 33 250 1 45 184 36 139 226 10 75 6 2 32 86 146 115 149 214 76 228 214 144 202 169 137 68 194 221 235 195 18 245 127 67 157 55 35 110 166 60 193 222 9 135 24)
      #t
      ())
    #(446
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 251 57 170 95 54 206 202 110 104 209 147 46 129 21 152 196 18 137 39 52 218 222 56 159 217 232 186 148 197 199 162 81 2 33 0 253 221 240 195 219 102 199 196 102 8 172 152 67 31 14 232 235 177 226 123 165 1 147 119 137 235 205 15 122 194 110 204)
      #t
      ())
    #(447
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 68 254 246 1 118 56 253 91 218 23 223 206 52 107 3 17 181 227 105 191 182 138 168 93 94 151 7 134 184 230 100 75 2 32 114 11 58 82 254 68 190 96 40 117 159 15 26 111 215 2 15 246 121 44 212 236 233 141 255 208 217 125 59 114 96 145)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 109 74 127 96 212 119 74 79 10 168 187 222 219 149 60 126 234 121 9 64 126 49 100 117 86 100 188 40 0 0 0 0 230 89 211 78 77 243 141 158 140 158 170 223 186 54 97 44 118 145 149 190 134 199 122 172 63 54 231 139 83 134 128 251)
  :der-encode
  #t
  :tests
  '(#(448
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 67 2 32 48 75 171 196 19 70 230 32 92 240 62 45 11 38 228 178 34 220 232 34 116 2 208 1 186 35 62 250 105 201 18 52 2 31 101 173 211 39 159 81 178 65 127 176 161 59 15 6 64 65 153 202 172 52 48 56 85 19 238 73 246 125 142 140 223)
      #t
      ())
    #(449
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 35 134 135 0 183 31 186 252 170 115 150 15 175 146 46 224 69 142 246 158 1 251 6 11 47 154 128 217 146 254 17 76 2 32 110 193 82 107 213 111 110 235 241 4 99 189 146 16 214 37 16 185 81 102 54 94 16 167 183 171 252 77 88 76 163 56)
      #t
      ())
    #(450
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 221 96 215 207 131 160 130 8 99 114 18 182 93 7 159 182 88 216 239 27 132 56 217 197 143 65 34 176 205 20 172 73 2 33 0 241 215 98 81 111 77 108 62 106 152 221 49 220 56 105 220 124 243 89 68 243 59 53 198 161 127 230 50 210 177 140 213)
      #t
      ())))
