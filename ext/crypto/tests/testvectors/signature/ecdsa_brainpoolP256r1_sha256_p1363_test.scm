(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 1 154 45 150 55 116 58 99 221 174 253 188 160 238 34 154 22 59 128 155 155 20 94 83 19 187 235 141 239 234 185 214 84 140 175 137 191 91 164 148 153 64 65 69 101 18 52 51 100 1 185 178 132 58 87 158 209 82 224 144 241 27 158 89)
  :der-encode
  #f
  :tests
  '(#(1
      "signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(10 95 140 112 186 45 8 66 213 208 248 65 241 96 173 21 25 87 105 168 21 155 254 105 38 52 215 61 70 157 17 31 66 110 133 122 173 63 247 170 150 228 210 0 192 59 69 241 132 106 54 208 137 238 57 23 118 140 161 160 214 212 218 110)
      #t
      ())
    #(2
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(180 90 228 76 92 27 177 255 20 55 2 210 142 228 58 134 165 144 228 75 202 253 165 96 182 82 229 191 221 229 103 198 103 140 210 96 244 174 178 17 167 129 56 143 221 72 71 128 7 207 67 211 43 115 109 224 25 145 108 225 192 115 124 57)
      #f
      ())
    #(3
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(159 155 203 106 231 193 161 121 104 149 18 78 172 34 224 92 114 226 16 251 159 197 168 142 105 233 55 69 80 171 69 136 103 140 210 96 244 174 178 17 167 129 56 143 221 72 71 128 7 207 67 211 43 115 109 224 25 145 108 225 192 115 124 57)
      #f
      ())
    #(4
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(1 10 95 140 112 186 45 8 66 213 208 248 65 241 96 173 21 25 87 105 168 21 155 254 105 38 52 215 61 70 157 17 31 0 103 140 210 96 244 174 178 17 167 129 56 143 221 72 71 128 7 207 67 211 43 115 109 224 25 145 108 225 192 115 124 57)
      #f
      ())
    #(5
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(245 160 115 143 69 210 247 189 42 47 7 190 14 159 82 234 230 168 150 87 234 100 1 150 217 203 40 194 185 98 238 225 103 140 210 96 244 174 178 17 167 129 56 143 221 72 71 128 7 207 67 211 43 115 109 224 25 145 108 225 192 115 124 57)
      #f
      ())
    #(6
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(0 10 95 140 112 186 45 8 66 213 208 248 65 241 96 173 21 25 87 105 168 21 155 254 105 38 52 215 61 70 157 17 31 1 17 136 42 60 150 157 91 205 229 231 67 32 122 203 212 241 148 8 190 118 224 213 20 215 169 175 123 100 87 187 210 224)
      #f
      ())
    #(7
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(0 10 95 140 112 186 45 8 66 213 208 248 65 241 96 173 21 25 87 105 168 21 155 254 105 38 52 215 61 70 157 17 31 1 103 140 210 96 244 174 178 17 167 129 56 143 221 72 71 128 7 207 67 211 43 115 109 224 25 145 108 225 192 115 124 57)
      #f
      ())
    #(8
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(10 95 140 112 186 45 8 66 213 208 248 65 241 96 173 21 25 87 105 168 21 155 254 105 38 52 215 61 70 157 17 31 152 115 45 159 11 81 77 238 88 126 199 112 34 183 184 127 248 48 188 44 212 140 146 31 230 110 147 30 63 140 131 199)
      #f
      ())
    #(9
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(10
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(11
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 167)
      #f
      ("EdgeCase"))
    #(12
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 166)
      #f
      ("EdgeCase"))
    #(13
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 168)
      #f
      ("EdgeCase"))
    #(14
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 119)
      #f
      ("EdgeCase"))
    #(15
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 120)
      #f
      ("EdgeCase"))
    #(16
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(17
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(18
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 167)
      #f
      ("EdgeCase"))
    #(19
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 166)
      #f
      ("EdgeCase"))
    #(20
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 168)
      #f
      ("EdgeCase"))
    #(21
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 119)
      #f
      ("EdgeCase"))
    #(22
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 120)
      #f
      ("EdgeCase"))
    #(23
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 167 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(24
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 167 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(25
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 167 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 167)
      #f
      ("EdgeCase"))
    #(26
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 167 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 166)
      #f
      ("EdgeCase"))
    #(27
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 167 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 168)
      #f
      ("EdgeCase"))
    #(28
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 167 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 119)
      #f
      ("EdgeCase"))
    #(29
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 167 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 120)
      #f
      ("EdgeCase"))
    #(30
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 166 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(31
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 166 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(32
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 166 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 167)
      #f
      ("EdgeCase"))
    #(33
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 166 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 166)
      #f
      ("EdgeCase"))
    #(34
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 166 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 168)
      #f
      ("EdgeCase"))
    #(35
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 166 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 119)
      #f
      ("EdgeCase"))
    #(36
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 166 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 120)
      #f
      ("EdgeCase"))
    #(37
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 168 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(38
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 168 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(39
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 168 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 167)
      #f
      ("EdgeCase"))
    #(40
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 168 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 166)
      #f
      ("EdgeCase"))
    #(41
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 168 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 168)
      #f
      ("EdgeCase"))
    #(42
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 168 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 119)
      #f
      ("EdgeCase"))
    #(43
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 168 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 120)
      #f
      ("EdgeCase"))
    #(44
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 119 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(45
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 119 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(46
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 119 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 167)
      #f
      ("EdgeCase"))
    #(47
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 119 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 166)
      #f
      ("EdgeCase"))
    #(48
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 119 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 168)
      #f
      ("EdgeCase"))
    #(49
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 119 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 119)
      #f
      ("EdgeCase"))
    #(50
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 119 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 120)
      #f
      ("EdgeCase"))
    #(51
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 120 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(52
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 120 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(53
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 120 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 167)
      #f
      ("EdgeCase"))
    #(54
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 120 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 166)
      #f
      ("EdgeCase"))
    #(55
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 120 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 168)
      #f
      ("EdgeCase"))
    #(56
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 120 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 119)
      #f
      ("EdgeCase"))
    #(57
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 120 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 120)
      #f
      ("EdgeCase"))
    #(58
      "Edge case for Shamir multiplication"
      #vu8(54 56 57 52 52)
      #vu8(12 147 154 146 72 108 109 13 97 149 16 180 169 65 98 185 34 27 226 235 21 250 248 120 191 247 94 108 223 78 55 7 57 119 97 155 67 230 180 234 24 112 216 97 32 100 131 179 6 86 14 60 74 62 248 43 17 168 2 255 136 146 220 29)
      #t
      ())
    #(59
      "special case hash"
      #vu8(52 50 54 52 55 57 55 50 52)
      #vu8(85 131 221 72 9 100 189 35 50 136 95 187 80 183 71 94 189 66 131 153 231 22 111 217 189 82 150 17 83 75 159 52 14 208 53 160 44 75 102 92 172 183 13 232 232 34 250 205 113 100 90 21 249 63 238 102 19 36 248 80 184 71 181 29)
      #t
      ())
    #(60
      "special case hash"
      #vu8(55 49 51 56 54 56 52 56 57 49)
      #vu8(48 14 38 2 124 231 211 242 28 133 113 220 105 11 27 185 144 232 252 73 173 62 149 55 75 213 67 178 226 43 173 198 34 188 143 36 69 205 73 86 188 13 181 83 150 106 7 24 174 181 234 214 91 198 109 219 33 254 160 229 113 168 126 225)
      #t
      ())
    #(61
      "special case hash"
      #vu8(49 48 51 53 57 51 51 49 54 54 56)
      #vu8(41 7 203 1 168 42 136 4 102 64 165 35 249 185 133 77 149 183 236 45 221 103 194 7 35 208 88 41 232 67 138 119 56 202 8 229 134 35 86 15 114 74 62 63 155 160 233 236 121 116 151 109 211 78 105 64 192 254 97 104 213 64 227 155)
      #t
      ())
    #(62
      "special case hash"
      #vu8(51 57 52 57 52 48 49 50 49 53)
      #vu8(12 53 132 15 123 115 25 241 159 215 47 41 254 164 207 147 122 186 44 63 225 220 1 174 198 60 33 9 76 93 53 72 123 246 153 134 140 43 105 69 71 174 190 155 152 192 28 94 251 233 130 168 65 80 57 8 148 86 61 78 44 178 64 182)
      #t
      ())
    #(63
      "special case hash"
      #vu8(49 51 52 52 50 57 51 48 55 57)
      #vu8(66 114 255 32 184 195 209 158 140 132 20 31 190 77 22 129 250 113 181 31 108 16 54 13 183 175 250 201 137 39 77 35 103 114 255 118 142 230 163 237 175 13 189 215 181 198 150 44 42 204 140 177 78 99 71 99 30 37 148 1 137 114 148 104)
      #t
      ())
    #(64
      "special case hash"
      #vu8(51 55 48 54 50 49 49 55 49 50)
      #vu8(10 30 7 44 72 166 42 88 59 249 79 230 56 9 233 95 50 2 23 107 250 109 40 222 143 117 164 163 37 108 162 31 149 20 166 229 178 53 194 145 82 86 28 201 73 44 244 116 119 160 254 35 245 96 64 215 32 107 251 78 179 225 135 152)
      #t
      ())
    #(65
      "special case hash"
      #vu8(51 52 51 54 56 56 55 49 50)
      #vu8(2 188 189 56 163 227 17 52 69 173 46 228 47 174 174 233 254 208 2 119 224 177 85 33 50 159 76 39 201 99 175 1 6 207 57 157 235 31 111 214 146 7 93 35 98 114 185 156 51 54 174 162 207 172 52 217 4 100 108 193 218 245 77 230)
      #t
      ())
    #(66
      "special case hash"
      #vu8(49 51 53 49 53 51 48 51 55 48)
      #vu8(98 243 166 169 201 244 87 33 27 70 177 202 58 120 47 17 244 76 185 54 11 179 7 2 230 113 54 3 108 203 163 158 34 240 46 95 100 124 235 61 12 73 242 231 172 155 187 49 183 227 174 41 165 237 103 12 150 202 214 208 244 93 243 137)
      #t
      ())
    #(67
      "special case hash"
      #vu8(54 53 53 51 50 48 51 49 50 54)
      #vu8(35 214 121 174 217 6 107 97 24 32 168 224 43 61 170 146 43 16 213 89 108 140 235 123 212 228 252 214 229 225 220 167 150 38 225 210 32 93 96 227 155 99 56 82 246 35 240 248 179 94 68 121 126 8 198 250 209 150 195 59 230 155 90 199)
      #t
      ())
    #(68
      "special case hash"
      #vu8(49 53 54 52 51 52 54 54 48 51)
      #vu8(14 76 92 7 127 20 164 219 25 118 84 248 8 31 16 172 34 41 230 242 8 68 5 174 165 37 103 158 89 37 57 169 19 85 212 54 103 64 43 159 1 149 145 64 196 20 241 141 144 142 37 89 229 122 223 53 206 121 77 188 142 34 32 6)
      #t
      ())
    #(69
      "special case hash"
      #vu8(52 52 50 57 53 51 57 49 49 55)
      #vu8(50 70 179 57 84 207 29 212 162 22 33 141 73 177 78 57 219 130 0 75 160 85 111 181 145 53 122 255 118 161 234 99 91 95 203 114 110 191 24 201 21 26 38 165 176 128 12 191 149 181 237 192 132 180 45 198 220 127 187 154 10 237 132 37)
      #t
      ())
    #(70
      "special case hash"
      #vu8(49 48 57 53 51 50 54 49 51 53 49)
      #vu8(54 26 141 239 135 64 87 199 21 66 56 67 189 123 240 119 91 166 54 111 164 140 168 62 28 220 226 6 191 148 194 191 54 94 151 73 61 51 130 104 31 29 148 101 126 152 136 36 92 155 7 98 238 127 76 160 46 115 138 253 187 162 116 214)
      #t
      ())
    #(71
      "special case hash"
      #vu8(53 57 56 55 51 53 48 48 52 49)
      #vu8(44 95 81 188 145 150 159 213 184 4 231 81 50 63 200 2 148 176 181 177 226 14 25 94 201 189 198 167 128 109 161 63 76 36 108 148 155 206 67 211 3 32 31 160 217 137 231 6 116 118 101 85 232 211 169 156 38 186 187 101 141 31 125 184)
      #t
      ())
    #(72
      "special case hash"
      #vu8(51 52 54 51 48 48 54 56 55 56)
      #vu8(169 227 241 232 49 8 190 120 102 141 75 172 127 251 41 24 211 129 0 186 1 243 125 229 185 35 238 202 7 204 5 227 63 13 129 188 192 136 2 164 53 89 151 89 245 28 137 248 22 116 39 16 136 91 65 55 117 129 48 232 172 247 7 212)
      #t
      ())
    #(73
      "special case hash"
      #vu8(57 56 49 55 51 50 48 50 56 55)
      #vu8(149 158 152 17 187 24 180 134 95 222 109 95 156 36 109 103 228 141 122 92 124 228 109 122 251 111 94 192 178 109 80 96 0 145 160 151 97 143 37 23 173 109 207 73 188 194 8 233 76 184 26 248 127 101 183 136 5 128 249 152 88 169 169 21)
      #t
      ())
    #(74
      "special case hash"
      #vu8(51 50 50 50 48 52 49 48 52 54)
      #vu8(79 146 49 177 203 174 161 131 237 157 133 145 174 62 159 4 57 32 30 16 103 255 0 83 90 65 83 150 183 120 17 214 152 81 199 153 163 17 171 174 250 8 196 18 246 246 121 160 0 166 237 170 0 93 5 245 80 166 47 249 166 161 165 7)
      #t
      ())
    #(75
      "special case hash"
      #vu8(54 54 54 54 51 48 55 49 48 52)
      #vu8(84 121 172 183 108 56 212 127 33 148 8 85 241 128 9 120 165 47 177 11 124 201 176 124 175 136 175 103 242 105 113 67 36 79 60 221 104 53 85 184 138 69 233 117 7 55 53 211 135 19 218 75 222 163 64 181 251 135 211 196 67 173 176 238)
      #t
      ())
    #(76
      "special case hash"
      #vu8(49 48 51 53 57 53 49 56 57 56)
      #vu8(20 153 1 73 211 168 243 201 110 156 98 149 47 144 239 33 203 204 13 3 218 128 47 114 67 42 4 29 165 77 181 190 135 66 123 150 210 132 153 112 122 103 136 112 92 216 165 238 159 212 46 45 31 18 115 117 35 55 239 205 6 170 136 169)
      #t
      ())
    #(77
      "special case hash"
      #vu8(49 56 52 54 53 57 55 49 57 53)
      #vu8(91 178 68 181 17 169 130 143 190 122 4 26 243 65 169 59 36 43 81 51 16 222 159 75 195 102 225 139 147 163 206 52 151 139 229 213 140 231 12 146 222 167 92 226 248 232 143 9 63 94 70 117 231 80 253 8 135 119 167 65 21 38 193 247)
      #t
      ())
    #(78
      "special case hash"
      #vu8(51 49 51 54 48 52 54 49 56 57)
      #vu8(7 14 100 244 209 159 159 217 168 211 240 166 79 149 28 65 219 47 14 19 73 14 122 192 179 246 6 107 193 229 64 167 131 91 37 2 154 44 237 141 245 123 3 67 162 199 24 219 114 194 211 31 126 246 107 35 12 151 210 2 129 212 154 51)
      #t
      ())
    #(79
      "special case hash"
      #vu8(50 54 54 51 55 56 52 50 53 52)
      #vu8(43 90 109 193 78 152 210 230 192 182 39 86 138 116 139 218 4 192 149 0 188 99 189 116 79 93 238 150 125 176 240 177 52 82 177 62 248 220 1 160 183 133 251 180 252 208 87 165 136 12 65 132 39 40 58 188 122 167 250 7 213 7 238 208)
      #t
      ())
    #(80
      "special case hash"
      #vu8(49 54 53 50 49 48 48 53 50 52)
      #vu8(29 145 189 169 13 8 49 190 5 143 97 15 227 230 69 23 145 224 150 137 197 43 212 102 239 116 221 133 179 203 209 33 75 163 122 147 65 229 146 62 169 62 53 115 68 254 123 115 68 110 32 122 126 68 150 7 177 72 44 81 14 147 182 48)
      #t
      ())
    #(81
      "special case hash"
      #vu8(53 55 52 56 48 56 49 54 57 54)
      #vu8(106 50 225 98 92 30 183 212 11 49 69 248 148 199 19 141 98 50 166 17 109 80 241 39 10 14 151 30 43 122 142 117 97 182 170 229 104 25 39 40 19 49 159 124 33 79 131 206 95 204 219 88 135 141 89 42 176 244 71 154 82 217 112 225)
      #t
      ())
    #(82
      "special case hash"
      #vu8(54 51 52 51 57 49 51 52 54 56)
      #vu8(91 117 38 240 157 171 36 133 81 237 139 18 41 194 68 122 69 33 210 214 226 41 2 172 188 23 108 80 31 95 95 126 49 134 85 47 112 13 158 107 85 28 137 62 210 174 217 85 107 63 10 194 165 226 119 47 143 177 161 132 148 146 98 203)
      #t
      ())
    #(83
      "special case hash"
      #vu8(49 53 52 49 49 48 51 53 57 56)
      #vu8(48 208 255 169 194 190 4 44 205 44 154 219 203 187 162 44 192 68 214 154 191 55 239 242 188 171 145 212 91 233 176 189 72 45 215 42 163 179 243 242 230 221 74 7 95 169 98 184 246 252 37 233 211 45 13 204 189 128 131 26 207 117 149 224)
      #t
      ())
    #(84
      "special case hash"
      #vu8(49 48 52 55 56 53 56 48 49 50 56)
      #vu8(32 13 59 95 145 88 99 173 168 200 78 245 235 80 236 240 171 67 226 186 193 10 76 66 207 55 25 18 26 141 55 205 157 19 126 17 160 80 191 187 167 70 193 154 213 247 25 92 134 242 65 21 209 250 223 177 154 210 203 86 36 18 108 218)
      #t
      ())
    #(85
      "special case hash"
      #vu8(49 48 53 51 54 50 56 53 53 54 56)
      #vu8(74 197 84 112 120 144 149 233 226 80 51 47 55 144 248 101 251 204 88 147 69 136 199 116 186 191 34 222 106 138 105 88 44 254 251 14 43 224 84 44 151 235 97 145 79 35 251 55 181 143 177 125 13 107 118 106 143 99 200 208 220 121 229 43)
      #t
      ())
    #(86
      "special case hash"
      #vu8(57 53 51 57 48 52 49 48 53)
      #vu8(144 140 30 109 166 37 135 159 193 22 221 182 81 115 185 53 95 168 235 3 128 99 222 44 236 25 52 232 251 43 252 39 110 8 79 247 192 67 237 251 22 26 234 38 5 161 17 207 67 213 131 136 224 97 232 1 158 153 82 99 118 228 199 30)
      #t
      ())
    #(87
      "special case hash"
      #vu8(57 55 56 56 52 56 48 51 57)
      #vu8(151 50 142 16 80 252 45 68 236 137 131 106 126 170 227 96 214 249 217 150 133 94 139 20 77 12 39 60 72 102 215 254 57 25 215 206 217 243 227 40 73 120 84 99 148 251 178 119 248 77 38 89 141 190 131 218 75 167 193 222 55 43 51 64)
      #t
      ())
    #(88
      "special case hash"
      #vu8(51 54 49 48 54 55 50 52 52 50)
      #vu8(152 129 232 247 93 184 22 61 43 225 252 17 73 25 38 196 18 83 116 68 13 169 71 80 161 158 202 248 168 59 113 252 74 154 25 26 157 168 250 61 86 65 203 181 168 140 172 91 55 128 251 190 248 239 26 68 87 130 57 73 37 239 197 177)
      #t
      ())
    #(89
      "special case hash"
      #vu8(49 48 53 52 50 52 48 55 48 53)
      #vu8(112 203 139 199 213 195 114 199 60 243 111 230 154 161 165 9 254 12 242 190 100 46 8 90 201 121 214 238 253 218 169 225 80 4 2 244 150 220 141 144 76 112 150 149 255 2 113 78 96 124 75 238 157 6 76 212 101 75 108 70 111 64 16 232)
      #t
      ())
    #(90
      "special case hash"
      #vu8(53 49 55 52 52 52 56 49 57 55)
      #vu8(57 200 248 112 24 95 135 149 126 0 157 1 229 47 191 108 122 229 13 115 77 57 236 65 19 179 123 123 209 182 128 102 115 214 218 43 119 124 224 196 61 73 8 8 87 198 236 88 84 111 221 241 125 38 118 241 15 136 221 201 0 202 24 145)
      #t
      ())
    #(91
      "special case hash"
      #vu8(49 57 54 55 53 54 49 50 53 49)
      #vu8(46 149 183 2 237 19 143 66 97 79 7 161 178 21 72 234 29 36 122 74 127 215 101 98 139 171 104 85 17 41 173 56 46 154 106 240 120 181 24 18 237 113 176 234 182 83 80 205 8 31 121 153 162 74 86 233 106 249 213 197 246 189 175 15)
      #t
      ())
    #(92
      "special case hash"
      #vu8(51 52 52 55 50 53 51 51 52 51)
      #vu8(88 55 182 135 242 18 128 99 220 103 245 18 203 102 112 241 34 182 17 37 127 83 109 69 227 152 79 94 187 195 205 77 106 108 12 65 185 204 55 174 2 194 33 141 59 140 216 12 211 196 252 37 119 28 12 170 179 184 237 44 97 28 247 203)
      #t
      ())
    #(93
      "special case hash"
      #vu8(51 54 56 50 54 52 51 49 56)
      #vu8(90 115 199 93 43 92 72 175 23 183 132 114 68 38 43 185 178 195 242 105 122 157 140 96 87 88 162 211 60 204 209 143 151 241 42 160 75 37 130 55 63 155 234 100 107 206 27 18 144 48 234 95 53 201 220 42 20 158 144 170 59 86 52 92)
      #t
      ())
    #(94
      "special case hash"
      #vu8(51 50 54 49 49 57 56 54 48 56)
      #vu8(50 182 3 19 42 150 197 185 87 176 140 136 83 46 73 252 183 60 215 197 247 26 30 110 209 74 92 193 119 109 45 167 147 190 14 76 152 68 190 201 210 182 43 66 78 97 138 132 90 152 83 123 35 86 193 244 115 187 161 59 8 69 142 234)
      #t
      ())
    #(95
      "special case hash"
      #vu8(57 54 55 56 55 56 49 48 57 52)
      #vu8(155 118 183 170 192 161 59 242 23 242 77 51 91 192 70 148 236 219 213 172 254 78 194 60 6 94 254 183 147 106 28 98 67 44 222 116 253 187 79 84 55 205 236 165 60 183 171 121 246 146 105 79 145 237 55 53 251 196 224 138 63 82 120 129)
      #t
      ())
    #(96
      "special case hash"
      #vu8(52 57 53 56 56 50 51 56 50 51)
      #vu8(143 37 101 181 23 246 42 59 30 25 176 145 122 178 178 35 252 129 147 204 15 223 58 185 105 43 196 44 244 9 16 232 29 204 251 237 139 144 238 83 145 234 116 62 53 182 14 211 29 25 237 251 217 69 4 186 220 164 170 76 242 167 187 49)
      #t
      ())
    #(97
      "special case hash"
      #vu8(56 50 52 54 51 55 56 51 55)
      #vu8(49 198 39 253 121 31 115 68 33 229 80 38 24 174 196 71 198 112 41 178 121 78 225 43 8 238 182 197 154 237 179 238 8 249 31 55 137 189 1 229 185 217 57 65 207 70 105 141 94 26 39 8 231 14 233 162 38 232 30 127 74 65 78 158)
      #t
      ())
    #(98
      "special case hash"
      #vu8(49 49 48 50 48 56 51 51 55 55 54)
      #vu8(96 5 41 49 50 215 234 192 231 43 155 33 141 3 33 38 117 213 170 224 218 151 188 205 241 165 255 120 77 229 205 230 19 161 85 199 74 154 178 124 189 246 202 225 141 77 31 24 184 33 45 128 24 85 30 43 174 201 25 121 234 91 76 73)
      #t
      ())
    #(99
      "special case hash"
      #vu8(49 51 51 56 55 49 54 52 56)
      #vu8(58 109 171 81 237 144 39 245 202 225 146 224 88 106 50 200 239 34 118 206 186 59 121 96 89 220 161 53 227 97 121 93 75 241 107 14 98 227 42 148 80 136 245 95 180 40 21 154 247 130 150 221 79 141 253 151 19 189 178 246 119 203 205 18)
      #t
      ())
    #(100
      "special case hash"
      #vu8(51 50 50 49 52 52 49 54 50)
      #vu8(150 29 231 126 217 207 97 112 217 37 194 51 189 62 32 238 249 187 230 214 200 218 194 138 205 228 96 17 249 159 139 255 151 125 224 71 121 255 227 175 231 8 216 28 232 161 237 108 125 42 154 37 239 153 89 199 169 81 160 85 90 109 55 146)
      #t
      ())
    #(101
      "special case hash"
      #vu8(49 48 54 56 54 54 53 53 53 52 54)
      #vu8(119 133 129 179 212 3 0 49 20 30 85 95 161 219 235 174 240 238 208 25 224 184 151 181 7 101 68 171 128 73 139 156 113 50 200 209 9 193 241 166 193 15 129 233 252 17 173 234 75 156 255 89 146 8 182 217 203 78 75 39 241 151 40 70)
      #t
      ())
    #(102
      "special case hash"
      #vu8(54 50 49 53 53 50 52 54)
      #vu8(158 234 200 240 124 64 204 142 227 203 161 7 175 73 213 38 115 29 139 124 112 19 12 187 110 250 60 97 80 93 99 55 98 219 56 34 107 113 246 74 91 89 138 183 196 227 248 152 128 254 13 7 73 223 213 199 163 138 62 236 60 121 56 118)
      #t
      ())
    #(103
      "special case hash"
      #vu8(55 48 51 48 56 49 56 55 55 52)
      #vu8(103 61 65 193 126 114 127 1 37 23 91 42 159 5 97 236 197 207 156 212 144 53 130 139 167 196 117 69 160 179 56 244 0 69 158 249 120 231 176 52 104 200 15 212 83 58 51 71 85 160 130 107 245 163 13 249 25 18 158 53 45 52 117 98)
      #t
      ())
    #(104
      "special case hash"
      #vu8(53 57 50 52 53 50 51 55 52 52)
      #vu8(138 151 241 155 8 9 4 44 218 254 156 50 188 11 11 1 33 138 73 134 122 104 130 214 77 91 123 194 85 235 119 61 144 70 98 181 223 216 205 148 234 239 213 126 93 79 45 20 38 142 27 140 79 189 74 196 229 8 15 121 213 63 210 76)
      #t
      ())
    #(105
      "special case hash"
      #vu8(49 52 57 53 53 56 54 54 50 49)
      #vu8(40 122 136 189 181 97 250 39 133 202 37 134 99 248 109 59 7 170 201 73 246 71 238 87 38 33 176 183 14 179 233 202 74 109 121 22 65 132 67 222 180 196 63 92 105 246 73 9 82 207 83 238 105 238 193 172 105 225 68 184 249 226 99 7)
      #t
      ())
    #(106
      "special case hash"
      #vu8(52 48 48 53 51 49 52 52 48 54)
      #vu8(37 13 182 168 179 129 59 19 182 251 123 241 152 150 241 58 80 43 228 83 194 4 230 168 19 161 100 219 221 156 102 202 29 150 104 58 201 127 88 116 172 149 56 181 123 241 234 165 10 17 163 62 154 187 130 93 107 122 117 70 166 152 96 110)
      #t
      ())
    #(107
      "special case hash"
      #vu8(51 48 57 54 52 53 55 53 49 50)
      #vu8(162 155 44 75 229 15 23 36 161 206 154 205 76 81 41 179 145 180 185 0 154 187 88 35 151 165 34 199 113 213 74 189 14 193 215 174 219 254 78 116 61 118 39 234 141 32 124 36 96 174 76 159 33 52 176 248 74 2 85 32 90 194 52 130)
      #t
      ())
    #(108
      "special case hash"
      #vu8(50 55 56 52 48 50 53 54 50 48)
      #vu8(20 159 5 8 174 249 251 204 243 46 27 211 25 157 99 2 64 187 101 119 89 62 135 86 107 10 20 165 182 242 9 153 93 55 180 9 192 31 185 182 207 78 161 68 50 195 86 49 105 68 2 210 135 90 48 29 118 29 129 129 20 105 98 141)
      #t
      ())
    #(109
      "special case hash"
      #vu8(50 54 49 56 55 56 55 52 49 56)
      #vu8(108 155 17 13 142 68 83 216 46 197 26 90 105 27 21 46 223 159 177 169 148 123 208 1 190 178 77 86 243 191 39 175 42 128 187 210 248 39 204 35 21 117 38 223 110 164 224 227 36 183 101 165 11 231 127 126 150 103 85 138 22 94 182 146)
      #t
      ())
    #(110
      "special case hash"
      #vu8(49 54 52 50 54 50 53 50 54 50)
      #vu8(144 134 165 201 56 35 177 223 33 246 57 81 237 110 112 127 186 13 137 158 239 113 17 0 227 47 45 96 23 218 101 144 31 131 30 211 12 18 157 171 66 102 39 46 1 40 50 16 237 130 60 85 144 122 197 236 218 133 215 11 216 2 121 195)
      #t
      ())
    #(111
      "special case hash"
      #vu8(54 56 50 52 49 56 57 52 51 54)
      #vu8(42 246 53 71 220 95 252 139 164 209 104 211 104 217 34 129 50 160 239 162 14 50 85 195 50 33 159 236 237 128 3 149 54 66 245 60 233 82 31 171 117 75 231 113 31 0 175 120 136 34 43 242 187 241 237 137 149 224 59 85 201 138 96 34)
      #t
      ())
    #(112
      "special case hash"
      #vu8(52 56 52 50 52 53 52 50 53)
      #vu8(145 233 172 239 155 194 140 145 8 145 184 3 32 175 54 3 196 48 97 116 241 126 151 5 146 103 252 129 120 20 255 31 122 156 131 59 235 115 189 214 45 246 73 82 180 200 72 210 24 15 174 56 95 128 132 241 252 91 27 28 100 87 80 7)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 75 64 42 154 225 143 193 168 124 218 51 116 131 144 4 153 254 114 158 71 22 7 103 22 81 162 99 251 240 217 63 120 30 249 176 249 143 183 59 203 96 90 120 35 164 39 234 95 13 152 120 140 125 174 66 160 69 54 32 32 34 192 33 205)
  :der-encode
  #f
  :tests
  '(#(113
      "k*G has a large x-coordinate"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 226 2 123 128 31 196 121 48 143 245 57 154 136 37 252 207 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 164)
      #t
      ())
    #(114
      "r too large"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 114 110 59 246 35 213 38 32 40 32 19 72 29 31 110 83 118 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 164)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 64 162 223 15 23 199 135 52 89 213 233 172 17 255 248 77 235 95 64 255 154 82 223 135 69 187 71 112 246 219 245 129 153 194 191 73 32 233 200 247 88 194 222 105 228 44 28 183 124 88 66 90 157 175 164 29 123 8 115 239 168 148 206 220)
  :der-encode
  #f
  :tests
  '(#(115
      "r,s are large"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 163 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 162)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 157 230 105 249 68 77 168 46 66 159 132 47 49 198 68 24 212 215 176 94 147 244 29 173 221 9 252 24 26 194 39 198 28 134 33 14 130 145 252 90 227 12 114 226 1 62 194 43 185 125 136 191 55 109 74 133 221 27 183 27 34 82 109 31)
  :der-encode
  #f
  :tests
  '(#(116
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 74 184 222 10 81 72 27 196 87 148 185 36 81 143 45 214 172 92 206 49 243 34 141 98 76 90 137 111 121 162 214 162)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 48 52 91 100 81 55 123 120 165 74 198 225 16 245 12 125 231 28 44 118 2 120 55 54 7 114 44 83 245 134 121 7 89 172 196 0 20 201 61 74 212 71 120 188 26 68 235 174 190 26 151 200 138 209 28 16 37 5 123 107 196 55 127 45)
  :der-encode
  #f
  :tests
  '(#(117
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 139 27 95 137 245 187 116 202 164 45 54 230 1 169 243 194 11 78 108 145 206 185 138 82 251 250 159 129 120 27 138 23)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 20 157 137 63 19 6 251 37 59 191 58 134 145 171 168 165 0 2 176 162 118 147 170 151 67 90 123 92 179 58 85 238 36 176 117 252 219 193 167 57 242 244 146 219 228 121 148 116 238 58 211 128 68 71 231 213 132 227 67 12 225 90 150 138)
  :der-encode
  #f
  :tests
  '(#(118
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #t
      ())
    #(119
      "incorrect size of signature"
      #vu8(49 50 51 52 48 48)
      #vu8(1 1)
      #t
      ("SigSize"))))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 21 110 98 102 73 206 130 54 152 34 1 162 73 53 251 61 54 176 215 48 65 182 253 202 151 153 10 141 21 46 251 139 50 111 75 32 160 204 70 35 176 42 107 177 113 20 144 26 1 222 13 241 113 109 102 157 37 61 228 64 204 143 156 221)
  :der-encode
  #f
  :tests
  '(#(120
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2)
      #t
      ())
    #(121
      "incorrect size of signature"
      #vu8(49 50 51 52 48 48)
      #vu8(1 2)
      #t
      ("SigSize"))))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 16 204 121 146 237 226 140 123 77 218 92 53 203 215 17 116 145 142 131 173 171 3 66 204 61 85 106 65 59 76 233 59 63 156 59 56 174 240 160 230 135 215 238 106 253 231 13 71 214 144 15 240 206 98 21 110 134 69 184 16 63 198 108 173)
  :der-encode
  #f
  :tests
  '(#(122
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3)
      #t
      ())
    #(123
      "incorrect size of signature"
      #vu8(49 50 51 52 48 48)
      #vu8(1 3)
      #t
      ("SigSize"))
    #(124
      "r is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 168 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 43 162 143 98 54 197 167 116 205 16 75 3 109 46 1 103 17 203 74 131 250 7 139 81 80 246 158 80 152 222 123 76 167 193 62 248 197 127 203 230 132 206 255 49 46 245 58 241 177 67 151 212 21 75 166 16 106 51 131 170 237 22 236 177)
  :der-encode
  #f
  :tests
  '(#(125
      "s is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 91 45 46)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 17 52 137 85 91 220 17 35 82 176 139 127 254 188 240 80 144 249 77 166 35 103 100 107 46 3 163 71 136 99 145 75 75 74 10 67 84 98 161 34 246 217 172 128 19 25 187 198 210 197 146 40 134 26 52 20 181 0 229 207 89 67 201 100)
  :der-encode
  #f
  :tests
  '(#(126
      "small r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 40 39 55 5 132 253 235 159 93 90 159 185 87 154 9 57 14 251 111 157 153 182 79 193 136 216 188 224 92 45 78 237)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 52 34 71 70 239 168 197 212 244 198 184 45 228 215 109 62 113 80 193 182 158 35 51 159 9 143 247 105 188 172 148 191 148 97 142 54 36 165 125 72 209 158 114 134 125 188 25 26 15 208 92 246 244 181 236 73 123 121 118 38 165 123 170 34)
  :der-encode
  #f
  :tests
  '(#(127
      "smallish r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 45 155 77 52 121 82 206 73 55 160 135 115 29 244 254 188 44 58 129 221 251 171 93 195 175 149 8 23 244 27 89 13 21 110 212 9 173 40 105)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 111 176 205 243 176 141 197 216 183 229 37 156 125 27 189 49 162 35 83 69 183 180 69 99 30 137 75 86 125 35 192 121 83 36 50 7 223 92 68 96 17 193 207 237 222 110 83 81 149 138 255 168 242 116 254 90 244 53 117 157 232 125 179 67)
  :der-encode
  #f
  :tests
  '(#(128
      "100-bit r and small s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 16 51 230 126 55 179 43 68 85 128 191 78 251 145 130 125 3 187 109 172 49 148 11 165 110 216 132 137 4 143 241 115 240 191 32 202 178 13 204 8 111 202 55 242 133)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 11 141 59 239 18 235 171 67 242 246 246 97 143 8 67 213 244 93 151 135 79 38 249 163 107 120 140 183 166 158 207 95 133 85 136 201 155 56 57 202 147 97 221 199 118 69 247 89 42 211 113 67 142 227 225 134 199 64 129 196 129 221 82 149)
  :der-encode
  #f
  :tests
  '(#(129
      "small r and 100 bit s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 62 179 95 231 232 51 31 113 228 198 59 69 243 73 169 157 71 165 231 129 121 142 87 159 35 134 25 93 56 39 187 21)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 109 36 152 83 66 164 90 85 253 153 228 117 33 254 62 153 27 138 29 55 111 167 56 153 211 186 204 6 124 18 238 13 101 66 241 72 89 159 204 185 155 27 162 141 56 5 129 66 146 169 155 255 227 113 223 39 123 9 232 173 161 37 61 205)
  :der-encode
  #f
  :tests
  '(#(130
      "100-bit r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 37 34 187 211 236 190 124 57 233 62 124 37 62 179 95 231 232 51 31 113 228 198 59 69 243 73 169 157 71 165 231 129 121 142 87 159 35 134 25 93 56 39 187 21)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 65 37 228 104 32 244 18 6 182 112 136 42 157 141 81 182 186 195 144 145 21 12 156 179 59 109 0 158 12 255 82 35 101 116 146 64 98 43 64 215 10 99 64 121 82 193 184 118 28 159 142 133 171 166 240 59 188 114 25 226 78 111 178 118)
  :der-encode
  #f
  :tests
  '(#(131
      "r and s^-1 are close to n"
      #vu8(49 50 51 52 48 48)
      #vu8(169 251 87 219 161 238 169 188 62 102 10 144 157 131 141 113 140 57 122 163 181 97 166 247 144 30 14 130 151 72 86 40 56 169 29 73 53 250 56 148 20 204 174 48 52 129 47 37 217 104 126 54 145 203 55 167 218 180 175 128 221 24 28 226)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 145 186 23 6 161 156 229 143 172 162 99 102 220 237 41 51 153 69 14 250 72 143 44 75 170 149 105 59 151 77 7 93 94 132 1 86 90 55 176 91 147 81 228 8 175 84 43 240 247 149 126 94 237 24 42 254 171 234 250 43 247 187 187 71)
  :der-encode
  #f
  :tests
  '(#(132
      "s == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(56 169 29 73 53 250 56 148 20 204 174 48 52 129 47 37 217 104 126 54 145 203 55 167 218 180 175 128 221 24 28 226 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #t
      ())
    #(133
      "s == 0"
      #vu8(49 50 51 52 48 48)
      #vu8(56 169 29 73 53 250 56 148 20 204 174 48 52 129 47 37 217 104 126 54 145 203 55 167 218 180 175 128 221 24 28 226 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 37 209 117 112 228 186 225 228 104 230 221 9 117 179 130 54 128 97 224 199 4 36 28 29 24 253 91 170 140 168 220 19 90 202 220 209 57 146 246 102 91 70 156 159 154 183 121 126 60 75 136 28 109 127 77 38 1 201 106 21 54 247 109 5)
  :der-encode
  #f
  :tests
  '(#(134
      "point at infinity during verify"
      #vu8(49 50 51 52 48 48)
      #vu8(84 253 171 237 208 247 84 222 31 51 5 72 78 193 198 184 198 28 189 81 218 176 211 123 200 15 7 65 75 164 43 83 56 169 29 73 53 250 56 148 20 204 174 48 52 129 47 37 217 104 126 54 145 203 55 167 218 180 175 128 221 24 28 226)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 29 195 50 95 250 85 225 121 226 23 26 102 178 231 83 74 225 44 252 41 42 242 224 251 241 195 252 206 85 88 252 106 36 32 171 205 183 223 140 243 134 52 100 130 100 166 129 213 237 25 91 241 106 151 15 250 104 171 37 11 52 169 53 20)
  :der-encode
  #f
  :tests
  '(#(135
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(84 253 171 237 208 247 84 222 31 51 5 72 78 193 198 184 198 28 189 81 218 176 211 123 200 15 7 65 75 164 43 83 84 253 171 237 208 247 84 222 31 51 5 72 78 193 198 184 198 28 189 81 218 176 211 123 200 15 7 65 75 164 43 83)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 63 255 166 219 175 102 123 10 148 229 248 107 55 116 185 117 151 26 77 36 57 96 125 239 78 93 225 209 120 32 163 178 27 243 102 19 181 11 146 82 100 85 24 21 197 218 120 59 209 88 170 161 198 36 75 64 169 250 49 162 164 51 248 232)
  :der-encode
  #f
  :tests
  '(#(136
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(84 253 171 237 208 247 84 222 31 51 5 72 78 193 198 184 198 28 189 81 218 176 211 123 200 15 7 65 75 164 43 83 84 253 171 237 208 247 84 222 31 51 5 72 78 193 198 184 198 28 189 81 218 176 211 123 200 15 7 65 75 164 43 84)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 138 253 71 235 6 103 134 11 236 152 213 220 210 246 13 169 234 193 174 153 98 5 105 137 47 20 224 148 214 53 135 42 94 143 11 198 123 152 162 51 173 231 21 192 77 157 170 177 26 39 81 122 146 207 38 81 201 229 242 253 228 226 219 152)
  :der-encode
  #f
  :tests
  '(#(137
      "u1 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(56 169 29 73 53 250 56 148 20 204 174 48 52 129 47 37 217 104 126 54 145 203 55 167 218 180 175 128 221 24 28 226 187 90 82 244 47 156 146 97 237 67 97 245 148 34 161 227 0 54 231 195 43 39 12 136 7 164 25 254 202 96 80 35)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 8 118 97 102 54 168 219 200 33 96 172 1 175 41 65 53 59 160 238 164 163 184 254 49 105 107 71 49 125 73 114 201 35 24 0 115 6 29 39 152 78 207 73 31 57 64 4 195 164 132 109 119 63 88 220 42 181 228 61 203 249 104 208 39)
  :der-encode
  #f
  :tests
  '(#(138
      "u1 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(56 169 29 73 53 250 56 148 20 204 174 48 52 129 47 37 217 104 126 54 145 203 55 167 218 180 175 128 221 24 28 226 152 156 92 195 20 64 193 22 143 136 179 43 166 228 121 0 24 60 13 132 63 156 65 103 24 152 3 6 100 48 93 43)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 15 171 176 82 33 126 174 142 99 254 164 238 160 153 83 213 24 98 66 127 52 19 7 216 25 255 110 147 59 247 43 169 75 137 127 44 74 76 245 112 84 195 99 199 32 218 61 36 36 113 204 142 73 59 236 176 222 2 34 81 210 238 76 140)
  :der-encode
  #f
  :tests
  '(#(139
      "u2 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(56 169 29 73 53 250 56 148 20 204 174 48 52 129 47 37 217 104 126 54 145 203 55 167 218 180 175 128 221 24 28 226 56 169 29 73 53 250 56 148 20 204 174 48 52 129 47 37 217 104 126 54 145 203 55 167 218 180 175 128 221 24 28 226)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 114 235 173 116 155 80 76 135 77 33 188 94 75 186 84 93 212 46 181 251 247 138 244 32 67 245 206 241 10 235 58 215 69 34 116 100 225 233 206 246 98 244 63 200 13 76 231 235 126 182 21 162 54 153 212 142 137 178 120 171 212 108 204 70)
  :der-encode
  #f
  :tests
  '(#(140
      "u2 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(56 169 29 73 53 250 56 148 20 204 174 48 52 129 47 37 217 104 126 54 145 203 55 167 218 180 175 128 221 24 28 226 113 82 58 146 107 244 113 40 41 153 92 96 105 2 94 75 178 208 252 109 35 150 111 79 181 105 95 1 186 48 57 197)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 116 78 33 138 4 179 20 113 176 94 103 156 148 129 68 107 205 114 164 208 252 167 167 175 26 31 226 245 116 217 54 47 96 192 197 40 67 216 215 44 214 54 21 63 15 81 10 9 8 159 196 71 131 114 223 197 14 91 145 213 48 27 167 94)
  :der-encode
  #f
  :tests
  '(#(141
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 5 202 83 178 217 228 162 225 228 244 114 118 252 223 177 123 38 169 207 10 124 151 33 218 210 130 3 212 17 7 253 212)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 126 165 61 60 70 53 164 213 182 13 121 170 199 157 151 76 117 146 99 54 52 114 20 106 70 5 40 13 147 95 252 117 89 121 4 3 201 100 89 178 4 119 234 164 55 179 199 222 205 94 105 15 170 148 12 8 145 222 12 208 125 65 129 60)
  :der-encode
  #f
  :tests
  '(#(142
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 84 72 170 130 252 87 116 11 46 30 189 249 137 186 161 69 176 24 180 35 179 118 31 235 5 89 89 235 106 1 241 161)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 117 4 98 161 99 101 87 70 175 102 186 62 180 128 9 164 144 217 112 121 146 128 88 108 254 89 49 99 101 220 78 240 162 241 86 114 87 189 154 161 220 202 60 210 118 255 174 177 221 133 206 162 141 136 138 152 100 43 240 154 152 246 159 17)
  :der-encode
  #f
  :tests
  '(#(143
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 101 191 204 230 155 137 239 245 69 251 10 103 210 88 26 95 37 52 132 239 83 139 155 85 250 134 45 253 45 72 141 82)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 50 58 229 117 75 65 117 82 207 150 143 95 62 234 113 135 247 177 114 110 140 46 81 15 152 210 100 48 172 88 73 188 50 113 1 216 42 223 135 201 50 232 234 166 165 126 29 17 189 101 220 143 64 76 17 63 101 171 170 110 234 245 199 196)
  :der-encode
  #f
  :tests
  '(#(144
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 122 69 158 4 115 149 216 29 59 0 244 184 213 173 52 68 43 53 222 197 230 193 180 90 6 120 230 90 31 233 233 230)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 55 161 5 227 206 63 182 54 115 48 50 209 202 86 180 198 89 180 81 246 79 75 167 55 139 8 121 135 231 165 68 210 120 43 173 155 22 84 242 119 13 122 62 227 91 103 42 54 111 104 91 199 25 24 137 255 47 165 198 185 78 190 122 184)
  :der-encode
  #f
  :tests
  '(#(145
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 59 119 57 187 225 4 139 105 253 5 249 38 47 98 142 3 176 119 14 126 205 130 51 127 20 130 167 45 176 41 50 50)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 19 221 89 69 79 106 243 233 219 17 91 126 200 195 161 200 211 8 253 203 73 99 195 184 234 18 100 228 175 218 101 44 93 38 11 127 201 191 210 0 137 109 34 159 60 141 170 185 223 47 85 170 154 217 93 78 167 106 237 141 116 197 73 77)
  :der-encode
  #f
  :tests
  '(#(146
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 118 238 115 119 194 9 22 211 250 11 242 76 94 197 28 7 96 238 28 253 155 4 102 254 41 5 78 91 96 82 100 100)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 44 29 197 100 89 191 9 223 80 251 45 150 47 89 137 243 100 48 33 197 195 96 54 62 16 230 149 167 11 89 66 232 98 22 211 202 12 202 49 219 217 42 77 40 191 149 20 55 246 244 93 180 30 142 65 253 247 36 20 162 147 245 48 135)
  :der-encode
  #f
  :tests
  '(#(147
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 74 153 40 36 199 55 176 15 2 210 61 47 46 61 236 240 144 178 143 250 14 144 230 209 229 221 21 112 112 113 159 101)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 19 125 111 223 131 107 24 36 55 140 8 179 95 167 235 228 232 7 216 162 1 5 206 156 179 205 40 31 10 71 201 195 7 214 71 93 73 88 193 109 149 15 4 57 211 219 248 108 45 126 43 18 232 177 55 239 198 45 209 199 35 184 58 98)
  :der-encode
  #f
  :tests
  '(#(148
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 156 9 45 22 94 241 177 26 130 181 156 115 170 179 73 102 49 227 3 32 56 254 218 35 109 183 176 245 168 224 202 187)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 100 2 19 190 22 152 177 102 240 197 78 88 142 27 87 166 72 38 191 132 138 218 191 239 96 104 29 119 116 125 44 168 100 110 69 217 97 65 157 74 209 51 140 54 18 40 225 198 182 97 83 152 88 44 14 62 151 247 235 200 90 80 68 35)
  :der-encode
  #f
  :tests
  '(#(149
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 169 4 73 232 125 157 227 235 237 146 162 39 115 94 69 50 91 29 45 119 75 72 118 168 109 8 99 52 148 113 172 89)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 38 145 84 202 88 49 117 82 198 85 210 169 179 128 77 217 76 39 17 20 91 156 217 60 54 15 45 254 52 204 25 113 152 4 108 201 12 198 168 172 72 239 123 172 197 203 126 87 51 79 169 31 172 186 219 72 149 44 159 238 84 61 27 181)
  :der-encode
  #f
  :tests
  '(#(150
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 164 49 4 40 200 10 6 218 89 113 152 25 160 163 219 246 101 143 171 153 56 202 133 28 189 156 10 174 134 64 88 211)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 36 14 11 100 206 226 224 184 137 12 47 168 45 229 132 138 86 66 239 15 123 36 20 248 143 88 82 129 223 122 31 245 58 89 144 248 96 218 48 83 248 33 190 169 20 5 156 237 133 201 194 57 11 13 134 5 50 219 204 202 127 246 102 146)
  :der-encode
  #f
  :tests
  '(#(151
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 161 75 218 79 91 23 181 105 102 247 94 222 34 52 3 56 210 58 196 19 250 126 244 47 84 91 8 196 125 188 89 233)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 150 243 203 94 176 195 59 226 5 236 5 138 34 9 61 115 159 232 10 126 204 135 67 153 193 79 127 108 56 207 204 81 71 179 236 202 236 201 173 210 177 223 252 152 143 19 220 171 21 183 233 16 208 37 14 112 161 215 155 59 147 28 50 237)
  :der-encode
  #f
  :tests
  '(#(152
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 50 223 230 115 77 196 247 250 162 253 133 51 233 44 13 47 146 154 66 119 169 197 205 170 253 67 22 254 150 164 70 169)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 16 59 27 246 52 61 87 38 15 101 45 39 42 174 255 108 250 67 159 21 131 51 94 186 102 250 114 208 14 255 127 133 32 242 187 3 91 208 86 198 124 162 44 169 82 171 181 225 188 182 141 103 202 129 121 13 36 9 127 19 212 82 9 161)
  :der-encode
  #f
  :tests
  '(#(153
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 99 83 199 243 224 164 227 62 191 119 88 218 223 43 217 208 132 19 40 225 60 117 226 82 133 95 90 43 135 194 199 140)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 149 155 59 243 114 48 25 147 179 126 32 180 52 79 19 192 109 92 28 83 199 115 127 22 110 251 148 131 44 59 155 187 64 211 94 244 110 76 250 212 117 221 209 161 217 96 159 236 167 6 151 18 211 11 223 70 56 212 200 139 201 161 33 0)
  :der-encode
  #f
  :tests
  '(#(154
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 20 137 155 198 255 94 114 51 143 60 152 71 250 101 49 196 51 127 222 63 207 28 140 50 247 104 251 163 164 2 169 100)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 110 105 177 125 131 137 78 46 113 255 206 53 27 83 69 156 11 178 155 236 55 159 244 53 242 60 1 169 179 125 244 158 59 161 5 58 216 66 54 216 44 247 199 98 54 43 55 178 78 59 14 225 248 234 108 84 58 37 145 220 182 104 26 143)
  :der-encode
  #f
  :tests
  '(#(155
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 114 101 92 94 79 28 239 202 34 244 19 166 18 229 191 221 123 169 174 113 5 63 104 176 199 77 154 115 89 0 19 195)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 51 111 194 142 31 37 4 133 39 103 71 223 195 72 89 180 116 22 103 179 172 70 160 246 56 77 236 193 172 121 3 4 64 18 6 181 80 138 160 102 1 162 36 110 115 129 223 236 202 106 219 43 25 122 225 69 73 162 76 53 92 213 59 225)
  :der-encode
  #f
  :tests
  '(#(156
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 162 3 13 191 1 216 201 222 41 0 220 56 69 253 164 228 198 188 4 156 76 213 113 122 156 98 155 158 210 157 24 89)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 145 61 156 227 91 156 115 32 53 120 226 85 212 221 53 255 32 33 45 53 114 39 210 107 138 149 145 128 102 91 84 43 165 3 217 34 211 253 101 160 126 202 24 192 164 226 211 242 207 124 5 146 139 64 100 88 203 40 110 17 220 98 220 182)
  :der-encode
  #f
  :tests
  '(#(157
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 161 219 114 147 182 240 21 148 184 8 113 142 97 164 214 66 223 244 254 226 251 71 17 103 239 122 180 41 89 164 115 231)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 107 118 145 92 193 200 84 116 74 120 218 201 186 236 213 152 69 185 10 217 205 48 143 90 136 125 204 201 9 218 205 74 114 96 69 111 143 141 49 118 13 129 191 133 52 141 159 80 201 157 153 24 180 128 177 236 37 244 226 227 77 224 55 105)
  :der-encode
  #f
  :tests
  '(#(158
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 153 187 141 75 203 241 129 109 49 170 216 140 37 198 31 20 51 176 131 34 65 44 123 216 78 215 89 208 28 0 145 39)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 100 123 55 183 49 211 234 215 89 118 39 81 153 84 131 70 144 49 8 76 215 9 136 124 155 107 175 186 70 44 191 132 136 140 91 23 31 43 47 183 187 43 157 136 32 13 121 172 148 215 212 2 95 121 52 142 34 131 81 28 4 120 145 191)
  :der-encode
  #f
  :tests
  '(#(159
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 65 206 232 42 105 87 239 2 171 58 160 122 51 21 172 204 13 13 102 194 8 29 83 2 70 214 230 129 135 60 144 209)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 31 118 26 26 225 232 46 74 242 119 179 153 218 10 82 62 133 100 76 233 113 199 185 2 54 208 49 21 174 217 133 91 85 205 179 225 4 54 31 210 224 151 152 99 242 154 59 11 245 84 44 81 5 201 29 252 124 148 100 59 120 162 183 242)
  :der-encode
  #f
  :tests
  '(#(160
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 116 109 97 87 46 202 231 116 105 30 120 9 18 25 134 217 185 50 121 176 9 52 255 29 239 31 71 152 218 137 173 76)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 99 211 3 22 37 116 150 40 153 253 154 50 60 95 226 74 9 24 143 162 13 71 168 217 43 165 2 212 248 134 245 179 114 205 13 130 179 253 79 84 254 220 93 134 24 177 66 246 53 83 228 56 204 18 105 113 157 238 58 189 51 22 250 33)
  :der-encode
  #f
  :tests
  '(#(161
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 40 27 38 160 144 137 104 9 159 142 31 97 15 79 53 131 24 186 162 17 7 183 145 239 111 36 203 36 70 119 166 75)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 62 29 150 110 5 240 76 68 225 98 19 61 151 115 15 100 8 168 138 217 144 162 198 239 183 227 231 58 136 111 126 212 164 14 59 63 216 176 5 252 65 116 55 242 16 17 217 251 227 139 50 154 46 121 89 237 155 4 12 142 30 182 119 253)
  :der-encode
  #f
  :tests
  '(#(162
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 70 167 143 231 193 73 198 125 126 238 177 181 190 87 179 161 8 38 81 194 120 235 196 165 10 190 180 87 15 133 143 27)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 86 172 142 73 179 25 213 208 65 174 61 63 145 222 34 156 10 130 13 127 253 151 234 6 25 110 238 117 7 54 63 66 120 127 192 94 186 96 111 119 185 132 229 124 171 249 17 32 151 0 181 211 145 71 161 76 93 26 149 245 108 213 254 180)
  :der-encode
  #f
  :tests
  '(#(163
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 20 253 171 237 208 247 84 222 31 51 5 72 78 193 198 184 198 28 189 81 218 176 211 123 200 15 7 65 75 164 43 85)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 94 47 34 134 49 238 127 0 206 175 147 98 120 242 226 104 27 66 159 207 184 203 44 1 155 49 241 136 131 152 132 245 48 225 7 154 107 136 147 147 204 131 250 187 213 36 242 27 180 134 198 91 131 171 10 250 251 23 38 93 151 27 174 145)
  :der-encode
  #f
  :tests
  '(#(164
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 142 48 90 28 248 133 204 195 48 173 15 27 88 52 166 167 131 241 148 138 93 80 135 212 43 181 212 122 248 36 53 53)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 109 188 86 5 180 225 19 147 47 237 231 180 116 63 77 252 98 253 236 174 22 115 91 81 101 61 121 238 0 143 47 197 18 136 251 44 160 158 227 54 239 49 107 115 145 154 127 59 50 159 202 47 92 54 92 196 39 66 95 236 246 79 123 243)
  :der-encode
  #f
  :tests
  '(#(165
      "point duplication during verification"
      #vu8(49 50 51 52 48 48)
      #vu8(7 76 3 86 3 225 235 73 171 83 130 129 155 248 42 248 41 41 181 0 198 231 136 65 193 178 195 255 84 166 21 221 32 53 172 158 167 17 158 48 229 79 54 156 210 42 162 122 243 139 86 106 230 9 63 29 243 91 97 45 230 240 117 152)
      #t
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 109 188 86 5 180 225 19 147 47 237 231 180 116 63 77 252 98 253 236 174 22 115 91 81 101 61 121 238 0 143 47 197 151 114 92 175 1 79 198 133 79 52 159 29 11 233 14 55 59 156 43 244 120 239 195 99 248 208 232 48 41 30 215 132)
  :der-encode
  #f
  :tests
  '(#(166
      "duplication bug"
      #vu8(49 50 51 52 48 48)
      #vu8(7 76 3 86 3 225 235 73 171 83 130 129 155 248 42 248 41 41 181 0 198 231 136 65 193 178 195 255 84 166 21 221 32 53 172 158 167 17 158 48 229 79 54 156 210 42 162 122 243 139 86 106 230 9 63 29 243 91 97 45 230 240 117 152)
      #f
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 140 86 53 238 175 126 153 79 241 99 235 220 154 172 253 173 29 80 249 146 154 128 53 195 108 241 193 225 109 91 40 241 61 228 132 49 243 235 130 58 56 76 148 11 43 10 1 81 45 169 139 143 114 189 149 69 209 121 214 241 205 90 42 99)
  :der-encode
  #f
  :tests
  '(#(167
      "comparison with point at infinity "
      #vu8(49 50 51 52 48 48)
      #vu8(56 169 29 73 53 250 56 148 20 204 174 48 52 129 47 37 217 104 126 54 145 203 55 167 218 180 175 128 221 24 28 226 33 255 17 146 83 150 33 242 114 225 53 80 31 128 181 227 130 113 229 83 241 19 135 203 28 210 207 179 183 219 68 135)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 43 153 153 207 134 241 90 116 113 255 141 33 44 163 249 169 146 37 133 27 109 150 8 3 76 224 175 85 253 83 155 90 37 209 208 100 73 166 169 244 219 131 58 182 157 17 112 180 240 240 125 46 95 116 169 181 98 18 86 58 3 86 224 182)
  :der-encode
  #f
  :tests
  '(#(168
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(116 60 241 184 181 205 79 46 181 95 138 163 105 89 58 196 54 239 4 65 102 105 158 55 213 26 20 194 206 19 234 14 56 169 29 73 53 250 56 148 20 204 174 48 52 129 47 37 217 104 126 54 145 203 55 167 218 180 175 128 221 24 28 226)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 141 64 219 178 100 146 60 2 164 132 253 199 240 97 8 199 39 229 209 129 114 201 9 247 154 56 69 72 92 147 159 69 148 221 123 124 103 101 58 113 32 116 217 72 144 168 235 86 167 212 185 117 2 77 60 130 161 21 22 105 166 184 56 33)
  :der-encode
  #f
  :tests
  '(#(169
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(116 60 241 184 181 205 79 46 181 95 138 163 105 89 58 196 54 239 4 65 102 105 158 55 213 26 20 194 206 19 234 14 121 106 99 83 188 207 11 134 117 182 153 213 2 203 174 44 136 187 87 153 129 142 228 249 249 58 10 93 71 124 208 46)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 31 180 76 70 252 220 254 142 55 240 71 188 207 87 186 24 144 100 63 0 51 212 146 196 177 151 202 112 87 200 96 103 118 63 16 65 248 195 139 227 173 32 148 90 111 15 173 111 83 10 249 111 237 40 155 78 143 2 171 216 11 47 45 131)
  :der-encode
  #f
  :tests
  '(#(170
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(116 60 241 184 181 205 79 46 181 95 138 163 105 89 58 196 54 239 4 65 102 105 158 55 213 26 20 194 206 19 234 14 135 252 70 73 78 88 135 201 203 132 213 64 126 2 215 142 9 199 149 79 196 78 31 44 115 75 62 206 223 109 18 31)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 138 66 174 243 37 104 216 69 30 24 122 148 65 166 232 134 52 45 0 51 176 74 170 77 219 212 214 0 198 165 200 106 133 95 187 8 97 199 166 66 51 63 55 35 198 195 221 150 31 39 157 153 67 119 157 76 35 125 238 201 75 255 132 110)
  :der-encode
  #f
  :tests
  '(#(171
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(116 60 241 184 181 205 79 46 181 95 138 163 105 89 58 196 54 239 4 65 102 105 158 55 213 26 20 194 206 19 234 14 33 255 17 146 83 150 33 242 114 225 53 80 31 128 181 227 130 113 229 83 241 19 135 203 28 210 207 179 183 219 68 136)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 103 249 153 235 26 64 253 218 40 4 77 42 242 51 87 170 192 69 23 46 241 232 156 100 48 166 141 235 10 94 44 33 85 13 147 86 93 252 106 12 91 92 244 231 217 17 27 244 227 26 13 15 148 184 173 253 155 128 12 91 56 204 34 176)
  :der-encode
  #f
  :tests
  '(#(172
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(116 60 241 184 181 205 79 46 181 95 138 163 105 89 58 196 54 239 4 65 102 105 158 55 213 26 20 194 206 19 234 14 48 144 244 135 229 31 158 53 200 175 112 187 154 183 223 69 3 126 35 10 51 210 193 253 150 228 4 37 79 203 134 121)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 124 191 43 210 200 144 105 210 62 247 65 124 183 131 222 197 0 137 179 196 85 115 173 0 225 33 75 12 111 81 206 213 110 245 203 197 120 218 47 53 205 138 67 207 1 167 7 136 65 255 254 242 191 170 75 147 25 32 173 167 146 1 155 41)
  :der-encode
  #f
  :tests
  '(#(173
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(116 60 241 184 181 205 79 46 181 95 138 163 105 89 58 196 54 239 4 65 102 105 158 55 213 26 20 194 206 19 234 14 119 71 45 154 40 180 236 231 28 244 19 166 142 172 14 180 35 161 111 180 98 177 244 135 6 254 212 140 164 55 189 45)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 51 212 37 159 58 192 206 138 83 78 118 85 242 6 143 128 244 1 199 66 236 4 8 71 132 210 105 196 158 240 112 31 62 29 214 252 124 32 109 77 117 156 128 227 97 45 164 208 252 212 32 10 254 122 104 48 14 156 19 244 239 35 248 128)
  :der-encode
  #f
  :tests
  '(#(174
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(139 210 174 185 203 126 87 203 44 75 72 47 252 129 183 175 185 222 39 225 227 189 35 194 58 68 83 189 154 206 50 98 56 169 29 73 53 250 56 148 20 204 174 48 52 129 47 37 217 104 126 54 145 203 55 167 218 180 175 128 221 24 28 226)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 110 172 211 172 127 123 230 57 66 184 151 183 93 40 38 33 5 83 225 151 58 91 56 72 117 49 224 219 74 132 24 204 107 120 31 30 194 48 43 242 127 140 74 70 201 23 145 133 185 42 83 162 139 133 179 198 65 113 19 157 237 227 90 5)
  :der-encode
  #f
  :tests
  '(#(175
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(139 210 174 185 203 126 87 203 44 75 72 47 252 129 183 175 185 222 39 225 227 189 35 194 58 68 83 189 154 206 50 98 121 106 99 83 188 207 11 134 117 182 153 213 2 203 174 44 136 187 87 153 129 142 228 249 249 58 10 93 71 124 208 46)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 73 104 12 87 169 100 74 248 163 203 93 96 243 59 190 181 76 145 11 212 13 171 63 219 141 170 9 24 46 77 121 24 128 252 165 217 36 9 44 49 106 232 38 107 42 50 183 79 24 111 108 242 44 41 82 8 113 251 42 210 196 78 231 26)
  :der-encode
  #f
  :tests
  '(#(176
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(139 210 174 185 203 126 87 203 44 75 72 47 252 129 183 175 185 222 39 225 227 189 35 194 58 68 83 189 154 206 50 98 135 252 70 73 78 88 135 201 203 132 213 64 126 2 215 142 9 199 149 79 196 78 31 44 115 75 62 206 223 109 18 31)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 105 86 111 30 70 25 52 107 248 29 75 126 118 112 87 129 174 106 62 132 112 128 106 228 247 61 83 187 3 194 7 161 57 106 84 213 123 69 149 30 188 233 152 127 106 219 69 125 124 231 124 108 56 32 214 87 249 168 136 44 223 173 102 207)
  :der-encode
  #f
  :tests
  '(#(177
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(139 210 174 185 203 126 87 203 44 75 72 47 252 129 183 175 185 222 39 225 227 189 35 194 58 68 83 189 154 206 50 98 33 255 17 146 83 150 33 242 114 225 53 80 31 128 181 227 130 113 229 83 241 19 135 203 28 210 207 179 183 219 68 136)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 70 134 143 191 199 21 13 11 219 28 142 153 118 216 69 220 75 136 64 244 217 33 41 155 109 143 152 157 77 206 134 87 131 146 27 154 114 158 81 210 222 181 149 95 77 135 204 43 41 156 127 1 55 42 232 44 214 63 82 154 38 109 75 82)
  :der-encode
  #f
  :tests
  '(#(178
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(139 210 174 185 203 126 87 203 44 75 72 47 252 129 183 175 185 222 39 225 227 189 35 194 58 68 83 189 154 206 50 98 48 144 244 135 229 31 158 53 200 175 112 187 154 183 223 69 3 126 35 10 51 210 193 253 150 228 4 37 79 203 134 121)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 75 169 255 186 210 111 144 158 89 255 88 17 143 178 93 5 225 253 39 34 207 27 157 136 171 254 183 22 201 245 70 31 118 178 243 149 253 172 184 159 59 133 253 244 205 115 54 48 64 48 104 85 155 161 44 15 67 143 133 98 134 119 63 155)
  :der-encode
  #f
  :tests
  '(#(179
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(139 210 174 185 203 126 87 203 44 75 72 47 252 129 183 175 185 222 39 225 227 189 35 194 58 68 83 189 154 206 50 98 119 71 45 154 40 180 236 231 28 244 19 166 142 172 14 180 35 161 111 180 98 177 244 135 6 254 212 140 164 55 189 45)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 139 210 174 185 203 126 87 203 44 75 72 47 252 129 183 175 185 222 39 225 227 189 35 194 58 68 83 189 154 206 50 98 84 126 248 53 195 218 196 253 151 248 70 26 20 97 29 201 194 119 69 19 45 237 142 84 92 29 84 199 47 4 105 151)
  :der-encode
  #f
  :tests
  '(#(180
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(187 90 82 244 47 156 146 97 237 67 97 245 148 34 161 227 0 54 231 195 43 39 12 136 7 164 25 254 202 96 80 35 24 72 122 67 242 143 207 26 228 87 184 93 205 91 239 162 129 191 17 133 25 233 96 254 203 114 2 18 167 229 195 60)
      #f
      ())
    #(181
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(152 156 92 195 20 64 193 22 143 136 179 43 166 228 121 0 24 60 13 132 63 156 65 103 24 152 3 6 100 48 93 43 24 72 122 67 242 143 207 26 228 87 184 93 205 91 239 162 129 191 17 133 25 233 96 254 203 114 2 18 167 229 195 60)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 139 210 174 185 203 126 87 203 44 75 72 47 252 129 183 175 185 222 39 225 227 189 35 194 58 68 83 189 154 206 50 98 85 124 95 165 222 19 228 190 166 109 196 118 137 34 111 168 171 196 177 16 167 56 145 211 195 245 243 85 240 105 233 224)
  :der-encode
  #f
  :tests
  '(#(182
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(187 90 82 244 47 156 146 97 237 67 97 245 148 34 161 227 0 54 231 195 43 39 12 136 7 164 25 254 202 96 80 35 24 72 122 67 242 143 207 26 228 87 184 93 205 91 239 162 129 191 17 133 25 233 96 254 203 114 2 18 167 229 195 60)
      #f
      ())
    #(183
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(152 156 92 195 20 64 193 22 143 136 179 43 166 228 121 0 24 60 13 132 63 156 65 103 24 152 3 6 100 48 93 43 24 72 122 67 242 143 207 26 228 87 184 93 205 91 239 162 129 191 17 133 25 233 96 254 203 114 2 18 167 229 195 60)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 38 118 189 30 63 216 63 51 40 209 175 148 20 66 192 54 118 15 9 88 119 41 65 144 83 8 62 182 29 30 210 44 44 247 105 104 138 95 253 103 218 24 153 210 67 230 107 202 190 33 249 231 131 53 38 59 245 48 139 142 65 167 27 57)
  :der-encode
  #f
  :tests
  '(#(184
      "pseudorandom signature"
      #vu8()
      #vu8(116 91 225 218 144 45 25 199 108 143 87 212 161 243 54 43 75 32 237 124 141 232 252 4 99 213 102 121 95 151 156 234 89 22 195 23 161 227 37 181 55 53 33 106 15 163 119 55 240 139 50 36 92 136 8 72 23 180 104 164 31 90 254 233)
      #t
      ())
    #(185
      "pseudorandom signature"
      #vu8(77 115 103)
      #vu8(15 249 39 154 7 117 116 11 125 184 190 192 127 154 4 1 183 144 56 134 203 25 140 27 24 196 109 224 103 59 49 195 139 60 134 134 189 26 21 8 181 183 133 231 98 254 206 140 108 241 155 97 86 152 62 92 54 178 187 231 36 214 194 62)
      #t
      ())
    #(186
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(53 30 114 112 3 137 110 192 41 73 163 207 117 34 35 188 198 194 182 17 179 3 145 237 214 13 192 200 61 201 201 143 146 74 217 220 0 54 77 74 162 9 20 22 209 115 134 47 155 2 150 95 241 118 232 128 234 98 166 115 225 109 185 142)
      #t
      ())
    #(187
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(68 168 17 178 50 26 203 198 92 172 248 13 45 190 132 137 70 241 218 197 40 243 225 174 56 176 229 77 8 60 37 143 85 215 237 250 236 221 163 187 192 98 213 7 78 60 55 25 211 39 97 21 157 2 124 162 124 23 37 221 189 98 246 136)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 169 251 87 219 98 80 19 137 89 79 14 233 252 22 82 250 131 55 127 163 2 225 156 239 100 37 47 192 177 71 247 116 149 7 172 245 176 67 57 237 16 43 156 166 13 185 140 22 91 148 235 232 85 210 32 46 70 220 225 91 161 224 40 190)
  :der-encode
  #f
  :tests
  '(#(188
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(98 170 180 10 54 214 160 210 86 68 113 156 227 29 198 41 236 104 79 111 13 163 47 157 208 52 204 196 33 219 208 237 161 250 107 13 253 149 88 218 41 55 79 183 117 5 238 138 179 87 33 97 113 31 130 29 17 128 124 127 255 145 12 28)
      #t
      ())
    #(189
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(116 12 211 211 169 205 157 190 5 234 212 227 158 84 219 39 192 241 87 157 166 142 58 165 201 36 91 4 122 235 195 184 138 231 140 18 35 61 55 143 226 206 60 15 178 183 105 248 70 56 48 167 26 94 81 135 193 27 32 253 215 229 4 69)
      #t
      ())
    #(190
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(162 143 48 36 92 95 176 194 37 253 236 35 146 77 194 205 76 45 168 136 209 238 27 197 68 88 88 198 70 1 92 168 14 227 100 193 73 28 69 81 239 53 9 190 143 136 219 14 4 208 175 179 101 40 174 218 19 1 177 73 72 204 156 214)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 53 26 69 251 146 15 44 159 27 23 132 56 250 59 242 114 255 147 40 184 129 196 119 161 245 106 140 14 136 70 82 118 18 112 248 6 254 64 173 151 235 247 108 104 37 56 75 120 10 230 175 204 199 146 176 95 47 179 235 123 127 255 255 255)
  :der-encode
  #f
  :tests
  '(#(191
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(127 32 47 84 245 145 181 17 5 178 39 238 109 109 163 173 221 252 75 94 129 158 252 4 190 252 220 191 116 132 247 131 67 96 234 4 80 57 85 252 63 2 89 40 178 220 229 15 242 213 139 144 96 179 75 190 223 195 194 25 179 180 53 91)
      #t
      ())
    #(192
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(98 226 24 220 163 46 78 243 86 146 233 49 94 30 3 107 239 23 102 7 59 132 110 56 222 32 210 210 147 73 249 254 81 157 77 76 97 88 217 84 116 215 147 160 238 156 38 10 12 84 105 197 170 183 149 16 151 27 65 251 79 174 75 175)
      #t
      ())
    #(193
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(163 144 34 149 246 247 67 172 117 77 183 179 252 216 35 190 145 123 17 145 165 112 87 40 245 104 36 146 120 77 167 241 67 222 246 54 102 14 255 114 230 67 94 219 133 12 145 38 199 6 121 56 102 143 36 153 152 160 228 0 107 142 231 219)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 0 0 0 1 41 178 20 110 54 252 5 85 69 191 143 44 199 15 142 115 232 178 94 83 147 101 173 117 119 204 53 53 74 43 140 3 25 188 76 205 62 96 218 17 148 119 194 63 175 143 194 220 239 196 45 58 247 88 39 174 180 47 111 15)
  :der-encode
  #f
  :tests
  '(#(194
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(134 208 91 38 169 202 126 16 174 6 129 187 76 53 160 109 122 78 145 143 134 37 227 223 167 172 45 90 237 169 28 5 8 197 244 117 169 88 136 118 157 164 160 225 182 53 194 41 47 101 79 147 74 92 80 16 254 12 114 159 61 17 225 177)
      #t
      ())
    #(195
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(67 196 71 71 16 210 80 148 162 226 26 156 192 133 133 194 96 21 249 249 64 18 177 0 231 44 7 99 170 158 12 255 131 69 196 111 213 89 44 239 189 94 187 37 137 101 192 93 150 78 110 106 39 129 152 221 193 227 136 207 30 117 134 124)
      #t
      ())
    #(196
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(109 39 36 22 126 129 101 40 73 28 206 87 79 5 38 32 157 229 44 208 242 175 0 133 40 79 208 80 22 61 55 197 118 221 29 213 15 249 181 83 176 225 66 183 230 198 190 142 223 55 8 221 41 47 3 243 233 191 21 125 33 218 169 235)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 104 11 236 171 231 215 223 79 173 254 90 224 31 186 94 165 27 118 117 150 6 162 227 6 18 230 103 65 155 136 93 5 8 84 29 203 7 35 120 92 60 118 101 129 167 81 74 31 244 46 68 55 214 63 135 130 113 203 134 15 0 0 0 0)
  :der-encode
  #f
  :tests
  '(#(197
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(50 16 9 160 108 117 156 84 205 102 186 175 160 203 253 7 238 219 25 241 42 30 214 84 221 82 181 111 156 79 172 124 25 86 49 10 126 71 87 236 131 221 185 45 39 99 96 115 84 103 129 73 241 173 146 56 121 40 207 136 123 75 237 15)
      #t
      ())
    #(198
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(155 221 53 152 129 194 57 226 65 92 162 175 61 24 70 59 178 75 229 63 111 99 108 189 32 54 11 107 51 59 195 69 15 240 59 195 108 193 151 91 220 134 128 196 79 191 42 239 221 246 124 17 140 48 75 139 61 54 14 177 2 3 195 164)
      #t
      ())
    #(199
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(72 86 94 183 231 130 13 64 117 75 95 38 74 76 234 250 98 191 117 8 66 65 81 75 73 25 149 231 151 30 105 149 61 166 223 61 53 79 72 218 239 109 7 140 241 18 66 149 252 140 50 17 242 117 121 103 199 129 220 46 156 98 237 26)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 125 22 253 101 106 158 107 52 228 93 140 140 59 69 142 174 123 188 40 121 248 180 246 17 113 169 111 102 78 238 144 97 0 0 0 1 70 159 180 86 202 106 23 32 202 141 178 93 86 126 18 28 249 33 206 19 227 64 0 248 193 47 82 114)
  :der-encode
  #f
  :tests
  '(#(200
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(81 142 136 93 239 2 46 181 2 15 201 15 64 36 216 113 34 220 15 62 215 248 105 237 119 32 255 116 160 9 251 123 138 62 38 168 205 66 109 33 235 165 205 122 86 20 243 100 67 149 207 206 203 36 254 118 10 104 167 169 232 240 156 2)
      #t
      ())
    #(201
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(4 176 30 92 195 206 155 241 8 68 188 28 178 29 238 255 110 188 158 42 112 16 207 187 58 240 129 19 84 89 156 129 46 101 251 141 182 47 37 89 16 234 77 82 53 187 33 170 103 170 89 255 213 25 145 30 205 152 147 0 10 182 123 180)
      #t
      ())
    #(202
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(148 187 6 1 25 140 76 226 102 176 147 36 38 255 208 1 50 215 212 226 222 101 239 71 245 99 96 130 95 38 36 56 39 52 50 125 25 137 201 88 15 84 88 240 74 172 111 213 117 42 30 229 226 54 233 237 26 124 11 45 155 54 219 16)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 125 22 253 101 106 158 107 52 228 93 140 140 59 69 142 174 123 188 40 121 248 180 246 17 113 169 111 102 78 238 144 97 169 251 87 218 91 78 245 101 115 251 243 111 210 245 219 21 23 189 228 6 220 4 82 20 60 211 71 36 94 63 1 5)
  :der-encode
  #f
  :tests
  '(#(203
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(77 222 25 127 150 44 99 167 121 156 134 46 137 123 59 177 231 167 221 251 154 183 124 42 23 165 65 81 206 96 74 214 1 126 122 239 134 229 51 8 100 37 162 196 179 32 130 241 24 145 62 243 102 124 132 55 103 46 11 188 124 43 141 126)
      #t
      ())
    #(204
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(124 83 237 29 80 74 212 186 83 211 151 146 1 42 52 208 7 37 10 43 141 28 161 137 192 217 247 92 204 154 153 87 9 185 125 204 92 103 72 113 20 35 29 96 19 116 168 54 76 175 163 149 129 41 23 98 32 43 146 21 213 17 53 253)
      #t
      ())
    #(205
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(81 50 69 171 43 106 66 6 187 15 105 112 200 173 4 10 148 114 93 220 154 8 219 15 217 222 249 56 102 255 187 161 165 58 122 179 125 236 237 174 24 221 91 92 72 235 100 43 122 156 146 126 107 207 107 218 195 167 87 230 210 193 105 197)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 129 82 139 122 219 190 191 27 107 60 127 161 214 18 132 176 119 89 185 169 141 49 165 112 39 7 176 24 253 236 255 17 117 187 252 203 84 83 129 191 134 1 3 23 49 132 24 41 64 27 8 220 220 104 204 52 224 106 100 228 18 3 133 18)
  :der-encode
  #f
  :tests
  '(#(206
      "x-coordinate of the public key has many trailing 1's on brainpoolP256t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(165 3 24 195 6 106 73 102 173 24 174 143 133 37 63 187 88 53 163 75 47 145 135 218 172 113 238 40 211 213 208 235 8 144 239 15 201 61 242 34 209 17 151 203 34 20 131 206 137 123 12 241 172 244 169 9 195 6 197 164 133 119 106 188)
      #t
      ("GroupIsomorphism"))
    #(207
      "x-coordinate of the public key has many trailing 1's on brainpoolP256t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(4 30 3 137 221 162 207 42 227 169 86 42 15 181 212 28 31 117 51 230 204 132 168 150 233 154 247 129 226 16 151 112 54 107 93 136 195 111 18 39 223 82 47 218 182 94 18 52 125 104 235 100 242 222 130 198 72 17 95 213 101 189 55 183)
      #t
      ("GroupIsomorphism"))
    #(208
      "x-coordinate of the public key has many trailing 1's on brainpoolP256t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(42 118 57 74 4 174 25 178 92 84 41 30 40 188 212 42 126 222 178 9 129 184 163 184 56 249 221 14 41 181 116 193 156 232 153 128 174 67 44 79 166 166 128 37 218 85 75 249 0 204 46 176 198 105 6 66 13 50 44 20 180 83 4 156)
      #t
      ("GroupIsomorphism"))))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 163 162 90 53 60 170 148 172 78 237 55 0 247 213 107 69 106 15 198 112 213 106 22 109 82 25 183 201 127 48 239 62 22 234 142 3 194 9 119 242 10 237 88 16 107 109 157 16 133 180 71 95 117 181 70 156 95 66 108 178 126 198 216 114)
  :der-encode
  #f
  :tests
  '(#(209
      "y-coordinate of the public key is small on brainpoolP256t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(102 149 139 227 55 148 5 130 106 0 218 245 73 91 22 87 105 129 38 165 255 68 159 150 73 175 38 202 150 223 150 103 155 65 0 129 110 39 65 248 108 92 11 13 207 130 229 121 244 40 29 43 142 112 194 52 128 141 132 193 164 149 7 159)
      #t
      ("GroupIsomorphism"))
    #(210
      "y-coordinate of the public key is small on brainpoolP256t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(83 237 15 75 143 179 62 242 119 205 209 6 4 53 237 61 236 81 138 34 86 89 247 31 103 249 161 240 127 133 193 202 18 77 95 148 221 241 43 180 203 227 197 206 166 210 104 109 68 128 218 187 143 251 176 94 82 56 200 119 254 32 56 62)
      #t
      ("GroupIsomorphism"))
    #(211
      "y-coordinate of the public key is small on brainpoolP256t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(70 100 60 127 224 243 8 184 175 76 226 151 141 121 126 140 70 167 225 248 191 238 11 92 219 174 205 225 245 155 228 29 27 209 26 129 77 31 189 154 233 122 73 223 153 190 202 127 236 37 18 86 60 0 49 197 170 213 185 252 47 176 165 7)
      #t
      ("GroupIsomorphism"))))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 163 162 90 53 60 170 148 172 78 237 55 0 247 213 107 69 106 15 198 112 213 106 22 109 82 25 183 201 127 48 239 62 147 16 201 215 223 229 49 202 51 120 178 128 50 21 240 97 232 135 174 196 95 112 217 139 192 208 219 106 160 167 123 5)
  :der-encode
  #f
  :tests
  '(#(212
      "y-coordinate of the public key is large on brainpoolP256t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(79 131 59 236 156 128 24 91 234 203 183 59 95 152 78 44 3 217 34 53 155 231 70 140 227 117 132 245 61 26 234 74 102 54 116 74 183 254 202 165 53 65 188 245 243 124 108 190 130 138 142 251 196 208 15 100 105 186 57 10 134 112 138 38)
      #t
      ("GroupIsomorphism"))
    #(213
      "y-coordinate of the public key is large on brainpoolP256t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(162 134 157 164 22 82 58 173 43 143 168 170 213 195 179 28 90 83 95 221 65 59 113 175 77 255 185 12 111 150 166 105 41 255 62 141 73 156 171 195 204 76 204 208 250 129 28 195 176 71 112 170 113 240 208 82 24 82 16 177 77 49 153 61)
      #t
      ("GroupIsomorphism"))
    #(214
      "y-coordinate of the public key is large on brainpoolP256t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(99 219 254 41 36 154 80 107 137 251 210 203 31 175 194 84 169 88 45 252 75 8 209 67 182 210 91 242 171 73 213 94 68 202 216 12 0 70 9 5 225 3 242 109 168 76 239 215 26 244 188 122 113 150 42 59 206 50 27 195 181 132 39 54)
      #t
      ("GroupIsomorphism"))))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 109 73 155 7 122 182 215 123 36 67 32 162 202 202 185 26 118 69 149 221 103 167 168 223 207 132 218 125 56 178 216 244 89 148 192 123 131 63 244 144 156 26 146 204 159 36 222 168 139 232 96 59 64 123 0 210 40 250 242 21 141 178 53 79)
  :der-encode
  #f
  :tests
  '(#(215
      "y-coordinate of the public key has many trailing 1's on brainpoolP256t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(157 144 124 248 142 16 214 12 63 35 137 36 152 254 67 221 176 47 130 79 177 142 107 227 19 224 45 148 242 200 224 144 12 22 185 224 219 77 200 96 108 2 59 0 31 105 179 200 134 8 7 148 252 157 127 227 27 0 193 207 9 53 228 33)
      #t
      ("GroupIsomorphism"))
    #(216
      "y-coordinate of the public key has many trailing 1's on brainpoolP256t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(115 149 206 14 246 82 132 138 134 182 16 151 204 149 67 153 141 57 218 232 138 31 201 228 223 221 105 100 41 73 84 137 125 226 158 37 110 130 2 56 47 145 193 22 166 103 168 185 70 242 16 68 122 87 54 155 166 26 228 250 231 61 209 54)
      #t
      ("GroupIsomorphism"))
    #(217
      "y-coordinate of the public key has many trailing 1's on brainpoolP256t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(123 175 31 222 135 204 177 190 160 248 147 179 191 178 84 156 4 188 161 136 53 216 235 90 49 184 210 5 6 255 136 195 40 158 190 130 159 239 185 173 0 157 124 221 98 40 116 174 245 250 8 143 5 8 164 180 61 88 149 214 22 69 206 207)
      #t
      ("GroupIsomorphism"))))
(test-signature/testvector
  "ecdsa_brainpoolP256r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 90 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 7 3 66 0 4 8 194 249 95 254 221 225 213 94 63 44 157 207 88 132 52 127 105 4 198 73 34 115 173 118 14 183 185 179 95 3 107 43 207 122 4 140 170 44 114 106 232 128 141 201 83 18 235 35 80 39 90 143 79 190 234 124 15 50 243 131 156 123 147)
  :der-encode
  #f
  :tests
  '(#(218
      "x-coordinate of the public key is large on brainpoolP256t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(51 227 124 59 102 172 171 238 61 104 203 187 156 85 205 82 181 134 222 81 100 119 35 250 132 229 50 163 236 89 83 239 59 138 158 231 7 209 188 95 131 225 126 160 114 173 194 236 218 146 230 55 215 192 96 96 241 175 121 185 41 168 80 179)
      #t
      ("GroupIsomorphism"))
    #(219
      "x-coordinate of the public key is large on brainpoolP256t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(31 142 189 201 78 205 221 132 249 9 96 204 85 208 202 2 227 61 112 83 95 193 199 50 43 60 39 131 185 220 146 56 32 90 168 98 108 58 93 162 20 229 72 91 17 21 74 55 141 112 176 211 50 58 184 104 82 138 232 4 141 23 182 150)
      #t
      ("GroupIsomorphism"))
    #(220
      "x-coordinate of the public key is large on brainpoolP256t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(107 13 112 224 155 161 100 42 218 192 109 255 155 82 226 42 62 74 171 65 128 227 114 102 86 145 65 34 65 231 67 160 77 125 48 255 138 33 13 230 158 62 109 30 207 113 117 248 159 72 26 77 158 208 107 234 247 20 141 164 127 74 249 233)
      #t
      ("GroupIsomorphism"))))
