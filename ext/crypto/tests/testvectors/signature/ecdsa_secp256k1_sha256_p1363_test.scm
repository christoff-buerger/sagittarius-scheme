(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 184 56 255 68 229 188 23 123 242 17 137 208 118 96 130 252 157 132 50 38 136 127 201 118 3 113 16 11 126 226 10 111 240 201 215 91 251 167 179 26 107 202 25 116 73 110 235 86 222 53 112 113 149 93 131 196 177 186 218 160 178 24 50 233)
  :der-encode
  #f
  :tests
  '(#(1
      "signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(129 62 247 156 206 250 154 86 247 186 128 95 14 71 133 132 254 95 13 213 245 103 188 9 181 18 60 203 201 131 35 101 144 14 117 173 35 63 204 144 133 9 219 255 89 34 100 125 179 124 33 244 175 211 32 58 232 220 74 231 121 75 15 135)
      #t
      ())
    #(2
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(1 129 62 247 156 206 250 154 86 247 186 128 95 14 71 133 131 185 13 234 188 164 176 92 69 116 228 155 88 153 185 100 166 0 111 241 138 82 220 192 51 111 122 246 36 0 166 221 155 129 7 50 186 241 255 117 128 0 214 246 19 165 86 235 49 186)
      #f
      ())
    #(3
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(126 193 8 99 49 5 101 169 8 69 127 160 241 184 122 121 188 79 207 16 185 224 228 50 10 192 33 193 6 179 29 220 111 241 138 82 220 192 51 111 122 246 36 0 166 221 155 129 7 50 186 241 255 117 128 0 214 246 19 165 86 235 49 186)
      #f
      ())
    #(4
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(1 129 62 247 156 206 250 154 86 247 186 128 95 14 71 133 132 254 95 13 213 245 103 188 9 181 18 60 203 201 131 35 101 0 111 241 138 82 220 192 51 111 122 246 36 0 166 221 155 129 7 50 186 241 255 117 128 0 214 246 19 165 86 235 49 186)
      #f
      ())
    #(5
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(126 193 8 99 49 5 101 169 8 69 127 160 241 184 122 123 1 160 242 42 10 152 67 246 74 237 195 52 54 124 220 155 111 241 138 82 220 192 51 111 122 246 36 0 166 221 155 129 7 50 186 241 255 117 128 0 214 246 19 165 86 235 49 186)
      #f
      ())
    #(6
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(0 129 62 247 156 206 250 154 86 247 186 128 95 14 71 133 132 254 95 13 213 245 103 188 9 181 18 60 203 201 131 35 101 1 111 241 138 82 220 192 51 111 122 246 36 0 166 221 155 127 193 225 151 216 174 190 32 60 150 200 114 50 39 33 114 251)
      #f
      ())
    #(7
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(0 129 62 247 156 206 250 154 86 247 186 128 95 14 71 133 132 254 95 13 213 245 103 188 9 181 18 60 203 201 131 35 101 1 111 241 138 82 220 192 51 111 122 246 36 0 166 221 155 129 7 50 186 241 255 117 128 0 214 246 19 165 86 235 49 186)
      #f
      ())
    #(8
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(129 62 247 156 206 250 154 86 247 186 128 95 14 71 133 132 254 95 13 213 245 103 188 9 181 18 60 203 201 131 35 101 144 14 117 173 35 63 204 144 133 9 219 255 89 34 100 126 248 205 69 14 0 138 127 255 41 9 236 90 169 20 206 70)
      #f
      ())
    #(9
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(10
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(11
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(12
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(13
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(14
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(15
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(16
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(17
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(18
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(19
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(20
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(21
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(22
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(23
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(24
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(25
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(26
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(27
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(28
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(29
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(30
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(31
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(32
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(33
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(34
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(35
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(36
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(37
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(38
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(39
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(40
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(41
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(42
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(43
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(44
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(45
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(46
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(47
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(48
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(49
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(50
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(51
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(52
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(53
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(54
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(55
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(56
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(57
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(58
      "Edge case for Shamir multiplication"
      #vu8(50 53 53 56 53)
      #vu8(221 27 125 9 167 189 130 24 150 16 52 163 154 135 254 207 83 20 240 12 77 37 235 88 160 122 200 94 133 234 181 22 53 19 140 64 30 248 211 73 61 101 201 0 47 230 43 67 174 229 104 115 27 116 69 72 53 137 150 217 204 66 126 6)
      #t
      ())
    #(59
      "special case hash"
      #vu8(52 50 54 52 55 57 55 50 52)
      #vu8(149 194 146 103 217 114 160 67 217 85 34 69 70 34 43 186 52 63 193 212 219 15 236 38 42 51 172 97 48 86 150 174 110 223 233 103 19 174 213 111 138 40 166 101 63 87 224 184 41 113 46 94 221 198 127 52 104 43 36 240 103 107 38 64)
      #t
      ())
    #(60
      "special case hash"
      #vu8(55 49 51 56 54 56 52 56 57 49)
      #vu8(40 249 74 137 78 146 2 70 153 227 69 254 102 151 30 62 220 208 80 2 51 134 19 90 179 147 157 85 8 152 251 37 205 105 193 164 43 224 90 110 225 39 12 130 20 121 37 30 19 76 33 133 141 128 11 218 111 78 152 179 113 150 35 142)
      #t
      ())
    #(61
      "special case hash"
      #vu8(49 48 51 53 57 51 51 49 54 54 56)
      #vu8(190 38 177 143 149 73 248 159 65 26 155 82 83 107 21 170 39 11 132 84 141 14 133 154 25 82 162 122 241 167 122 198 143 62 43 5 99 47 195 55 21 87 42 249 18 70 129 17 63 43 132 50 91 128 21 76 4 74 84 77 193 168 250 18)
      #t
      ())
    #(62
      "special case hash"
      #vu8(51 57 52 57 52 48 49 50 49 53)
      #vu8(177 164 177 71 142 101 204 62 175 223 34 93 18 152 180 63 45 161 158 75 207 247 234 204 10 46 152 205 75 116 177 20 232 101 92 225 207 179 62 189 48 175 140 232 232 174 77 111 123 80 205 62 34 175 81 191 105 224 162 133 23 96 213 43)
      #t
      ())
    #(63
      "special case hash"
      #vu8(49 51 52 52 50 57 51 48 55 57)
      #vu8(50 83 50 2 18 97 241 189 24 242 113 42 161 226 37 45 162 55 150 218 138 75 31 246 234 24 202 254 199 225 113 242 64 180 245 226 135 238 97 252 60 128 65 134 152 35 96 137 30 170 53 199 95 5 164 62 205 72 179 93 152 74 102 72)
      #t
      ())
    #(64
      "special case hash"
      #vu8(51 55 48 54 50 49 49 55 49 50)
      #vu8(162 58 209 141 143 198 109 129 175 9 3 137 12 189 69 58 85 76 176 76 220 26 140 167 247 247 142 83 103 237 136 160 220 28 20 211 30 63 177 88 183 60 118 66 104 200 181 85 121 115 74 126 42 44 155 94 229 217 208 20 78 246 82 235)
      #t
      ())
    #(65
      "special case hash"
      #vu8(51 52 51 54 56 56 55 49 50)
      #vu8(43 222 164 28 218 99 162 209 75 244 115 83 189 32 136 10 105 9 1 222 124 214 227 204 109 142 213 186 12 219 16 145 195 21 153 67 48 54 6 64 115 131 91 30 62 186 131 53 166 80 200 253 120 111 148 254 35 90 215 212 29 201 76 122)
      #t
      ())
    #(66
      "special case hash"
      #vu8(49 51 53 49 53 51 48 51 55 48)
      #vu8(215 205 118 236 1 193 177 7 158 186 158 42 162 163 151 36 60 71 88 201 138 27 160 183 64 74 52 11 155 0 206 214 202 138 255 225 230 38 221 25 33 116 194 147 123 21 188 72 247 123 91 223 224 31 7 58 138 234 247 242 77 198 200 91)
      #t
      ())
    #(67
      "special case hash"
      #vu8(54 53 53 51 50 48 51 49 50 54)
      #vu8(168 114 199 68 217 54 219 33 161 12 54 29 213 201 6 51 85 248 73 2 33 150 82 246 252 86 220 149 167 19 157 150 64 13 247 87 93 151 86 33 14 156 204 119 22 44 107 89 60 119 70 207 180 138 194 99 196 39 80 180 33 239 75 185)
      #t
      ())
    #(68
      "special case hash"
      #vu8(49 53 54 52 51 52 54 54 48 51)
      #vu8(159 169 175 224 119 82 218 16 179 109 58 252 208 254 68 191 196 2 68 215 82 3 89 156 248 245 4 127 163 69 56 84 175 31 88 63 236 64 64 174 126 104 201 104 210 187 75 73 78 236 58 51 237 199 192 204 249 95 127 117 188 37 105 199)
      #t
      ())
    #(69
      "special case hash"
      #vu8(52 52 50 57 53 51 57 49 49 55)
      #vu8(136 86 64 56 77 13 145 14 251 23 123 70 190 108 61 197 202 200 31 11 136 195 25 11 182 181 249 156 38 65 242 5 115 142 217 191 241 22 48 109 156 170 15 143 198 8 190 36 62 11 86 119 121 216 218 176 62 142 25 213 83 241 220 142)
      #t
      ())
    #(70
      "special case hash"
      #vu8(49 48 57 53 51 50 54 49 51 53 49)
      #vu8(45 5 31 145 197 169 212 64 197 103 105 133 113 4 131 188 79 26 108 97 27 16 201 90 47 240 54 61 144 194 164 88 146 32 107 25 4 90 65 167 151 204 47 58 195 13 233 81 129 101 233 109 91 134 52 30 203 59 207 242 49 179 253 101)
      #t
      ())
    #(71
      "special case hash"
      #vu8(53 57 56 55 51 53 48 48 52 49)
      #vu8(243 172 37 35 150 116 130 245 61 80 133 34 113 45 88 63 67 121 205 130 65 1 255 99 94 160 147 81 23 186 165 79 39 241 8 18 34 115 151 224 44 234 150 251 14 104 7 97 99 109 171 43 8 13 31 197 209 22 133 203 232 80 12 254)
      #t
      ())
    #(72
      "special case hash"
      #vu8(51 52 54 51 48 48 54 56 55 56)
      #vu8(150 68 124 246 140 58 183 38 110 215 68 125 227 172 82 254 215 204 8 203 223 234 57 28 24 169 184 171 55 11 201 19 240 161 135 139 44 83 241 110 112 254 55 122 94 156 110 134 241 138 228 128 162 43 180 153 245 179 46 113 9 192 115 133)
      #t
      ())
    #(73
      "special case hash"
      #vu8(57 56 49 55 51 50 48 50 56 55)
      #vu8(83 10 8 50 182 145 218 11 86 25 160 177 29 230 135 127 60 9 113 186 170 104 237 18 39 88 194 156 170 244 107 114 147 118 27 176 161 76 207 159 21 180 185 206 115 198 236 112 11 208 21 184 203 28 250 197 104 55 244 70 63 83 7 78)
      #t
      ())
    #(74
      "special case hash"
      #vu8(51 50 50 50 48 52 49 48 52 54)
      #vu8(156 84 194 85 0 189 224 185 45 114 214 236 72 61 194 72 47 54 84 41 76 167 77 231 150 182 129 37 94 213 138 119 152 139 172 57 74 144 173 137 206 54 9 132 192 193 73 220 189 38 132 187 100 73 138 206 144 188 246 182 175 28 23 14)
      #t
      ())
    #(75
      "special case hash"
      #vu8(54 54 54 54 51 48 55 49 48 52)
      #vu8(231 144 157 65 67 158 47 106 242 145 54 199 52 140 162 100 26 43 7 13 91 100 249 30 169 218 112 112 199 162 97 139 66 215 130 241 50 250 29 54 194 200 139 162 124 61 103 141 128 24 74 93 30 204 172 117 1 240 180 126 61 32 80 8)
      #t
      ())
    #(76
      "special case hash"
      #vu8(49 48 51 53 57 53 49 56 57 56)
      #vu8(89 36 135 50 9 89 49 53 164 195 218 123 179 129 34 127 138 75 106 169 243 79 229 187 127 143 188 19 26 3 159 254 224 228 78 228 187 227 112 21 91 240 187 222 194 101 191 159 227 28 7 70 250 171 68 109 230 46 54 49 234 205 17 31)
      #t
      ())
    #(77
      "special case hash"
      #vu8(49 56 52 54 53 57 55 49 57 53)
      #vu8(238 182 146 201 178 98 150 155 35 28 56 181 167 246 6 73 224 200 117 205 100 223 136 243 58 165 113 250 61 41 171 14 33 139 58 30 176 99 121 194 193 140 245 27 6 67 7 134 209 198 76 210 210 76 155 35 43 35 229 186 199 152 154 205)
      #t
      ())
    #(78
      "special case hash"
      #vu8(51 49 51 54 48 52 54 49 56 57)
      #vu8(164 0 52 23 127 54 9 28 43 101 54 132 160 227 235 93 75 255 24 228 208 159 102 76 40 0 231 202 253 161 218 248 58 62 194 152 83 112 78 82 3 28 88 146 122 128 10 150 131 83 173 195 217 115 190 186 145 114 203 190 171 77 209 73)
      #t
      ())
    #(79
      "special case hash"
      #vu8(50 54 54 51 55 56 52 50 53 52)
      #vu8(181 215 149 204 117 206 165 196 52 250 65 133 24 12 214 189 33 34 63 61 90 134 218 102 112 215 29 149 104 13 173 191 171 27 39 126 245 255 225 52 70 8 53 227 209 64 36 97 186 16 76 181 11 22 243 151 253 199 169 171 254 254 242 128)
      #t
      ())
    #(80
      "special case hash"
      #vu8(49 54 53 50 49 48 48 53 50 52)
      #vu8(7 220 36 120 212 60 18 50 164 89 86 8 198 68 38 195 85 16 5 26 99 26 230 165 166 235 17 97 229 126 66 225 74 89 234 15 219 114 209 33 101 206 163 191 28 168 107 169 117 23 189 24 141 179 219 210 26 90 21 120 80 2 25 132)
      #t
      ())
    #(81
      "special case hash"
      #vu8(53 55 52 56 48 56 49 54 57 54)
      #vu8(221 210 12 74 5 89 108 168 104 181 88 131 159 206 159 101 17 221 216 61 28 203 83 248 46 82 105 213 89 160 21 82 164 110 140 184 214 38 207 108 0 221 237 195 181 218 126 97 58 195 118 68 94 226 96 116 63 6 247 144 84 199 212 42)
      #t
      ())
    #(82
      "special case hash"
      #vu8(54 51 52 51 57 49 51 52 54 56)
      #vu8(156 222 110 14 222 10 0 63 2 253 160 160 27 89 250 207 229 222 192 99 49 143 39 156 226 222 122 155 16 98 247 183 40 134 165 184 198 121 189 248 34 76 102 249 8 253 98 5 73 44 183 11 0 104 212 106 228 243 58 65 73 177 42 82)
      #t
      ())
    #(83
      "special case hash"
      #vu8(49 53 52 49 49 48 51 53 57 56)
      #vu8(197 119 16 22 208 221 99 87 20 60 137 246 132 205 116 4 35 80 37 84 192 197 154 168 201 149 132 241 255 56 246 9 171 75 250 11 184 138 185 151 145 185 179 171 156 75 2 189 42 87 174 141 222 80 185 6 64 99 252 248 83 21 207 229)
      #t
      ())
    #(84
      "special case hash"
      #vu8(49 48 52 55 56 53 56 48 49 50 56)
      #vu8(162 78 188 14 194 36 189 103 174 57 124 190 111 163 123 49 37 173 189 52 137 26 190 45 124 115 86 146 25 22 223 230 52 246 235 99 116 115 27 187 175 196 146 79 184 176 189 205 218 73 69 109 114 76 218 230 23 141 135 1 76 181 61 140)
      #t
      ())
    #(85
      "special case hash"
      #vu8(49 48 53 51 54 50 56 53 53 54 56)
      #vu8(37 87 214 74 122 238 46 9 49 192 18 228 254 161 205 58 44 51 78 218 230 140 222 183 21 140 175 33 182 142 90 36 128 249 50 68 149 111 253 197 104 199 125 18 104 79 127 0 79 169 45 167 230 10 233 74 27 152 196 34 226 62 218 52)
      #t
      ())
    #(86
      "special case hash"
      #vu8(57 53 51 57 48 52 49 48 53)
      #vu8(196 242 236 203 182 162 67 80 200 70 100 80 185 214 27 32 126 227 89 224 55 179 220 237 180 42 63 46 109 214 174 181 205 156 57 74 101 208 170 50 46 57 30 183 107 42 26 104 127 134 32 168 138 222 243 160 30 184 228 251 5 182 71 122)
      #t
      ())
    #(87
      "special case hash"
      #vu8(57 55 56 56 52 56 48 51 57)
      #vu8(239 240 71 129 201 203 205 22 45 10 37 166 226 235 204 164 53 6 197 35 56 92 181 21 212 158 163 138 27 18 252 173 234 83 40 206 107 54 229 106 184 122 203 13 207 234 73 139 206 193 187 168 106 6 82 104 246 239 243 196 28 75 12 156)
      #t
      ())
    #(88
      "special case hash"
      #vu8(51 54 49 48 54 55 50 52 52 50)
      #vu8(245 139 78 49 16 166 75 241 181 219 151 99 158 224 229 169 200 223 164 157 197 155 103 152 145 245 32 253 240 88 76 135 211 39 1 174 119 117 17 98 76 31 138 187 240 43 36 139 4 231 169 235 39 147 143 82 79 62 136 40 186 64 22 74)
      #t
      ())
    #(89
      "special case hash"
      #vu8(49 48 53 52 50 52 48 55 48 53)
      #vu8(248 171 236 170 79 12 80 45 228 191 89 3 212 132 23 247 134 191 146 232 173 114 254 192 189 127 203 120 0 192 187 227 76 127 158 35 16 118 163 11 122 227 107 12 235 230 156 206 241 205 25 79 124 206 147 165 88 143 214 129 79 67 124 14)
      #t
      ())
    #(90
      "special case hash"
      #vu8(53 49 55 52 52 52 56 49 57 55)
      #vu8(93 91 56 189 55 173 73 139 34 39 166 51 38 138 140 202 135 154 92 124 148 164 228 22 189 10 97 77 9 230 6 210 18 184 214 100 234 153 145 6 46 203 184 52 229 132 0 226 92 70 0 122 248 79 96 7 215 241 104 84 67 38 154 254)
      #t
      ())
    #(91
      "special case hash"
      #vu8(49 57 54 55 53 54 49 50 53 49)
      #vu8(12 28 217 254 64 52 240 134 162 181 45 101 185 211 131 77 114 174 190 127 51 223 232 249 118 218 130 100 129 119 216 227 19 16 87 130 227 208 207 232 92 39 120 222 193 168 72 178 122 192 174 7 26 166 218 52 26 149 83 169 70 180 30 89)
      #t
      ())
    #(92
      "special case hash"
      #vu8(51 52 52 55 50 53 51 51 52 51)
      #vu8(174 121 53 251 150 255 36 107 123 93 86 98 135 13 27 165 135 176 61 110 19 96 186 244 121 136 181 192 44 204 26 91 95 0 195 35 39 32 131 120 45 74 89 242 223 214 94 73 222 6 147 98 112 22 144 14 247 230 20 40 5 102 100 179)
      #t
      ())
    #(93
      "special case hash"
      #vu8(51 54 56 50 54 52 51 49 56)
      #vu8(0 161 52 181 198 204 188 239 212 200 130 185 69 186 235 73 51 68 65 114 121 95 166 121 106 174 20 144 103 84 112 152 169 145 185 239 162 219 39 111 234 225 193 21 193 64 119 9 1 131 157 135 230 14 126 196 90 43 129 207 59 67 123 230)
      #t
      ())
    #(94
      "special case hash"
      #vu8(51 50 54 49 49 57 56 54 48 56)
      #vu8(46 71 33 54 58 211 153 44 19 158 90 28 38 57 93 44 45 119 120 36 170 36 253 224 117 224 215 56 17 113 48 157 139 240 131 182 187 231 30 207 242 43 174 208 135 213 167 126 174 175 114 107 241 74 206 44 3 253 110 55 186 108 38 242)
      #t
      ())
    #(95
      "special case hash"
      #vu8(57 54 55 56 55 56 49 48 57 52)
      #vu8(104 82 233 211 205 159 227 115 194 213 4 135 121 103 211 101 171 20 86 112 123 104 23 160 66 134 70 148 225 150 12 207 249 180 216 21 235 212 207 119 132 123 55 149 35 52 208 91 32 69 203 57 141 76 33 186 32 121 34 167 164 113 77 132)
      #t
      ())
    #(96
      "special case hash"
      #vu8(52 57 53 56 56 50 51 56 50 51)
      #vu8(24 138 140 86 72 220 121 234 206 21 140 248 134 198 43 84 104 240 95 217 95 3 167 99 92 91 76 49 240 154 244 197 54 54 26 11 87 26 0 198 205 94 104 108 203 252 250 112 60 79 151 228 137 56 52 109 12 16 63 220 118 220 88 103)
      #t
      ())
    #(97
      "special case hash"
      #vu8(56 50 52 54 51 55 56 51 55)
      #vu8(167 79 31 185 168 38 63 98 252 68 22 165 183 213 132 244 32 111 57 150 187 145 246 252 142 115 185 233 43 173 14 19 104 21 3 46 140 125 118 195 171 6 168 111 51 36 156 233 148 1 72 203 54 209 244 23 194 233 146 232 1 175 163 250)
      #t
      ())
    #(98
      "special case hash"
      #vu8(49 49 48 50 48 56 51 51 55 55 54)
      #vu8(7 36 72 101 183 47 243 126 98 227 20 111 13 193 70 130 186 221 113 151 121 145 53 240 176 10 222 118 113 116 43 254 242 127 61 220 113 36 177 181 133 121 87 58 131 86 80 231 168 186 213 238 185 110 157 162 21 205 123 249 162 160 57 237)
      #t
      ())
    #(99
      "special case hash"
      #vu8(49 51 51 56 55 49 54 52 56)
      #vu8(218 127 221 5 181 186 218 189 97 157 128 92 78 231 217 168 79 132 221 213 207 156 91 244 212 51 129 64 214 137 239 8 40 241 207 79 161 195 197 134 44 250 20 156 0 19 207 95 230 207 80 118 202 224 0 81 16 99 231 222 37 187 56 229)
      #t
      ())
    #(100
      "special case hash"
      #vu8(51 50 50 49 52 52 49 54 50)
      #vu8(211 2 124 101 111 109 79 223 216 237 226 32 147 227 195 3 176 19 60 52 13 97 94 119 86 246 37 58 234 146 114 56 246 81 15 159 55 27 49 6 141 104 191 238 170 114 14 185 187 220 128 64 20 95 207 136 212 224 181 141 224 119 125 42)
      #t
      ())
    #(101
      "special case hash"
      #vu8(49 48 54 56 54 54 53 53 53 52 54)
      #vu8(11 246 192 24 141 201 87 28 208 226 30 236 172 95 187 25 210 67 73 136 233 204 16 36 69 147 239 58 152 9 159 105 72 100 165 98 102 31 146 33 236 136 227 221 11 194 246 226 122 193 40 195 12 193 168 15 121 236 103 10 34 176 66 238)
      #t
      ())
    #(102
      "special case hash"
      #vu8(54 50 49 53 53 50 52 54)
      #vu8(174 69 150 64 213 209 23 155 228 122 71 250 83 142 22 217 77 222 165 88 94 122 36 72 4 165 23 66 198 134 68 58 108 142 48 229 48 166 52 250 232 11 60 235 6 41 120 179 158 219 225 151 119 224 162 69 83 182 136 134 24 31 216 151)
      #t
      ())
    #(103
      "special case hash"
      #vu8(55 48 51 48 56 49 56 55 55 52)
      #vu8(28 243 81 123 163 191 42 184 185 234 212 235 182 232 102 203 136 161 222 172 182 167 133 211 182 59 72 60 160 42 196 149 36 154 121 139 115 96 111 85 245 241 199 13 230 124 177 160 207 249 93 125 197 11 58 97 125 248 97 186 211 198 177 201)
      #t
      ())
    #(104
      "special case hash"
      #vu8(53 57 50 52 53 50 51 55 52 52)
      #vu8(230 155 82 56 38 94 163 93 119 228 221 23 34 136 216 206 161 152 16 161 2 146 97 125 89 118 81 157 197 117 124 184 75 3 197 188 71 232 38 189 178 115 40 171 211 141 48 86 215 116 118 178 19 15 61 246 236 72 145 175 8 186 30 41)
      #t
      ())
    #(105
      "special case hash"
      #vu8(49 52 57 53 53 56 54 54 50 49)
      #vu8(95 157 125 124 135 13 8 95 193 212 159 255 105 228 162 117 129 40 0 210 207 137 115 231 50 88 102 203 64 250 43 111 109 31 84 145 217 247 23 165 151 161 95 213 64 64 100 134 215 106 68 105 123 63 13 157 109 206 246 102 159 138 10 86)
      #t
      ())
    #(106
      "special case hash"
      #vu8(52 48 48 53 51 49 52 52 48 54)
      #vu8(10 125 91 25 89 247 29 249 248 23 20 110 228 155 213 200 155 67 30 121 147 226 253 236 171 104 88 149 125 166 133 174 15 138 173 45 37 70 144 189 193 63 52 164 254 196 74 2 253 116 90 66 45 240 92 203 181 70 53 168 184 107 150 9)
      #t
      ())
    #(107
      "special case hash"
      #vu8(51 48 57 54 52 53 55 53 49 50)
      #vu8(121 232 139 245 118 183 75 192 124 161 66 57 95 218 40 240 61 61 94 100 11 11 79 240 117 44 109 148 205 85 52 8 50 206 160 91 210 215 6 200 246 3 106 80 126 42 183 118 96 4 240 144 78 46 92 88 98 116 156 0 115 36 93 106)
      #t
      ())
    #(108
      "special case hash"
      #vu8(50 55 56 52 48 50 53 54 50 48)
      #vu8(157 84 224 55 160 2 18 179 119 188 136 116 121 139 141 160 128 86 75 189 247 224 117 145 184 97 40 88 9 208 20 136 24 180 229 87 102 122 130 189 149 150 95 7 6 248 26 41 36 63 189 216 105 104 167 235 235 67 6 157 179 177 140 127)
      #t
      ())
    #(109
      "special case hash"
      #vu8(50 54 49 56 55 56 55 52 49 56)
      #vu8(38 100 241 255 169 130 254 219 204 124 171 27 139 198 226 203 66 2 24 210 166 7 122 208 142 89 27 169 254 171 51 189 73 245 199 203 81 94 131 135 42 61 65 180 205 184 95 36 42 217 214 26 91 252 1 222 191 187 82 198 200 75 167 40)
      #t
      ())
    #(110
      "special case hash"
      #vu8(49 54 52 50 54 50 53 50 54 50)
      #vu8(88 39 81 131 68 132 79 214 167 222 115 203 176 166 190 253 234 123 19 210 222 228 71 83 23 240 241 143 252 129 82 75 176 163 52 177 244 183 116 165 162 137 245 83 34 77 40 109 35 158 248 169 9 41 237 45 145 66 62 2 78 183 250 102)
      #t
      ())
    #(111
      "special case hash"
      #vu8(54 56 50 52 49 56 57 52 51 54)
      #vu8(151 171 25 189 19 156 172 49 147 37 134 146 24 177 188 225 17 135 93 99 251 18 9 138 4 176 205 89 182 253 211 163 188 226 99 21 197 219 199 184 207 195 20 37 169 184 155 204 234 122 169 71 125 113 26 77 55 127 131 61 204 40 248 32)
      #t
      ())
    #(112
      "special case hash"
      #vu8(52 56 52 50 52 53 52 50 53)
      #vu8(82 198 131 20 78 68 17 154 226 1 55 73 212 150 78 246 117 9 39 143 109 56 186 134 154 220 250 105 151 14 18 61 52 121 145 1 103 64 143 69 189 164 32 166 38 236 156 78 199 17 193 39 75 224 146 25 139 65 135 192 24 181 98 202)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 7 49 15 144 169 234 225 73 160 132 2 245 65 148 160 247 180 172 66 123 248 217 189 108 118 129 7 29 196 125 195 98 38 166 211 122 196 109 97 253 96 12 11 241 191 248 118 137 237 17 125 218 107 14 89 49 138 224 16 161 151 162 108 160)
  :der-encode
  #f
  :tests
  '(#(113
      "k*G has a large x-coordinate"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 69 81 35 25 80 183 95 196 64 45 161 114 47 201 186 235 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 62)
      #t
      ())
    #(114
      "r too large"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 44 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 62)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 188 151 231 88 94 236 173 72 225 102 131 188 64 145 112 142 26 147 12 104 63 196 112 1 212 179 131 89 79 44 78 34 112 89 137 207 105 218 234 221 78 78 75 129 81 237 136 141 254 194 15 176 23 40 216 157 86 179 243 143 42 233 200 197)
  :der-encode
  #f
  :tests
  '(#(115
      "r,s are large"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 63 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 62)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 68 173 51 154 251 194 30 154 191 123 96 42 92 165 53 234 55 129 53 182 209 13 129 49 11 221 130 147 209 223 50 82 182 63 247 208 119 71 112 248 254 29 23 34 250 131 172 208 47 67 78 79 193 16 160 204 143 109 221 211 125 86 196 99)
  :der-encode
  #f
  :tests
  '(#(116
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 62 154 117 130 136 96 137 198 47 184 64 207 59 131 6 28 209 207 243 174 67 65 128 139 181 189 238 97 145 23 65 119)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 18 96 194 18 44 158 36 78 26 245 21 27 237 224 195 174 35 181 77 124 89 104 129 211 238 186 210 31 55 221 135 140 92 154 12 26 154 222 118 115 122 136 17 189 106 127 146 135 201 120 238 57 106 168 156 17 228 114 41 210 204 181 82 240)
  :der-encode
  #f
  :tests
  '(#(117
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 36 35 142 112 180 49 177 166 78 253 249 3 38 105 147 157 75 119 242 73 80 63 198 144 95 235 117 64 222 163 230 210)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 24 119 4 91 226 93 52 161 208 96 15 157 92 0 208 100 90 42 84 55 155 108 238 250 210 230 191 92 42 51 82 206 130 26 83 44 193 117 30 225 211 109 65 195 214 171 78 155 20 62 68 236 70 215 52 120 234 106 121 165 192 229 65 89)
  :der-encode
  #f
  :tests
  '(#(118
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #t
      ())
    #(119
      "incorrect size of signature"
      #vu8(49 50 51 52 48 48)
      #vu8(1 1)
      #t
      ("SigSize"))))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 69 84 57 252 195 210 222 236 237 222 174 206 96 231 189 23 48 79 54 235 182 2 173 245 162 46 11 143 29 180 106 80 174 195 143 178 186 242 33 233 168 209 136 124 123 246 34 45 209 131 70 52 231 114 99 49 90 246 210 54 9 208 79 119)
  :der-encode
  #f
  :tests
  '(#(120
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2)
      #t
      ())
    #(121
      "incorrect size of signature"
      #vu8(49 50 51 52 48 48)
      #vu8(1 2)
      #t
      ("SigSize"))))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 46 31 70 107 2 76 12 58 206 36 55 222 9 18 127 237 4 183 6 249 75 25 162 27 177 194 172 243 92 236 231 24 4 73 174 53 35 215 37 52 233 100 151 44 253 59 56 175 11 221 217 97 158 90 242 35 228 209 164 15 52 207 159 29)
  :der-encode
  #f
  :tests
  '(#(122
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3)
      #t
      ())
    #(123
      "incorrect size of signature"
      #vu8(49 50 51 52 48 48)
      #vu8(1 3)
      #t
      ("SigSize"))
    #(124
      "r is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 221 169 93 123 6 152 222 93 45 11 79 0 52 219 227 91 80 249 120 252 197 24 168 74 191 156 153 239 217 106 37 48 90 220 8 214 166 61 190 131 26 185 156 217 20 110 60 76 69 73 42 209 149 33 97 37 66 37 109 106 246 14 120 136)
  :der-encode
  #f
  :tests
  '(#(125
      "s is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 73 23 200)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 2 239 77 109 108 253 90 148 241 215 120 66 38 227 226 166 192 164 54 197 88 57 97 159 56 251 68 114 181 249 238 119 126 180 172 212 238 189 165 205 114 135 95 253 42 47 38 34 156 45 198 180 101 0 145 154 67 44 134 115 159 58 232 102)
  :der-encode
  #f
  :tests
  '(#(126
      "small r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 197 139 22 44 88 177 98 197 139 22 44 88 177 98 197 138 27 36 41 115 133 62 22 219 117 200 161 167 29 164 211 157)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 70 79 79 247 21 114 156 174 80 114 202 59 216 1 211 25 91 103 174 198 94 155 1 170 210 10 41 67 220 188 181 132 177 175 210 157 49 163 154 17 213 112 170 21 151 67 155 59 45 25 113 191 47 26 191 21 67 45 2 7 177 13 29 8)
  :der-encode
  #f
  :tests
  '(#(127
      "smallish r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 45 155 77 52 121 82 204 252 188 81 3 208 218 38 116 119 209 121 20 97 207 42 164 75 249 212 49 152 247 149 7 189 135 121 214 154 19 16 142)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 21 127 143 221 243 115 235 95 73 207 207 16 216 184 83 207 145 203 205 125 102 92 53 34 186 125 215 56 221 183 154 76 222 173 241 165 196 72 234 60 159 65 145 168 153 154 191 204 117 122 198 214 69 103 239 7 44 71 254 198 19 68 59 143)
  :der-encode
  #f
  :tests
  '(#(128
      "100-bit r and small s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 16 51 230 126 55 179 43 68 85 128 191 78 252 144 111 144 111 144 111 144 111 144 111 144 111 144 111 144 110 216 228 38 247 177 150 140 53 162 4 35 106 87 151 35 210)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 9 52 165 55 70 108 7 67 14 44 72 254 185 144 187 25 251 120 206 204 156 238 66 78 164 209 48 41 26 162 55 240 212 249 45 35 180 98 128 75 91 104 197 37 88 192 28 153 150 219 247 39 252 202 187 238 219 150 33 164 0 83 90 250)
  :der-encode
  #f
  :tests
  '(#(129
      "small r and 100 bit s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 120 50 102 233 15 67 218 254 92 217 179 176 190 134 222 34 249 222 131 103 125 15 80 113 58 70 142 199 47 207 93 87)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 214 239 32 190 102 200 147 247 65 169 191 144 217 183 70 117 209 194 163 18 150 57 122 203 62 241 116 253 11 48 12 101 74 12 149 71 140 160 3 153 22 45 127 15 45 200 158 253 194 178 138 48 251 171 226 133 133 114 149 164 176 196 226 101)
  :der-encode
  #f
  :tests
  '(#(130
      "100-bit r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 37 34 187 211 236 190 124 57 233 62 124 38 120 50 102 233 15 67 218 254 92 217 179 176 190 134 222 34 249 222 131 103 125 15 80 113 58 70 142 199 47 207 93 87)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 183 41 29 20 4 224 192 192 125 171 147 114 24 159 75 213 141 44 234 168 209 94 222 84 77 149 20 84 91 169 238 6 41 201 166 61 94 48 135 105 204 48 236 39 106 65 14 100 100 162 126 234 253 158 89 157 177 15 5 58 79 228 168 41)
  :der-encode
  #f
  :tests
  '(#(131
      "r and s^-1 are close to n"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 64 193 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 192)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 187 121 246 24 87 247 67 191 161 182 231 17 28 228 9 67 119 37 105 105 228 225 81 89 18 61 149 72 172 195 190 108 31 157 159 136 96 220 255 211 235 54 221 108 49 255 46 114 38 194 0 156 76 148 216 215 210 181 104 107 247 171 214 119)
  :der-encode
  #f
  :tests
  '(#(132
      "s == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 193 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #t
      ())
    #(133
      "s == 0"
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 193 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 213 51 183 137 164 175 137 15 167 168 42 31 174 88 196 4 249 166 42 80 180 154 218 250 179 73 197 19 180 21 8 116 1 180 23 27 128 62 118 179 74 152 97 225 15 123 194 137 160 102 253 1 189 41 248 76 152 122 16 165 251 24 194 212)
  :der-encode
  #f
  :tests
  '(#(134
      "point at infinity during verify"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 93 87 110 115 87 164 80 29 223 233 47 70 104 27 32 160 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 192)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 58 49 80 121 140 138 246 157 30 110 152 31 58 69 64 43 161 215 50 244 190 131 48 197 22 79 73 225 14 197 85 180 34 27 216 66 188 94 77 151 239 243 113 101 246 14 57 152 164 36 215 42 69 12 249 94 164 119 199 130 135 208 52 58)
  :der-encode
  #f
  :tests
  '(#(135
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 93 87 110 115 87 164 80 29 223 233 47 70 104 27 32 160 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 93 87 110 115 87 164 80 29 223 233 47 70 104 27 32 160)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 59 55 223 95 179 71 198 154 15 23 216 92 12 124 168 55 54 136 58 130 94 19 20 61 15 207 200 16 30 133 30 128 13 227 192 144 182 202 33 186 84 53 23 51 12 4 177 47 148 140 107 173 241 74 99 171 255 223 78 248 199 83 112 38)
  :der-encode
  #f
  :tests
  '(#(136
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 93 87 110 115 87 164 80 29 223 233 47 70 104 27 32 160 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 93 87 110 115 87 164 80 29 223 233 47 70 104 27 32 161)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 254 181 22 59 14 206 48 255 62 3 199 213 92 67 128 250 47 168 30 226 192 53 73 66 255 111 8 201 157 12 216 44 232 125 224 94 225 189 160 137 211 228 226 72 250 15 114 17 2 172 255 253 245 14 101 75 226 129 67 57 153 223 137 126)
  :der-encode
  #f
  :tests
  '(#(137
      "u1 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 184 187 90 82 244 47 156 146 97 237 67 97 245 148 34 161 227 0 54 231 195 43 39 12 136 7 164 25 254 202 96 80 35)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 35 140 237 0 28 242 43 136 83 224 46 220 137 203 236 165 5 11 167 224 66 167 167 127 147 130 205 65 73 34 137 118 64 104 61 48 148 100 56 64 242 149 137 10 164 193 138 163 155 65 215 125 208 251 59 178 112 14 79 158 194 132 255 194)
  :der-encode
  #f
  :tests
  '(#(138
      "u1 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 184 68 165 173 11 208 99 109 158 18 188 158 10 107 221 94 27 186 119 245 35 132 33 147 179 184 46 68 142 5 213 241 30)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 150 28 246 72 23 192 108 14 81 179 194 115 108 146 47 222 24 189 140 73 6 252 215 245 239 102 196 103 133 8 243 94 210 197 209 129 104 207 190 112 242 241 35 189 116 25 35 43 185 45 214 145 19 226 148 16 97 136 148 129 197 160 39 191)
  :der-encode
  #f
  :tests
  '(#(139
      "u2 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 184 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 184)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 19 104 30 174 22 140 212 234 124 242 226 164 93 5 39 66 209 10 159 100 231 150 134 125 189 203 130 159 224 177 2 136 22 82 135 96 209 119 55 108 9 223 121 222 57 85 124 50 156 193 117 53 23 172 255 232 250 46 194 152 2 107 131 132)
  :der-encode
  #f
  :tests
  '(#(140
      "u2 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 184 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 169 209 201 232 153 202 48 106 210 127 225 148 93 224 36 43 137)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 90 167 171 253 182 180 8 109 84 51 37 229 215 156 110 149 206 66 248 102 210 187 132 144 150 51 160 75 177 170 49 194 145 200 0 136 121 73 5 225 218 51 51 109 135 78 47 145 204 244 92 197 145 133 190 222 93 214 243 247 172 170 225 139)
  :der-encode
  #f
  :tests
  '(#(141
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 233 30 27 166 186 137 134 32 164 107 203 81 220 11 139 74 209 220 53 218 216 146 196 85 45 24 71 178 206 68 70 55)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 0 39 119 145 179 5 164 91 43 57 89 11 47 5 211 57 42 108 129 130 206 244 235 84 1 32 224 245 194 6 195 228 100 16 130 51 251 11 140 58 200 146 215 158 248 224 251 249 46 209 51 173 219 69 84 39 1 50 88 77 197 46 239 65)
  :der-encode
  #f
  :tests
  '(#(142
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 227 107 240 206 192 109 155 132 29 168 19 50 129 47 116 243 11 186 236 159 32 35 25 32 108 111 11 138 10 64 15 247)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 110 250 9 43 104 222 148 96 240 188 201 25 0 90 95 110 128 225 157 233 137 104 190 60 210 199 112 169 148 155 251 26 199 94 110 80 135 214 85 13 95 155 235 30 121 229 2 147 7 188 37 82 53 226 213 220 153 36 26 195 171 136 108 73)
  :der-encode
  #f
  :tests
  '(#(143
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 234 38 181 122 248 132 182 192 110 52 142 254 19 156 30 78 158 201 81 141 96 195 64 246 186 199 210 120 202 8 216 166)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 114 212 161 156 79 157 44 245 132 142 164 4 69 183 13 70 150 181 240 45 99 44 12 101 76 199 215 238 176 198 208 88 232 196 205 153 67 228 89 23 76 122 192 31 167 66 25 142 71 230 193 154 107 219 12 79 108 35 120 49 193 179 249 66)
  :der-encode
  #f
  :tests
  '(#(144
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 91 29 39 167 105 76 20 98 68 165 173 11 208 99 109 157 158 243 185 251 88 56 84 24 217 201 130 16 80 119 209 183)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 42 142 162 245 13 204 237 12 33 117 117 189 250 124 212 125 28 111 16 0 65 236 14 53 81 39 148 193 190 126 116 2 88 248 193 113 34 237 48 63 218 113 67 235 88 190 222 112 41 91 101 50 102 1 59 11 14 189 63 5 49 55 246 236)
  :der-encode
  #f
  :tests
  '(#(145
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 210 122 118 148 193 70 36 74 90 208 189 6 54 217 225 42 190 104 120 151 232 233 153 141 219 212 229 154 120 82 13 15)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 136 222 104 156 233 175 30 148 190 106 32 137 200 168 177 37 63 253 187 108 142 156 134 36 155 162 32 0 26 74 211 184 12 73 152 229 72 66 244 19 185 237 177 130 90 203 182 51 94 129 228 209 132 178 176 28 139 235 220 133 209 242 137 70)
  :der-encode
  #f
  :tests
  '(#(146
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 164 244 237 41 130 140 72 148 181 161 122 12 109 179 194 86 194 34 20 73 34 138 146 223 247 215 108 168 32 109 216 221)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 254 162 211 31 112 249 13 95 179 224 14 24 106 196 42 179 193 97 92 238 113 78 11 78 17 49 179 212 216 34 91 247 176 55 161 141 242 172 21 52 63 48 247 64 103 221 242 158 129 125 95 119 248 220 224 87 20 218 89 192 148 240 205 169)
  :der-encode
  #f
  :tests
  '(#(147
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 105 76 20 98 68 165 173 11 208 99 109 158 18 188 158 9 230 14 104 185 13 11 94 108 93 221 208 203 105 77 135 153)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 114 88 145 30 61 66 51 73 22 100 121 219 224 184 52 26 247 251 208 61 10 126 16 237 204 179 107 108 238 165 163 219 23 172 43 137 146 121 17 40 250 59 150 220 47 189 76 163 191 167 130 239 40 50 252 102 86 148 61 177 142 115 70 176)
  :der-encode
  #f
  :tests
  '(#(148
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 61 127 72 124 7 191 197 243 8 70 147 138 61 206 246 150 68 71 7 207 150 119 37 74 146 176 108 99 171 134 125 34)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 79 40 70 29 234 100 71 77 107 179 77 20 153 201 125 55 185 233 86 51 223 28 238 234 172 212 80 22 201 139 57 20 200 129 136 16 184 204 6 221 180 14 138 18 97 197 40 250 165 137 69 93 90 109 249 59 119 188 94 14 73 60 116 112)
  :der-encode
  #f
  :tests
  '(#(149
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 108 118 72 252 15 191 138 6 173 184 184 57 249 123 79 247 168 0 241 27 30 55 197 147 178 97 57 69 153 121 43 164)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 116 242 168 20 251 93 142 202 145 166 155 94 96 113 39 50 179 147 125 227 40 41 190 151 78 215 182 140 92 47 93 102 239 240 240 124 86 249 135 166 87 244 33 150 32 95 88 140 15 29 150 253 138 99 165 242 56 180 143 71 135 136 254 59)
  :der-encode
  #f
  :tests
  '(#(150
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 155 227 99 162 134 242 63 99 34 194 5 68 157 50 11 170 212 23 149 62 203 112 246 33 78 144 212 157 125 31 38 168)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 25 91 81 167 204 74 33 184 39 74 112 169 13 231 121 129 76 60 140 163 88 50 130 8 192 154 41 243 54 184 45 106 178 65 107 124 146 255 253 194 156 59 18 130 221 42 119 164 208 77 247 247 69 32 71 57 61 132 153 137 197 206 233 173)
  :der-encode
  #f
  :tests
  '(#(151
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 41 121 140 92 69 189 245 139 74 123 47 220 44 70 171 74 241 33 140 126 235 159 15 39 168 143 18 103 103 77 227 176)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 98 47 199 71 50 3 75 236 45 223 59 193 109 52 179 209 247 163 39 221 42 140 25 186 180 187 79 227 162 75 88 170 115 107 47 47 174 118 244 223 174 204 144 150 51 59 1 50 141 81 235 63 218 156 146 39 233 13 11 68 153 131 196 240)
  :der-encode
  #f
  :tests
  '(#(152
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 11 112 242 44 162 187 60 239 173 202 26 87 17 250 58 89 244 105 83 133 235 90 237 243 73 93 11 109 0 248 253 133)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 31 127 133 202 242 215 85 14 122 249 182 80 35 235 180 220 227 69 3 17 105 35 9 219 38 153 105 184 52 182 17 199 8 39 244 91 120 2 14 203 186 244 132 253 213 191 170 230 135 15 17 132 194 21 129 186 246 239 130 189 123 83 15 147)
  :der-encode
  #f
  :tests
  '(#(153
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 22 225 228 89 69 118 121 223 91 148 52 174 35 244 116 179 232 210 167 11 214 181 219 230 146 186 22 218 1 241 251 10)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 73 193 151 220 128 173 29 164 122 67 66 185 56 147 232 225 251 11 185 79 195 58 131 231 131 192 11 36 199 129 55 122 239 194 13 169 43 172 118 41 81 247 36 116 190 204 115 77 76 194 43 168 27 137 94 40 47 218 196 223 122 240 243 125)
  :der-encode
  #f
  :tests
  '(#(154
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 34 82 214 133 232 49 182 207 9 94 79 5 53 238 175 13 221 59 250 145 194 16 201 217 220 23 34 71 2 234 248 143)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 216 203 104 81 123 97 106 86 64 10 163 134 134 53 229 75 111 105 149 152 162 246 22 119 87 101 73 128 186 246 172 190 126 200 207 68 156 132 154 160 52 97 163 14 250 218 65 69 60 87 198 230 251 201 59 188 111 164 154 218 109 192 85 92)
  :der-encode
  #f
  :tests
  '(#(155
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 117 19 90 189 124 66 91 96 55 26 71 127 9 206 15 39 79 100 168 198 176 97 160 123 93 99 233 60 101 4 108 83)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 3 7 19 251 99 242 170 111 226 202 223 27 32 239 194 89 199 116 69 218 250 135 218 195 152 184 64 101 202 52 125 243 178 39 129 141 225 163 155 88 156 176 113 216 62 83 23 204 205 194 51 142 81 227 18 254 49 216 220 52 164 128 23 80)
  :der-encode
  #f
  :tests
  '(#(156
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 213 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 124 116 147 68 116 219 21 125 42 140 63 8 138 206 214 42)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 186 187 54 119 176 149 88 2 216 233 41 164 19 85 100 14 175 30 161 53 63 138 119 19 49 196 148 110 52 128 175 167 37 47 25 108 135 237 61 42 89 211 177 181 89 19 127 237 0 19 254 206 252 25 251 90 146 104 43 155 202 81 185 80)
  :der-encode
  #f
  :tests
  '(#(157
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 193 119 124 136 83 147 142 83 98 19 192 36 100 169 54 0 11 161 226 28 15 198 32 117 212 108 98 78 35 181 47 49)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 26 171 32 24 121 52 113 17 26 138 14 155 20 63 222 2 252 149 146 7 150 211 166 61 227 41 180 36 57 111 186 96 187 228 19 7 5 23 71 146 68 27 49 141 58 163 29 254 133 119 130 30 155 68 110 197 115 210 114 224 54 196 235 233)
  :der-encode
  #f
  :tests
  '(#(158
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 48 187 183 148 219 88 131 99 180 6 121 246 193 130 165 13 60 233 103 154 205 211 255 190 54 215 129 61 172 189 200 24)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 140 176 185 9 73 156 131 234 128 108 216 133 177 221 70 122 1 25 240 106 136 160 39 110 176 207 218 39 69 53 168 255 71 181 66 136 51 188 63 44 139 249 217 4 17 88 207 51 113 138 105 150 28 208 23 41 188 0 17 209 229 134 171 117)
  :der-encode
  #f
  :tests
  '(#(159
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 44 55 253 153 86 34 196 251 127 255 255 255 255 255 255 255 199 206 231 69 17 12 180 90 181 88 237 124 144 193 90 47)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 143 3 207 26 66 39 43 177 83 39 35 9 63 114 230 254 234 200 94 23 0 233 251 233 166 162 221 100 45 116 191 93 59 137 167 24 157 173 140 247 95 194 47 111 21 138 162 127 156 44 160 13 172 167 133 190 51 88 242 189 163 134 44 160)
  :der-encode
  #f
  :tests
  '(#(160
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 127 217 149 98 44 79 183 255 255 255 255 255 255 255 255 255 93 136 63 250 181 179 38 82 204 220 170 41 15 204 185 125)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 68 222 59 156 122 87 168 201 232 32 149 39 83 66 30 125 152 123 179 215 159 113 240 19 128 92 137 126 1 143 138 206 162 70 7 88 200 249 141 63 220 225 33 169 67 101 158 55 44 50 111 255 46 95 194 174 127 163 247 157 170 225 60 18)
  :der-encode
  #f
  :tests
  '(#(161
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 255 179 42 196 88 159 111 255 255 255 255 255 255 255 255 254 187 16 127 245 107 102 76 165 153 185 84 82 31 153 114 250)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 111 184 178 180 142 51 3 18 104 173 106 81 116 132 220 136 57 234 144 246 102 158 160 199 172 50 51 226 172 49 57 74 10 200 187 231 247 60 47 244 223 153 120 114 122 193 223 194 253 88 100 125 32 243 31 153 16 83 22 182 70 113 242 4)
  :der-encode
  #f
  :tests
  '(#(162
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 86 34 196 251 127 255 255 255 255 255 255 255 255 255 255 255 146 138 143 28 122 199 190 193 128 139 159 97 192 30 195 39)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 190 167 17 34 160 72 105 62 144 95 246 2 179 207 157 209 138 246 155 159 201 216 67 29 43 29 210 107 148 44 149 230 244 60 123 139 149 235 98 8 44 18 219 157 189 167 254 56 228 92 190 74 72 134 144 127 184 27 219 12 94 169 36 108)
  :der-encode
  #f
  :tests
  '(#(163
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 68 16 65 4 16 65 4 16 65 4 16 65 4 16 65 3 184 120 83 253 59 125 63 142 23 81 37 180 56 47 37 237)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 218 145 140 115 27 160 106 32 203 148 239 51 183 120 233 129 164 4 163 5 241 148 31 227 54 102 180 91 3 53 49 86 226 187 38 148 245 117 180 81 131 190 120 229 201 181 33 11 243 191 72 143 212 200 41 69 22 216 149 114 202 79 83 145)
  :der-encode
  #f
  :tests
  '(#(164
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 39 57 206 115 156 231 57 206 115 156 231 57 206 115 156 231 5 86 2 152 209 242 240 141 196 25 172 39 58 91 84 217)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 48 7 233 44 57 55 218 222 121 100 223 163 91 14 255 3 31 126 176 42 237 10 3 20 65 17 6 205 235 112 254 61 90 117 70 252 5 82 153 123 32 227 214 244 19 231 94 44 182 110 17 99 34 105 113 20 183 155 172 115 75 252 77 197)
  :der-encode
  #f
  :tests
  '(#(165
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 183 119 119 119 119 119 119 119 119 119 119 119 119 119 119 118 136 230 161 254 128 138 151 163 72 103 18 34 255 22 184 99)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 96 231 52 239 86 36 211 203 240 221 211 117 1 27 214 99 214 214 174 188 100 78 181 153 253 249 141 189 205 24 206 155 210 217 11 58 195 31 19 154 248 50 204 207 108 203 187 44 110 161 31 169 115 112 220 153 6 218 71 77 125 138 117 103)
  :der-encode
  #f
  :tests
  '(#(166
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 100 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 6 221 58 25 184 213 251 135 82 53 150 60 89 59 210 211)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 133 169 0 233 120 88 246 147 192 183 223 162 97 227 128 218 214 234 4 109 31 101 221 238 237 213 247 216 175 11 163 55 105 116 77 21 173 212 246 192 188 59 13 162 174 201 59 52 203 140 101 249 52 13 223 116 231 176 0 158 238 204 206 60)
  :der-encode
  #f
  :tests
  '(#(167
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 149 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 124 116 147 68 116 219 21 125 42 140 63 8 138 206 214 44)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 56 6 111 117 216 142 252 76 147 222 54 244 158 3 123 35 76 193 139 29 229 96 135 80 166 44 171 3 69 64 16 70 163 232 75 237 140 252 184 25 239 77 85 4 68 242 206 75 101 23 102 182 158 46 41 1 248 136 54 255 144 3 79 237)
  :der-encode
  #f
  :tests
  '(#(168
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 42 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 62 58 73 162 58 109 138 190 149 70 31 132 69 103 107 23)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 152 246 129 119 220 149 193 180 203 250 82 69 72 140 165 35 167 213 98 148 112 208 53 214 33 164 67 199 47 57 170 191 163 61 41 84 111 161 198 72 242 199 213 204 247 12 241 206 74 183 155 93 177 172 5 157 190 205 6 141 189 255 27 137)
  :der-encode
  #f
  :tests
  '(#(169
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 191 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 67)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 92 43 191 162 60 155 154 208 127 3 138 168 155 73 48 191 38 125 148 1 228 37 93 233 232 218 10 80 120 236 130 119 227 232 130 163 29 94 106 55 158 7 147 152 60 205 237 57 185 92 67 83 171 47 240 30 165 54 155 164 123 12 49 145)
  :der-encode
  #f
  :tests
  '(#(170
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 24 93 219 202 109 172 65 177 218 3 60 251 96 193 82 134 158 116 179 205 102 233 255 223 27 107 192 158 214 94 228 12)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 46 167 19 52 50 51 156 105 210 127 155 38 114 129 189 45 221 95 25 214 51 141 64 10 5 205 54 71 177 87 163 133 53 71 128 130 152 68 142 219 94 112 26 222 132 205 95 177 172 149 103 186 94 143 182 138 107 147 62 196 181 204 132 204)
  :der-encode
  #f
  :tests
  '(#(171
      "point duplication during verification"
      #vu8(49 50 51 52 48 48)
      #vu8(50 176 209 13 141 14 4 188 141 77 6 77 39 6 153 232 124 255 201 180 156 92 32 115 14 28 38 246 16 93 220 218 214 18 194 152 76 42 250 65 106 167 242 136 42 72 109 74 132 38 203 108 252 145 237 91 115 114 120 249 252 168 190 104)
      #t
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 46 167 19 52 50 51 156 105 210 127 155 38 114 129 189 45 221 95 25 214 51 141 64 10 5 205 54 71 177 87 163 133 202 184 127 125 103 187 113 36 161 143 229 33 123 50 160 78 83 106 152 69 161 112 73 117 148 108 193 58 74 51 119 99)
  :der-encode
  #f
  :tests
  '(#(172
      "duplication bug"
      #vu8(49 50 51 52 48 48)
      #vu8(50 176 209 13 141 14 4 188 141 77 6 77 39 6 153 232 124 255 201 180 156 92 32 115 14 28 38 246 16 93 220 218 214 18 194 152 76 42 250 65 106 167 242 136 42 72 109 74 132 38 203 108 252 145 237 91 115 114 120 249 252 168 190 104)
      #f
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 138 162 198 79 169 198 67 117 99 171 251 203 208 11 32 72 212 140 24 193 82 162 166 244 144 54 222 118 71 235 232 46 28 230 67 135 153 92 104 160 96 250 59 192 57 155 5 204 6 238 199 213 152 247 80 65 164 145 126 105 43 127 81 255)
  :der-encode
  #f
  :tests
  '(#(173
      "comparison with point at infinity "
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 192 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 50 242 34 248 250 239 219 83 63 38 93 70 28 41 164 115 115)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 57 20 39 255 126 231 128 19 193 74 236 125 150 168 160 98 32 146 152 167 131 131 94 148 253 101 73 213 2 255 247 31 221 102 36 236 52 58 217 252 244 217 135 33 129 229 159 132 47 155 164 204 202 224 154 108 9 114 251 106 198 180 198 189)
  :der-encode
  #f
  :tests
  '(#(174
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(198 4 127 148 65 237 125 109 48 69 64 110 149 192 124 216 92 119 142 75 140 239 60 167 171 172 9 185 92 112 158 229 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 192)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 231 98 184 162 25 180 241 128 33 156 199 169 5 146 69 228 150 27 209 145 192 56 153 120 156 122 52 184 158 140 19 142 193 83 62 240 65 155 183 55 110 11 253 233 49 157 16 160 105 104 121 29 158 160 238 217 193 206 99 69 174 217 117 158)
  :der-encode
  #f
  :tests
  '(#(175
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(198 4 127 148 65 237 125 109 48 69 64 110 149 192 124 216 92 119 142 75 140 239 60 167 171 172 9 185 92 112 158 229 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 181 243 15 48 18 125 51 224 42 173 150 67 137 39 2 46 156)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 154 237 176 210 129 219 22 78 19 0 0 197 105 127 174 15 48 94 248 72 190 111 255 180 58 197 147 251 185 80 233 82 250 111 99 51 89 189 205 130 181 107 11 159 150 91 3 119 137 212 107 154 129 65 183 145 178 174 250 113 63 150 193 117)
  :der-encode
  #f
  :tests
  '(#(176
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(198 4 127 148 65 237 125 109 48 69 64 110 149 192 124 216 92 119 142 75 140 239 60 167 171 172 9 185 92 112 158 229 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 152 214 104 234 240 207 145 249 189 115 23 210 84 124 237 90 90)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 138 212 69 219 98 129 98 96 228 230 135 253 24 132 228 139 159 192 99 109 3 21 71 214 51 21 231 146 225 155 250 238 29 230 79 153 213 241 205 139 110 201 203 15 120 122 101 74 232 105 147 186 61 177 0 142 244 60 255 6 132 203 34 189)
  :der-encode
  #f
  :tests
  '(#(177
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(198 4 127 148 65 237 125 109 48 69 64 110 149 192 124 216 92 119 142 75 140 239 60 167 171 172 9 185 92 112 158 229 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 101 228 69 241 245 223 182 166 126 76 186 140 56 83 72 230 231)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 31 87 153 201 91 232 144 99 178 79 38 228 12 185 40 193 168 104 167 111 176 9 70 7 232 4 61 180 9 201 28 50 231 87 36 232 19 164 25 30 58 131 144 7 240 142 46 137 115 136 176 109 74 0 222 109 230 14 83 109 145 250 181 102)
  :der-encode
  #f
  :tests
  '(#(178
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(198 4 127 148 65 237 125 109 48 69 64 110 149 192 124 216 92 119 142 75 140 239 60 167 171 172 9 185 92 112 158 229 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 72 199 159 172 212 50 20 192 17 18 60 27 3 169 52 18 165)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 163 51 26 78 27 66 35 236 44 2 126 221 72 44 146 138 20 237 53 141 147 241 212 33 125 57 171 246 159 203 92 204 40 214 132 210 170 171 205 99 131 119 92 170 98 57 222 38 212 198 147 123 182 3 236 180 25 96 130 244 207 253 80 157)
  :der-encode
  #f
  :tests
  '(#(179
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(198 4 127 148 65 237 125 109 48 69 64 110 149 192 124 216 92 119 142 75 140 239 60 167 171 172 9 185 92 112 158 229 14 177 14 90 185 95 47 39 83 72 216 42 210 228 215 148 156 129 147 128 13 140 156 117 223 88 227 67 240 235 186 123)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 63 57 82 25 151 116 199 207 57 179 139 102 203 16 66 166 38 13 134 128 128 56 69 228 212 51 173 186 59 178 72 24 94 164 149 182 140 188 126 212 23 62 230 60 144 66 220 80 38 37 199 235 126 33 251 2 202 154 145 20 224 163 161 141)
  :der-encode
  #f
  :tests
  '(#(180
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 192)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 205 251 140 15 66 46 20 78 19 124 36 18 200 108 23 31 95 227 250 63 91 187 84 78 144 118 40 143 60 237 120 110 5 79 208 114 27 119 193 28 121 190 172 179 201 66 17 176 161 155 218 8 101 46 254 175 146 81 58 59 10 22 54 152)
  :der-encode
  #f
  :tests
  '(#(181
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 181 243 15 48 18 125 51 224 42 173 150 67 137 39 2 46 156)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 115 89 138 106 28 104 39 143 166 191 208 206 64 100 230 130 53 188 28 15 107 32 169 40 16 139 227 54 115 15 135 227 203 174 97 37 25 181 3 46 204 133 174 216 17 39 26 149 254 121 57 213 211 70 1 64 186 49 143 77 20 171 163 29)
  :der-encode
  #f
  :tests
  '(#(182
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 152 214 104 234 240 207 145 249 189 115 23 210 84 124 237 90 90)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 88 222 189 154 126 226 201 213 145 50 71 138 84 64 174 77 93 126 212 55 48 131 105 249 46 168 108 130 24 63 16 161 103 115 231 111 94 219 244 218 14 79 27 223 250 192 245 114 87 225 223 164 101 132 41 49 48 154 36 36 95 218 106 93)
  :der-encode
  #f
  :tests
  '(#(183
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 101 228 69 241 245 223 182 166 126 76 186 140 56 83 72 230 231)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 139 144 77 228 121 103 52 12 95 140 53 114 167 32 146 78 247 87 134 55 254 171 25 73 172 178 65 165 166 172 63 91 149 9 4 73 111 152 36 177 214 63 51 19 186 226 27 137 250 232 154 253 252 129 27 94 206 3 253 90 163 1 134 79)
  :der-encode
  #f
  :tests
  '(#(184
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 72 199 159 172 212 50 20 192 17 18 60 27 3 169 52 18 165)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 244 137 43 109 82 92 119 30 3 95 42 37 39 8 243 120 78 72 35 134 4 180 249 77 197 110 170 30 84 109 148 26 52 107 26 160 188 230 139 28 80 229 181 47 80 159 181 82 46 92 37 224 40 188 143 134 52 2 237 183 188 173 139 27)
  :der-encode
  #f
  :tests
  '(#(185
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 14 177 14 90 185 95 47 39 83 72 216 42 210 228 215 148 156 129 147 128 13 140 156 117 223 88 227 67 240 235 186 123)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 72 58 218 119 38 163 196 101 93 164 251 252 14 17 8 168 253 23 180 72 166 133 84 25 156 71 208 143 251 16 212 184)
  :der-encode
  #f
  :tests
  '(#(186
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(187 90 82 244 47 156 146 97 237 67 97 245 148 34 161 227 0 54 231 195 43 39 12 136 7 164 25 254 202 96 80 35 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 99 207 214 106 25 10 96 8 137 30 13 129 212 154 9 82)
      #f
      ())
    #(187
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(68 165 173 11 208 99 109 158 18 188 158 10 107 221 94 27 186 119 245 35 132 33 147 179 184 46 68 142 5 213 241 30 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 99 207 214 106 25 10 96 8 137 30 13 129 212 154 9 82)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 183 197 37 136 217 92 59 154 162 91 4 3 241 238 247 87 2 232 75 183 89 122 171 230 99 184 47 111 4 239 39 119)
  :der-encode
  #f
  :tests
  '(#(188
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(187 90 82 244 47 156 146 97 237 67 97 245 148 34 161 227 0 54 231 195 43 39 12 136 7 164 25 254 202 96 80 35 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 99 207 214 106 25 10 96 8 137 30 13 129 212 154 9 82)
      #f
      ())
    #(189
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(68 165 173 11 208 99 109 158 18 188 158 10 107 221 94 27 186 119 245 35 132 33 147 179 184 46 68 142 5 213 241 30 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 99 207 214 106 25 10 96 8 137 30 13 129 212 154 9 82)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 120 44 142 209 126 59 42 120 59 84 100 243 59 9 101 42 113 198 120 224 94 197 30 132 226 188 252 102 58 61 233 99 175 154 203 66 128 184 199 247 196 47 78 249 171 166 36 94 193 236 23 18 253 56 160 250 150 65 141 140 214 170 97 82)
  :der-encode
  #f
  :tests
  '(#(190
      "pseudorandom signature"
      #vu8()
      #vu8(248 10 228 249 108 219 201 216 83 248 61 71 170 226 37 191 64 125 81 197 107 119 118 205 103 208 220 25 93 153 169 220 179 3 226 107 225 247 52 101 49 82 33 240 179 49 82 136 7 161 169 182 235 6 142 222 110 235 234 170 73 175 138 54)
      #t
      ())
    #(191
      "pseudorandom signature"
      #vu8(77 115 103)
      #vu8(16 156 216 174 3 116 53 137 132 168 36 156 10 132 54 40 242 131 95 250 209 223 26 154 105 170 47 231 35 85 84 92 172 111 0 218 245 59 216 177 227 77 163 41 53 155 110 8 1 156 91 3 127 237 121 238 56 58 227 159 133 161 89 198)
      #t
      ())
    #(192
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(208 53 238 31 23 253 176 178 104 27 22 62 51 195 89 147 38 89 153 10 247 125 202 99 32 18 179 11 39 160 87 179 25 57 217 243 178 133 139 193 62 52 116 203 80 230 168 43 228 79 170 113 148 15 135 108 28 186 76 62 152 146 2 182)
      #t
      ())
    #(193
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(79 5 63 86 58 211 75 116 253 140 153 52 206 89 231 156 46 184 230 236 160 254 245 179 35 202 103 213 172 126 210 56 77 75 5 218 160 113 158 119 61 134 23 220 229 99 28 95 214 245 156 155 220 116 142 75 85 201 112 4 10 240 27 229)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 110 130 53 85 69 41 20 9 145 130 198 178 193 214 240 181 210 141 80 204 208 5 175 44 225 187 165 65 170 64 202 255 0 0 0 1 6 4 146 213 165 103 62 15 37 216 213 15 183 229 140 73 216 109 70 212 33 105 85 224 170 61 64 225)
  :der-encode
  #f
  :tests
  '(#(194
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(109 106 79 85 108 204 225 84 231 251 159 25 231 108 61 236 161 61 89 204 42 235 78 202 217 104 170 178 222 212 89 101 83 185 250 116 128 62 222 15 196 68 27 246 131 213 108 86 77 62 39 78 9 204 244 115 144 186 221 20 113 192 95 183)
      #t
      ())
    #(195
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(170 213 3 222 155 159 214 107 148 142 154 207 89 111 10 14 101 231 0 178 139 38 236 86 230 228 94 132 100 137 179 196 255 242 35 197 208 118 84 71 232 68 122 63 157 49 253 6 150 232 157 36 68 34 2 47 246 26 17 11 42 140 47 4)
      #t
      ())
    #(196
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(145 130 206 189 59 184 171 87 46 22 113 116 57 114 9 239 75 29 67 154 243 178 0 205 240 3 98 0 137 228 50 37 171 184 131 103 209 95 230 45 30 255 251 104 3 218 3 16 158 226 46 144 188 156 120 232 180 237 35 99 11 130 234 157)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 110 130 53 85 69 41 20 9 145 130 198 178 193 214 240 181 210 141 80 204 208 5 175 44 225 187 165 65 170 64 202 255 255 255 255 254 249 251 109 42 90 152 193 240 218 39 42 240 72 26 115 182 39 146 185 43 222 150 170 30 85 194 187 78)
  :der-encode
  #f
  :tests
  '(#(197
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(56 84 163 153 138 235 223 45 188 40 173 172 65 129 70 44 202 199 135 57 7 171 127 33 44 66 219 14 105 181 110 216 193 44 9 71 92 119 47 208 193 178 6 13 81 99 228 43 247 29 114 126 74 231 192 62 235 169 84 191 80 180 59 179)
      #t
      ())
    #(198
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(233 77 189 195 135 149 254 92 144 77 143 22 217 105 211 181 135 240 162 93 45 233 11 109 140 92 83 255 136 126 54 7 133 107 140 150 62 155 104 218 222 68 117 11 249 126 196 209 27 26 10 56 4 244 203 121 170 39 189 234 120 172 20 228)
      #t
      ())
    #(199
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(73 252 16 42 8 202 71 182 14 8 88 205 2 132 210 44 221 215 35 63 148 170 255 187 45 177 221 44 240 132 37 225 91 22 252 165 161 44 219 57 112 22 151 173 142 57 255 214 189 236 0 36 41 138 250 162 50 106 234 9 32 11 20 214)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 0 0 0 1 63 210 34 72 214 77 149 247 60 41 180 138 180 134 49 133 11 229 3 253 0 248 70 139 95 15 112 224 246 238 122 164 59 194 198 253 37 177 216 38 146 65 203 221 157 187 13 172 150 220 150 35 31 67 7 5 248 56 113 125)
  :der-encode
  #f
  :tests
  '(#(200
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(65 239 167 211 240 90 0 16 103 95 203 145 138 69 198 147 218 75 52 141 242 26 89 214 249 205 115 224 216 49 214 122 187 171 82 89 108 26 29 148 132 41 108 220 146 203 240 126 102 82 89 161 55 145 168 254 136 69 226 192 124 243 252 103)
      #t
      ())
    #(201
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(182 21 105 140 53 139 53 146 13 216 131 236 166 37 166 197 247 86 57 112 205 252 55 143 143 224 206 225 112 146 20 76 218 11 132 205 148 164 30 4 158 244 119 174 172 21 123 42 155 250 107 122 200 222 6 237 56 88 197 238 222 109 221 109)
      #t
      ())
    #(202
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(135 207 140 14 184 45 68 246 156 96 162 255 84 87 211 170 163 34 231 236 97 174 90 236 253 103 138 225 193 147 43 14 197 34 196 238 167 234 251 130 145 76 191 92 31 247 103 96 16 159 85 221 221 207 88 39 77 65 201 188 67 17 224 110)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 37 175 214 137 172 171 174 214 124 31 41 109 229 148 6 248 197 80 245 113 70 160 180 236 44 151 135 109 255 255 255 255 250 70 167 110 82 3 34 223 188 73 30 196 240 204 25 116 32 252 78 165 136 61 143 109 213 60 53 75 196 246 124 53)
  :der-encode
  #f
  :tests
  '(#(203
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(98 244 142 247 26 206 39 191 90 1 131 77 225 247 227 249 72 185 220 225 202 30 145 29 94 19 211 177 4 71 29 130 161 87 12 192 243 136 118 141 59 167 223 127 33 37 100 202 162 86 255 130 93 249 151 242 31 114 245 40 13 83 1 31)
      #t
      ())
    #(204
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(246 176 226 246 254 2 12 247 192 194 1 55 67 67 68 237 122 221 108 75 229 24 97 226 209 76 189 164 114 166 255 180 155 233 55 34 193 163 173 125 76 249 23 35 112 12 181 72 109 229 71 157 140 27 56 174 78 142 91 161 99 142 151 50)
      #t
      ())
    #(205
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(219 9 216 70 15 5 239 242 59 199 228 54 182 125 165 99 250 75 78 219 88 172 36 206 32 31 168 163 88 18 80 87 70 218 17 103 84 96 41 64 200 153 156 141 102 95 120 108 80 245 119 44 10 60 219 218 7 94 119 234 188 100 223 22)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 209 46 108 102 182 119 52 195 200 77 38 1 207 93 53 220 9 126 39 99 127 10 202 74 79 219 116 182 170 221 59 185 63 91 223 248 139 213 115 109 248 152 230 153 0 110 215 80 241 28 240 124 88 102 205 122 215 12 113 33 255 255 255 255)
  :der-encode
  #f
  :tests
  '(#(206
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(89 44 65 225 101 23 241 47 202 189 152 38 118 116 249 116 181 136 233 243 93 53 64 108 26 123 178 237 29 25 183 184 193 154 95 148 38 7 195 85 20 132 255 13 201 114 129 240 205 200 43 196 142 34 5 160 100 92 12 243 215 245 157 160)
      #t
      ())
    #(207
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(190 13 112 136 125 94 64 130 26 97 182 128 71 222 78 160 61 235 253 245 28 223 77 75 25 85 88 185 89 160 50 178 130 102 180 210 112 226 68 20 236 172 177 76 9 26 35 49 52 185 24 211 115 32 198 85 125 96 173 10 99 84 74 196)
      #t
      ())
    #(208
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(250 233 45 252 178 238 57 45 39 10 243 165 115 159 170 38 212 249 123 253 57 237 60 190 228 210 158 38 175 59 32 106 147 100 92 128 96 85 149 224 44 9 160 220 75 23 172 42 81 132 106 114 139 62 141 96 68 46 214 68 159 211 52 43)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 109 74 127 96 212 119 74 79 10 168 187 222 219 149 60 126 234 121 9 64 126 49 100 117 86 100 188 40 0 0 0 0 230 89 211 78 77 243 141 158 140 158 170 223 186 54 97 44 118 145 149 190 134 199 122 172 63 54 231 139 83 134 128 251)
  :der-encode
  #f
  :tests
  '(#(209
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(23 106 37 87 86 111 250 81 139 17 34 102 148 235 152 2 237 32 152 191 226 120 229 87 15 225 213 215 175 24 169 67 237 110 32 149 241 42 3 242 234 246 113 143 67 14 197 254 40 41 253 22 70 171 100 135 1 101 111 211 18 33 185 125)
      #t
      ())
    #(210
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(96 190 32 195 219 193 98 221 52 210 103 128 98 28 16 75 190 93 172 230 48 23 27 45 174 240 216 38 64 158 229 194 189 128 129 178 119 98 171 110 143 66 89 86 191 96 78 51 47 160 102 169 155 89 248 126 39 220 17 152 178 111 92 170)
      #t
      ())
    #(211
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(237 240 60 246 63 101 136 131 40 154 26 89 61 16 7 137 91 159 35 109 39 201 193 241 49 48 137 170 237 107 22 174 229 178 41 3 247 235 35 173 194 224 16 87 227 155 4 8 212 149 246 148 200 63 48 111 18 22 201 191 135 80 96 116)
      #t
      ())))
