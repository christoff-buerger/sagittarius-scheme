(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 45 165 125 218 16 137 39 106 84 63 159 253 172 11 255 13 151 108 173 113 235 114 128 231 217 191 217 254 228 189 178 242 15 71 255 136 130 116 56 151 114 217 140 197 117 33 56 170 75 109 5 77 105 220 243 226 94 196 157 248 112 113 94 52 136 59 24 54 25 125 118 248 173 150 46 120 246 87 27 188 116 7 176 214 9 31 158 77 136 240 20 39 68 6 23 79)
  :der-encode
  #t
  :tests
  '(#(1
      "signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 48 24 64 218 159 193 210 248 248 144 12 244 133 213 65 59 140 37 116 238 58 141 76 160 57 149 202 48 36 14 9 81 56 5 191 98 9 181 138 199 170 156 255 84 238 205 130 185 241)
      #t
      ())
    #(2
      "Legacy:ASN encoding of s misses leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 48 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #t
      ("MissingZero"))
    #(3
      "valid"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #t
      ())
    #(4
      "long form encoding of length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ("BER"))
    #(5
      "length of sequence contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 130 0 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ("BER"))
    #(6
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(7
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(8
      "uint32 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 1 0 0 0 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(9
      "uint64 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 137 1 0 0 0 0 0 0 0 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(10
      "length of sequence = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 127 255 255 255 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(11
      "length of sequence = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 255 255 255 255 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(12
      "length of sequence = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 255 255 255 255 255 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(13
      "length of sequence = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 136 255 255 255 255 255 255 255 255 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(14
      "incorrect length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 255 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(15
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(16
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 128 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(17
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 128 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(18
      "removing sequence"
      #vu8(49 50 51 52 48 48)
      #vu8()
      #f
      ())
    #(19
      "lonely sequence tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48)
      #f
      ())
    #(20
      "appending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 103 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 0 0)
      #f
      ())
    #(21
      "prepending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 103 0 0 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(22
      "appending unused 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 0 0)
      #f
      ())
    #(23
      "appending null value to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 103 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 5 0)
      #f
      ())
    #(24
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 106 73 129 119 48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(25
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 105 37 0 48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(26
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 103 48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 0 4 222 173 190 239)
      #f
      ())
    #(27
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 106 34 53 73 129 119 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(28
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 105 34 52 37 0 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(29
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 109 34 50 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 0 4 222 173 190 239 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(30
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 106 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 34 54 73 129 119 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(31
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 105 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 34 53 37 0 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(32
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 109 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 34 51 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 0 4 222 173 190 239)
      #f
      ())
    #(33
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 109 170 0 187 0 205 0 48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(34
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 107 170 2 170 187 48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(35
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 109 34 56 170 0 187 0 205 0 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(36
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 107 34 54 170 2 170 187 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(37
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 109 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 34 57 170 0 187 0 205 0 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(38
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 107 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 34 55 170 2 170 187 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(39
      "truncated length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129)
      #f
      ())
    #(40
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 0 0)
      #f
      ())
    #(41
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 105 34 128 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 0 0 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(42
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 105 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 34 128 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 0 0)
      #f
      ())
    #(43
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 49 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 0 0)
      #f
      ())
    #(44
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 105 34 128 3 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 0 0 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(45
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 105 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 34 128 3 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 0 0)
      #f
      ())
    #(46
      "Replacing sequence with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(5 0)
      #f
      ())
    #(47
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(46 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(48
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(47 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(49
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(49 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(50
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(50 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(51
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(255 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(52
      "dropping value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 0)
      #f
      ())
    #(53
      "using composition for sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 105 48 1 2 48 100 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(54
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111)
      #f
      ())
    #(55
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(56
      "indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 0 0)
      #f
      ("BER"))
    #(57
      "indefinite length with truncated delimiter"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 0)
      #f
      ())
    #(58
      "indefinite length with additional element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 5 0 0 0)
      #f
      ())
    #(59
      "indefinite length with truncated element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 6 8 17 34 0 0)
      #f
      ())
    #(60
      "indefinite length with garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 0 0 254 2 190 239)
      #f
      ())
    #(61
      "indefinite length with nonempty EOC"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 0 2 190 239)
      #f
      ())
    #(62
      "prepend empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 103 48 0 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(63
      "append empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 103 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 48 0)
      #f
      ())
    #(64
      "append garbage with high tag number"
      #vu8(49 50 51 52 48 48)
      #vu8(48 104 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 191 127 0)
      #f
      ())
    #(65
      "sequence of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 103 48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(66
      "truncated sequence: removed last 1 elements"
      #vu8(49 50 51 52 48 48)
      #vu8(48 50 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215)
      #f
      ())
    #(67
      "repeating element in sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 152 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(68
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 129 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ("BER"))
    #(69
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 129 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ("BER"))
    #(70
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 103 2 130 0 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ("BER"))
    #(71
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 103 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 130 0 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ("BER"))
    #(72
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 49 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(73
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 47 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(74
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 50 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(75
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 48 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(76
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 106 2 133 1 0 0 0 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(77
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 106 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 133 1 0 0 0 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(78
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 110 2 137 1 0 0 0 0 0 0 0 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(79
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 110 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 137 1 0 0 0 0 0 0 0 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(80
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 105 2 132 127 255 255 255 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(81
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 105 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 132 127 255 255 255 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(82
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 105 2 132 255 255 255 255 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(83
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 105 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 132 255 255 255 255 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(84
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 106 2 133 255 255 255 255 255 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(85
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 106 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 133 255 255 255 255 255 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(86
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 109 2 136 255 255 255 255 255 255 255 255 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(87
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 109 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 136 255 255 255 255 255 255 255 255 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(88
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 255 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(89
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 255 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(90
      "removing integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 51 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(91
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(92
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 51 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2)
      #f
      ())
    #(93
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 103 2 50 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 0 0 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(94
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 103 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 51 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 0 0)
      #f
      ())
    #(95
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 103 2 50 0 0 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ("BER"))
    #(96
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 103 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 51 0 0 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ("BER"))
    #(97
      "appending unused 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 103 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 0 0 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(98
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 103 2 50 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 5 0 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(99
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 103 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 51 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130 5 0)
      #f
      ())
    #(100
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 129 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(101
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 129)
      #f
      ())
    #(102
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 5 0 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(103
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 5 0)
      #f
      ())
    #(104
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 0 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(105
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 1 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(106
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 3 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(107
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 4 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(108
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 255 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(109
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 0 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(110
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 1 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(111
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 3 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(112
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 4 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(113
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 255 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(114
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 0 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(115
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 0)
      #f
      ())
    #(116
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 105 34 52 2 1 18 2 47 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(117
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 105 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 34 53 2 1 0 2 48 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(118
      "modify first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 16 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(119
      "modify first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 2 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(120
      "modify last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 87 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(121
      "modify last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 2)
      #f
      ())
    #(122
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 47 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(123
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 47 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(124
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 48 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111)
      #f
      ())
    #(125
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 255 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(126
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 50 255 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(127
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 9 1 128 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(128
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 9 1 128)
      #f
      ())
    #(129
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 1 0 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(130
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 1 0)
      #f
      ())
    #(131
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 1 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 162 86 23 170 215 72 94 99 18 168 88 151 20 246 71 172 247 169 76 255 190 138 114 74 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(132
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 255 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 26 19 143 124 166 238 218 2 164 98 116 61 50 131 148 248 183 29 209 26 42 37 0 31 100 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(133
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 237 76 245 65 9 74 184 144 25 73 237 81 170 131 251 218 153 225 217 75 180 228 1 230 37 13 53 215 28 238 207 124 69 113 181 27 51 186 95 205 245 66 204 107 14 58 183 41 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(134
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 237 76 245 65 9 74 184 144 25 73 237 81 170 131 251 218 153 225 217 75 180 228 1 229 236 112 131 89 17 37 253 91 157 139 194 205 124 107 7 72 226 46 229 213 218 255 224 156 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(135
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 254 237 76 245 65 9 74 184 144 25 73 237 81 170 131 251 218 153 225 217 75 180 228 1 230 93 169 232 85 40 183 161 156 237 87 167 104 235 9 184 83 8 86 179 0 65 117 141 182 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(136
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 1 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(137
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 237 76 245 65 9 74 184 144 25 73 237 81 170 131 251 218 153 225 217 75 180 228 1 230 37 13 53 215 28 238 207 124 69 113 181 27 51 186 95 205 245 66 204 107 14 58 183 41 2 49 0 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(138
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 1 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 197 248 252 106 223 218 101 10 134 170 116 185 90 219 214 135 75 60 216 221 230 204 7 152 245)
      #f
      ())
    #(139
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 48 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 106 53 207 219 241 246 174 199 250 64 157 246 74 117 56 85 99 0 171 17 50 125 70 15)
      #f
      ())
    #(140
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 255 24 64 218 159 193 210 248 248 144 12 244 133 213 65 59 140 37 116 238 58 141 76 160 57 206 102 226 162 25 210 35 88 173 165 84 87 108 218 32 47 176 19 59 132 0 189 144 126)
      #f
      ())
    #(141
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 254 24 64 218 159 193 210 248 248 144 12 244 133 213 65 59 140 37 116 238 58 141 76 160 58 7 3 149 32 37 154 245 121 85 139 70 165 36 41 120 180 195 39 34 25 51 248 103 11)
      #f
      ())
    #(142
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 49 1 231 191 37 96 62 45 7 7 111 243 11 122 42 190 196 115 218 139 17 197 114 179 95 198 49 153 29 93 230 45 220 167 82 90 171 168 147 37 223 208 79 236 196 123 255 66 111 130)
      #f
      ())
    #(143
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 18 179 10 190 246 181 71 111 230 182 18 174 85 124 4 37 102 30 38 180 75 27 254 25 218 242 202 40 227 17 48 131 186 142 74 228 204 69 160 50 10 189 51 148 241 197 72 215 2 48 24 64 218 159 193 210 248 248 144 12 244 133 213 65 59 140 37 116 238 58 141 76 160 57 206 102 226 162 25 210 35 88 173 165 84 87 108 218 32 47 176 19 59 132 0 189 144 126)
      #f
      ())
    #(144
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 0)
      #f
      ("EdgeCase"))
    #(145
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 1)
      #f
      ("EdgeCase"))
    #(146
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 255)
      #f
      ("EdgeCase"))
    #(147
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 1 0 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 115)
      #f
      ("EdgeCase"))
    #(148
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 1 0 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114)
      #f
      ("EdgeCase"))
    #(149
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 1 0 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 116)
      #f
      ("EdgeCase"))
    #(150
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 1 0 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255)
      #f
      ("EdgeCase"))
    #(151
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 1 0 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 1 0 0 0 0)
      #f
      ("EdgeCase"))
    #(152
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 0 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(153
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 9 1 66)
      #f
      ("EdgeCase"))
    #(154
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 0)
      #f
      ("EdgeCase"))
    #(155
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 1)
      #f
      ("EdgeCase"))
    #(156
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 255)
      #f
      ("EdgeCase"))
    #(157
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 1 1 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 115)
      #f
      ("EdgeCase"))
    #(158
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 1 1 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114)
      #f
      ("EdgeCase"))
    #(159
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 1 1 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 116)
      #f
      ("EdgeCase"))
    #(160
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 1 1 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255)
      #f
      ("EdgeCase"))
    #(161
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 1 1 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 1 0 0 0 0)
      #f
      ("EdgeCase"))
    #(162
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(163
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 9 1 66)
      #f
      ("EdgeCase"))
    #(164
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 0)
      #f
      ("EdgeCase"))
    #(165
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 1)
      #f
      ("EdgeCase"))
    #(166
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 255)
      #f
      ("EdgeCase"))
    #(167
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 1 255 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 115)
      #f
      ("EdgeCase"))
    #(168
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 1 255 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114)
      #f
      ("EdgeCase"))
    #(169
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 1 255 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 116)
      #f
      ("EdgeCase"))
    #(170
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 1 255 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255)
      #f
      ("EdgeCase"))
    #(171
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 1 255 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 1 0 0 0 0)
      #f
      ("EdgeCase"))
    #(172
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 255 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(173
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 9 1 66)
      #f
      ("EdgeCase"))
    #(174
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 115 2 1 0)
      #f
      ("EdgeCase"))
    #(175
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 115 2 1 1)
      #f
      ("EdgeCase"))
    #(176
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 115 2 1 255)
      #f
      ("EdgeCase"))
    #(177
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 115 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 115)
      #f
      ("EdgeCase"))
    #(178
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 115 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114)
      #f
      ("EdgeCase"))
    #(179
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 115 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 116)
      #f
      ("EdgeCase"))
    #(180
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 115 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255)
      #f
      ("EdgeCase"))
    #(181
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 115 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 1 0 0 0 0)
      #f
      ("EdgeCase"))
    #(182
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 56 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 115 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(183
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 115 9 1 66)
      #f
      ("EdgeCase"))
    #(184
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114 2 1 0)
      #f
      ("EdgeCase"))
    #(185
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114 2 1 1)
      #f
      ("EdgeCase"))
    #(186
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114 2 1 255)
      #f
      ("EdgeCase"))
    #(187
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 115)
      #f
      ("EdgeCase"))
    #(188
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114)
      #f
      ("EdgeCase"))
    #(189
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 116)
      #f
      ("EdgeCase"))
    #(190
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255)
      #f
      ("EdgeCase"))
    #(191
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 1 0 0 0 0)
      #f
      ("EdgeCase"))
    #(192
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 56 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(193
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114 9 1 66)
      #f
      ("EdgeCase"))
    #(194
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 116 2 1 0)
      #f
      ("EdgeCase"))
    #(195
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 116 2 1 1)
      #f
      ("EdgeCase"))
    #(196
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 116 2 1 255)
      #f
      ("EdgeCase"))
    #(197
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 116 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 115)
      #f
      ("EdgeCase"))
    #(198
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 116 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114)
      #f
      ("EdgeCase"))
    #(199
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 116 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 116)
      #f
      ("EdgeCase"))
    #(200
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 116 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255)
      #f
      ("EdgeCase"))
    #(201
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 116 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 1 0 0 0 0)
      #f
      ("EdgeCase"))
    #(202
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 56 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 116 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(203
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 116 9 1 66)
      #f
      ("EdgeCase"))
    #(204
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255 2 1 0)
      #f
      ("EdgeCase"))
    #(205
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255 2 1 1)
      #f
      ("EdgeCase"))
    #(206
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255 2 1 255)
      #f
      ("EdgeCase"))
    #(207
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 115)
      #f
      ("EdgeCase"))
    #(208
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114)
      #f
      ("EdgeCase"))
    #(209
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 116)
      #f
      ("EdgeCase"))
    #(210
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255)
      #f
      ("EdgeCase"))
    #(211
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 1 0 0 0 0)
      #f
      ("EdgeCase"))
    #(212
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 56 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(213
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255 9 1 66)
      #f
      ("EdgeCase"))
    #(214
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 1 0 0 0 0 2 1 0)
      #f
      ("EdgeCase"))
    #(215
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 1 0 0 0 0 2 1 1)
      #f
      ("EdgeCase"))
    #(216
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 1 0 0 0 0 2 1 255)
      #f
      ("EdgeCase"))
    #(217
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 1 0 0 0 0 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 115)
      #f
      ("EdgeCase"))
    #(218
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 1 0 0 0 0 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114)
      #f
      ("EdgeCase"))
    #(219
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 1 0 0 0 0 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 116)
      #f
      ("EdgeCase"))
    #(220
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 1 0 0 0 0 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255)
      #f
      ("EdgeCase"))
    #(221
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 1 0 0 0 0 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 1 0 0 0 0)
      #f
      ("EdgeCase"))
    #(222
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 56 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 1 0 0 0 0 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(223
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 1 0 0 0 0 9 1 66)
      #f
      ("EdgeCase"))
    #(224
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 12 1 48)
      #f
      ())
    #(225
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 5 2 1 1 12 0)
      #f
      ())
    #(226
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 9 12 2 37 115 12 3 115 37 115)
      #f
      ())
    #(227
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 48 3 2 1 0)
      #f
      ())
    #(228
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 3 2 1 1)
      #f
      ())
    #(229
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 1 1 0)
      #f
      ())
    #(230
      "Edge case for Shamir multiplication"
      #vu8(49 51 50 50 55)
      #vu8(48 102 2 49 0 172 4 46 19 171 131 57 70 146 1 145 112 112 123 194 29 211 215 184 210 51 209 27 101 23 87 8 91 221 87 103 234 187 184 83 34 152 79 20 67 115 53 222 12 223 86 86 132 2 49 0 189 119 13 62 228 190 173 186 190 124 164 110 140 71 2 120 52 53 34 141 70 226 221 54 14 50 47 230 28 134 146 111 164 156 129 22 236 148 15 114 172 140 48 217 190 179 225 47)
      #t
      ())
    #(231
      "special case hash"
      #vu8(49 55 53 48 53 53 49 56 49 53)
      #vu8(48 102 2 49 0 211 41 138 1 147 196 49 107 52 227 131 63 247 100 168 44 255 78 245 123 93 215 158 214 35 123 81 255 118 206 171 19 191 146 19 31 65 3 5 21 183 224 18 210 186 133 120 48 2 49 0 191 199 81 141 42 210 14 213 245 143 59 231 151 32 241 134 111 122 35 179 189 27 249 19 211 145 104 25 208 8 73 122 7 16 70 49 29 60 47 208 95 194 132 201 100 163 150 23)
      #t
      ())
    #(232
      "special case hash"
      #vu8(49 48 51 54 51 48 55 49)
      #vu8(48 101 2 49 0 225 79 65 165 252 131 170 71 37 169 234 96 171 91 11 157 226 127 81 154 244 181 87 166 1 241 254 224 36 63 142 238 81 128 248 197 49 65 79 52 115 244 69 116 48 203 122 38 2 48 16 71 237 43 241 249 142 60 233 62 143 219 220 99 204 121 242 56 153 143 238 116 225 187 108 215 8 105 73 80 187 255 227 148 80 102 6 77 160 67 240 77 112 131 208 165 150 236)
      #t
      ())
    #(233
      "special case hash"
      #vu8(50 51 54 50 52 50 49 51 50 49)
      #vu8(48 102 2 49 0 183 200 181 207 99 26 150 173 144 141 106 140 141 14 10 53 252 194 42 90 54 5 2 48 182 101 147 39 100 174 69 189 132 203 135 235 186 142 68 74 189 137 228 72 63 201 196 168 2 49 0 161 22 54 192 149 170 155 198 156 242 75 80 160 169 229 55 125 15 251 186 79 171 84 51 21 159 0 106 180 86 61 85 233 24 73 48 32 161 150 145 87 78 77 30 102 227 151 94)
      #t
      ())
    #(234
      "special case hash"
      #vu8(52 53 56 56 48 49 52 54 53 54)
      #vu8(48 100 2 48 74 125 242 223 106 50 213 155 107 254 213 79 3 44 61 111 58 205 58 196 6 55 4 9 156 209 98 171 57 8 232 238 186 78 151 62 231 91 94 40 93 213 114 6 35 56 254 88 2 48 53 54 91 227 39 226 70 61 199 89 149 28 92 11 229 227 208 148 203 112 105 18 253 247 210 107 21 212 165 196 47 254 190 202 90 231 58 24 35 245 230 93 87 27 76 207 26 130)
      #t
      ())
    #(235
      "special case hash"
      #vu8(50 49 52 54 54 48 53 54 52 50)
      #vu8(48 102 2 49 0 154 211 99 161 187 198 124 87 200 42 55 142 152 140 192 131 204 145 248 179 39 57 236 100 124 12 179 72 251 92 134 71 32 21 19 26 125 144 131 191 71 64 175 51 81 117 81 149 2 49 0 211 16 220 21 9 248 192 2 129 239 229 113 118 141 72 128 39 234 118 15 227 41 113 246 203 123 87 205 249 6 33 183 208 8 110 38 68 61 55 97 223 122 163 164 236 204 108 88)
      #t
      ())
    #(236
      "special case hash"
      #vu8(51 51 53 51 48 48 56 50 48)
      #vu8(48 101 2 49 0 149 7 138 245 194 172 35 2 57 85 127 95 206 226 231 18 167 3 78 149 67 122 155 52 193 105 42 129 39 14 220 248 221 213 171 161 19 138 66 1 38 99 229 248 28 155 234 226 2 48 64 238 81 10 12 206 184 81 138 212 246 24 89 145 100 218 15 59 167 94 206 234 194 22 33 110 198 43 204 234 232 220 152 181 227 91 46 126 212 124 75 142 186 207 232 74 116 230)
      #t
      ())
    #(237
      "special case hash"
      #vu8(54 51 57 54 54 48 51 54 51 49)
      #vu8(48 102 2 49 0 165 56 7 99 98 4 61 229 72 100 70 76 20 166 193 195 164 120 68 55 38 193 48 154 54 185 233 234 21 146 180 12 63 63 144 209 149 189 41 128 4 167 30 143 40 94 9 58 2 49 0 215 79 151 239 56 70 133 21 168 201 39 164 80 39 92 20 220 22 221 189 217 43 58 92 174 128 75 226 13 41 198 130 18 146 71 210 224 29 55 218 190 56 255 183 72 8 168 183)
      #t
      ())
    #(238
      "special case hash"
      #vu8(51 51 57 49 54 54 48 55 57 53)
      #vu8(48 101 2 49 0 187 232 53 17 63 142 164 220 70 159 2 131 175 102 3 243 215 163 162 34 179 171 90 147 219 86 0 126 242 220 7 201 121 136 252 123 139 131 48 87 250 63 191 151 65 59 108 21 2 48 115 124 49 99 32 182 16 2 194 172 177 132 216 46 96 228 107 210 18 154 155 191 86 60 128 218 66 49 33 193 97 222 205 54 53 24 178 96 170 172 243 115 76 30 249 250 169 37)
      #t
      ())
    #(239
      "special case hash"
      #vu8(49 52 52 54 57 55 53 57 54 52)
      #vu8(48 101 2 48 103 156 54 64 173 143 254 149 119 217 181 155 24 255 85 152 219 254 97 18 43 186 184 35 141 38 137 7 201 137 205 148 220 127 96 29 23 72 106 249 63 109 24 98 74 165 36 163 2 49 0 232 77 209 149 80 43 220 221 119 183 245 29 140 30 167 137 0 105 5 132 74 14 24 84 116 175 26 88 59 171 86 78 226 59 224 188 73 80 3 144 220 235 61 57 72 240 103 48)
      #t
      ())
    #(240
      "special case hash"
      #vu8(53 49 53 57 52 55 56 54 52 49)
      #vu8(48 102 2 49 0 246 241 175 230 254 188 231 153 204 155 117 66 121 242 73 159 56 37 195 231 137 172 206 244 109 63 6 142 43 103 129 253 80 102 158 128 195 199 41 58 92 12 10 244 142 6 142 53 2 49 0 245 156 200 194 34 46 214 59 69 83 248 20 158 190 204 67 184 102 113 155 41 78 240 131 42 18 179 227 219 200 37 238 171 104 181 119 150 37 177 10 229 84 20 18 236 41 83 84)
      #t
      ())
    #(241
      "special case hash"
      #vu8(53 50 52 49 55 57 50 51 51 49)
      #vu8(48 101 2 49 0 244 100 150 246 212 115 243 192 145 166 138 170 55 73 34 12 132 0 97 205 79 136 134 19 204 254 172 10 160 65 27 69 30 219 212 250 203 227 141 45 217 214 208 208 210 85 237 52 2 48 0 195 167 79 166 102 111 88 196 121 143 48 195 119 152 19 229 198 208 138 195 26 121 44 45 15 156 183 8 115 63 38 173 107 243 177 228 104 21 174 83 106 161 81 104 11 222 226)
      #t
      ())
    #(242
      "special case hash"
      #vu8(49 49 52 55 50 57 48 50 48 52)
      #vu8(48 102 2 49 0 223 139 142 76 177 188 78 198 156 177 71 47 165 168 28 54 100 46 212 127 198 206 86 0 51 196 247 203 11 200 69 155 87 136 227 76 170 125 150 230 7 17 136 228 73 240 32 122 2 49 0 139 142 224 23 121 98 164 137 147 143 63 239 250 229 87 41 217 212 70 254 67 140 124 185 30 165 246 50 200 10 167 42 67 185 176 78 109 231 255 52 247 111 68 37 16 127 214 151)
      #t
      ())
    #(243
      "special case hash"
      #vu8(49 48 56 55 56 55 50 53 54 52 53)
      #vu8(48 102 2 49 0 139 182 168 236 220 139 72 58 215 185 201 75 179 159 99 181 252 19 120 239 232 192 32 74 116 99 29 222 215 21 150 67 130 20 25 175 51 134 59 4 20 189 135 236 247 59 163 251 2 49 0 137 40 68 159 45 109 178 178 198 93 68 217 139 235 119 238 173 203 218 131 255 51 229 126 177 131 225 252 41 173 134 240 186 41 238 102 231 80 232 23 12 204 67 76 247 10 225 153)
      #t
      ())
    #(244
      "special case hash"
      #vu8(55 51 52 51 51 48 54 53 54 51)
      #vu8(48 101 2 49 0 227 131 40 119 200 12 78 212 57 216 234 220 246 21 192 40 111 245 73 67 227 174 47 102 163 185 248 134 36 95 234 71 14 109 88 18 206 248 12 35 228 245 104 208 33 90 59 252 2 48 49 119 167 219 240 171 143 143 95 193 208 27 25 214 165 232 150 66 137 159 54 157 254 33 59 124 197 93 142 175 33 221 40 133 239 206 82 181 149 156 31 6 183 202 197 119 62 91)
      #t
      ())
    #(245
      "special case hash"
      #vu8(57 55 52 52 54 48 57 55 56)
      #vu8(48 101 2 48 98 117 115 143 8 128 2 50 134 169 182 242 142 160 169 119 158 141 100 76 61 236 72 41 60 100 241 86 107 52 225 92 113 25 189 157 2 250 35 87 119 76 171 201 229 62 247 230 2 49 0 210 240 165 43 16 22 8 43 213 81 118 9 238 129 192 118 77 195 138 143 50 217 165 7 78 113 126 225 216 50 249 234 14 76 107 16 11 31 213 231 244 188 116 104 199 157 57 51)
      #t
      ())
    #(246
      "special case hash"
      #vu8(51 50 50 55 48 56 54 56 51 57)
      #vu8(48 102 2 49 0 211 22 254 81 104 207 19 117 60 140 59 190 248 56 105 166 112 61 192 213 175 168 42 244 156 136 255 53 85 102 15 87 145 154 111 54 232 68 81 195 232 229 120 62 59 131 254 59 2 49 0 153 95 8 200 254 199 205 130 206 39 231 80 147 147 245 163 128 58 72 254 37 95 203 22 3 33 198 225 137 14 179 110 55 188 218 21 143 15 166 137 158 125 16 126 82 222 140 60)
      #t
      ())
    #(247
      "special case hash"
      #vu8(50 51 50 57 55 54 52 49 48)
      #vu8(48 100 2 48 11 19 184 253 16 250 123 66 22 145 55 88 138 211 245 87 83 154 78 146 6 243 161 241 254 146 2 176 105 13 239 222 210 190 24 20 127 91 45 169 40 92 14 115 73 115 94 163 2 48 4 120 173 49 123 34 162 71 191 147 52 113 155 76 142 232 74 207 19 69 21 219 119 230 20 28 117 208 137 97 225 229 30 172 162 152 54 116 65 3 222 15 106 76 121 141 62 235)
      #t
      ())
    #(248
      "special case hash"
      #vu8(57 52 48 52 55 51 56 49)
      #vu8(48 101 2 48 21 128 68 41 188 181 39 125 79 10 247 59 213 76 138 23 116 153 167 182 79 24 175 197 102 195 206 112 150 189 198 194 117 227 133 72 237 207 160 183 141 215 245 123 111 57 62 73 2 49 0 213 149 31 36 62 101 184 43 165 192 199 85 45 51 177 31 30 144 253 224 195 253 1 74 172 27 178 125 178 170 240 155 102 124 139 36 124 76 221 91 7 35 251 168 59 79 153 158)
      #t
      ())
    #(249
      "special case hash"
      #vu8(51 50 50 48 53 54 57 49 50 51)
      #vu8(48 101 2 48 53 146 71 201 87 118 187 23 73 43 123 248 39 245 243 48 250 159 157 231 204 16 68 26 20 121 200 23 118 206 54 205 198 161 60 95 81 73 196 227 145 71 161 150 187 2 237 52 2 49 0 246 237 146 82 167 61 228 133 22 244 234 186 182 54 143 191 246 135 81 40 175 78 18 38 213 77 181 88 189 118 238 195 105 204 155 40 91 193 150 213 18 229 49 248 72 100 211 63)
      #t
      ())
    #(250
      "special case hash"
      #vu8(52 49 52 48 53 51 57 57 52)
      #vu8(48 101 2 49 0 165 87 209 246 58 32 148 246 131 66 158 203 53 166 83 59 172 137 118 130 119 92 0 81 225 17 238 214 224 118 196 136 103 202 224 5 197 224 128 56 0 176 80 49 30 56 28 214 2 48 42 47 135 30 252 240 60 241 200 245 9 224 118 170 162 167 111 30 167 141 28 100 128 78 165 176 99 176 50 75 142 152 235 88 37 208 67 112 16 96 32 238 21 128 93 190 223 129)
      #t
      ())
    #(251
      "special case hash"
      #vu8(49 57 53 49 53 54 56 54 52 57)
      #vu8(48 101 2 49 0 242 43 249 17 105 180 174 200 76 168 64 65 203 130 111 125 252 111 51 217 115 243 199 36 51 184 160 202 32 58 172 147 247 238 214 43 233 190 160 23 6 64 45 91 93 59 14 101 2 48 120 65 211 188 52 170 71 232 19 165 92 37 32 60 94 194 52 45 131 141 91 70 56 194 112 93 207 75 172 156 36 247 101 181 212 194 143 163 199 253 167 163 142 213 4 140 125 227)
      #t
      ())
    #(252
      "special case hash"
      #vu8(53 57 53 57 48 55 49 54 51 53)
      #vu8(48 102 2 49 0 156 25 110 57 162 214 26 60 37 101 245 147 47 53 126 36 40 146 115 126 154 223 200 108 102 9 242 145 229 230 253 187 35 2 159 249 21 160 50 176 197 57 11 169 209 95 32 62 2 49 0 215 33 226 142 82 105 215 129 62 138 154 237 83 163 126 101 47 236 21 96 202 97 242 143 85 171 76 38 44 198 33 78 238 141 60 76 43 169 209 186 11 161 158 94 60 116 132 167)
      #t
      ())
    #(253
      "special case hash"
      #vu8(50 49 53 51 52 54 57 53 51)
      #vu8(48 102 2 49 0 139 161 233 222 193 77 48 11 14 37 14 160 188 212 65 156 61 149 89 98 44 199 184 55 91 215 63 125 112 19 50 66 227 213 191 112 188 120 40 8 115 70 84 186 205 18 218 234 2 49 0 216 147 211 151 15 114 204 171 53 85 90 233 30 188 254 211 197 191 197 211 145 129 7 27 192 107 163 130 88 122 105 94 2 237 72 47 26 116 254 48 154 57 158 174 229 245 188 82)
      #t
      ())
    #(254
      "special case hash"
      #vu8(52 56 48 55 49 48 57 56 51 48)
      #vu8(48 100 2 48 47 82 29 157 131 225 191 248 210 82 85 169 189 202 144 225 93 120 168 201 234 120 133 184 132 2 74 64 222 154 49 91 237 127 116 107 93 164 206 150 176 112 32 142 154 224 207 165 2 48 65 133 198 244 34 91 140 37 90 77 49 171 181 201 182 198 134 166 238 80 168 235 113 3 170 239 144 36 90 71 34 252 137 150 242 102 242 98 16 156 59 89 87 186 115 40 154 32)
      #t
      ())
    #(255
      "special case hash"
      #vu8(52 57 50 57 51 57 54 57 48)
      #vu8(48 101 2 49 0 212 144 15 84 193 188 132 29 56 235 47 19 224 186 251 177 43 86 103 57 59 7 16 45 185 6 57 116 79 84 215 137 96 179 68 200 251 251 243 84 11 56 208 2 120 225 119 170 2 48 58 22 239 240 57 151 0 0 155 105 73 243 245 6 197 67 73 91 248 224 243 163 79 235 142 221 99 100 135 71 181 49 173 196 231 83 152 228 218 128 131 184 139 52 194 251 151 168)
      #t
      ())
    #(256
      "special case hash"
      #vu8(50 49 49 50 51 53 53 57 54 48)
      #vu8(48 101 2 49 0 192 22 158 43 139 151 238 176 101 14 39 101 63 46 71 59 151 160 110 30 136 139 7 193 1 140 115 12 171 253 238 236 74 98 108 62 222 224 118 125 68 232 237 7 8 12 42 196 2 48 19 244 100 117 249 85 249 112 25 40 6 126 57 130 212 186 90 88 163 121 166 111 145 183 79 173 154 200 174 227 0 134 190 111 65 201 194 216 251 128 224 146 77 237 190 103 233 104)
      #t
      ())
    #(257
      "special case hash"
      #vu8(49 50 51 57 50 55 53 55 48 52)
      #vu8(48 100 2 48 46 134 136 113 234 139 39 168 167 70 136 33 82 5 31 43 20 106 244 172 157 132 115 180 182 133 47 128 161 208 199 202 181 116 137 170 67 248 144 36 56 138 236 6 5 176 38 55 2 48 109 140 137 238 216 165 166 37 44 92 234 209 197 83 145 198 116 61 136 22 9 227 219 36 215 14 173 128 166 99 87 0 32 121 143 191 65 212 198 36 252 177 206 54 197 54 254 56)
      #t
      ())
    #(258
      "special case hash"
      #vu8(50 48 56 49 49 56 56 55 54 56)
      #vu8(48 101 2 49 0 171 230 165 17 121 238 135 201 87 128 94 202 213 204 235 202 48 198 227 163 230 219 228 235 77 19 11 113 223 43 245 144 185 214 124 143 73 232 27 249 12 224 144 157 60 45 171 76 2 48 113 16 88 47 171 73 91 33 189 157 218 6 79 189 122 204 9 208 84 77 207 118 153 190 53 173 22 32 127 250 16 232 144 79 146 65 167 9 72 123 162 186 126 52 67 11 129 195)
      #t
      ())
    #(259
      "special case hash"
      #vu8(52 53 52 54 48 56 57 54 51)
      #vu8(48 100 2 48 80 37 44 25 230 14 65 32 183 194 139 44 46 10 88 142 93 16 117 24 205 97 229 199 153 156 109 70 94 161 52 247 82 50 45 139 131 245 152 143 205 198 43 217 173 179 108 205 2 48 25 56 153 53 36 145 218 191 228 252 148 46 20 221 172 178 0 103 55 41 214 22 2 204 11 175 87 50 210 98 243 110 82 121 134 90 129 12 226 249 119 245 118 134 160 208 19 122)
      #t
      ())
    #(260
      "special case hash"
      #vu8(49 51 56 55 54 56 55 49 49 49)
      #vu8(48 102 2 49 0 235 114 95 221 83 157 125 232 234 2 250 200 219 110 196 100 244 12 39 42 99 230 178 113 140 78 2 102 191 18 53 218 227 48 247 71 166 5 47 67 25 236 190 123 218 222 155 208 2 49 0 174 132 80 118 72 186 45 25 68 187 103 114 44 205 44 185 75 146 181 158 137 161 174 105 140 102 139 181 127 72 28 66 178 22 194 61 164 177 216 192 229 2 239 151 253 160 90 208)
      #t
      ())
    #(261
      "special case hash"
      #vu8(50 48 51 49 51 56 49 56 55 53)
      #vu8(48 100 2 48 37 170 86 252 189 146 242 207 83 189 219 170 13 181 55 222 88 67 41 7 49 193 221 120 3 111 203 222 212 168 247 24 125 223 237 159 92 169 217 142 167 177 45 36 184 210 157 87 2 48 2 143 104 55 45 102 22 72 16 191 121 195 10 25 17 22 212 150 254 50 49 70 5 220 22 104 40 148 37 251 58 21 215 83 45 222 16 82 164 154 53 134 108 20 122 189 225 217)
      #t
      ())
    #(262
      "special case hash"
      #vu8(50 53 53 51 53 56 51 51 51)
      #vu8(48 101 2 48 84 191 122 220 133 72 231 202 226 112 231 176 151 241 107 94 49 81 88 210 27 14 101 44 225 207 228 179 49 38 186 74 101 191 34 123 76 221 202 242 45 51 216 36 120 147 123 32 2 49 0 191 193 184 241 208 40 70 164 47 49 225 189 16 186 51 64 101 69 159 113 42 59 188 118 0 93 108 100 136 136 159 136 192 152 63 72 52 208 191 34 73 219 240 166 219 118 7 1)
      #t
      ())
    #(263
      "special case hash"
      #vu8(52 54 49 56 56 52 49 52 55 50)
      #vu8(48 102 2 49 0 211 187 41 172 11 209 246 5 138 81 151 247 102 214 234 50 22 197 114 222 214 42 244 99 24 200 199 249 84 123 178 70 85 54 84 39 157 105 152 157 154 245 239 76 202 207 100 218 2 49 0 225 2 129 18 44 33 18 162 165 169 216 122 197 143 100 251 7 201 150 162 208 146 146 17 158 143 36 213 73 155 46 133 36 235 208 87 0 151 246 204 127 156 38 9 74 53 200 87)
      #t
      ())
    #(264
      "special case hash"
      #vu8(49 48 48 57 50 52 53 56 53 52)
      #vu8(48 102 2 49 0 188 50 232 94 49 18 71 36 8 249 50 69 134 229 37 50 81 40 163 131 19 195 75 121 112 12 176 163 247 38 42 144 161 252 196 14 239 31 26 56 132 3 42 122 33 129 14 10 2 49 0 192 47 82 84 19 96 53 129 7 161 61 190 163 31 131 216 3 151 113 9 1 115 75 122 219 120 177 252 144 68 84 162 138 55 133 20 204 239 128 236 199 12 29 142 85 241 19 17)
      #t
      ())
    #(265
      "special case hash"
      #vu8(50 55 53 54 52 54 54 53 50 56)
      #vu8(48 102 2 49 0 240 75 158 23 199 29 45 33 51 234 56 13 113 182 184 44 138 142 51 50 112 62 157 83 91 44 43 202 155 10 213 134 209 118 166 4 154 250 53 237 217 114 46 219 92 51 218 163 2 49 0 189 68 212 166 38 51 128 202 111 34 231 108 38 213 247 15 65 244 215 202 231 212 185 193 184 220 43 165 41 141 157 18 64 139 4 97 78 47 55 150 204 25 201 80 200 200 138 16)
      #t
      ())
    #(266
      "special case hash"
      #vu8(49 49 57 54 57 55 49 48 50)
      #vu8(48 101 2 49 0 200 128 115 81 216 226 97 51 142 117 12 185 165 47 75 228 71 11 99 246 241 129 203 224 232 29 67 182 8 36 186 75 225 187 164 43 23 131 137 122 13 114 176 97 64 24 176 47 2 48 82 227 165 152 200 190 152 33 39 233 97 238 210 176 79 33 200 109 244 235 202 176 217 85 167 198 110 199 248 24 137 135 152 238 117 54 122 133 2 34 118 185 18 192 160 114 191 247)
      #t
      ())
    #(267
      "special case hash"
      #vu8(50 51 51 49 52 50 49 55 50)
      #vu8(48 100 2 48 97 82 132 27 111 180 96 84 110 235 65 88 163 229 255 165 79 81 170 106 32 137 135 190 137 155 112 96 85 205 89 216 236 124 1 244 99 66 84 254 5 14 29 78 197 37 161 115 2 48 115 240 197 241 54 64 216 146 194 143 112 20 40 232 251 251 115 107 100 120 187 217 114 200 198 132 151 117 86 237 89 154 112 211 19 224 107 18 96 128 225 48 104 213 110 28 16 190)
      #t
      ())
    #(268
      "special case hash"
      #vu8(49 54 55 51 52 56 49 56 57 56)
      #vu8(48 102 2 49 0 132 47 141 40 20 245 183 22 63 75 33 189 151 39 36 110 7 138 209 231 67 93 254 27 197 249 224 231 55 66 50 230 134 185 185 139 115 222 171 158 67 179 183 242 84 22 194 190 2 49 0 133 44 16 108 65 35 0 186 195 186 38 89 144 180 40 162 96 118 171 63 0 253 118 87 187 217 49 95 161 205 42 18 48 169 166 13 6 183 175 135 170 10 108 243 244 139 52 76)
      #t
      ())
    #(269
      "special case hash"
      #vu8(49 52 54 48 49 53 57 56 50 55)
      #vu8(48 102 2 49 0 225 63 109 99 139 157 79 186 84 170 67 106 148 92 254 166 109 236 5 143 171 111 2 98 147 38 88 132 69 123 90 134 232 233 39 214 153 188 100 67 27 113 227 212 29 242 0 68 2 49 0 152 50 205 27 65 119 17 142 210 71 180 243 18 119 218 21 244 32 23 159 69 199 26 35 125 119 245 153 164 93 246 130 71 186 195 220 239 8 104 236 209 102 80 5 194 91 124 108)
      #t
      ())
    #(270
      "special case hash"
      #vu8(56 57 57 48 56 53 57 57 50 57)
      #vu8(48 100 2 48 9 255 241 194 228 255 134 67 203 250 213 136 98 12 43 247 170 202 92 244 36 41 105 20 44 113 69 185 39 189 130 237 20 243 174 140 110 44 226 218 99 185 144 185 241 190 109 100 2 48 120 12 129 111 108 134 52 59 0 130 53 238 152 106 191 33 54 18 62 210 71 228 117 30 77 84 103 51 79 8 229 226 202 17 97 37 79 104 195 230 103 142 45 11 135 209 204 124)
      #t
      ())
    #(271
      "special case hash"
      #vu8(52 51 50 54 52 52 48 57 56 49)
      #vu8(48 102 2 49 0 255 174 110 125 44 234 113 181 169 199 60 188 18 133 168 210 82 148 151 114 175 225 170 39 251 19 119 64 252 66 156 42 140 134 72 201 165 186 103 138 50 247 174 118 137 179 149 202 2 49 0 137 213 76 209 58 22 44 52 24 159 245 36 129 54 144 231 151 104 175 142 190 121 76 201 65 223 231 253 242 203 141 208 180 37 25 240 52 234 77 79 28 135 0 70 209 50 16 225)
      #t
      ())
    #(272
      "special case hash"
      #vu8(50 51 55 54 52 51 55 53 53 55)
      #vu8(48 102 2 49 0 239 163 197 252 60 139 225 0 116 117 162 219 212 110 53 120 187 48 87 148 69 144 156 36 69 248 80 251 138 166 10 165 177 116 156 195 64 13 143 253 129 203 136 50 181 13 39 180 2 49 0 179 106 8 219 56 69 179 210 235 210 195 53 72 15 18 251 131 242 167 53 24 65 234 56 66 236 98 173 144 75 9 142 251 249 250 167 130 139 156 24 87 70 217 200 189 4 125 118)
      #t
      ())
    #(273
      "special case hash"
      #vu8(56 54 48 51 57 55 55 50 48)
      #vu8(48 102 2 49 0 245 119 9 95 124 116 89 74 161 198 154 202 155 178 110 12 116 117 174 81 99 5 142 204 7 75 3 175 137 229 107 18 182 167 36 80 88 157 172 240 215 230 177 114 208 1 122 14 2 49 0 190 231 86 160 181 208 166 119 191 149 249 141 165 18 133 79 62 203 113 47 148 87 14 26 210 48 234 177 124 82 123 106 139 204 154 226 2 182 87 163 97 30 207 250 148 186 13 84)
      #t
      ())
    #(274
      "special case hash"
      #vu8(53 56 48 55 55 55 51 57 56 55)
      #vu8(48 101 2 48 10 231 104 140 125 229 136 46 185 195 23 47 85 0 1 85 82 249 152 251 83 112 44 108 212 176 52 4 213 160 81 10 128 115 219 149 219 84 72 8 219 215 102 89 253 32 207 18 2 49 0 188 97 15 229 240 77 137 9 204 67 150 21 251 126 48 45 61 130 153 40 23 100 124 80 193 244 103 9 10 82 179 40 203 188 2 98 241 143 251 111 217 243 189 96 1 60 234 8)
      #t
      ())
    #(275
      "special case hash"
      #vu8(53 55 49 56 54 54 56 53 55)
      #vu8(48 101 2 48 93 200 166 216 74 250 175 144 13 120 198 169 29 197 225 46 125 23 137 26 82 193 70 130 83 6 29 112 75 137 64 190 248 91 159 232 7 160 224 43 86 232 221 55 194 47 187 130 2 49 0 145 66 88 222 82 147 44 70 4 220 235 92 231 204 10 146 224 33 237 202 155 129 155 132 169 242 86 82 249 175 19 249 86 161 19 158 233 92 122 167 160 121 227 173 131 23 251 219)
      #t
      ())
    #(276
      "special case hash"
      #vu8(56 54 55 55 51 48 57 51 54 50)
      #vu8(48 102 2 49 0 218 85 166 219 184 69 32 92 135 201 149 176 187 200 68 79 252 186 110 177 244 235 157 48 247 33 210 218 204 25 143 177 168 41 96 117 230 142 179 210 94 245 150 169 82 184 234 25 2 49 0 130 159 103 29 204 173 109 123 11 140 75 57 255 63 66 89 121 101 213 92 100 95 184 128 166 111 225 152 217 52 76 147 17 241 89 137 48 57 36 112 55 159 165 255 67 199 93 4)
      #t
      ())
    #(277
      "special case hash"
      #vu8(50 52 55 53 53 49 53 48 54 48)
      #vu8(48 100 2 48 55 48 223 208 152 93 231 125 236 221 53 138 84 75 71 244 24 211 250 180 36 129 83 13 93 81 72 89 137 76 111 35 183 41 175 114 180 70 134 5 141 226 150 135 179 75 59 12 2 48 101 189 250 240 172 33 122 128 184 46 176 156 159 89 197 200 207 191 80 166 235 151 154 143 95 99 234 185 189 56 238 9 56 228 178 49 2 17 32 51 178 48 161 74 210 121 14 63)
      #t
      ())
    #(278
      "special case hash"
      #vu8(57 55 51 49 55 54 56 55 52)
      #vu8(48 101 2 48 85 33 13 242 18 76 23 14 37 154 241 218 250 115 230 102 19 170 24 206 216 235 64 167 246 97 85 213 13 95 49 36 237 250 85 39 109 228 121 112 19 23 114 145 232 175 239 246 2 49 0 195 20 211 163 16 166 6 71 218 211 49 142 215 240 64 90 100 195 249 75 90 201 142 107 225 34 8 200 173 152 53 250 107 129 160 234 89 244 118 96 134 52 101 123 102 224 15 253)
      #t
      ())
    #(279
      "special case hash"
      #vu8(51 54 57 56 48 57 53 49 52 56)
      #vu8(48 101 2 49 0 246 201 137 113 68 181 216 73 100 81 94 176 200 195 208 217 198 104 124 149 120 135 233 60 41 178 162 24 4 180 3 7 251 136 191 213 204 161 28 149 136 93 40 134 124 179 58 116 2 48 101 107 175 202 36 34 144 247 215 233 128 27 108 253 75 209 176 126 141 124 108 28 89 253 61 142 130 233 132 106 27 40 85 200 84 32 228 238 110 194 217 127 236 33 97 238 178 67)
      #t
      ())
    #(280
      "special case hash"
      #vu8(49 48 55 53 48 50 54 56 53 55 54)
      #vu8(48 101 2 49 0 191 188 197 243 67 226 171 57 44 230 193 192 45 145 192 6 80 196 113 54 131 106 93 6 34 212 118 172 43 50 116 57 87 33 177 171 33 136 46 213 202 190 208 147 180 59 19 63 2 48 4 62 159 198 76 97 8 223 115 249 236 237 144 249 17 133 248 61 137 102 47 90 157 129 12 24 36 251 253 151 184 66 247 132 48 95 214 185 194 140 128 211 45 82 177 83 141 18)
      #t
      ())
    #(281
      "special case hash"
      #vu8(56 54 57 49 52 57 53 53 56)
      #vu8(48 102 2 49 0 184 247 147 221 212 126 101 122 144 129 203 237 22 0 251 34 179 138 214 161 85 249 192 6 186 152 222 31 56 59 76 9 24 206 234 114 37 62 15 134 149 36 178 54 156 217 189 140 2 49 0 150 196 82 255 88 244 46 8 83 4 10 109 92 126 117 11 87 221 74 240 110 45 248 25 78 141 82 78 129 172 0 14 227 49 91 190 171 191 106 33 246 27 137 4 197 83 120 217)
      #t
      ())
    #(282
      "special case hash"
      #vu8(50 49 55 52 54 53 53 52 51 53)
      #vu8(48 100 2 48 38 58 177 201 53 103 233 59 94 196 227 128 176 211 187 94 161 206 105 60 20 164 122 252 204 83 154 175 25 127 9 157 51 30 169 226 111 26 0 87 20 141 70 114 122 203 97 136 2 48 98 29 176 124 233 65 16 226 190 116 250 149 58 0 168 165 84 34 91 63 44 15 108 86 180 235 212 219 47 87 202 37 101 237 51 35 253 112 139 181 106 198 226 139 251 64 242 231)
      #t
      ())
    #(283
      "special case hash"
      #vu8(54 52 52 53 53 48 55 57 50)
      #vu8(48 101 2 49 0 150 244 162 179 82 156 101 228 90 11 76 25 197 130 220 141 182 53 212 231 79 11 129 48 150 150 178 59 233 32 186 142 197 83 212 179 112 223 76 89 215 77 214 84 186 198 223 88 2 48 21 115 186 27 40 12 115 90 52 1 217 87 236 211 184 144 142 78 11 125 128 35 156 224 66 89 77 24 47 175 45 223 129 28 144 86 170 196 200 127 79 133 4 55 102 162 102 20)
      #t
      ())
    #(284
      "special case hash"
      #vu8(53 51 50 56 49 56 51 51 56)
      #vu8(48 102 2 49 0 150 166 145 177 154 98 148 179 17 164 56 248 218 52 94 72 11 29 234 161 233 64 207 191 2 23 125 95 8 71 153 118 234 88 174 227 16 17 213 11 85 66 190 24 140 157 99 223 2 49 0 143 103 220 158 21 136 174 184 190 24 0 19 212 26 3 111 155 173 250 217 254 147 64 145 12 191 135 36 55 118 245 75 239 125 162 235 243 167 100 56 102 235 154 59 35 254 89 185)
      #t
      ())
    #(285
      "special case hash"
      #vu8(49 49 57 50 48 55 54 51 56 50)
      #vu8(48 102 2 49 0 207 242 121 72 198 217 2 199 61 16 61 8 2 235 20 77 216 156 27 14 59 159 154 94 73 139 3 97 220 18 42 13 85 81 96 216 198 77 97 83 156 29 187 212 188 24 151 31 2 49 0 182 8 39 72 140 159 22 186 40 55 143 213 155 26 41 198 80 115 51 90 127 35 97 49 19 70 116 198 44 131 150 241 147 199 111 35 149 221 170 164 242 75 105 22 30 182 155 77)
      #t
      ())
    #(286
      "special case hash"
      #vu8(49 53 51 50 56 52 50 50 50 48)
      #vu8(48 102 2 49 0 233 14 34 217 229 53 223 223 216 110 9 141 93 106 10 224 143 105 212 163 255 170 57 246 147 11 207 95 90 208 46 224 208 71 42 233 132 237 217 240 187 229 231 214 63 212 246 172 2 49 0 227 245 123 10 70 41 236 170 33 242 211 74 122 8 52 213 123 162 15 153 198 227 27 67 195 120 17 204 35 185 149 124 143 51 86 244 70 34 20 211 200 229 135 69 229 15 35 246)
      #t
      ())
    #(287
      "special case hash"
      #vu8(49 53 54 55 49 55 55 51 57)
      #vu8(48 100 2 48 24 183 14 39 42 152 204 72 225 224 175 115 20 111 15 151 43 191 190 182 185 133 254 178 196 172 214 149 167 164 27 153 196 21 190 156 70 174 218 243 221 255 103 166 90 137 227 135 2 48 71 214 188 234 8 143 98 42 211 93 136 188 244 109 113 130 123 203 162 245 124 54 214 251 138 75 242 190 253 192 212 227 239 54 109 89 102 196 208 118 211 207 164 61 102 38 113 123)
      #t
      ())
    #(288
      "special case hash"
      #vu8(52 51 48 51 48 57 49 49 50 48)
      #vu8(48 102 2 49 0 172 253 152 28 85 253 82 134 207 206 23 55 38 213 28 61 37 246 91 17 183 103 55 41 166 33 103 37 103 116 247 200 148 183 70 98 162 18 199 6 224 12 239 9 96 116 22 47 2 49 0 244 212 113 201 119 151 194 77 150 174 193 222 133 162 73 239 70 141 96 54 205 113 37 99 174 182 92 234 73 149 243 238 133 231 105 184 116 240 154 8 99 122 68 169 96 132 190 122)
      #t
      ())
    #(289
      "special case hash"
      #vu8(55 55 51 53 57 49 53 53 56 49)
      #vu8(48 101 2 49 0 241 95 203 238 168 182 77 173 94 133 102 162 195 121 19 200 45 107 233 217 102 141 244 105 189 11 89 28 57 35 166 225 38 68 234 246 151 212 102 250 124 213 19 152 61 148 106 64 2 48 112 6 57 102 128 16 121 53 21 38 153 158 92 92 44 95 98 126 76 139 201 103 132 188 190 113 95 231 199 175 207 105 120 93 28 140 124 205 55 37 227 100 16 22 56 57 101 151)
      #t
      ())
    #(290
      "special case hash"
      #vu8(50 52 51 57 54 54 55 52 48)
      #vu8(48 102 2 49 0 217 149 20 121 57 174 109 143 98 187 87 55 34 39 57 88 57 226 90 13 67 8 184 153 213 245 6 207 158 10 1 232 17 91 126 75 130 47 3 126 201 87 82 189 158 137 47 94 2 49 0 155 180 208 115 51 228 104 248 72 42 121 10 42 46 101 14 44 66 218 130 64 236 94 64 37 6 179 104 18 47 4 102 128 205 113 224 17 120 151 204 227 223 74 21 85 252 136 118)
      #t
      ())
    #(291
      "special case hash"
      #vu8(52 51 50 55 54 48 50 56 50 51)
      #vu8(48 100 2 48 67 198 206 81 132 71 111 63 73 106 254 174 60 185 106 63 159 3 137 87 104 108 147 67 123 130 102 162 51 2 35 113 210 102 233 4 170 9 108 53 102 203 51 130 75 136 7 94 2 48 104 12 19 36 90 139 197 96 182 56 210 111 12 95 38 25 100 19 2 86 147 149 82 211 255 251 7 182 88 53 86 17 97 44 38 138 137 84 16 85 211 194 191 158 130 207 77 163)
      #t
      ())
    #(292
      "special case hash"
      #vu8(50 57 51 50 48 48 50 53 57 50)
      #vu8(48 99 2 48 68 117 57 148 29 195 80 118 127 200 65 8 61 37 217 36 122 8 7 225 226 46 11 185 217 79 80 79 114 25 129 180 19 213 33 239 189 117 228 254 131 30 226 99 56 207 61 227 2 47 57 90 178 126 167 130 206 228 190 83 224 108 118 22 187 212 29 105 38 177 141 33 157 117 213 151 159 19 203 162 245 33 1 1 155 14 192 164 31 253 191 41 239 115 221 186 112)
      #t
      ())
    #(293
      "special case hash"
      #vu8(54 52 48 57 56 55 55 50 56 52)
      #vu8(48 102 2 49 0 160 186 142 139 151 156 32 52 94 52 252 169 133 49 144 1 100 168 89 146 59 214 152 106 156 57 35 106 47 93 224 83 162 82 153 127 53 229 184 75 13 72 186 15 141 9 174 221 2 49 0 250 205 109 240 67 88 252 217 95 169 1 138 111 192 130 141 254 49 152 18 255 101 146 156 6 11 24 173 75 159 6 231 252 10 221 209 182 149 49 93 113 193 94 81 220 81 215 25)
      #t
      ())
    #(294
      "special case hash"
      #vu8(54 48 55 53 54 57 48 52 49 50)
      #vu8(48 101 2 49 0 184 55 131 144 247 31 11 182 102 63 24 70 218 246 144 143 140 132 247 112 174 116 12 200 5 65 34 73 76 240 255 169 67 122 178 96 64 202 34 128 143 178 154 129 11 112 18 110 2 48 66 118 54 185 41 165 0 171 195 77 159 34 151 123 129 231 52 145 154 250 243 237 44 145 238 173 167 7 78 12 22 189 197 47 150 14 174 201 219 90 135 156 30 100 20 3 81 1)
      #t
      ())
    #(295
      "special case hash"
      #vu8(50 51 50 49 54 50 51 49 51 53)
      #vu8(48 102 2 49 0 243 106 144 72 253 148 128 61 61 109 27 17 67 11 144 185 78 248 213 210 173 137 1 140 105 71 60 233 207 224 214 16 91 60 47 178 231 85 92 205 37 246 90 248 200 114 189 198 2 49 0 129 37 72 65 231 236 191 208 216 16 175 170 245 175 214 214 197 208 84 43 176 12 193 131 177 219 1 118 113 32 175 188 192 0 109 220 186 141 183 186 246 95 48 39 35 218 188 77)
      #t
      ())
    #(296
      "special case hash"
      #vu8(54 52 49 48 49 53 50 49 55 49)
      #vu8(48 102 2 49 0 216 164 217 100 9 193 145 186 169 84 11 243 95 29 81 146 249 53 45 127 14 20 249 44 14 142 31 25 245 89 180 46 211 198 183 189 182 190 204 86 88 79 181 192 148 33 226 228 2 49 0 217 102 186 19 212 36 94 36 142 175 180 111 42 61 249 44 32 55 213 150 156 125 182 219 203 15 244 178 24 80 225 106 24 162 151 133 38 114 57 136 99 101 207 114 26 33 37 54)
      #t
      ())
    #(297
      "special case hash"
      #vu8(56 51 55 50 56 53 55 52 56)
      #vu8(48 100 2 48 29 93 134 253 72 230 91 12 240 176 180 96 98 36 31 137 207 101 120 93 216 24 249 63 17 98 119 26 56 161 95 32 254 188 38 24 18 236 170 246 244 242 184 107 51 98 215 235 2 48 12 118 227 99 222 20 50 81 60 185 218 214 73 57 49 56 30 205 37 241 66 230 25 104 182 242 13 123 18 112 203 158 56 167 174 84 228 119 138 255 64 37 235 0 198 166 122 239)
      #t
      ())
    #(298
      "special case hash"
      #vu8(51 51 50 52 55 48 52 53 50 53)
      #vu8(48 100 2 48 5 8 238 209 72 240 97 17 75 225 142 138 134 24 143 234 191 118 184 115 179 110 173 204 169 194 198 14 36 162 0 47 228 86 35 29 236 247 168 246 240 50 192 141 190 10 181 169 2 48 105 76 10 215 129 178 52 30 48 225 208 115 154 201 150 114 6 79 72 130 26 105 133 44 121 64 207 29 98 23 56 25 156 152 13 86 210 160 183 27 63 198 1 28 107 36 68 186)
      #t
      ())
    #(299
      "special case hash"
      #vu8(49 52 48 51 57 54 54 56 55 50)
      #vu8(48 101 2 48 114 110 248 139 183 148 122 4 49 22 193 17 203 81 157 222 218 62 111 251 247 36 136 74 27 34 194 68 9 205 242 119 157 147 206 97 12 140 7 65 28 43 0 19 153 16 61 109 2 49 0 149 220 29 101 4 108 175 14 141 173 7 178 36 121 141 111 120 7 39 142 115 120 131 231 199 191 11 68 103 145 212 238 20 76 38 247 16 19 72 97 175 78 103 113 212 8 40 150)
      #t
      ())
    #(300
      "special case hash"
      #vu8(49 50 50 55 54 48 53 49 50 56)
      #vu8(48 102 2 49 0 235 14 142 60 99 159 94 186 142 204 217 2 13 14 198 45 138 199 63 63 221 189 250 8 253 178 21 93 235 10 83 105 35 235 213 94 32 2 12 171 159 142 57 164 58 136 190 17 2 49 0 199 150 223 57 159 195 88 131 221 93 174 104 23 208 45 61 103 168 238 198 96 21 133 229 227 111 210 193 52 237 219 20 71 236 18 177 68 221 220 154 174 40 168 79 34 96 38 65)
      #t
      ())
    #(301
      "special case hash"
      #vu8(52 57 53 49 52 56 56 51 54 50)
      #vu8(48 101 2 49 0 232 248 198 157 3 150 234 144 15 151 87 115 109 43 25 219 194 210 168 192 29 204 244 144 200 185 69 91 214 59 52 192 149 134 126 124 243 184 77 199 195 195 214 181 27 235 244 5 2 48 88 21 42 117 100 238 178 42 62 38 89 112 38 208 205 120 53 114 91 213 18 36 84 72 203 80 22 235 72 234 117 152 9 253 105 73 208 238 93 87 150 67 247 47 144 140 22 187)
      #t
      ())
    #(302
      "special case hash"
      #vu8(50 52 53 50 49 50 55 48 49 57)
      #vu8(48 101 2 48 56 11 78 72 179 255 1 42 247 192 139 248 113 217 244 218 12 112 139 84 148 169 134 211 216 11 25 121 229 121 208 219 238 97 219 155 195 192 76 57 97 118 65 7 136 225 90 15 2 49 0 230 151 28 1 60 150 90 126 77 241 15 149 98 10 80 146 250 176 150 189 91 80 130 143 75 201 28 94 71 155 204 246 224 218 242 135 231 239 88 15 169 234 21 63 161 165 7 162)
      #t
      ())
    #(303
      "special case hash"
      #vu8(49 55 51 49 53 53 48 55 48 54)
      #vu8(48 101 2 49 0 128 97 222 18 2 158 43 0 13 21 122 69 94 207 35 1 34 47 9 45 249 91 149 81 183 140 240 239 58 100 241 34 18 181 126 199 177 109 44 15 37 137 70 245 28 177 99 58 2 48 10 194 202 106 217 155 41 202 41 160 220 56 179 68 67 238 65 2 15 129 237 144 135 206 247 104 26 0 196 254 96 101 58 87 41 68 186 55 241 254 81 209 18 191 255 189 215 1)
      #t
      ())
    #(304
      "special case hash"
      #vu8(49 54 54 55 48 54 57 56 55 56)
      #vu8(48 102 2 49 0 231 79 42 121 30 235 115 65 207 246 204 28 36 244 89 230 192 16 153 36 247 152 70 57 174 56 126 60 235 88 117 138 27 195 131 157 234 31 195 163 121 149 98 34 94 112 167 51 2 49 0 217 14 77 15 71 52 50 104 229 107 188 176 17 189 71 52 57 10 188 154 161 48 75 98 83 231 143 90 120 182 144 90 166 191 106 56 146 164 174 26 135 92 130 58 229 168 62 135)
      #t
      ())
    #(305
      "special case hash"
      #vu8(52 52 49 53 52 55 54 49 55)
      #vu8(48 100 2 48 106 28 208 255 121 6 190 32 123 86 134 46 220 188 13 11 191 178 109 67 37 92 153 246 171 119 99 159 94 97 3 160 122 163 34 178 46 212 56 112 209 206 109 246 138 160 168 193 2 48 101 85 88 177 41 170 35 24 69 0 189 74 171 79 3 85 211 25 46 155 136 96 246 11 5 161 194 146 97 244 72 106 106 226 53 165 38 51 155 134 192 95 95 172 71 123 103 35)
      #t
      ())
    #(306
      "special case hash"
      #vu8(52 50 51 57 52 52 57 57 56)
      #vu8(48 102 2 49 0 129 17 31 220 95 13 230 85 131 199 165 102 141 38 192 78 229 46 8 218 194 39 117 49 50 207 241 116 28 183 33 225 18 170 121 60 13 95 160 71 250 241 76 180 93 209 62 31 2 49 0 154 37 207 30 108 21 43 195 226 22 224 33 86 29 25 73 121 241 193 31 225 112 25 237 123 172 44 19 196 1 15 32 150 101 227 182 243 59 134 100 23 4 217 34 180 7 129 143)
      #t
      ())
    #(307
      "special case hash"
      #vu8(52 56 48 55 54 50 48 55 49 50)
      #vu8(48 102 2 49 0 155 102 209 34 163 21 9 91 43 102 204 185 114 114 196 118 162 215 96 232 39 253 234 5 115 45 99 77 243 208 102 86 156 152 77 217 65 170 213 245 222 196 194 225 183 185 74 0 2 49 0 150 195 36 3 200 91 195 208 238 135 249 106 96 1 130 121 109 206 83 213 77 116 103 174 102 10 66 184 123 183 7 146 241 70 80 172 40 165 250 71 206 156 164 211 178 194 88 120)
      #t
      ())
    #(308
      "special case hash"
      #vu8(50 49 54 52 54 54 54 50 56 57)
      #vu8(48 100 2 48 43 176 98 160 2 8 141 98 160 183 51 141 4 132 254 223 226 175 126 32 206 191 106 71 136 38 78 178 124 180 235 195 204 129 200 22 230 163 87 34 207 155 70 71 131 9 76 184 2 48 70 204 33 183 15 33 51 248 90 176 68 59 235 233 198 252 98 198 226 236 31 217 196 221 244 166 213 243 244 142 183 171 241 238 123 223 103 37 135 159 209 183 218 175 180 79 110 4)
      #t
      ())
    #(309
      "special case hash"
      #vu8(49 57 52 50 56 53 51 56 54 53)
      #vu8(48 101 2 48 51 232 112 97 238 154 130 235 116 216 187 74 233 22 6 86 60 46 77 184 176 145 131 204 0 209 17 154 180 245 3 61 40 122 31 201 10 35 72 22 63 223 104 211 80 6 253 127 2 49 0 150 219 151 201 71 238 46 150 230 19 157 59 203 245 164 54 6 186 225 173 60 162 130 144 251 173 67 178 129 239 17 94 193 185 139 197 129 239 72 9 79 140 26 168 227 108 40 42)
      #t
      ())
    #(310
      "special case hash"
      #vu8(50 50 49 57 51 56 51 53 50 49)
      #vu8(48 100 2 48 112 248 11 67 132 36 186 34 138 125 128 242 110 34 255 106 137 98 67 201 212 156 117 87 52 137 238 13 229 142 198 14 253 16 56 56 20 52 101 189 143 227 70 114 186 148 150 23 2 48 17 84 146 189 147 101 185 111 56 116 117 54 49 139 255 184 25 231 193 70 223 58 90 122 70 214 40 140 127 223 49 207 245 112 178 33 118 170 57 141 171 169 7 58 177 231 185 191)
      #t
      ())
    #(311
      "special case hash"
      #vu8(57 50 54 57 51 51 52 49 57)
      #vu8(48 102 2 49 0 255 22 202 3 137 234 105 72 244 48 91 67 79 224 170 88 159 136 15 90 169 55 118 124 49 23 14 232 218 108 26 214 32 201 147 212 13 223 20 27 127 218 55 66 77 81 181 205 2 49 0 186 15 134 152 93 255 198 29 110 53 163 125 224 105 24 177 30 67 27 114 64 49 97 172 251 143 5 196 105 241 252 250 110 33 92 111 126 181 160 165 224 204 158 123 231 156 225 139)
      #t
      ())
    #(312
      "special case hash"
      #vu8(55 54 57 51 56 54 51 54 52)
      #vu8(48 101 2 49 0 214 12 36 190 224 95 81 152 205 21 90 208 149 255 185 86 187 207 182 107 130 252 13 55 85 17 153 21 166 47 47 146 53 87 184 93 220 29 18 230 167 87 242 48 66 203 96 27 2 48 44 77 150 139 94 172 147 11 81 210 131 180 24 252 255 109 243 169 214 214 110 56 18 205 27 245 253 231 151 253 32 58 124 67 155 27 56 30 79 232 180 78 111 16 135 100 167 221)
      #t
      ())
    #(313
      "special case hash"
      #vu8(50 55 51 53 57 51 48 53 55 51)
      #vu8(48 102 2 49 0 189 246 52 217 21 164 250 231 161 85 83 44 162 132 124 51 166 186 190 126 248 219 10 245 15 72 93 179 221 44 139 255 231 34 57 69 131 147 47 110 181 205 151 246 219 117 97 217 2 49 0 187 66 92 174 46 84 131 23 75 94 216 115 175 67 41 218 70 24 193 68 88 20 24 80 190 227 199 191 31 251 63 32 48 21 144 67 39 125 172 199 8 233 211 47 99 64 0 131)
      #t
      ())
    #(314
      "special case hash"
      #vu8(56 51 48 48 53 54 52 48 54 53)
      #vu8(48 101 2 48 6 19 32 163 188 235 172 51 207 57 157 69 209 225 225 179 79 55 40 143 228 117 63 79 221 253 73 110 255 66 126 29 38 177 185 29 116 156 195 76 18 244 236 239 131 124 14 143 2 49 0 253 92 244 104 205 163 25 254 6 231 115 161 144 195 141 230 225 80 163 33 172 28 65 106 216 117 67 44 219 122 7 19 76 68 111 19 6 142 113 161 169 110 53 218 146 57 116 173)
      #t
      ())
    #(315
      "special case hash"
      #vu8(52 51 48 55 54 53 53 55 51 56)
      #vu8(48 101 2 49 0 214 32 240 99 211 62 250 133 155 98 63 108 154 146 52 14 76 221 133 79 251 227 229 224 19 121 23 122 238 49 113 92 229 135 176 11 208 174 169 143 221 242 54 210 252 138 122 116 2 48 103 31 75 124 24 114 151 220 35 108 97 136 139 109 147 151 233 119 131 7 124 196 16 24 7 215 158 230 46 74 83 167 140 75 106 58 49 176 49 120 102 138 248 148 163 216 144 46)
      #t
      ())
    #(316
      "special case hash"
      #vu8(57 54 53 55 48 49 56 49 55 53)
      #vu8(48 101 2 49 0 145 197 86 197 189 221 82 159 233 3 184 106 252 14 184 250 31 73 66 91 119 154 57 17 74 229 99 190 188 148 126 99 59 164 238 152 148 143 170 137 64 223 226 86 44 99 225 197 2 48 25 139 0 7 157 141 176 114 210 91 10 73 188 139 195 100 87 146 111 60 16 21 39 82 141 246 103 159 146 199 111 27 72 126 102 149 212 185 47 227 59 78 231 4 106 106 93 249)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 75 244 229 47 149 132 39 235 181 145 95 184 201 89 85 81 180 211 163 253 171 103 186 221 157 108 48 147 244 37 186 67 99 13 247 31 66 240 235 124 234 169 77 159 100 72 168 93 211 3 49 88 130 73 253 47 220 11 48 158 199 237 132 129 188 22 242 120 0 193 61 125 183 0 252 130 225 177 200 84 90 160 192 211 181 110 59 254 120 159 193 138 145 104 135 194)
  :der-encode
  #t
  :tests
  '(#(317
      "k*G has a large x-coordinate"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 2 24 56 156 178 126 11 200 210 31 167 229 242 76 183 79 88 133 19 19 230 150 51 58 214 139 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 112)
      #t
      ())
    #(318
      "r too large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 254 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 112)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 54 35 187 41 107 136 246 38 208 249 38 86 191 1 111 17 91 114 18 119 204 180 147 7 57 191 189 129 249 193 231 52 99 14 6 133 211 46 21 78 11 74 92 98 228 56 81 246 118 131 86 180 165 118 76 18 140 123 17 5 227 215 120 168 157 30 1 218 41 126 222 27 196 49 44 37 131 224 187 221 210 22 19 88 61 208 154 184 149 198 59 228 121 249 69 118)
  :der-encode
  #t
  :tests
  '(#(319
      "r,s are large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 114 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 113)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 213 22 203 138 200 228 69 123 105 61 81 146 190 235 108 231 217 164 107 239 72 238 207 62 168 35 40 111 16 31 152 209 48 245 162 109 198 254 194 54 98 239 240 127 20 72 111 213 132 86 147 46 116 137 75 127 14 59 176 223 211 98 80 43 55 101 221 128 163 23 114 9 251 34 29 201 181 26 175 68 112 178 69 57 20 5 190 245 20 23 107 19 162 103 167 32)
  :der-encode
  #t
  :tests
  '(#(320
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 49 0 209 174 229 95 220 42 113 107 162 250 188 181 112 32 183 46 83 155 240 92 121 2 249 142 16 91 248 61 76 193 12 42 21 154 60 247 224 29 116 157 34 5 244 218 107 216 252 241)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 168 56 12 211 80 38 225 59 248 123 230 147 205 182 231 90 130 215 101 180 1 155 82 158 141 39 124 74 246 201 219 39 235 181 211 248 110 136 173 217 213 182 17 134 240 76 131 169 146 161 135 80 124 115 115 37 210 204 98 74 206 243 205 3 107 250 153 224 193 81 139 230 92 136 187 81 249 0 249 65 35 172 171 173 129 209 81 48 211 173 231 255 126 67 100 225)
  :der-encode
  #t
  :tests
  '(#(321
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 49 0 182 182 129 220 72 79 79 2 15 211 247 230 38 216 142 220 109 237 27 56 46 243 225 67 214 8 135 181 19 148 38 8 50 212 216 242 239 112 69 143 159 169 14 56 194 225 158 79)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 85 79 47 208 183 0 169 244 86 135 82 182 115 217 192 210 157 201 108 16 254 103 227 140 109 109 51 155 250 254 5 249 112 218 140 61 33 100 232 32 49 48 122 68 189 50 37 17 113 49 43 97 181 145 19 255 11 211 184 169 164 147 77 242 98 170 128 150 248 64 233 216 191 250 93 116 145 222 216 123 56 196 150 249 185 228 240 186 16 137 248 211 255 200 138 159)
  :der-encode
  #t
  :tests
  '(#(322
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 2 2 1 1)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 68 238 51 53 250 119 210 251 2 228 189 112 116 244 94 89 138 135 156 15 168 34 236 113 140 33 220 19 184 52 64 237 196 227 193 10 24 88 66 62 3 4 76 158 255 34 89 28 208 39 196 153 51 229 81 5 87 214 180 178 198 246 111 229 220 185 48 42 59 19 253 198 128 72 195 252 172 136 186 21 43 106 152 51 200 127 220 98 128 175 197 209 26 183 193 7)
  :der-encode
  #t
  :tests
  '(#(323
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 2 2 1 2)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 226 248 127 114 227 198 108 115 3 127 231 118 7 212 42 210 217 196 204 21 152 147 180 185 184 176 54 93 58 119 102 219 232 103 139 2 226 182 143 88 229 164 247 104 16 97 163 144 227 143 33 66 129 133 66 190 246 178 188 58 44 79 67 201 94 82 89 214 189 84 1 83 19 120 199 202 18 90 31 108 198 9 212 250 223 197 201 169 147 88 238 119 255 120 12 141)
  :der-encode
  #t
  :tests
  '(#(324
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 2 2 1 3)
      #t
      ())
    #(325
      "r is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 41 117 2 1 3)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 5 230 124 68 252 12 188 154 142 179 67 180 214 245 150 199 208 12 172 93 168 89 76 175 69 183 32 147 151 73 98 20 196 45 133 106 1 92 229 137 188 155 168 101 164 250 181 171 136 160 28 123 93 9 239 175 135 143 203 145 2 251 56 117 168 56 26 242 52 209 197 147 7 110 69 34 37 165 111 81 103 79 52 113 38 211 0 155 68 220 187 0 58 100 217 95)
  :der-encode
  #t
  :tests
  '(#(326
      "s is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 1 2 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 215 255 250)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 11 176 63 206 60 1 235 207 8 115 171 209 52 168 104 47 95 184 219 255 162 45 166 116 4 126 92 62 113 228 61 229 130 237 106 187 144 140 46 79 170 93 150 24 98 120 182 193 186 59 34 18 62 104 204 197 111 23 221 121 255 21 86 87 6 247 26 11 97 35 199 122 243 205 136 240 175 2 76 197 37 151 129 81 110 220 175 95 233 144 100 110 123 102 153 157)
  :der-encode
  #t
  :tests
  '(#(327
      "small r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 2 1 0 2 48 72 145 34 68 137 18 36 72 145 34 68 137 18 36 72 145 34 68 137 18 36 72 145 34 52 124 231 155 196 55 244 208 113 170 169 44 125 108 136 42 232 115 77 193 140 176 213 83)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 88 242 70 9 13 94 73 134 59 192 191 45 80 31 247 47 85 28 95 28 94 103 158 180 144 100 253 2 226 33 162 112 115 38 236 45 20 11 204 129 122 250 173 80 101 118 21 102 73 124 130 63 215 54 136 44 191 120 251 146 177 165 88 155 103 232 6 116 151 199 16 164 203 179 157 238 44 84 49 188 69 207 185 108 159 132 84 56 92 159 43 62 242 211 211 26)
  :der-encode
  #t
  :tests
  '(#(328
      "smallish r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 7 45 155 77 52 121 82 205 2 49 0 206 117 21 18 86 27 111 87 199 83 66 132 138 63 249 140 207 156 63 2 25 182 182 141 0 68 158 108 151 26 133 210 226 206 115 85 75 89 33 157 84 210 8 59 70 50 115 81)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 252 105 132 221 104 48 209 72 95 178 88 26 69 167 145 216 220 162 199 39 199 61 61 68 200 159 0 130 193 134 138 245 202 116 180 202 74 226 40 2 100 10 158 191 232 199 174 18 153 141 99 165 181 173 27 114 184 153 240 177 50 228 149 42 170 25 212 31 222 234 72 177 237 107 131 88 221 29 178 7 253 102 224 20 83 173 64 246 123 131 106 220 128 45 95 232)
  :der-encode
  #t
  :tests
  '(#(329
      "100-bit r and small s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 65 2 13 16 51 230 126 55 179 43 68 85 128 191 78 251 2 48 42 213 42 213 42 213 42 213 42 213 42 213 42 213 42 213 42 213 42 213 42 213 42 213 33 92 81 179 32 228 96 84 47 156 195 137 104 204 223 66 99 104 64 4 235 121 164 82)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 27 141 239 89 34 48 61 100 126 142 176 126 59 173 146 249 36 183 155 118 158 239 22 142 117 65 222 31 78 13 40 174 151 51 235 152 207 138 31 182 221 82 202 2 200 199 91 81 199 170 75 246 121 212 157 129 20 18 32 116 218 143 96 68 164 39 55 23 150 165 101 74 97 6 22 45 95 104 106 187 115 235 216 150 171 8 199 6 38 135 241 33 113 251 228 163)
  :der-encode
  #t
  :tests
  '(#(330
      "small r and 100 bit s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 2 1 0 2 48 119 161 114 223 227 122 44 83 240 185 42 182 15 10 143 8 95 73 219 253 147 7 25 214 249 229 135 234 104 174 87 203 73 205 53 168 140 248 198 172 236 2 240 87 163 128 122 91)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 23 52 160 57 168 138 22 194 255 74 169 125 35 153 18 31 86 245 46 240 30 213 229 8 135 247 54 246 91 110 81 214 232 120 106 187 78 6 61 165 209 186 129 45 255 153 132 3 204 214 152 230 194 150 213 205 105 23 143 138 130 72 26 134 93 163 49 98 127 28 75 50 79 188 2 179 110 139 94 213 138 49 247 40 233 4 210 3 163 136 117 83 2 25 87 101)
  :der-encode
  #t
  :tests
  '(#(331
      "100-bit r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 65 2 13 6 37 34 187 211 236 190 124 57 233 62 124 36 2 48 119 161 114 223 227 122 44 83 240 185 42 182 15 10 143 8 95 73 219 253 147 7 25 214 249 229 135 234 104 174 87 203 73 205 53 168 140 248 198 172 236 2 240 87 163 128 122 91)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 82 202 71 221 169 145 114 203 131 33 73 90 207 152 133 72 41 89 136 236 151 60 27 78 169 70 44 83 229 118 138 112 74 147 100 16 238 132 123 93 191 30 157 12 19 29 166 199 135 164 112 39 230 101 87 146 235 0 45 66 40 238 114 247 200 20 201 160 206 203 255 38 121 72 248 28 153 3 172 16 235 53 246 203 134 54 146 36 237 96 152 17 205 243 144 244)
  :der-encode
  #t
  :tests
  '(#(332
      "r and s^-1 are close to n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 49 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 199 99 77 129 244 55 45 223 88 26 13 178 72 176 167 122 236 236 25 106 204 197 40 243 2 48 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 66 118 111 43 81 103 185 245 29 94 4 144 194 229 141 40 249 164 8 120 238 236 99 38)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 189 61 145 240 3 225 138 219 234 115 7 157 78 186 35 185 31 193 127 206 193 76 158 177 90 25 63 188 156 163 156 140 116 124 215 162 201 98 62 5 221 88 124 203 184 171 76 68 58 219 10 7 6 170 94 167 166 128 66 8 47 204 239 201 121 97 42 122 26 61 105 75 0 121 59 3 248 155 255 134 106 139 151 200 231 121 144 194 147 96 206 121 80 54 199 100)
  :der-encode
  #t
  :tests
  '(#(333
      "s == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 48 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 66 118 111 43 81 103 185 245 29 94 4 144 194 229 141 40 249 164 8 120 238 236 99 38 2 1 1)
      #t
      ())
    #(334
      "s == 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 48 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 66 118 111 43 81 103 185 245 29 94 4 144 194 229 141 40 249 164 8 120 238 236 99 38 2 1 0)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 248 150 53 60 195 168 175 221 84 62 195 174 240 98 202 151 188 50 237 23 36 234 56 185 64 184 192 234 14 35 179 65 135 175 190 112 218 248 219 170 91 81 21 87 229 210 189 218 196 189 38 93 166 124 238 175 202 99 111 111 76 4 114 242 42 157 2 226 40 145 132 247 59 187 112 10 232 252 146 30 255 73 32 242 144 191 203 73 251 178 50 204 19 162 16 40)
  :der-encode
  #t
  :tests
  '(#(335
      "point at infinity during verify"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 227 177 166 192 250 27 150 239 172 13 6 217 36 88 83 189 118 118 12 181 102 98 148 185 2 48 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 66 118 111 43 81 103 185 245 29 94 4 144 194 229 141 40 249 164 8 120 238 236 99 38)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 55 13 158 46 49 199 18 200 2 128 146 248 2 49 157 127 223 91 51 25 168 81 141 8 190 211 137 21 8 199 6 12 254 34 54 225 143 161 79 224 119 9 60 234 230 51 229 67 15 215 154 172 249 209 110 204 25 177 45 96 251 164 153 141 252 104 39 2 236 124 139 221 74 89 0 53 119 59 140 156 87 10 199 220 212 20 224 50 82 247 160 230 245 59 88 99)
  :der-encode
  #t
  :tests
  '(#(336
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 227 177 166 192 250 27 150 239 172 13 6 217 36 88 83 189 118 118 12 181 102 98 148 185 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 227 177 166 192 250 27 150 239 172 13 6 217 36 88 83 189 118 118 12 181 102 98 148 185)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 148 30 108 250 53 110 87 45 204 202 235 89 75 6 149 93 153 220 75 240 121 88 252 152 255 161 125 225 28 117 33 191 44 122 168 255 38 9 82 252 183 170 192 120 237 230 123 71 144 167 138 2 150 176 65 161 15 0 61 241 153 141 164 204 74 22 20 235 203 245 210 57 67 31 51 217 13 48 35 237 193 128 46 141 182 218 188 186 230 124 195 20 218 42 171 171)
  :der-encode
  #t
  :tests
  '(#(337
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 227 177 166 192 250 27 150 239 172 13 6 217 36 88 83 189 118 118 12 181 102 98 148 185 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 227 177 166 192 250 27 150 239 172 13 6 217 36 88 83 189 118 118 12 181 102 98 148 186)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 62 207 213 138 60 229 131 134 110 4 113 209 110 179 193 10 65 30 195 184 103 31 58 4 118 155 30 216 70 74 113 207 28 118 216 217 183 227 103 11 190 113 45 111 85 74 147 131 217 128 216 190 223 87 71 13 107 69 204 26 208 198 66 109 199 10 14 75 233 1 16 106 54 102 59 252 171 4 252 184 96 8 119 123 146 68 81 32 213 227 100 29 151 57 99 98)
  :der-encode
  #t
  :tests
  '(#(338
      "u1 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 66 118 111 43 81 103 185 245 29 94 4 144 194 229 141 40 249 164 8 120 238 236 99 38 2 49 0 249 177 39 240 216 30 188 209 123 123 160 234 19 28 102 13 52 11 5 206 85 124 130 22 14 15 121 61 224 125 56 23 144 35 148 40 113 172 183 0 45 250 253 255 252 141 234 206)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 65 80 204 208 250 69 170 46 246 181 4 45 219 177 184 124 95 253 17 21 168 254 89 149 100 25 72 172 218 130 167 177 144 118 45 132 53 44 215 77 28 160 30 121 246 143 156 180 235 17 190 157 73 76 24 28 21 110 35 231 126 83 43 223 10 32 195 204 116 186 140 41 177 243 235 43 217 145 41 238 13 112 255 13 89 63 13 122 109 104 135 231 197 89 48 210)
  :der-encode
  #t
  :tests
  '(#(339
      "u1 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 66 118 111 43 81 103 185 245 29 94 4 144 194 229 141 40 249 164 8 120 238 236 99 38 2 48 6 78 216 15 39 225 67 46 132 132 95 21 236 227 153 242 203 244 250 49 170 131 125 233 185 83 212 68 19 185 245 199 199 246 121 137 215 3 240 122 190 241 27 106 208 55 62 165)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 231 143 226 193 27 234 199 9 14 224 175 127 237 70 154 140 206 189 60 204 196 238 159 204 200 239 63 192 69 91 105 170 160 130 220 19 225 216 79 52 2 108 182 240 175 158 153 47 243 78 187 167 27 243 164 5 11 242 142 64 132 181 197 245 212 9 142 196 111 16 163 27 2 251 75 242 12 201 54 47 111 2 166 110 128 47 129 117 7 83 95 172 62 192 176 153)
  :der-encode
  #t
  :tests
  '(#(340
      "u2 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 66 118 111 43 81 103 185 245 29 94 4 144 194 229 141 40 249 164 8 120 238 236 99 38 2 48 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 66 118 111 43 81 103 185 245 29 94 4 144 194 229 141 40 249 164 8 120 238 236 99 38)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 238 36 171 138 52 208 90 246 132 147 147 87 243 39 89 204 90 20 243 199 23 82 154 32 174 168 224 197 150 93 138 65 230 137 37 246 136 71 25 148 183 32 33 186 81 178 140 9 10 85 105 60 146 173 12 186 233 237 207 81 94 43 76 6 11 136 141 130 200 30 74 59 106 23 59 98 237 4 164 111 169 93 177 162 243 148 153 128 251 162 227 113 38 60 79 169)
  :der-encode
  #t
  :tests
  '(#(341
      "u2 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 66 118 111 43 81 103 185 245 29 94 4 144 194 229 141 40 249 164 8 120 238 236 99 38 2 49 0 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 132 236 222 86 162 207 115 234 58 188 9 33 133 203 26 81 243 72 16 241 221 216 198 77)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 61 46 145 96 85 201 46 27 54 19 63 89 55 179 124 27 1 2 131 78 183 112 8 163 186 156 61 164 70 233 6 89 113 214 139 169 19 9 24 81 225 12 255 91 76 216 117 193 57 170 122 173 252 44 175 113 7 177 122 225 174 168 178 153 214 27 241 90 202 12 179 253 111 31 253 232 25 43 254 88 240 130 43 187 193 245 91 221 246 180 254 156 143 43 14 172)
  :der-encode
  #t
  :tests
  '(#(342
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 48 83 59 13 80 72 10 62 240 126 126 138 248 177 9 119 89 188 3 172 154 28 126 214 7 90 5 40 105 245 127 18 178 133 97 49 98 208 142 231 170 185 254 84 170 169 132 163 154)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 174 89 102 151 66 122 162 80 21 108 5 172 67 56 228 137 128 167 240 147 234 31 31 230 112 152 180 63 101 57 193 178 10 231 67 56 249 191 39 13 51 102 60 80 171 232 253 0 28 166 165 39 50 219 116 171 21 210 242 73 163 216 57 8 15 137 131 103 223 214 73 146 205 206 39 8 222 170 213 35 162 162 54 180 52 0 66 66 65 201 26 53 181 48 250 80)
  :der-encode
  #t
  :tests
  '(#(343
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 49 0 212 154 37 57 134 187 170 140 233 195 211 128 131 19 211 156 59 149 10 71 131 114 237 192 9 188 5 102 183 59 231 176 93 173 7 55 225 105 96 37 124 193 109 182 236 108 98 15)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 136 115 143 153 129 221 77 31 171 182 10 216 60 45 214 223 201 218 48 34 9 174 62 83 73 138 136 59 110 57 163 139 234 217 176 39 9 243 82 211 230 182 87 129 84 234 178 82 147 136 160 92 107 159 58 64 40 171 185 149 10 81 245 38 78 205 117 128 164 35 253 236 148 114 250 238 181 127 146 227 28 70 190 242 167 129 254 94 218 208 38 0 159 25 130 98)
  :der-encode
  #t
  :tests
  '(#(344
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 48 40 80 144 176 214 166 130 11 187 163 148 239 190 229 194 74 34 129 232 37 210 246 197 95 183 168 91 130 81 219 0 247 90 176 124 201 147 206 175 102 79 60 17 107 175 52 176 33)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 244 33 84 19 17 201 79 221 121 252 41 143 138 177 163 173 253 8 2 159 218 212 57 169 77 76 234 17 247 231 153 188 67 150 9 242 251 123 227 243 73 213 94 72 77 10 13 54 179 83 48 187 219 236 30 117 242 152 68 131 217 107 242 16 215 34 193 131 2 146 255 195 90 47 106 33 164 181 5 25 245 101 240 36 187 204 201 114 40 162 248 173 143 173 192 213)
  :der-encode
  #t
  :tests
  '(#(345
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 49 0 179 154 244 168 30 228 174 121 6 78 216 15 39 225 67 46 132 132 95 21 236 227 153 242 164 61 37 5 160 168 199 44 87 49 244 253 150 116 32 177 0 14 63 117 80 46 215 183)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 57 155 228 207 196 57 249 79 36 33 203 211 76 44 217 11 174 83 235 96 221 250 252 165 47 114 117 209 101 209 79 166 89 182 54 113 59 93 75 57 230 47 212 139 174 20 29 14 27 35 227 180 240 194 2 237 123 89 219 120 163 92 18 172 105 140 96 62 171 20 79 208 154 194 237 143 68 149 246 7 228 210 200 122 35 206 46 195 62 65 12 164 126 204 37 85)
  :der-encode
  #t
  :tests
  '(#(346
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 49 0 175 74 129 238 74 231 144 100 237 128 242 126 20 50 232 72 69 241 94 206 57 159 44 191 40 223 130 156 205 48 245 239 98 236 35 149 123 131 125 115 254 78 21 110 220 205 68 101)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 21 120 187 255 114 19 124 75 202 51 215 56 90 137 43 233 76 176 89 249 9 29 223 232 144 52 95 113 42 159 186 95 199 112 132 206 193 16 132 237 4 132 145 96 74 7 246 108 118 187 170 135 47 7 16 216 42 8 217 221 221 131 60 123 231 199 232 226 101 244 145 69 21 126 180 232 232 40 0 118 163 126 229 135 50 113 219 81 0 52 218 25 218 36 65 91)
  :der-encode
  #t
  :tests
  '(#(347
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 48 94 149 3 220 149 207 32 201 219 1 228 252 40 101 208 144 139 226 189 156 115 62 89 126 138 91 183 183 166 42 189 255 109 190 57 120 174 86 83 109 15 176 17 114 236 213 95 87)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 51 186 69 28 133 231 41 5 143 131 4 16 119 164 105 94 180 125 249 62 113 139 9 164 97 140 117 58 200 3 205 117 193 169 18 144 194 255 90 99 83 137 208 113 73 87 29 171 31 199 216 167 23 118 133 31 242 68 255 99 47 230 249 46 22 82 229 40 72 147 196 36 79 231 117 216 239 197 137 216 35 221 3 243 145 144 39 240 4 83 123 216 238 9 243 163)
  :der-encode
  #t
  :tests
  '(#(348
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 48 30 228 174 121 6 78 216 15 39 225 67 46 132 132 95 21 236 227 153 242 203 244 250 49 163 174 142 218 184 77 195 51 10 57 247 9 56 227 145 43 213 151 83 222 90 237 48 136)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 4 7 113 227 57 2 22 254 210 198 32 139 223 91 254 168 58 177 145 91 22 110 98 101 105 241 46 253 65 10 57 183 231 199 111 112 240 1 40 67 162 109 235 244 204 195 61 218 229 188 95 126 98 208 84 234 195 28 208 34 175 219 113 183 198 56 242 76 48 203 173 14 243 94 210 252 153 23 243 86 233 195 240 67 145 178 29 16 53 39 75 129 83 127 203 243)
  :der-encode
  #t
  :tests
  '(#(349
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 49 0 187 81 205 59 168 235 32 31 83 221 180 227 78 8 192 255 125 255 147 120 16 103 132 215 152 213 163 68 11 214 220 52 190 58 14 174 248 119 102 25 160 201 127 239 177 87 32 179)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 152 211 241 110 28 81 10 147 62 100 142 120 208 21 136 49 159 0 46 148 117 223 137 66 162 168 157 176 102 107 183 200 139 50 187 36 129 64 228 74 196 171 40 17 27 43 121 35 153 169 38 244 166 111 190 40 255 101 192 159 131 6 137 58 236 9 75 137 208 254 82 158 53 119 197 236 243 10 121 68 202 175 83 15 69 117 235 17 63 207 76 32 13 45 212 189)
  :der-encode
  #t
  :tests
  '(#(350
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 49 0 231 7 226 103 234 99 83 132 166 218 9 130 49 73 245 203 122 203 178 158 145 13 38 48 197 251 90 251 196 42 168 67 99 73 178 20 163 184 251 148 129 236 153 158 0 80 145 248)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 209 253 96 47 238 248 11 233 229 90 25 209 169 121 156 114 168 153 17 12 106 194 31 179 194 19 87 6 152 9 213 145 168 119 91 100 209 134 122 140 255 241 36 246 165 227 164 245 249 84 128 100 240 27 154 248 134 135 5 73 58 55 160 55 25 59 72 245 59 124 121 115 2 63 83 230 206 255 104 48 202 47 122 20 239 81 83 109 69 58 244 59 48 88 216 169)
  :der-encode
  #t
  :tests
  '(#(351
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 49 0 172 196 242 175 183 245 193 15 129 129 117 7 78 246 136 166 67 252 83 101 227 129 41 248 109 94 37 23 254 184 27 44 210 184 220 79 120 33 191 208 50 237 196 192 35 64 133 217)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 130 243 118 4 246 102 100 194 136 61 186 109 152 57 124 40 16 69 203 245 159 29 22 221 219 19 129 18 106 36 101 83 168 180 210 170 234 72 173 145 133 161 100 95 101 86 125 49 138 77 123 25 241 210 228 67 76 154 142 202 211 150 48 74 188 130 34 27 186 176 103 153 53 7 28 114 253 151 94 123 2 28 4 177 209 110 163 111 194 208 81 239 90 142 17 124)
  :der-encode
  #t
  :tests
  '(#(352
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 49 0 131 39 108 7 147 240 161 151 66 66 47 138 246 113 204 249 101 250 125 24 213 65 190 244 192 91 144 227 3 248 145 211 144 8 67 158 15 218 75 250 213 238 154 106 206 126 52 12)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 240 82 223 194 123 248 166 211 111 55 57 242 57 185 129 245 181 63 224 141 153 158 198 131 176 30 67 231 89 97 86 32 107 160 139 139 159 89 34 158 47 189 206 5 241 228 15 153 144 240 253 251 112 41 249 179 232 198 20 77 173 3 57 32 139 124 220 179 130 10 85 66 89 219 157 39 175 221 24 244 167 80 41 108 89 186 214 182 45 240 118 249 13 83 190 13)
  :der-encode
  #t
  :tests
  '(#(353
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 49 0 148 40 72 88 107 83 65 5 221 209 202 119 223 114 225 37 17 64 244 18 233 123 98 175 191 133 212 130 35 9 23 107 89 101 69 61 238 63 171 112 158 20 21 107 61 252 236 202)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 248 119 189 110 42 146 115 227 34 163 41 142 163 173 209 61 17 4 179 33 114 40 54 105 202 102 136 240 203 89 21 36 167 241 93 212 20 150 104 30 218 152 147 154 174 114 159 237 232 92 163 124 129 239 25 227 220 154 177 105 8 163 114 13 134 135 90 81 166 166 217 50 227 116 146 166 236 122 52 78 171 196 130 55 127 20 137 31 189 29 167 250 239 250 17 120)
  :der-encode
  #t
  :tests
  '(#(354
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 237 33 25 213 252 18 100 159 200 8 175 59 109 144 55 211 164 78 179 35 153 151 13 208)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 20 36 155 188 254 236 234 176 108 117 101 77 54 28 13 248 213 107 50 14 163 188 29 70 39 236 10 47 75 143 163 87 116 69 105 70 100 245 105 169 31 72 7 65 56 30 73 74 40 71 159 33 134 215 21 165 103 136 246 112 115 5 106 160 203 11 106 127 120 147 231 123 154 105 118 239 102 99 216 2 38 137 109 127 67 187 80 46 27 77 73 85 138 39 221 139)
  :der-encode
  #t
  :tests
  '(#(355
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 48 121 185 92 1 59 4 114 222 4 216 250 238 195 183 121 195 159 231 41 234 132 251 85 76 208 145 199 23 140 47 5 78 171 188 98 195 225 207 186 194 194 230 157 122 164 93 144 114)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 80 164 56 201 142 233 64 37 206 19 226 125 54 184 40 13 72 67 88 88 54 235 71 1 26 7 12 215 119 41 36 86 132 160 219 49 253 233 128 98 3 73 199 150 131 43 44 108 189 183 45 186 159 63 156 200 120 85 159 80 182 189 18 144 241 10 107 204 188 30 238 247 112 139 27 114 5 144 34 152 121 121 227 82 33 197 18 89 243 55 199 40 138 47 134 188)
  :der-encode
  #t
  :tests
  '(#(356
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 49 0 191 212 13 12 170 77 157 66 56 31 61 114 162 86 131 245 43 3 161 237 150 251 114 208 63 8 220 185 168 188 143 35 193 164 89 222 171 3 188 211 147 150 192 209 233 5 60 129)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 77 63 197 220 250 247 65 17 60 218 60 226 248 223 244 201 18 20 62 77 54 49 76 54 29 126 213 101 107 104 68 139 204 161 20 186 158 129 36 40 18 52 102 11 119 38 221 205 104 13 223 239 126 160 123 251 206 222 16 128 61 56 215 33 22 49 202 17 70 96 120 129 158 182 110 17 146 26 183 255 163 196 86 12 115 46 119 89 95 212 8 233 23 221 154 252)
  :der-encode
  #t
  :tests
  '(#(357
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 48 76 125 33 157 185 175 148 206 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 239 21 207 16 88 200 216 186 30 99 76 65 34 219 149 236 31 172 212 187 19 235 240 154)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 99 214 92 223 235 31 26 66 0 15 67 189 29 221 19 5 55 167 182 246 53 232 210 189 129 169 125 161 104 34 17 131 218 67 60 167 132 41 253 43 51 197 249 72 149 169 193 58 169 209 213 234 50 135 37 101 58 90 157 0 248 90 85 22 35 111 59 20 40 168 98 146 135 211 176 72 122 46 130 221 87 249 59 178 170 61 151 131 220 116 19 30 19 117 96 52)
  :der-encode
  #t
  :tests
  '(#(358
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 49 0 210 25 219 154 249 76 231 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 209 137 189 182 217 239 123 232 80 76 163 116 117 110 165 184 241 94 68 6 125 32 155 155)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 210 44 156 52 139 151 69 113 31 87 222 186 195 160 125 249 10 82 124 6 189 2 168 69 79 65 67 125 84 34 78 7 22 152 240 63 220 100 177 214 82 65 78 220 63 34 57 196 154 233 129 42 75 146 240 153 214 101 154 101 150 145 118 141 87 229 48 237 60 145 213 69 87 129 96 88 80 153 122 88 34 31 34 162 69 28 57 50 71 6 6 194 63 58 177 184)
  :der-encode
  #t
  :tests
  '(#(359
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 49 0 164 51 183 53 242 153 207 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 219 176 45 235 191 167 201 241 72 127 57 54 162 44 163 246 245 208 110 162 45 124 13 195)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 49 240 92 12 41 233 218 73 170 47 187 237 238 119 12 104 209 15 133 231 247 126 114 172 60 250 156 134 35 162 187 66 238 178 242 74 200 242 174 247 171 12 75 71 130 49 64 3 91 179 47 193 236 4 187 255 94 171 150 224 112 201 56 186 27 83 254 99 151 15 100 154 224 46 42 74 218 66 10 36 155 111 124 82 94 44 75 155 13 85 98 174 38 242 39 140)
  :der-encode
  #t
  :tests
  '(#(360
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 49 0 185 175 148 206 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 214 239 238 252 135 108 159 35 33 123 68 60 128 99 126 249 57 233 17 33 159 150 193 121)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 188 38 238 201 94 38 201 128 188 3 52 38 76 188 252 38 184 151 195 87 28 150 206 154 178 166 123 73 187 15 38 166 39 47 220 39 128 109 122 76 87 42 224 247 129 73 241 243 200 175 95 65 185 157 32 102 1 129 101 81 63 179 181 94 66 85 220 208 101 150 71 237 85 225 226 96 44 174 78 251 214 234 225 223 226 255 99 226 199 72 212 172 199 67 1 57)
  :der-encode
  #t
  :tests
  '(#(361
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 49 0 162 118 39 98 118 39 98 118 39 98 118 39 98 118 39 98 118 39 98 118 39 98 118 39 61 114 40 212 248 75 118 155 224 253 87 185 126 76 30 188 174 154 95 99 94 128 233 223)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 111 160 150 77 208 84 37 10 241 118 137 28 12 130 43 1 59 112 240 89 195 71 23 44 175 198 179 108 209 108 243 176 249 209 159 37 152 189 13 88 10 193 108 70 172 177 103 212 55 91 239 112 28 0 45 204 4 15 213 72 36 177 76 194 223 1 84 235 32 231 68 100 225 254 123 131 52 38 221 125 99 107 242 215 150 3 253 222 93 218 171 35 171 12 244 38)
  :der-encode
  #t
  :tests
  '(#(362
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 48 115 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 22 228 217 244 45 78 202 34 223 64 58 12 87 139 134 240 169 169 63 232 153 149 199 237)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 186 164 231 18 238 7 134 165 171 14 90 93 175 220 220 248 123 56 131 10 178 236 134 250 237 218 159 223 101 51 47 106 150 136 38 148 18 240 80 53 101 48 212 102 74 127 184 205 236 196 106 144 27 1 110 107 184 163 54 173 154 166 241 154 191 154 218 105 112 93 28 144 91 234 251 149 164 79 82 175 67 222 75 248 12 5 12 249 150 183 121 109 252 238 142 27)
  :der-encode
  #t
  :tests
  '(#(363
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 218 66 51 171 248 36 201 63 144 17 94 118 219 32 111 167 72 157 102 71 51 46 27 163)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 129 231 138 82 174 6 149 88 63 122 96 26 185 182 251 250 244 52 242 190 250 31 140 131 61 89 222 182 39 169 39 194 244 45 72 235 97 127 224 66 245 132 225 5 194 60 35 23 207 34 213 101 245 243 180 37 239 121 55 223 98 155 104 100 218 199 18 100 178 136 193 169 135 33 15 82 48 113 49 156 227 246 68 17 145 10 194 55 101 196 38 110 97 81 18 188)
  :der-encode
  #t
  :tests
  '(#(364
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 48 63 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 227 177 166 192 250 27 150 239 172 13 6 217 36 88 83 189 118 118 12 181 102 98 148 187)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 65 250 135 101 177 157 49 8 3 30 40 201 167 129 163 133 201 193 11 43 253 66 230 67 126 92 75 215 17 207 42 3 23 80 132 125 23 168 47 147 118 163 10 225 130 166 214 231 28 32 175 150 50 65 71 212 21 90 77 12 134 124 168 227 110 186 32 79 190 210 8 126 15 203 220 139 170 190 7 187 49 35 249 247 37 158 119 28 217 241 173 23 209 162 55 135)
  :der-encode
  #t
  :tests
  '(#(365
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 49 0 223 234 6 134 85 38 206 161 28 15 158 185 81 43 65 250 149 129 208 246 203 125 185 104 3 54 21 29 206 121 222 129 140 223 51 200 121 218 50 39 64 65 109 30 90 229 50 250)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 229 133 160 103 214 223 243 122 231 241 127 129 88 49 25 182 18 145 89 115 69 241 7 172 255 226 55 160 143 72 134 212 253 249 79 230 49 130 230 20 60 153 190 37 167 183 216 107 87 44 30 6 221 44 123 148 184 115 240 87 143 203 43 153 214 14 36 110 81 36 93 8 4 237 212 75 50 240 240 0 200 248 248 143 29 74 101 254 165 29 187 180 171 30 40 35)
  :der-encode
  #t
  :tests
  '(#(366
      "point duplication during verification"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 49 0 179 118 153 224 213 24 164 211 112 219 218 170 234 55 136 133 15 160 63 129 134 209 247 143 223 186 230 84 10 166 112 179 28 138 218 15 255 62 115 123 214 149 32 86 15 224 206 96 2 48 100 173 180 213 26 147 249 107 237 70 101 222 45 78 17 105 204 149 129 158 198 233 51 62 223 213 192 124 161 52 206 239 124 149 149 123 113 154 227 73 252 67 158 170 73 251 190 52)
      #t
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 229 133 160 103 214 223 243 122 231 241 127 129 88 49 25 182 18 145 89 115 69 241 7 172 255 226 55 160 143 72 134 212 253 249 79 230 49 130 230 20 60 153 190 37 167 183 216 107 168 211 225 249 34 211 132 107 71 140 15 168 112 52 212 102 41 241 219 145 174 219 162 247 251 18 43 180 205 15 15 254 55 7 7 111 226 181 154 1 90 226 68 76 84 225 215 220)
  :der-encode
  #t
  :tests
  '(#(367
      "duplication bug"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 49 0 179 118 153 224 213 24 164 211 112 219 218 170 234 55 136 133 15 160 63 129 134 209 247 143 223 186 230 84 10 166 112 179 28 138 218 15 255 62 115 123 214 149 32 86 15 224 206 96 2 48 100 173 180 213 26 147 249 107 237 70 101 222 45 78 17 105 204 149 129 158 198 233 51 62 223 213 192 124 161 52 206 239 124 149 149 123 113 154 227 73 252 67 158 170 73 251 190 52)
      #f
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 180 215 140 204 188 237 128 101 192 235 220 51 11 70 112 236 153 48 146 115 228 66 185 190 52 17 150 193 4 62 68 65 252 87 185 20 8 85 149 191 199 85 198 79 196 9 240 186 1 254 227 28 187 186 237 92 19 35 240 156 135 223 155 7 18 193 46 153 115 63 162 62 249 27 78 108 166 102 176 157 215 84 14 191 16 104 161 81 85 188 6 158 61 89 92 140)
  :der-encode
  #t
  :tests
  '(#(368
      "point with x-coordinate 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 1 1 2 48 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 66 118 111 43 81 103 185 245 29 94 4 144 194 229 141 40 249 164 8 120 238 236 99 38)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 110 60 104 190 83 170 222 129 239 137 224 150 216 65 226 132 90 35 51 30 126 200 166 168 57 213 141 7 250 1 108 9 115 237 117 222 79 153 23 123 253 199 77 181 102 233 209 90 73 114 234 8 229 119 206 31 97 193 58 108 161 186 209 222 239 41 130 238 1 162 130 111 0 43 118 159 44 70 9 141 59 175 240 104 164 5 208 156 163 132 13 47 175 228 228 110)
  :der-encode
  #t
  :tests
  '(#(369
      "point with x-coordinate 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 49 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 48 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 39 224 169 25 253 164 162 198 68 210 2 189 65 188 238 75 200 252 5 21 92 39 110 176)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 177 1 205 179 235 162 14 17 42 219 180 187 210 203 71 154 105 229 144 164 78 169 2 99 24 50 171 250 184 175 44 48 65 179 223 127 22 101 178 198 235 83 63 84 98 23 16 10 26 97 170 153 81 87 138 212 240 10 225 115 57 168 166 241 53 155 189 10 195 85 103 142 212 223 33 51 143 8 118 60 29 55 2 236 19 43 99 76 123 204 1 24 239 177 208 221)
  :der-encode
  #t
  :tests
  '(#(370
      "comparison with point at infinity "
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 66 118 111 43 81 103 185 245 29 94 4 144 194 229 141 40 249 164 8 120 238 236 99 38 2 48 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 39 224 169 25 253 164 162 198 68 210 2 189 65 188 238 75 200 252 5 21 92 39 110 176)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 103 97 4 74 4 10 73 121 219 38 155 74 55 126 66 241 27 75 224 206 36 97 31 103 118 116 220 247 112 245 136 124 164 219 86 83 3 40 56 9 230 214 95 127 198 188 39 54 5 199 218 164 3 252 165 53 73 247 95 243 55 41 9 100 45 2 183 253 202 193 230 130 66 129 77 110 146 90 176 26 128 131 108 251 179 85 129 150 0 121 226 251 68 192 209 134)
  :der-encode
  #t
  :tests
  '(#(371
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 8 217 153 5 123 163 210 217 105 38 0 69 197 91 151 240 137 2 89 89 166 244 52 214 81 210 7 209 159 185 110 158 79 224 232 110 190 14 100 248 91 150 169 199 82 149 223 97 2 48 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 66 118 111 43 81 103 185 245 29 94 4 144 194 229 141 40 249 164 8 120 238 236 99 38)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 105 34 197 145 80 47 1 4 111 238 86 23 191 22 73 111 88 57 136 34 230 154 250 131 53 48 143 54 192 154 142 212 55 32 159 239 207 251 189 240 164 135 107 53 163 199 171 38 85 133 77 184 37 185 75 63 39 229 248 146 211 187 182 199 36 14 201 34 137 77 211 89 142 145 252 198 19 74 43 143 209 84 225 121 4 102 144 98 6 240 246 35 65 110 99 161)
  :der-encode
  #t
  :tests
  '(#(372
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 8 217 153 5 123 163 210 217 105 38 0 69 197 91 151 240 137 2 89 89 166 244 52 214 81 210 7 209 159 185 110 158 79 224 232 110 190 14 100 248 91 150 169 199 82 149 223 97 2 48 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 28 123 230 128 71 117 152 214 195 113 111 171 193 61 206 200 106 253 40 51 212 28 42 126)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 137 45 172 14 112 15 194 157 24 2 217 164 73 166 245 107 33 114 203 27 125 136 16 19 205 59 49 192 237 176 82 242 211 64 200 153 90 68 119 188 185 34 95 236 21 102 114 51 204 108 52 174 23 68 84 68 81 111 216 253 34 238 131 247 158 176 119 30 191 246 103 122 197 212 224 137 248 122 28 114 223 149 122 203 36 73 42 220 215 195 129 107 142 12 117 177)
  :der-encode
  #t
  :tests
  '(#(373
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 8 217 153 5 123 163 210 217 105 38 0 69 197 91 151 240 137 2 89 89 166 244 52 214 81 210 7 209 159 185 110 158 79 224 232 110 190 14 100 248 91 150 169 199 82 149 223 97 2 48 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 79 193 82 51 251 73 69 140 137 164 5 122 131 121 220 151 145 248 10 42 184 78 221 97)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 1 99 65 23 230 71 140 224 86 139 10 36 105 35 123 186 198 255 9 106 203 126 81 64 114 191 119 18 60 181 27 160 204 62 141 105 40 77 83 77 142 109 30 135 108 236 242 34 49 229 239 4 220 150 118 44 231 213 239 51 72 173 30 36 26 199 151 174 59 99 14 162 73 175 197 19 154 244 155 142 246 139 50 248 18 214 181 20 33 3 99 212 152 239 194 140)
  :der-encode
  #t
  :tests
  '(#(374
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 8 217 153 5 123 163 210 217 105 38 0 69 197 91 151 240 137 2 89 89 166 244 52 214 81 210 7 209 159 185 110 158 79 224 232 110 190 14 100 248 91 150 169 199 82 149 223 97 2 49 0 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 119 161 251 77 248 237 232 82 206 118 8 55 197 54 202 227 90 244 15 64 20 118 76 18)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 103 91 220 121 216 36 56 135 254 27 48 93 18 172 16 210 233 192 189 224 112 166 227 57 76 213 246 173 251 206 218 117 73 139 14 122 121 76 114 18 244 43 233 63 97 103 68 86 62 150 209 191 111 149 205 190 250 119 73 17 186 6 70 61 138 144 160 201 215 60 150 153 176 97 215 121 220 82 73 110 142 233 185 174 156 93 77 144 232 156 209 21 125 129 24 149)
  :der-encode
  #t
  :tests
  '(#(375
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 8 217 153 5 123 163 210 217 105 38 0 69 197 91 151 240 137 2 89 89 166 244 52 214 81 210 7 209 159 185 110 158 79 224 232 110 190 14 100 248 91 150 169 199 82 149 223 97 2 49 0 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 170 231 103 1 172 193 149 8 148 168 158 6 135 114 216 178 129 238 241 54 248 168 254 245)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 15 209 170 184 159 71 181 101 184 22 13 252 196 51 182 64 138 222 177 71 60 3 107 38 183 221 236 113 79 180 208 231 221 117 108 136 70 158 134 226 24 129 62 173 142 142 118 118 241 204 149 92 65 57 224 7 28 0 121 236 29 119 22 78 5 105 189 244 83 131 126 139 51 201 133 53 160 231 201 198 30 242 71 98 6 123 180 107 97 22 234 121 9 166 155 35)
  :der-encode
  #t
  :tests
  '(#(376
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 8 217 153 5 123 163 210 217 105 38 0 69 197 91 151 240 137 2 89 89 166 244 52 214 81 210 7 209 159 185 110 158 79 224 232 110 190 14 100 248 91 150 169 199 82 149 223 97 2 48 14 177 14 90 185 95 47 38 164 7 0 177 48 15 184 195 231 84 213 196 83 217 56 78 204 225 218 163 129 53 164 138 10 150 194 78 252 42 118 208 11 222 29 122 238 223 127 106)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 52 215 78 192 136 186 182 198 50 57 104 209 244 104 153 56 18 246 144 214 237 202 91 151 96 77 113 142 18 184 205 253 217 109 66 229 125 51 175 227 18 240 238 60 61 10 19 247 134 244 146 43 178 193 59 223 119 82 163 236 182 147 147 233 151 189 101 70 28 70 134 126 190 239 98 150 178 63 44 86 223 99 172 253 230 72 243 245 0 45 188 35 159 253 21 130)
  :der-encode
  #t
  :tests
  '(#(377
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 49 0 170 135 202 34 190 139 5 55 142 177 199 30 243 32 173 116 110 29 59 98 139 167 155 152 89 247 65 224 130 84 42 56 85 2 242 93 191 85 41 108 58 84 94 56 114 118 10 183 2 48 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 66 118 111 43 81 103 185 245 29 94 4 144 194 229 141 40 249 164 8 120 238 236 99 38)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 67 118 201 137 62 146 119 41 108 118 106 131 171 190 54 179 77 167 166 49 248 203 253 50 161 136 141 224 221 20 85 162 26 21 62 162 214 28 250 80 113 252 107 225 42 101 143 107 41 11 161 168 238 140 120 181 221 88 249 255 202 203 34 149 86 130 238 160 36 41 195 250 140 220 182 73 250 77 0 124 134 147 227 248 243 192 165 243 196 222 122 81 190 170 152 9)
  :der-encode
  #t
  :tests
  '(#(378
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 49 0 170 135 202 34 190 139 5 55 142 177 199 30 243 32 173 116 110 29 59 98 139 167 155 152 89 247 65 224 130 84 42 56 85 2 242 93 191 85 41 108 58 84 94 56 114 118 10 183 2 48 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 28 123 230 128 71 117 152 214 195 113 111 171 193 61 206 200 106 253 40 51 212 28 42 126)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 16 135 143 196 128 127 103 50 162 60 136 62 131 142 56 199 135 247 8 143 148 193 130 75 132 103 62 139 158 171 22 222 21 68 174 75 242 198 254 63 228 251 52 59 116 135 226 180 48 54 255 67 149 51 210 47 149 29 174 150 101 132 186 251 35 178 23 220 173 47 143 78 14 105 153 192 196 208 240 118 99 75 232 5 246 118 253 42 89 194 127 159 231 197 217 91)
  :der-encode
  #t
  :tests
  '(#(379
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 49 0 170 135 202 34 190 139 5 55 142 177 199 30 243 32 173 116 110 29 59 98 139 167 155 152 89 247 65 224 130 84 42 56 85 2 242 93 191 85 41 108 58 84 94 56 114 118 10 183 2 48 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 79 193 82 51 251 73 69 140 137 164 5 122 131 121 220 151 145 248 10 42 184 78 221 97)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 3 107 37 62 59 74 200 139 184 88 90 43 50 185 120 118 106 147 30 90 208 208 230 83 162 227 75 68 214 221 204 13 56 110 32 196 222 242 216 187 63 141 161 40 193 234 198 159 156 142 59 95 245 221 226 32 90 243 89 179 151 77 82 117 141 122 186 232 18 184 178 117 225 69 44 78 89 203 98 233 182 119 29 52 125 189 29 234 118 28 112 41 28 197 224 166)
  :der-encode
  #t
  :tests
  '(#(380
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 170 135 202 34 190 139 5 55 142 177 199 30 243 32 173 116 110 29 59 98 139 167 155 152 89 247 65 224 130 84 42 56 85 2 242 93 191 85 41 108 58 84 94 56 114 118 10 183 2 49 0 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 119 161 251 77 248 237 232 82 206 118 8 55 197 54 202 227 90 244 15 64 20 118 76 18)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 39 131 193 190 146 47 206 21 88 100 236 180 29 10 49 110 25 58 85 132 62 128 25 47 31 229 86 119 47 61 235 208 75 159 201 60 39 188 111 53 57 56 136 106 64 68 25 148 26 53 44 236 51 105 70 66 79 163 194 8 234 113 5 245 84 158 221 232 104 138 189 48 83 68 191 79 102 221 167 234 188 218 111 133 87 201 175 136 16 152 4 215 2 233 103 11)
  :der-encode
  #t
  :tests
  '(#(381
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 49 0 170 135 202 34 190 139 5 55 142 177 199 30 243 32 173 116 110 29 59 98 139 167 155 152 89 247 65 224 130 84 42 56 85 2 242 93 191 85 41 108 58 84 94 56 114 118 10 183 2 49 0 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 170 231 103 1 172 193 149 8 148 168 158 6 135 114 216 178 129 238 241 54 248 168 254 245)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 250 146 83 140 220 116 3 104 202 241 100 128 255 19 4 206 187 190 89 164 106 122 132 96 55 38 185 89 45 16 91 224 105 223 28 97 181 151 79 39 231 85 47 121 125 233 124 219 98 14 3 164 109 168 98 228 176 137 186 251 184 13 248 240 85 200 244 121 145 179 163 221 178 176 137 174 219 47 21 132 26 106 91 94 20 193 220 54 179 193 85 196 247 77 52 9)
  :der-encode
  #t
  :tests
  '(#(382
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 49 0 170 135 202 34 190 139 5 55 142 177 199 30 243 32 173 116 110 29 59 98 139 167 155 152 89 247 65 224 130 84 42 56 85 2 242 93 191 85 41 108 58 84 94 56 114 118 10 183 2 48 14 177 14 90 185 95 47 38 164 7 0 177 48 15 184 195 231 84 213 196 83 217 56 78 204 225 218 163 129 53 164 138 10 150 194 78 252 42 118 208 11 222 29 122 238 223 127 106)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 170 135 202 34 190 139 5 55 142 177 199 30 243 32 173 116 110 29 59 98 139 167 155 152 89 247 65 224 130 84 42 56 85 2 242 93 191 85 41 108 58 84 94 56 114 118 10 183 54 23 222 74 150 38 44 111 93 158 152 191 146 146 220 41 248 244 29 189 40 154 20 124 233 218 49 19 181 240 184 192 10 96 177 206 29 126 129 157 122 67 29 124 144 234 14 95)
  :der-encode
  #t
  :tests
  '(#(383
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 49 0 249 177 39 240 216 30 188 209 123 123 160 234 19 28 102 13 52 11 5 206 85 124 130 22 14 15 121 61 224 125 56 23 144 35 148 40 113 172 183 0 45 250 253 255 252 141 234 206 2 48 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 28 123 230 128 71 117 152 214 195 113 111 171 193 61 206 200 106 253 40 51 212 28 42 126)
      #f
      ())
    #(384
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 6 78 216 15 39 225 67 46 132 132 95 21 236 227 153 242 203 244 250 49 170 131 125 233 185 83 212 68 19 185 245 199 199 246 121 137 215 3 240 122 190 241 27 106 208 55 62 165 2 48 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 28 123 230 128 71 117 152 214 195 113 111 171 193 61 206 200 106 253 40 51 212 28 42 126)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 170 135 202 34 190 139 5 55 142 177 199 30 243 32 173 116 110 29 59 98 139 167 155 152 89 247 65 224 130 84 42 56 85 2 242 93 191 85 41 108 58 84 94 56 114 118 10 183 201 232 33 181 105 217 211 144 162 97 103 64 109 109 35 214 7 11 226 66 215 101 235 131 22 37 206 236 74 15 71 62 245 159 78 48 226 129 126 98 133 188 226 132 111 21 241 160)
  :der-encode
  #t
  :tests
  '(#(385
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 49 0 249 177 39 240 216 30 188 209 123 123 160 234 19 28 102 13 52 11 5 206 85 124 130 22 14 15 121 61 224 125 56 23 144 35 148 40 113 172 183 0 45 250 253 255 252 141 234 206 2 48 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 28 123 230 128 71 117 152 214 195 113 111 171 193 61 206 200 106 253 40 51 212 28 42 126)
      #f
      ())
    #(386
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 100 2 48 6 78 216 15 39 225 67 46 132 132 95 21 236 227 153 242 203 244 250 49 170 131 125 233 185 83 212 68 19 185 245 199 199 246 121 137 215 3 240 122 190 241 27 106 208 55 62 165 2 48 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 28 123 230 128 71 117 152 214 195 113 111 171 193 61 206 200 106 253 40 51 212 28 42 126)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 41 189 183 109 95 167 65 191 215 2 51 203 58 102 204 125 68 190 179 176 102 61 146 168 19 102 80 71 139 206 251 97 239 24 46 21 90 84 52 90 94 142 94 136 240 100 229 188 154 82 90 183 247 100 218 211 218 225 70 140 43 65 159 59 98 185 186 145 125 94 140 79 177 236 71 64 74 63 199 100 116 178 113 48 129 190 157 180 192 14 4 58 218 159 196 163)
  :der-encode
  #t
  :tests
  '(#(387
      "pseudorandom signature"
      #vu8()
      #vu8(48 100 2 48 50 64 18 73 113 78 144 145 240 90 94 16 157 92 18 22 253 192 94 152 97 66 97 170 13 189 158 156 212 65 93 238 41 35 138 251 211 177 3 193 228 14 229 201 20 74 238 15 2 48 67 38 117 111 178 196 253 114 99 96 221 100 121 181 132 148 120 199 169 208 84 168 51 165 140 22 49 195 59 99 195 68 19 54 221 242 199 254 14 209 41 170 230 212 221 254 183 83)
      #t
      ())
    #(388
      "pseudorandom signature"
      #vu8(77 115 103)
      #vu8(48 102 2 49 0 215 20 58 131 102 8 178 85 153 167 242 141 236 102 53 73 76 41 146 173 30 43 190 236 183 239 96 26 156 1 116 110 113 12 224 217 196 138 204 179 138 121 237 229 185 99 143 52 2 49 0 128 249 225 101 232 198 16 53 191 138 167 181 83 57 96 228 109 208 226 17 201 4 160 100 237 182 222 65 247 151 192 234 228 227 39 97 46 227 248 22 244 21 114 114 187 79 171 201)
      #t
      ())
    #(389
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(48 101 2 48 35 69 3 252 202 87 129 33 152 109 150 190 7 251 200 218 93 137 78 216 88 140 109 188 219 233 116 180 184 19 178 28 82 210 10 137 40 242 226 253 172 20 112 91 7 5 73 140 2 49 0 205 123 155 118 107 151 181 61 26 128 252 11 118 10 241 106 17 191 74 89 199 195 103 198 199 39 93 251 110 24 168 128 145 238 211 115 75 245 207 65 179 220 111 236 214 211 186 175)
      #t
      ())
    #(390
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(48 101 2 48 92 173 154 225 86 95 37 136 248 109 130 28 44 193 180 208 253 248 116 51 19 38 86 143 91 14 19 14 78 12 14 196 151 248 245 245 100 33 43 210 162 110 203 120 44 240 161 141 2 49 0 191 46 157 9 128 251 176 6 150 103 62 127 187 3 225 248 84 185 215 89 107 117 154 23 191 110 110 103 169 94 166 193 102 79 130 220 68 154 229 234 119 154 189 153 199 142 104 64)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 255 255 255 255 170 99 241 162 57 172 112 25 124 110 191 206 165 117 109 192 18 18 63 130 197 31 168 116 214 96 40 190 0 233 118 161 8 6 6 115 124 199 92 64 189 254 74 172 172 189 133 56 144 136 166 42 99 152 56 76 34 181 45 73 47 35 244 110 74 39 164 114 74 213 85 81 218 92 72 52 56 9 90 36 124 176 195 55 143 31 82 195 66 95 249 241)
  :der-encode
  #t
  :tests
  '(#(391
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 101 2 48 7 100 139 102 96 208 27 162 82 10 9 210 152 173 243 177 160 44 50 116 75 210 135 114 8 245 164 22 47 108 152 67 115 19 157 128 10 76 220 31 254 161 91 206 72 113 160 237 2 49 0 153 253 54 112 18 203 158 2 205 226 116 148 85 224 212 149 197 40 24 243 193 79 110 106 173 16 91 9 37 226 167 41 10 196 160 109 159 173 244 177 91 87 133 86 254 51 42 95)
      #t
      ())
    #(392
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 101 2 49 0 160 73 220 217 108 114 228 243 97 68 165 27 186 48 65 123 69 26 48 93 208 28 158 48 165 224 77 249 67 66 97 125 195 131 241 119 39 112 142 50 119 205 114 70 202 68 7 65 2 48 57 112 226 100 216 91 34 139 249 233 185 196 148 124 93 208 65 234 139 91 222 48 185 58 165 159 237 242 196 40 211 226 84 10 84 224 83 6 136 172 204 184 58 199 178 155 121 162)
      #t
      ())
    #(393
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 101 2 48 68 24 0 234 147 119 194 120 101 190 0 10 208 8 235 61 117 2 189 209 5 130 75 38 209 92 243 208 100 82 150 154 157 6 7 169 21 168 254 152 146 21 252 77 97 175 110 5 2 49 0 220 226 159 170 81 55 247 90 215 126 3 145 140 142 230 116 124 199 163 155 10 105 248 185 21 101 76 172 76 244 191 217 200 124 196 106 225 99 27 92 107 174 189 79 192 143 248 253)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 209 130 127 198 246 241 47 33 153 44 90 64 154 6 83 177 33 210 239 2 178 176 171 1 169 22 28 233 86 40 7 64 177 227 86 178 85 112 27 10 109 220 158 194 202 138 148 34 198 237 93 44 237 141 138 183 86 15 165 187 136 199 56 231 69 65 136 61 138 43 28 14 43 167 227 109 3 15 196 217 191 184 178 47 36 219 137 126 186 196 157 212 0 0 0 0)
  :der-encode
  #t
  :tests
  '(#(394
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 100 2 48 50 68 118 128 22 69 124 70 59 116 242 9 127 33 109 150 112 177 145 247 98 129 199 75 198 161 161 151 29 25 242 9 191 70 150 70 143 94 183 93 99 38 160 164 60 10 101 41 2 48 80 30 10 217 133 237 159 149 105 123 209 127 219 227 249 202 146 224 247 100 38 211 102 78 104 150 100 141 156 117 11 245 136 208 206 125 1 28 26 30 141 108 46 8 36 34 220 147)
      #t
      ())
    #(395
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 100 2 48 94 26 244 15 36 128 227 217 124 74 228 191 211 74 159 69 38 146 65 53 111 58 70 190 205 134 164 167 201 113 109 115 202 90 235 219 61 177 167 118 86 80 102 102 131 188 133 107 2 48 126 124 75 71 58 43 170 164 149 55 133 190 138 162 161 0 6 246 211 107 64 10 185 129 134 77 105 206 206 192 70 113 141 4 4 185 100 116 84 177 89 170 90 146 215 109 121 85)
      #t
      ())
    #(396
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 101 2 48 102 136 227 106 38 241 91 220 28 63 145 54 127 138 118 103 247 187 62 48 163 53 214 240 144 14 149 52 235 136 178 96 203 41 52 76 114 63 237 251 231 172 156 90 51 244 191 13 2 49 0 170 53 253 223 15 220 144 23 134 11 55 143 128 28 216 6 243 226 215 84 205 47 217 78 183 187 54 164 108 232 40 206 248 126 158 187 244 71 6 142 99 11 135 254 227 133 173 143)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 16 153 187 69 16 15 85 245 168 92 202 61 226 179 189 94 37 15 79 111 173 102 49 163 21 108 46 82 163 61 125 97 93 210 121 247 159 139 75 175 247 199 19 172 0 0 0 0 230 201 183 54 168 146 159 46 215 190 12 117 58 84 203 180 139 132 105 224 65 30 175 147 164 168 36 89 186 11 104 27 186 143 95 179 131 180 144 109 73 1 163 48 62 47 21 87)
  :der-encode
  #t
  :tests
  '(#(397
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 101 2 49 0 212 168 243 176 180 211 165 118 158 58 11 188 100 75 53 241 213 9 53 94 209 254 64 30 23 15 102 123 102 31 105 59 50 89 142 140 20 58 129 122 149 137 130 132 80 66 187 72 2 48 4 204 7 87 139 189 25 129 219 246 232 169 122 53 76 152 212 27 139 111 110 138 44 43 23 99 199 194 162 157 121 226 79 132 118 7 92 154 237 154 236 108 100 223 245 4 97 174)
      #t
      ())
    #(398
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 101 2 49 0 194 134 209 146 142 156 121 253 211 190 189 242 42 29 189 55 200 16 94 142 207 65 233 227 119 127 227 65 182 184 213 168 155 157 152 104 39 214 209 219 179 129 205 130 57 72 74 34 2 48 32 17 25 174 48 91 147 96 170 155 94 93 21 103 224 103 76 9 228 240 37 85 110 191 129 185 135 70 107 15 66 27 141 49 247 43 190 149 243 206 42 169 135 74 132 237 253 64)
      #t
      ())
    #(399
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 101 2 49 0 217 198 120 85 1 103 241 12 81 30 98 172 180 189 10 63 127 51 107 192 144 201 78 108 107 2 98 36 57 195 72 162 21 156 95 65 249 181 170 75 71 5 144 212 13 205 124 194 2 48 31 213 234 238 41 90 187 64 129 203 98 103 69 244 173 39 156 235 68 96 64 98 131 11 88 230 192 70 92 86 45 65 240 43 165 136 252 13 177 235 190 51 156 220 0 141 122 27)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 0 0 0 0 43 8 158 221 117 65 105 1 1 69 242 99 243 52 252 22 124 193 157 174 130 37 151 10 225 156 200 203 126 199 53 147 214 164 101 195 112 245 71 139 14 83 157 105 209 149 29 89 123 86 166 115 69 172 178 88 9 88 31 7 205 14 183 141 149 56 163 248 166 95 48 14 104 161 235 120 80 125 247 109 230 80 232 248 238 99 165 240 197 104 124 152)
  :der-encode
  #t
  :tests
  '(#(400
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 101 2 48 32 254 231 199 27 108 176 209 218 54 65 236 102 34 192 85 163 177 106 31 89 108 100 179 77 161 178 208 184 104 182 106 143 10 13 13 185 131 179 220 126 83 187 114 149 218 129 151 2 49 0 129 65 169 49 211 87 154 236 28 172 152 135 210 255 249 198 241 45 71 162 126 74 171 140 242 98 169 209 74 113 91 202 11 32 87 203 195 241 139 111 211 209 223 118 247 65 15 22)
      #t
      ())
    #(401
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 101 2 49 0 145 62 236 197 89 179 207 113 8 166 93 108 195 7 107 253 243 108 111 148 220 198 105 61 6 105 4 112 243 74 46 129 86 66 65 225 222 95 95 81 66 29 227 10 244 103 241 15 2 48 100 155 211 113 114 68 232 239 60 107 14 218 152 63 132 220 165 234 134 209 190 193 83 134 185 196 115 236 67 168 205 11 165 88 238 232 25 247 145 217 255 146 114 185 175 213 149 81)
      #t
      ())
    #(402
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 100 2 48 35 133 92 70 64 58 151 183 108 187 49 110 195 254 126 44 66 43 129 131 135 96 75 218 140 61 145 18 27 79 32 23 157 145 7 197 249 45 237 200 182 32 215 219 135 252 204 205 2 48 80 245 115 67 171 20 142 80 102 35 32 196 22 30 68 84 60 53 188 153 32 17 234 91 22 128 185 67 130 207 34 78 160 236 93 165 17 225 2 245 102 203 103 32 31 48 162 238)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 251 1 186 173 95 11 143 121 185 205 16 77 18 170 185 49 1 70 173 215 214 180 192 34 216 122 230 113 17 120 185 77 97 140 167 179 175 19 133 75 28 88 136 121 232 119 179 54 0 0 0 0 32 139 63 90 211 179 147 122 204 157 96 108 197 236 236 171 74 112 31 117 237 66 149 126 164 215 133 141 51 245 194 108 106 226 10 156 204 218 86 153 103 0 214 180)
  :der-encode
  #t
  :tests
  '(#(403
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 102 2 49 0 210 0 149 141 73 31 206 189 230 103 205 115 108 157 186 9 97 199 13 178 236 175 87 60 49 221 127 164 30 204 163 43 64 181 137 111 154 13 223 39 33 16 227 210 30 132 89 58 2 49 0 194 236 247 57 67 185 173 206 89 107 172 20 252 230 36 149 174 147 130 92 95 246 246 28 36 125 29 138 252 186 82 8 47 201 111 99 162 110 85 188 207 195 119 159 136 207 215 153)
      #t
      ())
    #(404
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 100 2 48 106 193 125 113 38 12 121 248 26 117 102 18 71 56 203 62 229 208 170 105 14 115 169 138 233 231 102 241 51 102 145 229 0 202 213 27 161 48 35 102 192 156 192 107 143 112 73 224 2 48 50 202 150 93 109 112 18 236 24 124 124 171 149 68 51 77 102 194 167 101 141 222 250 103 228 173 64 66 152 21 81 142 204 135 177 73 45 221 87 51 59 210 48 11 70 96 168 53)
      #t
      ())
    #(405
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 101 2 49 0 225 154 70 70 240 237 138 39 31 232 107 165 51 248 190 79 216 27 191 70 116 113 111 102 142 250 137 164 12 172 81 238 194 166 207 189 146 50 125 37 239 233 28 164 255 113 43 197 2 48 74 134 178 232 225 35 120 230 51 222 194 105 30 59 30 237 78 147 44 196 139 40 228 95 163 212 100 204 14 148 140 2 204 157 236 242 187 67 178 89 55 252 243 126 154 216 110 240)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp384r1_sha384_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 251 1 186 173 95 11 143 121 185 205 16 77 18 170 185 49 1 70 173 215 214 180 192 34 216 122 230 113 17 120 185 77 97 140 167 179 175 19 133 75 28 88 136 121 232 119 179 54 255 255 255 255 223 116 192 165 44 76 108 133 51 98 159 147 58 19 19 84 181 143 224 138 18 189 106 129 91 40 122 113 204 10 61 146 149 29 245 99 51 37 169 103 152 255 41 75)
  :der-encode
  #t
  :tests
  '(#(406
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 100 2 48 21 170 198 192 244 53 203 102 45 17 13 181 207 104 108 174 229 60 100 254 45 109 96 10 131 235 229 5 160 230 252 98 220 87 5 22 4 119 196 117 40 200 201 3 250 134 91 93 2 48 127 148 221 192 26 96 63 155 236 93 16 201 242 200 159 178 59 63 250 182 178 182 141 15 4 51 109 73 144 133 227 45 34 191 58 182 122 73 167 76 116 63 114 71 49 114 181 159)
      #t
      ())
    #(407
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 102 2 49 0 144 185 90 125 25 75 115 73 143 186 90 252 149 193 174 169 190 7 49 98 169 237 197 124 77 18 244 89 240 161 115 11 175 47 135 215 214 98 74 234 123 147 30 197 51 112 254 71 2 49 0 203 193 239 71 14 102 96 16 96 76 96 147 132 184 114 219 127 167 184 165 169 242 15 222 253 101 107 226 252 199 93 181 57 72 16 47 122 178 3 234 24 96 166 163 42 242 70 161)
      #t
      ())
    #(408
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 102 2 49 0 221 67 145 206 117 87 203 208 5 227 213 215 39 205 38 67 153 220 195 198 80 30 69 71 80 91 109 87 180 11 191 10 127 172 121 77 204 141 66 51 21 157 208 170 64 212 224 185 2 49 0 167 127 161 55 79 214 10 169 22 0 145 34 0 252 131 198 170 68 127 129 113 236 234 114 174 50 45 243 45 204 214 137 81 220 92 175 108 80 56 14 64 14 69 191 92 14 98 107)
      #t
      ())))
