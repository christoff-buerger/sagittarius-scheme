(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 87 46 171 115 118 208 82 223 196 9 35 219 37 52 46 169 203 252 228 184 88 30 16 74 76 143 55 201 74 112 14 197 220 5 164 129 178 182 149 50 12 111 26 210 221 134 40 99 60 219 117 169 18 69 194 101)
  :der-encode
  #f
  :tests
  '(#(1
      "signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(203 104 172 151 101 199 100 23 133 223 35 126 153 81 225 66 149 129 135 154 242 99 20 96 4 137 97 211 19 156 120 36 58 110 54 225 36 213 245 225 75 76 184 117 74 189 242 15 241 165 1 213 102 106 66 143)
      #t
      ())
    #(2
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(1 163 41 225 65 140 10 202 157 175 247 83 164 15 34 220 219 102 152 67 230 96 65 209 3 170 48 245 114 0 196 36 188 133 235 213 47 165 5 66 58 68 42 132 67 35 134 88 202 59 124 57 186 206 63 61 81 16)
      #f
      ())
    #(3
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(12 88 136 18 192 124 2 110 164 57 12 166 220 127 26 86 59 149 52 176 123 123 168 67 161 30 49 204 196 36 188 133 235 213 47 165 5 66 58 68 42 132 67 35 134 88 202 59 124 57 186 206 63 61 81 16)
      #f
      ())
    #(4
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(1 203 104 172 151 101 199 100 23 133 223 35 126 153 81 225 66 149 129 135 154 242 99 20 96 4 137 97 211 0 196 36 188 133 235 213 47 165 5 66 58 68 42 132 67 35 134 88 202 59 124 57 186 206 63 61 81 16)
      #f
      ())
    #(5
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(52 151 83 104 154 56 155 232 122 32 220 129 102 174 30 189 106 126 120 101 13 156 235 159 251 118 158 45 196 36 188 133 235 213 47 165 5 66 58 68 42 132 67 35 134 88 202 59 124 57 186 206 63 61 81 16)
      #f
      ())
    #(6
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(0 203 104 172 151 101 199 100 23 133 223 35 126 153 81 225 66 149 129 135 154 242 99 20 96 4 137 97 211 1 155 229 241 48 18 24 150 43 47 90 106 105 160 85 62 188 87 111 134 134 234 24 119 113 228 228 228 175)
      #f
      ())
    #(7
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(0 203 104 172 151 101 199 100 23 133 223 35 126 153 81 225 66 149 129 135 154 242 99 20 96 4 137 97 211 1 196 36 188 133 235 213 47 165 5 66 58 68 42 132 67 35 134 88 202 59 124 57 186 206 63 61 81 16)
      #f
      ())
    #(8
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(203 104 172 151 101 199 100 23 133 223 35 126 153 81 225 66 149 129 135 154 242 99 20 96 4 137 97 211 59 219 67 122 20 42 208 90 250 189 197 187 213 123 188 220 121 167 53 196 131 198 69 49 192 194 174 240)
      #f
      ())
    #(9
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(10
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(11
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 159)
      #f
      ("EdgeCase"))
    #(12
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 158)
      #f
      ("EdgeCase"))
    #(13
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 160)
      #f
      ("EdgeCase"))
    #(14
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 192 255)
      #f
      ("EdgeCase"))
    #(15
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 193 0)
      #f
      ("EdgeCase"))
    #(16
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(17
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(18
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 159)
      #f
      ("EdgeCase"))
    #(19
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 158)
      #f
      ("EdgeCase"))
    #(20
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 160)
      #f
      ("EdgeCase"))
    #(21
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 192 255)
      #f
      ("EdgeCase"))
    #(22
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 193 0)
      #f
      ("EdgeCase"))
    #(23
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 159 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(24
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 159 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(25
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 159 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 159)
      #f
      ("EdgeCase"))
    #(26
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 159 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 158)
      #f
      ("EdgeCase"))
    #(27
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 159 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 160)
      #f
      ("EdgeCase"))
    #(28
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 159 215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 192 255)
      #f
      ("EdgeCase"))
    #(29
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 159 215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 193 0)
      #f
      ("EdgeCase"))
    #(30
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 158 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(31
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 158 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(32
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 158 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 159)
      #f
      ("EdgeCase"))
    #(33
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 158 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 158)
      #f
      ("EdgeCase"))
    #(34
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 158 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 160)
      #f
      ("EdgeCase"))
    #(35
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 158 215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 192 255)
      #f
      ("EdgeCase"))
    #(36
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 158 215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 193 0)
      #f
      ("EdgeCase"))
    #(37
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 160 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(38
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 160 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(39
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 160 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 159)
      #f
      ("EdgeCase"))
    #(40
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 160 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 158)
      #f
      ("EdgeCase"))
    #(41
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 160 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 160)
      #f
      ("EdgeCase"))
    #(42
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 160 215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 192 255)
      #f
      ("EdgeCase"))
    #(43
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 160 215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 193 0)
      #f
      ("EdgeCase"))
    #(44
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 192 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(45
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 192 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(46
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 192 255 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 159)
      #f
      ("EdgeCase"))
    #(47
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 192 255 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 158)
      #f
      ("EdgeCase"))
    #(48
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 192 255 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 160)
      #f
      ("EdgeCase"))
    #(49
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 192 255 215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 192 255)
      #f
      ("EdgeCase"))
    #(50
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 192 255 215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 193 0)
      #f
      ("EdgeCase"))
    #(51
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 193 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(52
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 193 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(53
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 193 0 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 159)
      #f
      ("EdgeCase"))
    #(54
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 193 0 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 158)
      #f
      ("EdgeCase"))
    #(55
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 193 0 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 160)
      #f
      ("EdgeCase"))
    #(56
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 193 0 215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 192 255)
      #f
      ("EdgeCase"))
    #(57
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 193 0 215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 193 0)
      #f
      ("EdgeCase"))
    #(58
      "Edge case for Shamir multiplication"
      #vu8(57 53 51 56 56)
      #vu8(14 126 202 178 39 111 3 92 13 199 5 32 235 213 174 60 183 183 168 242 31 165 104 126 238 146 196 98 133 168 83 50 248 200 153 181 61 67 9 27 2 230 149 107 57 24 23 225 117 168 177 244 13 202 126 0)
      #t
      ())
    #(59
      "special case hash"
      #vu8(50 50 53 52 54 50 56 57 56 52)
      #vu8(47 194 239 159 118 99 246 111 19 176 78 73 242 6 194 36 65 235 62 225 145 123 139 248 26 155 83 118 209 223 61 208 39 14 88 132 233 132 142 162 129 43 102 245 1 91 233 109 37 133 254 211 149 123 49 60)
      #t
      ())
    #(60
      "special case hash"
      #vu8(49 56 50 55 56 55 56 54 49 48)
      #vu8(198 130 88 123 244 62 12 149 78 181 139 188 254 185 77 250 200 186 212 4 153 90 194 110 142 81 255 32 146 191 16 218 16 50 76 195 34 247 156 65 45 174 211 5 178 117 252 25 147 191 58 245 35 222 214 42)
      #t
      ())
    #(61
      "special case hash"
      #vu8(49 53 49 56 56 54 49 55 48 57)
      #vu8(2 93 28 241 111 3 52 31 60 141 22 167 120 57 181 193 214 150 54 61 174 137 141 145 225 74 213 34 183 55 156 195 92 151 168 240 139 14 251 50 238 130 206 14 25 17 105 93 55 46 230 214 121 236 84 102)
      #t
      ())
    #(62
      "special case hash"
      #vu8(50 49 50 57 50 51 51 52 50 50)
      #vu8(192 201 73 224 240 248 87 24 2 234 126 2 97 124 169 37 185 93 41 10 23 79 104 109 128 187 161 212 185 102 23 60 227 241 60 165 76 205 200 162 73 254 167 46 50 96 173 62 120 84 167 49 5 29 140 3)
      #t
      ())
    #(63
      "special case hash"
      #vu8(49 50 50 49 57 55 57 48 53 57)
      #vu8(93 87 241 66 117 148 124 155 255 234 102 249 243 10 226 3 25 69 53 248 2 12 66 187 193 239 236 115 195 88 101 27 162 82 124 50 216 88 101 124 207 8 229 53 211 40 81 251 216 195 84 119 186 23 86 128)
      #t
      ())
    #(64
      "special case hash"
      #vu8(50 51 48 50 53 54 55 54 49 49)
      #vu8(19 59 177 47 16 150 152 157 200 103 216 116 246 117 253 249 233 121 117 194 226 44 113 228 79 89 191 53 101 87 238 178 181 180 241 247 200 81 132 220 198 83 133 12 52 177 195 72 13 47 50 209 86 124 37 193)
      #t
      ())
    #(65
      "special case hash"
      #vu8(49 49 48 53 56 54 56 52 55 50)
      #vu8(209 220 125 28 200 134 202 144 224 217 96 182 199 253 169 46 213 130 236 97 108 28 121 177 113 239 49 8 65 167 210 20 56 231 195 75 39 23 96 5 239 103 192 74 99 243 98 210 218 241 11 98 197 59 136 180)
      #t
      ())
    #(66
      "special case hash"
      #vu8(49 52 54 54 54 49 52 52 52 50)
      #vu8(158 195 183 180 160 241 35 81 105 182 74 32 88 77 54 185 107 183 162 189 224 13 35 22 60 195 177 191 172 50 239 59 158 148 141 150 127 150 205 8 80 120 9 227 185 160 224 147 190 62 118 184 24 51 29 213)
      #t
      ())
    #(67
      "special case hash"
      #vu8(52 52 49 57 53 54 52 50 48)
      #vu8(57 42 227 129 218 76 207 217 213 173 9 61 73 178 45 87 148 17 247 193 205 4 232 132 115 171 110 245 162 137 139 139 241 32 209 142 78 224 209 92 65 144 68 50 77 227 192 146 126 233 15 214 243 135 17 244)
      #t
      ())
    #(68
      "special case hash"
      #vu8(49 57 54 57 52 56 54 48 54 52)
      #vu8(163 123 12 200 127 109 70 32 48 48 48 215 172 74 101 114 249 76 12 244 79 10 3 92 14 89 208 124 48 199 172 216 219 158 114 1 34 8 240 141 181 56 26 30 84 250 9 140 3 20 160 154 48 88 196 33)
      #t
      ())
    #(69
      "special case hash"
      #vu8(50 50 51 53 54 55 50 56 56 51)
      #vu8(98 246 96 217 58 69 223 163 182 97 248 182 164 213 224 110 90 30 232 168 133 90 186 250 64 115 181 19 214 151 143 93 168 175 204 91 57 95 212 181 243 192 253 183 162 104 158 109 228 109 8 251 157 231 24 96)
      #t
      ())
    #(70
      "special case hash"
      #vu8(50 50 53 55 56 52 51 55 48 51)
      #vu8(97 175 154 44 162 5 3 253 98 188 60 111 132 52 153 92 108 243 3 126 182 249 255 98 19 72 207 83 9 248 246 71 19 135 105 84 141 180 96 239 221 131 35 248 202 209 138 112 113 211 208 77 106 211 61 130)
      #t
      ())
    #(71
      "special case hash"
      #vu8(57 52 52 53 48 48 57 52 54)
      #vu8(14 69 156 254 55 1 124 139 96 94 56 191 93 37 23 101 118 212 117 250 136 222 210 123 226 106 188 167 177 187 106 96 204 195 212 142 141 29 76 83 249 1 66 128 110 68 217 148 158 188 170 5 184 62 32 244)
      #t
      ())
    #(72
      "special case hash"
      #vu8(49 54 56 55 55 56 57 52 49 48)
      #vu8(208 24 72 130 189 214 250 9 153 108 47 236 243 205 38 237 134 163 206 21 152 126 6 219 133 11 139 43 207 240 114 178 124 51 249 22 129 211 233 90 71 190 192 0 204 150 197 220 145 246 142 204 194 28 163 196)
      #t
      ())
    #(73
      "special case hash"
      #vu8(51 57 51 50 54 49 50 50 56)
      #vu8(53 126 150 171 84 244 219 179 166 163 169 209 237 230 223 82 148 99 154 237 253 234 150 231 255 201 218 49 36 235 107 127 85 144 103 57 49 62 162 102 90 5 4 163 176 191 122 155 50 156 105 15 74 46 223 81)
      #t
      ())
    #(74
      "special case hash"
      #vu8(49 48 55 51 53 55 49 48 57 53)
      #vu8(11 170 247 157 82 53 227 38 142 85 67 28 189 121 0 70 194 88 30 189 63 139 144 98 123 212 107 139 131 213 111 107 86 202 147 129 177 76 168 136 40 27 72 28 248 40 233 180 59 13 65 129 8 232 45 88)
      #t
      ())
    #(75
      "special case hash"
      #vu8(54 48 56 56 55 52 55 52)
      #vu8(126 190 241 173 65 222 148 52 235 63 111 131 51 143 1 9 102 108 38 77 137 18 51 66 176 144 15 5 120 163 169 250 114 1 196 143 146 131 68 0 74 31 81 128 83 9 157 248 105 8 222 41 238 183 106 76)
      #t
      ())
    #(76
      "special case hash"
      #vu8(49 49 57 50 53 54 57 57 54 50)
      #vu8(159 32 171 239 240 175 150 93 169 197 28 153 80 124 245 249 29 117 242 63 224 43 97 21 2 150 22 124 191 111 237 138 142 247 38 242 246 98 156 78 75 80 179 194 206 20 255 67 159 233 191 230 21 120 104 212)
      #t
      ())
    #(77
      "special case hash"
      #vu8(57 48 48 55 54 48 57 51)
      #vu8(90 214 127 240 221 248 203 136 64 121 116 248 63 234 67 217 209 71 203 178 61 186 38 31 173 173 174 219 127 211 28 204 75 54 5 219 66 183 0 162 69 223 143 198 14 251 241 64 106 251 77 108 140 22 224 163)
      #t
      ())
    #(78
      "special case hash"
      #vu8(49 54 48 50 56 51 54 49 51 55)
      #vu8(64 224 189 154 47 165 168 134 120 200 92 63 77 39 226 174 45 208 70 242 154 54 57 236 47 242 81 26 22 205 73 33 92 176 5 51 253 19 154 225 211 99 29 69 251 6 213 236 209 19 138 180 108 72 164 92)
      #t
      ())
    #(79
      "special case hash"
      #vu8(50 48 56 48 50 52 53 54 55 52)
      #vu8(154 112 93 220 135 103 229 76 236 77 28 55 162 70 11 60 11 49 233 129 28 58 66 117 38 73 156 1 54 166 185 220 215 200 168 30 52 175 223 132 92 76 192 231 52 85 1 27 188 215 152 127 136 114 88 186)
      #t
      ())
    #(80
      "special case hash"
      #vu8(49 55 57 56 50 55 52 54 53 57)
      #vu8(165 26 98 91 153 86 141 0 62 75 150 230 147 19 107 167 82 33 232 229 108 154 181 233 236 104 22 238 126 32 137 24 120 85 22 205 167 207 112 135 13 216 18 232 14 143 159 27 82 72 217 25 177 255 29 6)
      #t
      ())
    #(81
      "special case hash"
      #vu8(49 49 53 53 53 55 55 55 50 48)
      #vu8(71 32 249 55 16 13 245 46 106 225 186 244 15 139 201 80 229 175 43 31 148 125 4 23 128 74 130 37 139 130 34 115 251 93 71 60 156 136 170 60 141 222 161 103 97 156 218 18 238 65 206 101 222 38 138 117)
      #t
      ())
    #(82
      "special case hash"
      #vu8(50 52 51 50 52 55 52 54 54 52)
      #vu8(61 40 29 152 182 166 118 166 237 167 87 13 123 79 154 8 233 36 199 26 253 44 182 224 98 167 235 253 132 70 228 39 71 163 82 81 142 246 142 255 5 86 149 180 118 107 220 42 216 211 250 151 188 32 43 67)
      #t
      ())
    #(83
      "special case hash"
      #vu8(50 52 49 55 50 56 50 50 55 55)
      #vu8(77 52 105 233 57 255 234 217 65 227 203 206 188 163 188 182 243 192 41 100 31 151 112 14 2 129 119 56 66 203 135 161 14 161 124 14 88 195 130 47 106 225 243 168 145 141 134 168 50 93 239 74 140 128 130 242)
      #t
      ())
    #(84
      "special case hash"
      #vu8(55 55 56 55 52 55 55 49)
      #vu8(33 229 27 121 232 85 78 34 147 124 62 91 25 131 179 119 98 89 30 33 245 112 110 92 25 130 165 12 75 205 189 35 176 164 113 219 132 209 238 62 223 118 119 187 177 67 7 236 197 225 2 49 116 236 91 140)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 160 239 125 177 190 224 174 219 90 86 52 244 243 177 184 141 151 210 160 127 128 106 113 142 254 25 1 77 174 225 4 63 158 146 156 50 215 74 176 228 238 186 38 35 241 123 162 129 182 190 135 116 91 89 246 14)
  :der-encode
  #f
  :tests
  '(#(85
      "k*G has a large x-coordinate"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 219 238 223 136 75 12 41 251 205 81 217 33 45 95 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 156)
      #t
      ())
    #(86
      "r too large"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 209 215 135 176 159 7 87 151 218 137 245 126 200 192 254 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 156)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 58 221 164 7 186 215 245 147 232 61 125 72 79 209 76 35 221 161 127 141 70 12 34 42 167 37 117 119 205 98 68 59 43 119 2 145 246 89 4 218 207 117 255 151 95 26 102 113 135 224 228 245 12 20 136 156)
  :der-encode
  #f
  :tests
  '(#(87
      "r,s are large"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 158 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 157)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 36 88 124 225 219 255 40 29 202 177 121 69 25 128 98 129 173 78 9 151 73 37 16 103 127 182 81 6 146 150 153 110 131 184 8 103 108 191 111 40 201 43 132 48 51 20 182 58 3 8 19 79 34 45 14 194)
  :der-encode
  #f
  :tests
  '(#(88
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 99 240 227 66 88 187 144 97 84 121 6 208 195 130 124 80 68 34 193 57 230 214 225 7 139 55 170 68)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 196 92 81 213 169 178 19 228 28 166 241 92 184 170 27 192 184 183 61 58 138 35 161 79 90 61 164 223 188 120 204 97 118 211 184 49 230 136 0 103 23 104 4 60 17 191 99 166 149 145 141 246 236 135 55 138)
  :der-encode
  #f
  :tests
  '(#(89
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 110 177 251 250 141 248 125 79 161 12 131 63 125 209 187 231 239 1 68 255 113 83 121 117 55 143 145 236)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 54 165 52 77 160 138 66 30 220 108 59 235 125 233 122 117 89 252 16 28 20 137 255 43 80 54 216 246 32 123 244 102 110 77 246 6 189 13 152 35 165 43 88 221 253 252 29 167 5 19 197 249 153 15 128 133)
  :der-encode
  #f
  :tests
  '(#(90
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #t
      ())
    #(91
      "incorrect size of signature"
      #vu8(49 50 51 52 48 48)
      #vu8(1 1)
      #t
      ("SigSize"))))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 64 149 192 149 169 100 137 81 218 53 43 131 127 54 142 11 230 125 121 253 87 234 223 255 237 223 180 85 204 220 250 190 161 158 150 212 210 14 66 184 174 35 194 81 148 38 1 142 37 166 77 234 133 216 166 139)
  :der-encode
  #f
  :tests
  '(#(92
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2)
      #t
      ())
    #(93
      "incorrect size of signature"
      #vu8(49 50 51 52 48 48)
      #vu8(1 2)
      #t
      ("SigSize"))))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 204 53 42 196 138 172 182 73 94 195 131 27 33 204 212 211 25 113 54 41 43 246 242 15 34 128 37 102 100 50 25 145 230 127 125 188 34 96 46 203 219 49 34 237 206 95 248 93 146 49 67 206 204 13 79 109)
  :der-encode
  #f
  :tests
  '(#(94
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3)
      #t
      ())
    #(95
      "incorrect size of signature"
      #vu8(49 50 51 52 48 48)
      #vu8(1 3)
      #t
      ("SigSize"))
    #(96
      "r is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 160 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 145 72 242 156 103 248 60 112 94 239 181 156 146 149 71 117 249 12 21 226 37 218 46 153 106 188 221 29 201 219 26 161 225 82 119 196 85 93 36 17 130 57 229 63 210 240 181 231 234 128 126 179 222 30 227 80)
  :der-encode
  #f
  :tests
  '(#(97
      "s is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 186 106 38)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 155 240 69 164 58 95 20 213 228 18 238 24 31 17 29 110 83 150 17 32 83 31 60 80 202 112 30 120 190 158 185 81 70 244 242 190 150 148 153 118 167 170 73 211 21 147 167 218 46 221 144 118 82 57 140 58)
  :der-encode
  #f
  :tests
  '(#(98
      "small r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 157 254 92 253 155 2 254 122 111 116 123 243 29 213 129 208 169 60 254 204 102 161 23 61 97 29 253 60)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 135 115 158 40 33 237 149 103 232 135 2 250 140 109 8 60 151 193 243 241 235 50 209 63 117 31 176 115 109 2 235 160 94 140 185 70 114 208 158 188 17 5 29 82 236 123 212 220 119 103 48 27 103 3 66 18)
  :der-encode
  #f
  :tests
  '(#(99
      "smallish r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 45 155 77 52 121 82 204 67 226 53 116 139 211 177 191 161 76 146 35 74 144 38 26 204 62 144 134 129 8 1 163 103 70 188 238)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 26 81 92 190 149 123 252 7 14 76 74 117 214 253 94 124 21 177 226 85 235 66 254 173 6 201 210 99 98 82 204 13 35 67 24 57 77 247 219 101 176 165 46 6 149 60 166 194 30 201 87 116 211 158 253 201)
  :der-encode
  #f
  :tests
  '(#(100
      "100-bit r and small s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 16 51 230 126 55 179 43 68 85 128 191 78 251 168 189 244 101 50 216 19 107 235 33 219 241 120 9 12 126 125 173 44 170 142 181 44 239 141 131 15 216)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 214 161 110 25 78 18 185 109 184 225 187 2 80 217 80 247 179 18 155 20 187 160 239 177 87 196 66 62 98 90 12 140 32 131 139 217 127 188 137 241 103 0 40 117 74 9 173 40 246 45 229 238 166 224 123 193)
  :der-encode
  #f
  :tests
  '(#(101
      "small r and 100 bit s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 115 22 138 137 148 229 247 23 147 8 28 183 175 190 60 10 244 191 122 163 54 207 157 227 30 248 83 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 192 18 149 13 7 75 176 27 10 25 136 165 181 155 149 145 4 39 91 175 117 126 83 2 155 4 106 21 66 245 15 226 127 62 186 201 3 101 88 239 48 235 203 129 32 39 191 14 244 108 218 81 150 149 65 187)
  :der-encode
  #f
  :tests
  '(#(102
      "100-bit r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 37 34 187 211 236 190 124 57 233 62 124 36 115 22 138 137 148 229 247 23 147 8 28 183 175 190 60 10 244 191 122 163 54 207 157 227 30 248 83 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 209 92 19 161 190 153 217 235 119 214 136 16 74 24 226 66 66 210 5 164 2 111 74 101 98 158 89 238 126 61 223 154 187 183 213 50 182 232 26 110 17 243 13 91 85 254 184 238 112 124 79 237 249 156 6 7)
  :der-encode
  #f
  :tests
  '(#(103
      "r and s^-1 are close to n"
      #vu8(49 50 51 52 48 48)
      #vu8(215 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 31 71 235 17 142 12 193 34 44 184 178 186 183 39 69 169 50 240 92 233 110 121 244 233 139 225 226 134 138)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 63 224 25 114 192 98 46 168 18 211 6 82 201 254 47 235 238 112 129 35 177 98 109 116 79 135 219 13 165 114 199 225 227 164 129 149 230 34 29 152 63 120 47 220 158 124 85 189 95 223 123 103 155 15 135 86)
  :der-encode
  #f
  :tests
  '(#(104
      "s == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(71 235 17 142 12 193 34 44 184 178 186 183 39 69 169 50 240 92 233 110 121 244 233 139 225 226 134 138 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #t
      ())
    #(105
      "s == 0"
      #vu8(49 50 51 52 48 48)
      #vu8(71 235 17 142 12 193 34 44 184 178 186 183 39 69 169 50 240 92 233 110 121 244 233 139 225 226 134 138 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 212 182 229 17 36 6 251 116 59 107 181 95 73 234 32 48 217 4 66 8 49 235 221 172 214 123 186 137 101 34 101 56 75 117 216 80 231 194 127 78 51 237 108 87 109 240 255 150 148 112 169 239 37 255 175 205)
  :der-encode
  #f
  :tests
  '(#(106
      "point at infinity during verify"
      #vu8(49 50 51 52 48 48)
      #vu8(107 224 154 85 19 33 179 67 21 12 24 18 186 232 125 204 104 139 94 37 182 239 94 81 210 211 201 207 71 235 17 142 12 193 34 44 184 178 186 183 39 69 169 50 240 92 233 110 121 244 233 139 225 226 134 138)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 22 194 18 157 84 185 52 121 181 106 159 245 184 62 76 117 11 180 243 62 225 231 15 56 181 68 159 45 52 204 175 121 197 28 125 255 58 127 154 5 205 21 163 150 224 207 254 37 66 28 55 233 184 14 20 137)
  :der-encode
  #f
  :tests
  '(#(107
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(107 224 154 85 19 33 179 67 21 12 24 18 186 232 125 204 104 139 94 37 182 239 94 81 210 211 201 208 107 224 154 85 19 33 179 67 21 12 24 18 186 232 125 204 104 139 94 37 182 239 94 81 210 211 201 207)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 101 171 160 228 66 122 10 229 88 114 26 90 142 114 203 55 98 235 80 34 59 190 76 65 164 80 254 73 200 29 58 228 134 71 139 66 152 201 67 40 61 46 194 19 11 172 34 250 188 82 247 67 177 171 127 167)
  :der-encode
  #f
  :tests
  '(#(108
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(107 224 154 85 19 33 179 67 21 12 24 18 186 232 125 204 104 139 94 37 182 239 94 81 210 211 201 208 107 224 154 85 19 33 179 67 21 12 24 18 186 232 125 204 104 139 94 37 182 239 94 81 210 211 201 208)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 85 167 176 16 6 19 250 189 149 123 66 96 8 53 198 212 46 1 224 66 82 89 59 221 227 177 114 120 135 112 138 5 171 162 249 63 26 30 30 203 112 62 201 168 238 109 96 19 161 1 211 151 1 42 140 206)
  :der-encode
  #f
  :tests
  '(#(109
      "u1 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(71 235 17 142 12 193 34 44 184 178 186 183 39 69 169 50 240 92 233 110 121 244 233 139 225 226 134 138 117 59 180 0 120 147 64 129 215 189 17 62 196 155 25 239 9 209 186 51 73 134 144 81 109 77 18 44)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 26 218 84 220 1 88 97 104 13 139 178 211 17 185 14 130 219 117 170 158 130 23 185 38 17 250 3 203 132 198 17 85 17 151 41 139 50 116 135 92 185 70 134 231 88 240 161 169 103 92 11 193 87 69 26 118)
  :der-encode
  #f
  :tests
  '(#(110
      "u1 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(71 235 17 142 12 193 34 44 184 178 186 183 39 69 169 50 240 92 233 110 121 244 233 139 225 226 134 138 98 133 128 169 173 176 38 4 82 91 30 230 177 53 225 169 199 69 2 24 36 88 44 82 56 90 129 115)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 198 123 100 41 120 83 52 166 8 221 233 73 168 171 230 65 219 211 96 30 188 225 230 117 254 113 168 229 39 210 232 114 125 196 246 24 73 53 80 187 148 1 81 188 166 130 111 113 76 91 49 133 64 56 244 77)
  :der-encode
  #f
  :tests
  '(#(111
      "u2 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(71 235 17 142 12 193 34 44 184 178 186 183 39 69 169 50 240 92 233 110 121 244 233 139 225 226 134 138 71 235 17 142 12 193 34 44 184 178 186 183 39 69 169 50 240 92 233 110 121 244 233 139 225 226 134 138)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 29 204 122 90 209 17 163 54 39 249 45 216 117 186 74 6 246 167 194 190 253 209 5 4 136 208 87 167 52 28 174 11 231 42 153 119 109 181 189 121 180 99 226 211 136 39 100 175 156 2 69 208 132 163 52 45)
  :der-encode
  #f
  :tests
  '(#(112
      "u2 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(71 235 17 142 12 193 34 44 184 178 186 183 39 69 169 50 240 92 233 110 121 244 233 139 225 226 134 138 143 214 35 28 25 130 68 89 113 101 117 110 78 139 82 101 224 185 210 220 243 233 211 23 195 197 13 21)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 189 247 8 160 28 106 129 71 40 211 148 183 242 155 246 87 151 52 134 45 138 248 230 255 120 111 190 73 144 28 212 98 148 110 94 54 204 151 201 137 109 242 225 129 119 69 109 40 42 122 38 163 128 132 192 134)
  :der-encode
  #f
  :tests
  '(#(113
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 182 234 9 198 236 94 4 132 185 79 37 216 144 20 91 10 227 255 187 152 183 22 173 221 146 222 189 206)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 12 83 31 179 217 150 250 162 36 7 223 19 5 255 106 224 191 233 78 28 32 34 244 115 13 15 138 74 189 128 115 149 4 89 86 46 83 154 192 137 84 51 117 126 37 32 155 18 83 79 243 15 227 211 124 113)
  :der-encode
  #f
  :tests
  '(#(114
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 47 98 169 207 72 227 202 96 46 239 78 51 175 164 63 45 206 185 34 164 10 103 222 121 247 177 174 56)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 103 130 149 64 130 65 142 0 2 160 129 38 114 172 33 35 182 51 75 52 19 64 85 80 150 188 246 198 31 111 161 168 254 166 23 217 221 161 68 97 214 58 164 72 242 5 163 155 37 80 26 107 29 66 238 95)
  :der-encode
  #f
  :tests
  '(#(115
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 97 141 252 84 64 139 236 28 179 124 126 229 43 96 173 188 141 58 108 38 69 124 57 208 19 232 142 129)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 91 94 110 171 167 89 122 230 65 66 10 206 106 242 87 88 57 241 97 178 123 145 178 112 241 139 247 208 73 106 179 195 7 47 166 238 85 120 252 129 79 116 209 72 236 188 42 152 207 220 93 64 236 126 105 128)
  :der-encode
  #f
  :tests
  '(#(116
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 1 13 229 113 36 192 147 14 248 0 231 100 181 88 89 39 151 126 42 210 216 184 46 124 182 72 175 82)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 142 102 26 6 173 85 181 34 120 1 234 67 9 167 43 156 217 73 115 188 135 60 4 5 225 36 125 30 100 137 139 130 44 54 60 172 136 33 48 45 227 138 145 66 104 170 166 125 178 86 24 120 240 249 10 2)
  :der-encode
  #f
  :tests
  '(#(117
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 3 62 245 1 11 236 237 4 196 146 136 104 81 62 209 135 140 230 119 166 237 129 14 155 153 221 151 148)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 179 210 185 63 20 136 101 114 98 20 15 150 193 8 170 4 133 147 155 217 148 64 36 10 122 125 84 227 136 150 129 116 176 97 133 55 57 248 176 71 28 118 18 101 57 220 87 204 109 124 31 83 159 104 102 116)
  :der-encode
  #f
  :tests
  '(#(118
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 6 125 234 2 23 217 218 9 137 37 16 208 162 125 163 15 25 204 239 77 219 2 29 55 51 187 47 40)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 186 131 13 191 131 7 92 209 130 188 147 34 193 246 41 154 76 227 207 77 221 224 230 252 238 80 240 214 43 21 63 111 55 122 136 128 156 157 213 13 141 97 235 103 148 81 68 72 22 87 134 167 198 85 141 204)
  :der-encode
  #f
  :tests
  '(#(119
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 69 132 126 2 253 1 163 204 158 6 63 150 31 185 32 171 50 113 236 9 153 111 117 188 167 254 109 63)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 119 244 2 34 228 167 154 15 167 229 16 136 126 105 235 163 31 109 215 6 113 33 218 254 115 155 190 19 208 255 171 114 34 207 109 130 124 81 235 83 171 172 80 107 192 165 215 193 165 167 225 104 61 73 228 62)
  :der-encode
  #f
  :tests
  '(#(120
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 11 76 190 134 109 25 32 99 65 56 200 121 143 204 65 71 148 71 229 174 118 7 148 225 229 121 121 40)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 89 123 90 60 16 107 140 78 154 126 122 81 124 215 64 231 118 103 200 162 208 108 81 14 94 59 114 141 156 194 73 232 39 245 255 249 2 18 46 178 107 173 196 167 218 101 85 180 137 186 152 152 45 56 129 37)
  :der-encode
  #f
  :tests
  '(#(121
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 32 215 42 227 57 229 98 1 112 201 10 76 229 188 160 141 237 23 0 178 182 200 14 198 18 200 213 209)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 15 36 83 231 88 92 177 57 47 244 250 17 134 159 140 16 178 249 207 79 42 24 184 102 232 243 124 43 209 86 110 240 73 40 121 117 121 212 15 51 16 235 175 71 122 78 120 162 53 134 25 40 50 134 52 223)
  :der-encode
  #f
  :tests
  '(#(122
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 157 35 90 169 233 249 198 69 62 57 167 134 19 131 110 161 76 45 223 49 201 27 116 122 239 1 10 137)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 16 203 61 188 228 218 81 142 4 235 18 92 243 180 75 239 4 81 186 211 231 203 186 213 50 139 133 187 53 134 81 180 120 188 242 0 104 79 211 16 230 209 74 205 35 220 42 118 4 117 223 15 91 138 117 140)
  :der-encode
  #f
  :tests
  '(#(123
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 156 167 152 127 51 103 169 81 110 202 87 133 80 152 212 170 175 40 148 56 217 173 123 57 220 200 17 16)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 44 39 115 42 170 163 248 177 102 100 164 138 29 208 111 192 254 64 246 87 66 117 30 92 4 183 239 245 7 128 75 45 190 231 159 254 86 220 79 74 96 98 206 214 243 117 184 11 90 210 207 58 41 33 179 149)
  :der-encode
  #f
  :tests
  '(#(124
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 114 149 188 56 183 107 204 215 99 93 101 97 209 240 83 221 155 7 148 25 36 159 148 54 140 141 49 51)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 140 237 85 104 119 238 21 175 49 74 237 93 252 67 160 15 187 118 38 251 220 123 129 255 125 190 162 248 152 245 226 111 127 195 39 109 162 168 232 105 176 175 188 65 239 59 64 50 96 128 170 133 206 98 194 171)
  :der-encode
  #f
  :tests
  '(#(125
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 147 143 45 178 183 32 97 171 215 235 110 92 143 230 133 57 30 150 110 192 199 105 208 197 56 224 103 138)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 66 177 155 34 80 108 79 216 159 162 140 89 9 217 127 143 254 189 200 40 4 220 199 191 106 87 10 226 26 151 78 224 139 72 79 160 94 31 187 137 196 140 80 117 75 161 228 10 101 138 92 237 64 156 99 97)
  :der-encode
  #f
  :tests
  '(#(126
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 127 144 124 142 50 230 14 43 164 3 62 231 214 95 63 232 253 35 113 156 122 156 111 94 82 241 140 71)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 32 149 225 33 22 206 189 212 232 188 28 193 132 181 56 177 81 95 120 158 59 228 176 58 65 131 250 229 208 146 110 68 104 117 171 220 209 44 130 57 230 7 150 28 173 208 10 46 137 157 130 29 177 29 86 121)
  :der-encode
  #f
  :tests
  '(#(127
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 52 195 151 140 58 29 172 146 31 98 53 200 42 2 237 185 52 34 133 70 148 38 187 16 248 40 151 196)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 88 248 46 178 202 110 52 116 169 14 41 172 86 220 182 61 136 230 105 224 164 2 4 230 32 42 247 197 160 232 94 64 57 243 67 37 91 79 228 189 193 25 26 120 69 189 215 235 144 142 205 135 121 162 121 99)
  :der-encode
  #f
  :tests
  '(#(128
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 151 1 214 82 61 61 63 91 138 200 64 38 128 179 202 184 150 110 38 81 207 193 115 159 205 60 7 73)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 113 242 196 167 195 247 19 17 167 147 69 143 241 34 98 168 99 81 143 179 13 187 122 128 112 16 48 184 182 176 132 40 250 189 182 156 138 142 158 50 125 174 208 121 95 184 78 13 136 23 8 96 34 211 178 59)
  :der-encode
  #f
  :tests
  '(#(129
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 86 66 119 250 84 55 24 48 235 120 80 39 139 150 153 216 91 197 144 88 49 164 42 155 244 208 122 243)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 60 252 246 78 236 233 148 195 92 86 233 21 228 237 24 131 186 110 195 79 227 150 193 26 205 143 71 210 99 205 251 170 52 64 17 0 181 177 10 247 113 187 70 192 213 52 70 247 170 132 121 86 201 54 52 148)
  :der-encode
  #f
  :tests
  '(#(130
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 119 148 251 222 230 56 246 87 172 30 76 101 40 76 20 75 62 250 123 244 16 158 108 202 96 92 79 76)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 76 64 77 236 188 6 151 178 7 250 8 152 46 240 254 219 0 30 235 67 243 116 4 218 185 122 154 119 71 25 27 194 64 223 212 64 39 78 6 149 86 17 249 146 63 173 105 73 178 204 21 122 24 92 130 41)
  :der-encode
  #f
  :tests
  '(#(131
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 181 32 13 167 164 88 55 245 183 28 71 225 185 76 120 98 161 228 190 203 163 10 144 138 218 33 148 135)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 123 228 176 234 11 21 185 111 145 49 44 21 200 22 41 228 12 68 24 247 11 134 197 188 220 37 143 217 121 203 239 142 162 167 124 160 146 219 14 185 84 169 227 62 130 185 197 241 16 200 201 144 185 35 90 87)
  :der-encode
  #f
  :tests
  '(#(132
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 101 43 120 113 110 215 153 174 198 186 202 195 163 224 167 187 54 15 40 50 73 63 40 109 25 26 98 108)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 100 166 76 255 165 64 102 73 146 100 153 30 71 160 241 75 202 99 25 161 194 126 21 8 226 1 107 86 189 167 193 122 4 217 203 136 234 219 114 150 207 135 223 191 173 254 101 5 104 55 167 151 214 105 151 221)
  :der-encode
  #f
  :tests
  '(#(133
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 151 193 52 170 38 67 102 134 42 24 48 37 117 208 251 152 209 22 188 75 109 222 188 163 165 167 147 162)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 61 76 78 60 91 167 165 51 200 163 56 109 111 247 122 129 53 19 70 225 137 75 37 96 180 6 166 62 163 73 119 89 70 121 158 235 39 73 38 180 217 87 50 143 108 125 80 246 118 2 145 172 218 235 17 79)
  :der-encode
  #f
  :tests
  '(#(134
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 171 168 216 156 44 148 186 88 231 13 183 134 166 24 29 192 231 29 22 243 244 61 150 0 252 76 143 243)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 77 184 232 172 67 242 45 247 92 156 9 254 25 59 156 216 61 92 155 115 243 125 20 148 118 23 36 176 167 96 130 195 93 168 98 161 226 232 98 111 250 148 237 24 252 177 216 151 236 122 181 44 50 37 83 255)
  :der-encode
  #f
  :tests
  '(#(135
      "point duplication during verification"
      #vu8(49 50 51 52 48 48)
      #vu8(122 242 149 230 228 120 114 82 243 76 82 122 245 98 202 39 33 74 102 246 214 219 79 210 193 18 181 100 177 208 16 247 64 98 238 170 192 206 203 44 60 44 77 40 138 87 107 246 240 160 3 71 198 165 181 98)
      #t
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 77 184 232 172 67 242 45 247 92 156 9 254 25 59 156 216 61 92 155 115 243 125 20 148 118 23 36 176 48 96 177 230 200 155 3 228 71 47 205 181 123 60 234 110 179 237 46 191 171 95 212 201 76 163 109 0)
  :der-encode
  #f
  :tests
  '(#(136
      "duplication bug"
      #vu8(49 50 51 52 48 48)
      #vu8(122 242 149 230 228 120 114 82 243 76 82 122 245 98 202 39 33 74 102 246 214 219 79 210 193 18 181 100 177 208 16 247 64 98 238 170 192 206 203 44 60 44 77 40 138 87 107 246 240 160 3 71 198 165 181 98)
      #f
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 43 146 38 130 8 213 34 69 12 66 243 252 189 164 9 195 172 226 165 248 87 234 16 97 44 96 147 248 49 94 178 212 72 19 78 113 107 3 32 120 182 131 1 98 46 60 33 134 171 88 61 151 110 118 159 235)
  :der-encode
  #f
  :tests
  '(#(137
      "comparison with point at infinity "
      #vu8(49 50 51 52 48 48)
      #vu8(71 235 17 142 12 193 34 44 184 178 186 183 39 69 169 50 240 92 233 110 121 244 233 139 225 226 134 138 43 38 164 34 7 167 20 129 59 158 112 7 125 246 152 184 41 209 88 219 226 198 37 186 84 84 183 31)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 77 75 213 105 61 134 221 154 96 22 186 128 109 128 49 249 77 200 226 211 60 111 88 113 160 11 100 115 42 70 98 242 149 36 236 231 84 130 139 157 130 156 10 7 36 217 189 157 40 141 33 248 126 63 177 250)
  :der-encode
  #f
  :tests
  '(#(138
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(51 183 228 152 188 218 26 51 230 26 103 175 86 163 109 18 223 112 50 37 93 223 94 30 198 90 86 105 71 235 17 142 12 193 34 44 184 178 186 183 39 69 169 50 240 92 233 110 121 244 233 139 225 226 134 138)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 190 14 251 72 65 223 55 171 205 207 63 40 221 176 213 117 26 146 160 254 122 62 136 209 171 2 131 44 187 83 204 214 107 156 14 66 67 128 105 61 100 22 252 46 26 60 121 58 53 95 125 5 249 99 244 53)
  :der-encode
  #f
  :tests
  '(#(139
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(51 183 228 152 188 218 26 51 230 26 103 175 86 163 109 18 223 112 50 37 93 223 94 30 198 90 86 105 184 238 191 109 69 94 87 224 182 93 224 32 27 215 179 21 69 129 51 174 94 44 161 176 215 33 236 63)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 188 2 114 227 105 58 5 231 136 57 44 136 15 157 233 92 114 226 147 253 27 19 241 226 42 153 7 163 105 149 6 228 89 15 169 12 98 87 177 196 227 99 44 204 72 108 184 51 203 188 191 33 180 162 96 65)
  :der-encode
  #f
  :tests
  '(#(140
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(51 183 228 152 188 218 26 51 230 26 103 175 86 163 109 18 223 112 50 37 93 223 94 30 198 90 86 105 172 154 144 136 30 156 82 4 238 121 192 29 247 218 98 224 167 69 99 111 139 24 150 233 81 82 220 127)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 168 59 195 233 4 60 185 56 218 225 103 187 234 47 125 98 52 134 244 3 141 244 83 18 232 70 123 218 115 99 250 88 175 54 58 113 131 93 160 148 19 200 130 39 132 156 111 15 254 142 78 64 175 245 16 35)
  :der-encode
  #f
  :tests
  '(#(141
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(51 183 228 152 188 218 26 51 230 26 103 175 86 163 109 18 223 112 50 37 93 223 94 30 198 90 86 105 43 38 164 34 7 167 20 129 59 158 112 7 125 246 152 184 41 209 88 219 226 198 37 186 84 84 183 32)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 59 208 138 28 70 99 133 100 82 29 237 63 167 124 233 201 85 56 228 151 3 235 185 248 211 107 230 247 39 111 250 18 128 81 103 31 126 76 99 233 184 19 45 233 243 56 156 197 37 215 38 130 182 1 158 195)
  :der-encode
  #f
  :tests
  '(#(142
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(51 183 228 152 188 218 26 51 230 26 103 175 86 163 109 18 223 112 50 37 93 223 94 30 198 90 86 105 30 210 117 60 224 229 14 165 115 186 80 5 89 249 72 131 139 149 136 157 15 178 26 242 206 133 167 96)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 163 219 43 62 44 98 196 43 244 251 14 17 194 144 143 209 127 232 61 163 172 156 9 128 35 78 253 189 60 190 236 64 39 189 124 16 155 39 174 47 124 240 77 198 94 234 241 63 170 34 77 50 162 15 49 99)
  :der-encode
  #f
  :tests
  '(#(143
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(51 183 228 152 188 218 26 51 230 26 103 175 86 163 109 18 223 112 50 37 93 223 94 30 198 90 86 105 88 227 117 24 198 228 122 132 222 16 204 178 84 192 54 147 39 17 69 241 62 0 169 18 55 164 165 71)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 96 108 230 248 199 122 193 125 91 117 21 213 133 30 237 21 94 161 32 205 7 202 66 119 179 91 141 54 95 113 107 98 174 233 168 26 1 27 209 210 188 234 243 125 95 58 97 229 247 48 126 11 185 200 146 200)
  :der-encode
  #f
  :tests
  '(#(144
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(13 144 41 173 44 126 92 244 52 8 35 178 168 125 198 140 158 76 227 23 76 30 110 253 238 18 192 125 71 235 17 142 12 193 34 44 184 178 186 183 39 69 169 50 240 92 233 110 121 244 233 139 225 226 134 138)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 42 255 187 130 105 203 120 131 218 218 51 80 57 69 121 145 46 247 86 168 223 107 221 125 163 93 57 142 144 33 61 147 130 179 213 251 157 222 130 114 77 56 229 103 140 23 230 16 244 23 207 230 247 239 205 145)
  :der-encode
  #f
  :tests
  '(#(145
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(13 144 41 173 44 126 92 244 52 8 35 178 168 125 198 140 158 76 227 23 76 30 110 253 238 18 192 125 184 238 191 109 69 94 87 224 182 93 224 32 27 215 179 21 69 129 51 174 94 44 161 176 215 33 236 63)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 25 205 212 78 42 51 17 58 136 69 88 231 238 14 251 65 186 254 26 220 220 249 93 246 222 106 37 17 95 66 142 233 152 163 72 86 242 172 63 111 57 199 35 123 241 249 222 35 33 117 215 71 181 205 151 254)
  :der-encode
  #f
  :tests
  '(#(146
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(13 144 41 173 44 126 92 244 52 8 35 178 168 125 198 140 158 76 227 23 76 30 110 253 238 18 192 125 172 154 144 136 30 156 82 4 238 121 192 29 247 218 98 224 167 69 99 111 139 24 150 233 81 82 220 127)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 183 47 124 26 60 133 98 203 141 233 146 94 236 4 28 204 38 54 73 198 82 71 98 185 244 88 94 227 157 247 86 218 8 209 39 74 215 45 140 172 41 58 166 13 21 12 119 19 31 159 162 140 205 255 223 160)
  :der-encode
  #f
  :tests
  '(#(147
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(13 144 41 173 44 126 92 244 52 8 35 178 168 125 198 140 158 76 227 23 76 30 110 253 238 18 192 125 43 38 164 34 7 167 20 129 59 158 112 7 125 246 152 184 41 209 88 219 226 198 37 186 84 84 183 32)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 157 55 3 179 32 91 18 60 144 58 4 70 151 50 71 193 106 136 209 3 254 169 208 77 208 42 112 43 101 24 107 119 123 87 234 222 232 21 76 2 252 224 233 92 63 6 20 104 73 155 172 61 198 2 158 140)
  :der-encode
  #f
  :tests
  '(#(148
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(13 144 41 173 44 126 92 244 52 8 35 178 168 125 198 140 158 76 227 23 76 30 110 253 238 18 192 125 30 210 117 60 224 229 14 165 115 186 80 5 89 249 72 131 139 149 136 157 15 178 26 242 206 133 167 96)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 62 165 114 80 90 72 177 190 208 133 149 61 167 212 201 99 194 197 182 173 153 119 157 157 84 186 64 18 148 71 0 116 224 37 45 161 89 160 192 208 178 248 212 194 66 203 148 186 178 194 2 12 75 45 244 153)
  :der-encode
  #f
  :tests
  '(#(149
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(13 144 41 173 44 126 92 244 52 8 35 178 168 125 198 140 158 76 227 23 76 30 110 253 238 18 192 125 88 227 117 24 198 228 122 132 222 16 204 178 84 192 54 147 39 17 69 241 62 0 169 18 55 164 165 71)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 13 144 41 173 44 126 92 244 52 8 35 178 168 125 198 140 158 76 227 23 76 30 110 253 238 18 192 125 88 170 86 247 114 192 114 111 36 198 184 158 78 205 172 36 53 75 158 153 202 163 246 211 118 20 2 205)
  :der-encode
  #f
  :tests
  '(#(150
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(117 59 180 0 120 147 64 129 215 189 17 62 196 155 25 239 9 209 186 51 73 134 144 81 109 77 18 44 30 210 117 60 224 229 14 165 115 186 80 5 89 249 72 131 139 149 136 157 15 178 26 242 206 133 167 95)
      #f
      ())
    #(151
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(98 133 128 169 173 176 38 4 82 91 30 230 177 53 225 169 199 69 2 24 36 88 44 82 56 90 129 115 30 210 117 60 224 229 14 165 115 186 80 5 89 249 72 131 139 149 136 157 15 178 26 242 206 133 167 95)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 13 144 41 173 44 126 92 244 52 8 35 178 168 125 198 140 158 76 227 23 76 30 110 253 238 18 192 125 127 22 221 178 179 130 244 23 5 81 119 135 39 4 43 99 123 83 104 189 205 54 147 34 8 180 190 50)
  :der-encode
  #f
  :tests
  '(#(152
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(117 59 180 0 120 147 64 129 215 189 17 62 196 155 25 239 9 209 186 51 73 134 144 81 109 77 18 44 30 210 117 60 224 229 14 165 115 186 80 5 89 249 72 131 139 149 136 157 15 178 26 242 206 133 167 95)
      #f
      ())
    #(153
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(98 133 128 169 173 176 38 4 82 91 30 230 177 53 225 169 199 69 2 24 36 88 44 82 56 90 129 115 30 210 117 60 224 229 14 165 115 186 80 5 89 249 72 131 139 149 136 157 15 178 26 242 206 133 167 95)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 181 84 252 37 233 240 152 234 241 70 108 53 50 140 151 48 93 13 74 160 228 70 46 139 175 122 142 126 208 143 196 14 176 29 200 85 87 123 174 169 227 7 7 112 97 111 87 177 126 169 133 76 173 147 136 26)
  :der-encode
  #f
  :tests
  '(#(154
      "pseudorandom signature"
      #vu8()
      #vu8(185 130 190 168 13 16 129 107 180 80 163 250 170 237 78 213 79 177 151 179 191 249 90 242 93 125 55 134 158 110 162 229 135 19 241 48 77 41 222 191 133 89 167 74 137 224 24 186 226 139 5 85 110 84 130 161)
      #t
      ())
    #(155
      "pseudorandom signature"
      #vu8(77 115 103)
      #vu8(77 171 197 254 150 43 95 138 102 129 233 74 33 101 217 182 190 25 64 242 14 39 206 183 63 196 234 125 116 110 155 186 126 251 144 252 236 194 99 194 41 161 109 128 157 53 71 194 138 38 205 113 165 42 189 197)
      #t
      ())
    #(156
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(149 177 30 50 0 7 162 224 248 206 0 249 5 140 169 185 25 232 214 170 213 68 168 249 128 139 68 161 21 169 98 1 156 133 165 177 250 116 116 22 45 3 205 14 82 142 139 147 188 200 73 32 175 87 159 97)
      #t
      ())
    #(157
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(158 77 171 158 11 0 151 227 101 120 63 192 95 1 12 22 13 54 29 247 146 91 13 219 223 236 232 139 132 6 163 101 240 120 240 49 230 250 214 81 29 105 248 166 84 131 193 154 90 128 12 57 73 15 117 16)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 128 42 15 81 32 78 246 168 41 33 27 192 116 8 135 70 30 228 171 167 54 233 202 238 0 0 0 0 127 185 49 224 99 0 69 19 98 212 68 16 110 235 93 171 221 202 101 15 236 75 229 95 197 69 247 200)
  :der-encode
  #f
  :tests
  '(#(158
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(12 147 253 127 109 208 182 151 213 194 135 238 97 174 228 220 190 220 194 8 133 193 230 33 91 139 54 8 59 199 161 190 204 241 168 232 58 242 245 22 47 197 57 161 208 98 189 99 154 47 190 197 18 144 122 39)
      #t
      ())
    #(159
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(158 11 98 10 47 49 58 218 117 100 99 162 41 136 175 182 87 27 59 3 10 66 133 177 133 225 204 128 195 235 160 76 66 230 77 64 40 172 171 205 203 123 46 237 27 60 251 86 11 141 125 20 251 38 172 163)
      #t
      ())
    #(160
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(163 6 245 0 218 79 10 48 148 100 121 147 106 175 156 99 118 118 176 240 45 32 174 13 152 28 37 235 1 86 71 242 80 11 203 227 32 75 219 128 73 114 184 65 137 11 78 83 25 108 216 177 136 153 49 81)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 203 50 12 132 242 108 0 161 180 173 113 70 145 76 174 18 101 41 22 93 231 54 61 138 239 154 189 5 163 151 212 107 135 40 49 118 183 246 157 161 249 70 21 202 68 49 252 71 178 160 230 12 0 0 0 0)
  :der-encode
  #f
  :tests
  '(#(161
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(4 240 13 212 79 221 138 230 176 139 134 204 189 215 214 21 170 158 73 138 137 179 80 148 200 169 166 254 73 97 122 22 23 197 108 233 13 65 197 62 239 78 98 143 36 192 71 160 110 2 193 249 33 35 68 31)
      #t
      ())
    #(162
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(18 134 246 167 55 91 246 128 81 227 27 46 50 181 246 192 152 140 145 137 121 146 86 231 206 100 226 145 82 211 193 249 231 119 242 60 23 203 200 50 208 229 168 75 182 139 19 222 191 57 56 120 209 160 100 152)
      #t
      ())
    #(163
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(88 40 37 223 35 104 220 185 47 187 163 250 100 84 209 73 211 184 96 227 255 50 106 254 54 33 88 19 73 51 79 198 167 4 24 219 196 84 218 106 153 123 200 55 98 112 195 163 136 99 173 178 170 112 187 15)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 0 0 0 0 129 223 151 23 68 162 90 201 148 114 195 255 90 143 196 155 134 252 159 181 112 68 143 249 119 242 208 124 28 146 150 178 247 116 120 209 61 90 177 198 57 147 150 47 45 208 142 231 195 19 222 206)
  :der-encode
  #f
  :tests
  '(#(164
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(90 17 113 140 144 160 36 89 128 15 16 158 78 132 12 194 97 215 130 214 78 28 138 71 18 221 144 129 210 131 177 193 225 16 164 98 10 105 111 223 116 169 199 121 35 82 19 157 84 204 237 140 151 61 158 126)
      #t
      ())
    #(165
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(213 119 242 62 89 36 20 227 81 179 146 138 89 60 93 47 137 240 199 45 245 19 191 188 101 53 186 187 27 176 157 210 53 18 74 20 224 36 105 70 242 128 69 15 21 87 105 18 174 183 53 183 60 232 40 188)
      #t
      ())
    #(166
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(175 143 131 110 99 153 93 199 21 164 211 198 132 44 78 108 108 244 88 109 247 110 70 89 216 9 238 201 133 190 253 11 27 184 174 24 44 5 208 113 218 209 128 34 77 34 83 61 206 115 125 77 218 116 213 209)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 13 40 180 247 254 31 108 111 166 167 125 17 228 59 211 233 39 23 88 223 52 198 95 165 119 166 221 59 0 0 0 0 40 1 212 131 130 134 22 132 184 210 203 215 229 152 154 13 124 21 167 232 25 181 115 170)
  :der-encode
  #f
  :tests
  '(#(167
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(21 106 167 134 146 199 142 151 105 171 167 40 201 238 167 136 53 181 80 0 144 27 165 7 148 163 62 252 185 120 93 244 10 34 19 55 116 129 49 27 26 129 211 16 231 99 65 146 123 143 186 13 110 62 199 173)
      #t
      ())
    #(168
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(146 116 212 106 127 250 18 153 163 114 232 33 189 137 114 141 232 62 248 124 70 175 103 4 58 99 75 2 25 228 187 236 139 3 250 119 42 54 34 191 72 147 229 129 239 173 249 210 11 214 8 6 216 38 118 182)
      #t
      ())
    #(169
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(207 106 156 186 40 94 86 73 60 187 70 43 123 22 18 138 12 241 199 5 132 71 148 93 174 243 65 73 41 166 135 131 158 142 224 60 83 114 161 19 115 60 8 31 65 61 31 148 5 221 254 71 225 143 204 84)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 13 40 180 247 254 31 108 111 166 167 125 17 228 59 211 233 39 23 88 223 52 198 95 165 119 166 221 59 215 193 52 169 254 65 146 2 167 146 25 160 188 255 11 175 203 6 109 74 27 196 226 13 101 19 77 85)
  :der-encode
  #f
  :tests
  '(#(170
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(89 46 84 160 234 149 10 199 205 131 15 86 199 149 74 118 159 129 170 85 232 225 1 190 225 155 59 39 72 55 95 221 77 144 20 201 182 11 99 199 11 254 152 200 68 190 102 143 45 58 46 37 146 98 185 69)
      #t
      ())
    #(171
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(30 192 239 77 91 237 175 229 8 31 122 218 227 45 180 208 170 148 111 19 10 206 218 186 226 109 144 220 98 126 129 215 235 53 143 89 232 168 99 5 39 212 232 148 109 28 173 33 150 118 24 54 217 125 149 60)
      #t
      ())
    #(172
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(95 175 3 94 213 119 78 235 10 220 24 127 244 133 168 70 170 42 188 241 231 248 89 177 185 16 242 92 139 241 42 28 0 177 143 102 194 40 53 45 228 156 196 251 130 122 9 252 134 247 34 206 86 27 165 250)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 81 46 88 23 49 201 196 96 187 112 91 96 218 151 108 203 27 14 244 33 120 81 6 186 44 205 210 56 15 33 213 186 205 248 28 12 183 143 161 81 35 125 179 19 10 212 222 243 115 243 229 35 57 140 44 247)
  :der-encode
  #f
  :tests
  '(#(173
      "y-coordinate of the public key has many trailing 1's on brainpoolP224t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(82 178 211 105 241 141 245 99 114 175 231 254 179 132 19 242 50 180 251 156 161 108 111 111 237 198 65 137 193 177 159 19 119 115 239 50 1 205 52 28 56 30 79 148 73 204 14 108 104 138 53 29 122 96 112 178)
      #t
      ("GroupIsomorphism"))
    #(174
      "y-coordinate of the public key has many trailing 1's on brainpoolP224t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(91 136 157 40 138 170 129 103 77 50 0 110 129 39 156 87 237 86 160 53 200 120 211 226 182 135 190 195 13 166 33 213 250 152 19 38 60 127 88 248 224 21 93 111 12 51 10 86 197 148 222 252 46 189 240 160)
      #t
      ("GroupIsomorphism"))
    #(175
      "y-coordinate of the public key has many trailing 1's on brainpoolP224t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(182 248 168 1 135 24 10 173 138 92 137 107 226 20 49 70 1 161 88 95 44 203 40 188 126 142 143 1 169 12 104 193 74 103 245 213 156 236 112 220 15 71 59 92 20 1 59 5 109 18 203 192 247 21 59 29)
      #t
      ("GroupIsomorphism"))))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 172 85 209 179 254 212 174 224 63 163 97 93 34 90 156 186 92 2 132 65 111 186 249 167 97 53 247 98 23 168 136 57 91 206 211 73 119 168 72 35 112 213 110 188 98 170 28 168 27 195 48 244 157 74 20 29)
  :der-encode
  #f
  :tests
  '(#(176
      "x-coordinate of the public key is small on brainpoolP224t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(22 212 168 80 156 155 206 44 115 248 219 75 115 37 124 126 51 244 23 38 194 92 76 100 84 107 29 204 121 186 53 169 109 35 69 173 25 79 57 16 145 32 157 252 206 215 153 23 224 77 243 182 95 68 209 235)
      #t
      ("GroupIsomorphism"))
    #(177
      "x-coordinate of the public key is small on brainpoolP224t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(93 161 86 151 187 228 235 167 112 126 52 159 243 35 157 80 132 85 55 129 19 210 78 126 29 122 2 12 69 190 68 165 112 251 83 12 73 215 89 113 44 16 4 19 69 247 192 137 10 121 70 217 29 50 186 198)
      #t
      ("GroupIsomorphism"))
    #(178
      "x-coordinate of the public key is small on brainpoolP224t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(193 248 212 52 121 196 242 155 25 185 178 199 181 116 112 16 73 20 64 116 108 200 0 213 190 137 176 17 129 84 52 139 124 55 240 80 77 202 43 17 89 65 247 186 88 87 50 30 174 143 100 23 91 233 203 185)
      #t
      ("GroupIsomorphism"))))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 139 49 159 46 208 116 162 14 196 45 134 156 127 153 189 145 70 237 130 99 41 123 254 0 79 39 197 155 18 15 150 52 61 235 128 9 62 203 118 149 194 210 165 190 153 55 162 88 114 61 120 237 0 170 30 223)
  :der-encode
  #f
  :tests
  '(#(179
      "y-coordinate of the public key is small on brainpoolP224t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(135 21 129 181 0 146 87 130 17 22 14 71 13 221 170 100 13 90 45 158 34 79 175 202 135 145 6 212 190 112 253 92 117 145 163 19 15 92 42 245 54 255 255 142 114 193 98 81 116 76 151 150 143 146 23 40)
      #t
      ("GroupIsomorphism"))
    #(180
      "y-coordinate of the public key is small on brainpoolP224t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(169 135 53 229 101 144 34 176 39 74 230 247 188 177 100 110 158 107 75 136 64 141 179 249 38 236 204 137 169 35 255 94 21 224 215 100 205 92 239 255 197 196 12 8 44 110 183 114 219 118 98 251 27 130 213 37)
      #t
      ("GroupIsomorphism"))
    #(181
      "y-coordinate of the public key is small on brainpoolP224t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(169 107 92 36 227 61 89 0 76 243 26 174 244 74 228 199 87 158 11 91 33 154 178 93 127 28 105 10 136 192 19 120 132 124 56 65 244 158 193 72 64 226 208 35 215 185 18 181 3 242 217 138 146 59 232 201)
      #t
      ("GroupIsomorphism"))))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 139 49 159 46 208 116 162 14 196 45 134 156 127 153 189 145 70 237 130 99 41 123 254 0 79 39 197 155 197 177 158 117 232 87 230 124 235 76 185 143 178 255 49 201 23 103 100 255 37 157 17 8 126 30 162 32)
  :der-encode
  #f
  :tests
  '(#(182
      "y-coordinate of the public key is large on brainpoolP224t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(107 87 183 58 183 195 155 86 152 84 157 213 205 212 223 115 152 24 27 85 110 124 114 131 55 94 63 134 159 89 209 134 61 111 214 1 50 71 212 230 120 161 196 252 29 137 109 198 97 250 49 251 115 195 63 0)
      #t
      ("GroupIsomorphism"))
    #(183
      "y-coordinate of the public key is large on brainpoolP224t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(47 133 175 126 83 95 102 207 201 169 218 183 190 120 22 49 221 98 43 228 53 215 100 43 91 81 252 199 97 147 1 194 28 147 66 85 223 147 238 221 91 69 156 141 210 128 253 208 126 230 86 167 20 125 77 105)
      #t
      ("GroupIsomorphism"))
    #(184
      "y-coordinate of the public key is large on brainpoolP224t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(152 168 169 143 204 130 248 4 168 35 204 145 7 36 55 207 216 131 34 184 103 22 134 81 127 25 120 171 106 195 232 55 118 104 91 206 206 254 186 228 115 172 7 199 113 232 59 12 90 85 126 254 131 80 32 54)
      #t
      ("GroupIsomorphism"))))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 197 220 81 53 240 80 169 107 187 13 33 136 81 149 180 154 87 77 81 152 186 172 75 70 2 178 27 200 181 243 139 127 230 97 0 63 174 225 183 175 103 14 22 91 250 183 11 1 137 101 232 51 41 212 5 188)
  :der-encode
  #f
  :tests
  '(#(185
      "y-coordinate of the public key has many trailing 0's on brainpoolP224t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(105 156 64 183 53 35 107 217 35 151 112 165 222 44 26 117 84 99 30 107 166 239 81 47 133 83 208 47 11 202 156 81 108 164 5 255 201 174 45 206 225 42 215 217 107 88 107 253 200 24 163 212 93 207 207 38)
      #t
      ("GroupIsomorphism"))
    #(186
      "y-coordinate of the public key has many trailing 0's on brainpoolP224t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(118 138 129 157 57 67 252 48 120 26 174 242 143 161 32 24 76 114 18 208 145 31 224 61 252 140 98 96 81 179 219 14 28 62 147 145 73 204 191 157 70 25 187 191 240 226 225 116 17 15 110 206 67 19 180 202)
      #t
      ("GroupIsomorphism"))
    #(187
      "y-coordinate of the public key has many trailing 0's on brainpoolP224t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(88 252 192 255 177 37 194 60 67 87 53 183 195 144 105 32 55 192 58 103 101 239 123 83 101 161 125 212 149 24 210 157 120 237 169 203 37 3 253 227 141 59 115 214 251 144 160 212 10 35 240 236 38 22 105 105)
      #t
      ("GroupIsomorphism"))))
(test-signature/testvector
  "ecdsa_brainpoolP224r1_sha224_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-224"
  :public-key
  #vu8(48 82 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 5 3 58 0 4 193 181 106 26 209 84 225 21 86 183 35 252 116 147 243 110 102 80 157 143 104 250 208 230 44 64 240 133 155 4 120 10 133 230 154 191 152 222 243 51 92 230 67 205 53 84 22 122 139 80 213 150 185 83 136 149)
  :der-encode
  #f
  :tests
  '(#(188
      "x-coordinate of the public key has many trailing 1's on brainpoolP224t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(209 147 238 10 61 66 162 58 240 24 171 144 137 107 53 213 194 80 24 123 249 251 28 202 195 100 116 140 160 146 42 204 199 86 45 1 113 9 233 29 47 131 228 139 250 60 31 162 238 4 216 70 155 233 64 51)
      #t
      ("GroupIsomorphism"))
    #(189
      "x-coordinate of the public key has many trailing 1's on brainpoolP224t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(9 116 82 29 124 231 83 222 165 209 21 111 180 217 146 204 97 64 121 235 134 119 171 54 164 7 138 79 131 116 223 186 232 208 66 154 111 186 96 251 181 210 253 85 152 86 165 215 57 243 154 162 191 29 161 201)
      #t
      ("GroupIsomorphism"))
    #(190
      "x-coordinate of the public key has many trailing 1's on brainpoolP224t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(98 95 71 60 162 209 91 183 241 45 161 35 95 144 173 203 105 237 72 24 116 108 174 46 45 178 111 230 74 184 23 246 241 185 200 196 159 104 27 237 21 104 52 111 83 236 191 172 253 82 212 94 39 171 203 176)
      #t
      ("GroupIsomorphism"))))
