(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 234 218 147 190 16 178 68 158 30 139 181 131 5 213 32 8 1 60 87 16 124 26 32 163 23 166 203 167 236 166 114 52 12 3 209 210 224 150 99 40 102 145 223 85 6 159 162 84 144 201 221 159 156 11 178 181)
  :der-encode
  #t
  :tests
  '(#(1
      "signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 28 53 37 7 170 189 15 155 194 35 225 172 151 164 204 179 59 157 232 173 61 244 71 3 115 103 170 65 59)
      #t
      ())
    #(2
      "Legacy:ASN encoding of r misses leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #t
      ("MissingZero"))
    #(3
      "Legacy:ASN encoding of s misses leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 28 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #t
      ("MissingZero"))
    #(4
      "valid"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #t
      ())
    #(5
      "long form encoding of length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ("BER"))
    #(6
      "length of sequence contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 130 0 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ("BER"))
    #(7
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(8
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(9
      "uint32 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 1 0 0 0 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(10
      "uint64 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 137 1 0 0 0 0 0 0 0 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(11
      "length of sequence = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 127 255 255 255 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(12
      "length of sequence = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 255 255 255 255 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(13
      "length of sequence = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 255 255 255 255 255 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(14
      "length of sequence = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 136 255 255 255 255 255 255 255 255 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(15
      "incorrect length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 255 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(16
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(17
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 128 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(18
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 128 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(19
      "removing sequence"
      #vu8(49 50 51 52 48 48)
      #vu8()
      #f
      ())
    #(20
      "lonely sequence tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48)
      #f
      ())
    #(21
      "appending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 0 0)
      #f
      ())
    #(22
      "prepending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 0 0 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(23
      "appending unused 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 0 0)
      #f
      ())
    #(24
      "appending null value to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 5 0)
      #f
      ())
    #(25
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 73 129 119 48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(26
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 37 0 48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(27
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 0 4 222 173 190 239)
      #f
      ())
    #(28
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 34 34 73 129 119 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(29
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 34 33 37 0 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(30
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 34 31 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 0 4 222 173 190 239 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(31
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 34 34 73 129 119 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(32
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 34 33 37 0 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(33
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 34 31 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 0 4 222 173 190 239)
      #f
      ())
    #(34
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 170 0 187 0 205 0 48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(35
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 170 2 170 187 48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(36
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 34 37 170 0 187 0 205 0 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(37
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 34 35 170 2 170 187 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(38
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 34 37 170 0 187 0 205 0 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(39
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 34 35 170 2 170 187 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(40
      "truncated length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129)
      #f
      ())
    #(41
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 0 0)
      #f
      ())
    #(42
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 34 128 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 0 0 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(43
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 34 128 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 0 0)
      #f
      ())
    #(44
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 49 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 0 0)
      #f
      ())
    #(45
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 34 128 3 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 0 0 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(46
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 34 128 3 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 0 0)
      #f
      ())
    #(47
      "Replacing sequence with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(5 0)
      #f
      ())
    #(48
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(46 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(49
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(47 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(50
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(49 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(51
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(50 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(52
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(255 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(53
      "dropping value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 0)
      #f
      ())
    #(54
      "using composition for sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 48 1 2 48 61 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(55
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233)
      #f
      ())
    #(56
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(57
      "indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 0 0)
      #f
      ("BER"))
    #(58
      "indefinite length with truncated delimiter"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 0)
      #f
      ())
    #(59
      "indefinite length with additional element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 5 0 0 0)
      #f
      ())
    #(60
      "indefinite length with truncated element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 6 8 17 34 0 0)
      #f
      ())
    #(61
      "indefinite length with garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 0 0 254 2 190 239)
      #f
      ())
    #(62
      "indefinite length with nonempty EOC"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 0 2 190 239)
      #f
      ())
    #(63
      "prepend empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 48 0 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(64
      "append empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 48 0)
      #f
      ())
    #(65
      "append garbage with high tag number"
      #vu8(49 50 51 52 48 48)
      #vu8(48 65 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 191 127 0)
      #f
      ())
    #(66
      "sequence of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(67
      "truncated sequence: removed last 1 elements"
      #vu8(49 50 51 52 48 48)
      #vu8(48 31 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100)
      #f
      ())
    #(68
      "repeating element in sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 93 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(69
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 129 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ("BER"))
    #(70
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 129 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ("BER"))
    #(71
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 130 0 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ("BER"))
    #(72
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 130 0 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ("BER"))
    #(73
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 30 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(74
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 28 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(75
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 30 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(76
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 28 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(77
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 2 133 1 0 0 0 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(78
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 133 1 0 0 0 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(79
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 137 1 0 0 0 0 0 0 0 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(80
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 137 1 0 0 0 0 0 0 0 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(81
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 132 127 255 255 255 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(82
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 132 127 255 255 255 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(83
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 132 255 255 255 255 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(84
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 132 255 255 255 255 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(85
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 2 133 255 255 255 255 255 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(86
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 133 255 255 255 255 255 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(87
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 136 255 255 255 255 255 255 255 255 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(88
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 136 255 255 255 255 255 255 255 255 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(89
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 255 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(90
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 255 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(91
      "removing integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 31 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(92
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 32 2 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(93
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 32 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2)
      #f
      ())
    #(94
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 31 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 0 0 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(95
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 31 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 0 0)
      #f
      ())
    #(96
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 31 0 0 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ("BER"))
    #(97
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 31 0 0 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ("BER"))
    #(98
      "appending unused 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 0 0 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(99
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 31 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 5 0 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(100
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 31 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2 5 0)
      #f
      ())
    #(101
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 129 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(102
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 129)
      #f
      ())
    #(103
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 5 0 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(104
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 5 0)
      #f
      ())
    #(105
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 0 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(106
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 1 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(107
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 3 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(108
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 4 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(109
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 255 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(110
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 0 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(111
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 1 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(112
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 3 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(113
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 4 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(114
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 255 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(115
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 0 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(116
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 0)
      #f
      ())
    #(117
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 34 33 2 1 0 2 28 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(118
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 34 33 2 1 0 2 28 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(119
      "modify first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 2 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(120
      "modify first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 2 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(121
      "modify last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 228 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(122
      "modify last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 130)
      #f
      ())
    #(123
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(124
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 28 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233)
      #f
      ())
    #(125
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 30 255 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(126
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 30 255 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(127
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 9 1 128 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(128
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 9 1 128)
      #f
      ())
    #(129
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 0 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(130
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 1 0)
      #f
      ())
    #(131
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 1 251 167 31 18 87 188 38 224 169 157 51 2 76 63 252 221 179 31 129 145 157 153 209 74 42 6 124 161 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(132
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 251 167 31 18 87 188 38 224 169 157 51 2 76 65 207 151 241 173 161 21 117 223 126 191 113 78 40 39 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(133
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 255 4 88 224 237 168 67 217 31 86 98 204 253 179 191 25 197 45 153 110 172 118 67 87 251 50 85 173 156 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(134
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 4 88 224 237 168 67 217 31 86 98 204 253 179 190 48 104 14 82 94 234 138 32 129 64 142 177 215 217 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(135
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 254 4 88 224 237 168 67 217 31 86 98 204 253 179 192 3 34 76 224 126 110 98 102 46 181 213 249 131 95 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(136
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 1 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(137
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 4 88 224 237 168 67 217 31 86 98 204 253 179 191 25 197 45 153 110 172 118 67 87 251 50 85 173 156 2 29 0 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(138
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 1 202 218 248 85 66 240 100 61 220 30 83 104 91 49 122 10 35 137 51 62 51 115 79 23 81 14 19 63)
      #f
      ())
    #(139
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 28 202 218 248 85 66 240 100 61 220 30 83 104 91 51 76 196 98 23 82 194 11 184 252 140 152 85 190 197)
      #f
      ())
    #(140
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 255 53 37 7 170 189 15 155 194 35 225 172 151 164 205 156 152 189 47 188 255 224 105 218 46 11 78 22 254)
      #f
      ())
    #(141
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 254 53 37 7 170 189 15 155 194 35 225 172 151 164 206 133 245 220 118 204 193 204 140 176 232 174 241 236 193)
      #f
      ())
    #(142
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 29 1 202 218 248 85 66 240 100 61 220 30 83 104 91 50 99 103 66 208 67 0 31 150 37 209 244 177 233 2)
      #f
      ())
    #(143
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 251 167 31 18 87 188 38 224 169 157 51 2 76 64 230 58 210 102 145 83 137 188 168 4 205 170 82 100 2 28 53 37 7 170 189 15 155 194 35 225 172 151 164 205 156 152 189 47 188 255 224 105 218 46 11 78 22 254)
      #f
      ())
    #(144
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 0)
      #f
      ("EdgeCase"))
    #(145
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 1)
      #f
      ("EdgeCase"))
    #(146
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 255)
      #f
      ("EdgeCase"))
    #(147
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 0 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(148
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 0 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(149
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 0 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(150
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 0 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(151
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 0 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(152
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 0 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(153
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 9 1 66)
      #f
      ("EdgeCase"))
    #(154
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 0)
      #f
      ("EdgeCase"))
    #(155
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 1)
      #f
      ("EdgeCase"))
    #(156
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 255)
      #f
      ("EdgeCase"))
    #(157
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(158
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(159
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(160
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(161
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(162
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(163
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 9 1 66)
      #f
      ("EdgeCase"))
    #(164
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 0)
      #f
      ("EdgeCase"))
    #(165
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 1)
      #f
      ("EdgeCase"))
    #(166
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 255)
      #f
      ("EdgeCase"))
    #(167
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 255 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(168
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 255 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(169
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 255 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(170
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 255 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(171
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 255 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(172
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 255 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(173
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 9 1 66)
      #f
      ("EdgeCase"))
    #(174
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 1 0)
      #f
      ("EdgeCase"))
    #(175
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 1 1)
      #f
      ("EdgeCase"))
    #(176
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 1 255)
      #f
      ("EdgeCase"))
    #(177
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(178
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(179
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(180
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(181
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(182
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(183
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 9 1 66)
      #f
      ("EdgeCase"))
    #(184
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 1 0)
      #f
      ("EdgeCase"))
    #(185
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 1 1)
      #f
      ("EdgeCase"))
    #(186
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 1 255)
      #f
      ("EdgeCase"))
    #(187
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(188
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(189
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(190
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(191
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(192
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(193
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 9 1 66)
      #f
      ("EdgeCase"))
    #(194
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 1 0)
      #f
      ("EdgeCase"))
    #(195
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 1 1)
      #f
      ("EdgeCase"))
    #(196
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 1 255)
      #f
      ("EdgeCase"))
    #(197
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(198
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(199
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(200
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(201
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(202
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(203
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 9 1 66)
      #f
      ("EdgeCase"))
    #(204
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 1 0)
      #f
      ("EdgeCase"))
    #(205
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 1 1)
      #f
      ("EdgeCase"))
    #(206
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 1 255)
      #f
      ("EdgeCase"))
    #(207
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(208
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(209
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(210
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(211
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(212
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(213
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 9 1 66)
      #f
      ("EdgeCase"))
    #(214
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 1 0)
      #f
      ("EdgeCase"))
    #(215
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 1 1)
      #f
      ("EdgeCase"))
    #(216
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 1 255)
      #f
      ("EdgeCase"))
    #(217
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(218
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(219
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(220
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(221
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(222
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(223
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 9 1 66)
      #f
      ("EdgeCase"))
    #(224
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 12 1 48)
      #f
      ())
    #(225
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 5 2 1 1 12 0)
      #f
      ())
    #(226
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 9 12 2 37 115 12 3 115 37 115)
      #f
      ())
    #(227
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 48 3 2 1 0)
      #f
      ())
    #(228
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 3 2 1 1)
      #f
      ())
    #(229
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 1 1 0)
      #f
      ())
    #(230
      "Edge case for Shamir multiplication"
      #vu8(53 49 49 48 54)
      #vu8(48 61 2 28 50 107 192 99 83 247 249 201 247 123 143 75 85 70 78 134 25 148 78 120 121 64 44 202 87 46 4 26 2 29 0 145 88 150 88 204 183 206 175 31 1 116 146 69 14 41 21 187 141 134 59 183 243 152 200 245 188 19 135)
      #t
      ())
    #(231
      "special case hash"
      #vu8(50 55 50 57 55 50 54 52 49 55)
      #vu8(48 61 2 28 94 226 127 146 100 171 83 102 29 58 123 140 133 131 0 198 238 89 120 163 10 233 183 228 19 221 104 13 2 29 0 249 230 194 170 178 175 237 82 59 1 114 186 17 11 91 13 102 58 143 119 34 11 184 101 206 242 15 79)
      #t
      ())
    #(232
      "special case hash"
      #vu8(52 51 49 52 55 55 54 49 55)
      #vu8(48 60 2 28 27 182 206 81 183 229 4 204 214 154 145 10 17 169 194 155 167 113 0 213 188 203 23 157 225 154 147 221 2 28 119 10 22 11 38 53 187 41 60 115 160 127 177 253 94 3 20 181 1 39 171 62 112 209 171 151 77 230)
      #t
      ())
    #(233
      "special case hash"
      #vu8(54 54 48 51 52 51 56 48 51 51)
      #vu8(48 62 2 29 0 253 138 31 107 168 121 65 199 164 203 142 152 68 253 186 9 155 195 0 54 202 176 184 45 206 104 2 172 2 29 0 151 50 193 242 79 230 195 250 129 19 183 86 198 183 225 82 51 117 219 218 120 136 149 1 142 191 2 69)
      #t
      ())
    #(234
      "special case hash"
      #vu8(50 56 50 57 54 50 49 52 53 53)
      #vu8(48 61 2 29 0 207 216 40 232 201 176 177 115 99 19 101 48 175 10 84 162 26 108 191 250 122 32 162 87 56 81 24 255 2 28 123 200 121 22 39 251 183 74 99 167 108 153 248 190 225 50 89 135 208 171 42 21 176 213 118 4 20 159)
      #t
      ())
    #(235
      "special case hash"
      #vu8(52 51 49 49 56 50 49 55 51 54)
      #vu8(48 61 2 28 53 228 81 73 189 205 181 90 227 122 58 41 55 210 208 58 101 117 78 41 96 93 204 80 118 210 10 167 2 29 0 186 111 94 176 93 164 250 87 33 126 252 192 62 143 89 163 90 251 108 32 67 218 143 252 219 254 161 197)
      #t
      ())
    #(236
      "special case hash"
      #vu8(49 49 55 55 48 55 55 52 49 55 53)
      #vu8(48 61 2 28 63 93 251 164 72 51 146 135 209 186 201 56 48 200 50 34 64 138 123 81 26 173 29 95 83 13 198 238 2 29 0 244 114 110 218 185 18 100 16 103 146 228 95 48 200 180 137 210 104 41 29 60 42 22 101 85 222 223 211)
      #t
      ())
    #(237
      "special case hash"
      #vu8(49 53 57 56 53 49 53 53 54 53)
      #vu8(48 62 2 29 0 171 101 65 44 93 181 136 36 43 81 100 77 254 120 215 37 112 230 111 248 70 254 178 129 18 210 101 26 2 29 0 135 186 93 74 88 237 121 153 245 2 183 150 38 180 90 15 177 159 216 228 87 43 193 181 212 155 59 118)
      #t
      ())
    #(238
      "special case hash"
      #vu8(50 56 56 49 49 48 49 54 49 56)
      #vu8(48 61 2 29 0 158 225 240 237 207 19 233 82 210 28 48 252 60 12 5 167 183 70 6 3 137 61 149 48 216 233 2 88 2 28 72 239 196 63 194 63 54 248 73 112 201 223 116 251 26 62 22 62 149 161 6 63 179 186 150 110 62 142)
      #t
      ())
    #(239
      "special case hash"
      #vu8(50 48 48 52 55 56 51 51 51 50)
      #vu8(48 61 2 29 0 178 121 69 42 226 78 177 60 223 127 8 84 64 154 122 108 85 106 228 47 89 10 213 238 184 116 226 86 2 28 44 201 110 143 246 229 35 194 241 9 8 3 81 200 225 84 47 228 5 34 127 247 84 47 47 146 78 149)
      #t
      ())
    #(240
      "special case hash"
      #vu8(57 53 48 48 50 52 55 55 56 55)
      #vu8(48 60 2 28 57 139 89 208 182 167 23 29 53 24 209 211 239 103 150 241 10 20 37 26 202 86 48 250 50 101 87 65 2 28 66 89 208 237 201 194 170 188 9 195 122 105 68 77 242 74 81 145 226 29 56 123 152 176 128 116 82 121)
      #t
      ())
    #(241
      "special case hash"
      #vu8(50 50 48 57 53 48 48 48 54 48)
      #vu8(48 62 2 29 0 192 96 72 65 251 92 175 79 79 47 145 252 120 4 114 147 73 247 150 173 235 48 68 134 234 87 158 2 2 29 0 218 184 91 84 48 71 239 31 44 43 249 254 171 37 166 193 191 200 158 87 52 237 214 154 63 139 9 251)
      #t
      ())
    #(242
      "special case hash"
      #vu8(56 49 57 51 55 56 57 50 50 55)
      #vu8(48 60 2 28 127 81 39 168 60 118 85 79 228 252 192 14 166 230 43 20 200 166 117 22 142 96 234 157 107 31 3 77 2 28 122 180 172 166 169 49 92 121 89 54 251 65 188 244 106 72 64 161 228 26 135 77 219 26 213 181 80 167)
      #t
      ())
    #(243
      "special case hash"
      #vu8(51 54 53 48 54 48 51 50 57 56)
      #vu8(48 62 2 29 0 172 160 191 43 165 152 175 124 55 173 183 97 125 164 177 178 239 147 184 43 88 241 22 29 184 148 156 226 2 29 0 134 208 228 116 60 21 199 75 26 179 52 226 54 252 242 57 118 199 49 73 28 128 140 197 80 39 82 31)
      #t
      ())
    #(244
      "special case hash"
      #vu8(49 54 51 56 51 57 53 51 53 50 51)
      #vu8(48 61 2 28 95 208 239 226 227 96 65 205 35 67 27 184 94 43 192 56 153 74 112 111 185 164 14 232 234 241 230 100 2 29 0 196 148 24 90 178 198 223 246 32 243 212 139 202 97 48 212 213 7 227 90 0 144 235 39 241 103 189 175)
      #t
      ())
    #(245
      "special case hash"
      #vu8(50 48 57 49 55 54 56 50 48 53)
      #vu8(48 61 2 28 15 23 61 51 132 4 57 176 7 43 131 21 231 53 243 115 42 86 87 51 75 157 138 144 250 186 105 25 2 29 0 155 227 53 205 157 24 207 129 164 250 174 97 16 242 83 40 129 171 87 236 113 222 212 72 57 14 162 36)
      #t
      ())
    #(246
      "special case hash"
      #vu8(57 51 54 52 55 48 50 56 50 53)
      #vu8(48 61 2 28 96 31 123 241 11 242 0 164 131 105 210 34 217 228 7 102 113 51 154 169 137 85 222 49 174 127 69 3 2 29 0 161 27 95 139 119 13 120 170 184 206 25 24 166 11 73 110 55 117 233 249 9 123 219 197 152 201 233 155)
      #t
      ())
    #(247
      "special case hash"
      #vu8(57 50 54 56 54 56 55 57 49)
      #vu8(48 61 2 28 7 195 45 202 12 40 224 179 161 66 148 75 79 55 161 185 41 49 117 251 181 119 206 56 100 33 84 204 2 29 0 228 141 71 135 10 252 15 22 147 39 207 186 207 73 223 135 191 32 161 63 92 42 87 133 77 33 64 35)
      #t
      ())
    #(248
      "special case hash"
      #vu8(53 49 55 56 49 51 52 56 50 49)
      #vu8(48 61 2 29 0 202 50 141 186 18 154 233 167 178 115 253 27 103 216 67 224 45 91 210 196 215 117 20 137 31 44 8 213 2 28 68 174 152 175 143 169 213 21 153 94 229 166 253 245 104 86 198 124 79 229 248 131 39 129 112 77 172 253)
      #t
      ())
    #(249
      "special case hash"
      #vu8(52 55 51 53 48 49 48 55 53 49)
      #vu8(48 60 2 28 107 0 235 206 220 140 48 82 16 36 209 93 250 20 48 79 140 89 74 184 161 126 179 223 104 57 59 46 2 28 58 83 24 49 3 221 27 30 248 99 30 124 175 229 16 234 201 171 76 16 22 77 242 8 197 152 226 15)
      #t
      ())
    #(250
      "special case hash"
      #vu8(49 52 51 53 51 57 49 49 54 56 57)
      #vu8(48 61 2 28 76 242 97 170 102 22 80 147 25 101 48 144 171 215 7 32 32 38 115 63 214 77 219 20 242 171 38 211 2 29 0 216 227 127 172 98 66 10 126 153 68 228 179 25 213 231 61 3 184 122 88 153 113 254 215 1 42 218 84)
      #t
      ())
    #(251
      "special case hash"
      #vu8(49 51 56 52 53 52 57 50 48 52)
      #vu8(48 60 2 28 80 79 47 80 202 147 30 42 79 140 218 15 8 194 183 158 240 81 103 125 118 160 143 24 6 197 58 245 2 28 115 98 72 80 31 6 43 20 189 63 238 101 40 112 13 26 100 168 174 48 215 199 110 26 146 182 107 173)
      #t
      ())
    #(252
      "special case hash"
      #vu8(50 55 54 50 49 57 50 55 56 57)
      #vu8(48 61 2 28 121 165 72 228 218 59 61 244 223 119 78 127 185 220 74 240 112 102 53 196 84 233 226 60 42 162 151 82 2 29 0 183 64 105 236 202 239 186 0 167 31 51 180 63 105 234 163 33 220 88 67 110 186 251 205 87 70 96 176)
      #t
      ())
    #(253
      "special case hash"
      #vu8(49 56 51 49 54 53 52 51 51 49)
      #vu8(48 60 2 28 50 55 114 150 186 71 17 75 95 61 207 248 65 65 107 202 62 94 152 214 77 217 135 186 220 69 118 85 2 28 41 163 122 20 59 71 176 41 226 86 199 80 106 103 158 232 241 150 44 203 187 28 131 244 8 133 1 178)
      #t
      ())
    #(254
      "special case hash"
      #vu8(50 52 51 54 56 57 57 48 51 48)
      #vu8(48 60 2 28 117 214 44 23 47 38 230 230 131 28 35 59 73 137 92 26 135 193 238 62 245 123 113 24 86 25 158 70 2 28 39 131 10 141 31 196 73 147 153 10 157 27 43 20 127 248 121 43 11 8 35 188 48 251 1 44 233 238)
      #t
      ())
    #(255
      "special case hash"
      #vu8(50 48 52 48 52 49 50 50 50)
      #vu8(48 61 2 29 0 250 182 42 213 38 232 143 107 156 167 226 210 63 56 217 252 248 97 203 124 194 117 250 162 92 166 160 155 2 28 41 179 113 221 166 239 41 240 55 24 27 156 59 217 44 120 87 139 67 221 219 116 160 41 190 167 242 56)
      #t
      ())
    #(256
      "special case hash"
      #vu8(51 51 51 55 49 49 57 57 55 53)
      #vu8(48 61 2 29 0 147 158 61 55 135 103 252 6 158 225 147 240 1 249 200 78 79 130 221 64 116 126 3 125 243 251 32 13 2 28 125 181 14 192 23 9 140 171 58 208 84 83 12 238 82 56 176 163 21 205 200 10 61 138 125 208 153 31)
      #t
      ())
    #(257
      "special case hash"
      #vu8(54 54 57 53 54 50 48 54 55 56)
      #vu8(48 60 2 28 26 113 170 54 56 0 115 31 76 90 159 10 66 53 25 138 118 88 241 180 37 151 46 202 201 162 163 64 2 28 33 182 25 57 229 117 177 165 255 72 116 115 186 56 3 104 60 139 32 232 152 68 165 87 133 99 15 137)
      #t
      ())
    #(258
      "special case hash"
      #vu8(50 48 57 51 48 49 55 55 52 55)
      #vu8(48 62 2 29 0 231 189 77 222 221 65 43 220 132 130 240 142 45 245 64 87 107 27 247 104 147 62 26 221 163 10 185 99 2 29 0 183 214 71 23 15 12 251 3 36 249 236 46 41 148 3 220 108 241 88 155 227 223 198 252 34 130 52 241)
      #t
      ())
    #(259
      "special case hash"
      #vu8(49 50 51 52 49 55 57 49 54)
      #vu8(48 62 2 29 0 172 150 192 21 143 63 147 157 20 35 143 116 76 156 43 87 54 192 38 219 65 76 93 156 1 157 5 98 2 29 0 162 124 138 52 6 92 113 185 42 241 29 119 218 213 51 249 204 98 102 126 160 157 80 5 127 190 169 178)
      #t
      ())
    #(260
      "special case hash"
      #vu8(49 55 54 52 51 53 48 54 56 55)
      #vu8(48 62 2 29 0 197 38 168 136 164 247 79 1 240 55 183 85 105 85 223 202 231 34 102 229 223 85 172 108 236 191 184 93 2 29 0 216 90 91 194 76 183 58 186 49 136 9 140 17 247 8 122 57 229 230 34 113 224 22 203 202 43 85 136)
      #t
      ())
    #(261
      "special case hash"
      #vu8(49 49 52 49 55 50 52 49 52 52 49)
      #vu8(48 61 2 28 55 32 110 222 106 47 107 244 104 169 17 82 80 62 185 8 55 69 106 59 29 108 147 123 14 251 246 13 2 29 0 150 211 81 130 253 151 67 142 74 151 140 34 35 234 198 164 247 0 89 38 232 149 255 23 214 103 162 218)
      #t
      ())
    #(262
      "special case hash"
      #vu8(50 50 54 56 50 52 54 52 57 51)
      #vu8(48 62 2 29 0 196 33 6 207 114 195 99 45 29 79 21 160 139 123 183 44 87 174 130 192 153 149 61 50 65 73 176 60 2 29 0 250 216 217 217 218 148 37 155 113 159 246 182 200 230 171 36 187 54 86 2 236 47 254 18 254 14 2 236)
      #t
      ())
    #(263
      "special case hash"
      #vu8(50 55 50 52 55 57 54 55 55 55)
      #vu8(48 60 2 28 15 193 88 46 11 62 190 116 177 250 68 37 227 33 165 178 209 107 28 58 176 96 233 140 245 48 222 250 2 28 17 94 174 2 95 163 66 38 33 164 159 215 132 134 202 36 88 148 162 216 60 100 78 49 171 226 27 91)
      #t
      ())
    #(264
      "special case hash"
      #vu8(57 55 51 51 57 53 49 49 57)
      #vu8(48 61 2 29 0 201 101 136 233 152 49 72 73 98 19 142 229 205 72 125 222 232 194 133 12 110 130 219 53 248 213 173 75 2 28 38 238 138 7 135 182 197 186 215 89 142 93 65 229 152 128 179 44 250 18 92 137 48 253 176 193 100 128)
      #t
      ())
    #(265
      "special case hash"
      #vu8(49 53 48 55 48 48 50 55 48 54)
      #vu8(48 62 2 29 0 209 68 186 7 254 76 127 150 53 61 200 177 113 56 75 68 146 206 190 116 200 108 223 254 98 19 247 150 2 29 0 193 159 186 10 88 133 15 45 218 216 172 129 180 4 239 24 245 177 180 129 152 228 141 6 157 217 194 174)
      #t
      ())
    #(266
      "special case hash"
      #vu8(51 55 52 51 53 54 56 55 56 50)
      #vu8(48 61 2 28 72 240 210 181 80 6 81 66 128 206 122 210 131 54 171 49 160 83 109 238 247 103 240 14 163 65 155 151 2 29 0 145 131 38 185 51 127 118 243 179 179 183 137 3 30 92 109 48 0 247 33 91 93 142 179 133 70 121 127)
      #t
      ())
    #(267
      "special case hash"
      #vu8(57 52 55 54 55 49 50 52 56)
      #vu8(48 61 2 28 68 211 161 130 201 168 162 7 165 220 194 129 30 48 235 38 3 123 181 98 120 112 161 227 167 84 161 239 2 29 0 130 165 151 141 47 222 163 135 92 254 165 123 49 120 116 44 66 206 237 211 179 150 213 1 65 133 49 126)
      #t
      ())
    #(268
      "special case hash"
      #vu8(55 50 53 52 52 52 51 50 52)
      #vu8(48 61 2 29 0 238 221 197 157 96 242 117 112 129 195 185 21 152 78 115 156 227 28 203 241 132 254 242 125 16 37 199 17 2 28 104 111 112 72 52 4 122 228 184 190 239 143 203 103 201 74 5 183 244 118 157 109 201 128 33 194 29 110)
      #t
      ())
    #(269
      "special case hash"
      #vu8(53 53 51 52 48 50 49 50 49 57)
      #vu8(48 61 2 29 0 186 76 97 37 64 146 47 10 27 119 13 147 115 197 24 153 63 212 69 16 80 87 207 38 192 174 255 140 2 28 77 101 101 255 115 23 216 97 178 243 192 125 246 40 164 141 66 210 26 14 169 158 137 69 72 108 163 125)
      #t
      ())
    #(270
      "special case hash"
      #vu8(49 50 51 48 49 56 49 51 55 57 51)
      #vu8(48 62 2 29 0 230 118 64 167 130 104 25 104 151 35 118 176 253 114 229 66 6 175 50 138 89 190 103 30 97 88 68 138 2 29 0 242 167 110 210 103 75 31 145 66 245 76 143 231 108 184 219 255 113 244 223 55 117 162 171 235 18 10 47)
      #t
      ())
    #(271
      "special case hash"
      #vu8(57 49 49 53 51 49 55 54 49 48)
      #vu8(48 62 2 29 0 197 32 250 167 87 78 19 190 200 179 249 151 238 155 132 75 99 103 214 29 38 202 132 223 228 235 36 91 2 29 0 130 11 227 228 138 164 229 105 221 109 122 80 231 77 101 181 159 230 3 201 101 29 211 171 232 206 151 32)
      #t
      ())
    #(272
      "special case hash"
      #vu8(50 56 57 52 51 57 55 57 54 50)
      #vu8(48 62 2 29 0 216 109 86 111 245 252 204 243 163 86 120 110 97 75 147 64 194 66 100 140 21 236 75 103 14 161 31 7 2 29 0 171 176 231 218 20 51 43 119 66 99 107 102 184 183 190 178 172 74 21 95 230 48 138 174 108 112 102 11)
      #t
      ())
    #(273
      "special case hash"
      #vu8(49 50 51 51 53 56 51 48 51 51)
      #vu8(48 61 2 28 102 18 216 69 250 45 89 190 144 160 205 127 117 163 80 148 48 172 128 120 49 125 56 95 190 245 104 165 2 29 0 197 223 28 216 146 12 211 184 114 226 51 85 34 190 248 41 92 181 68 8 45 38 155 131 175 248 78 202)
      #t
      ())
    #(274
      "special case hash"
      #vu8(50 49 49 50 54 57 50 53 54)
      #vu8(48 61 2 28 9 143 82 147 230 18 47 212 80 225 243 24 46 111 35 35 181 135 139 57 175 164 24 72 131 151 124 61 2 29 0 147 106 154 249 154 60 84 225 185 74 4 254 248 108 199 161 101 38 254 166 111 106 28 61 64 218 22 4)
      #t
      ())
    #(275
      "special case hash"
      #vu8(51 48 48 53 52 56 51 56 54 52)
      #vu8(48 62 2 29 0 245 165 36 172 187 173 230 133 44 41 19 44 50 214 27 6 112 122 56 140 179 206 189 142 235 89 209 173 2 29 0 215 222 101 197 11 33 168 78 111 73 183 31 218 249 119 227 210 238 143 236 0 142 71 116 40 176 133 123)
      #t
      ())
    #(276
      "special case hash"
      #vu8(56 51 53 54 55 54 50 55 50 53)
      #vu8(48 62 2 29 0 215 197 218 80 155 244 41 131 247 239 109 117 120 235 41 127 88 181 27 44 71 0 28 111 223 58 175 232 2 29 0 198 172 6 144 5 15 34 233 251 159 15 218 162 75 209 85 143 121 58 10 154 86 146 248 229 121 89 250)
      #t
      ())
    #(277
      "special case hash"
      #vu8(56 51 50 57 53 48 48 55 54 48)
      #vu8(48 61 2 29 0 214 163 32 118 178 248 83 152 149 159 84 33 139 239 239 195 255 170 163 183 167 39 43 184 94 208 103 104 2 28 27 164 46 187 57 39 179 167 123 224 187 131 89 169 21 102 114 143 182 183 156 32 107 240 253 169 96 237)
      #t
      ())
    #(278
      "special case hash"
      #vu8(49 57 50 55 48 56 52 49 54 53)
      #vu8(48 61 2 29 0 135 7 18 110 7 171 150 53 203 72 186 217 233 176 59 67 35 41 238 21 139 23 59 216 117 62 63 68 2 28 18 20 97 126 21 71 149 111 52 249 112 29 74 115 149 143 254 145 217 250 254 184 178 143 163 133 22 217)
      #t
      ())
    #(279
      "special case hash"
      #vu8(55 51 48 50 51 53 56 50 56 56)
      #vu8(48 62 2 29 0 210 45 142 76 211 120 252 237 49 45 137 62 107 59 76 9 4 254 41 50 235 128 91 192 250 46 188 226 2 29 0 240 234 167 198 209 15 186 35 205 224 91 230 223 215 161 44 167 120 44 190 38 57 241 33 84 0 148 148)
      #t
      ())
    #(280
      "special case hash"
      #vu8(49 51 52 55 51 55 51 55 51 56 51)
      #vu8(48 62 2 29 0 246 228 6 238 85 255 194 166 31 42 219 99 227 203 25 40 75 28 6 124 18 140 244 69 182 141 194 89 2 29 0 225 126 44 152 88 140 230 202 176 26 199 187 161 227 235 225 180 82 102 86 61 20 130 201 32 236 142 141)
      #t
      ())
    #(281
      "special case hash"
      #vu8(50 53 48 49 53 53 51 54 56 57)
      #vu8(48 62 2 29 0 217 22 19 247 226 241 69 109 131 63 44 154 172 7 150 54 96 121 233 47 46 48 152 84 64 162 148 9 2 29 0 230 114 23 189 43 87 129 114 185 242 37 199 1 77 108 220 248 117 205 224 66 142 81 85 27 41 89 222)
      #t
      ())
    #(282
      "special case hash"
      #vu8(51 53 51 53 48 52 48 48 50 57)
      #vu8(48 61 2 29 0 157 13 22 19 82 194 137 249 177 2 27 136 196 103 205 209 230 211 132 227 228 1 157 167 197 108 73 45 2 28 28 76 75 228 243 201 72 59 80 39 181 252 125 71 41 205 116 195 185 206 247 81 239 98 210 37 1 153)
      #t
      ())
    #(283
      "special case hash"
      #vu8(49 52 50 48 51 53 55 50 57 48)
      #vu8(48 61 2 29 0 172 152 164 210 152 176 150 231 132 97 96 33 32 209 102 3 17 251 138 177 241 139 70 234 179 218 77 141 2 28 86 255 147 214 152 253 165 216 208 26 89 22 234 109 52 133 16 242 8 12 141 120 78 128 26 131 190 152)
      #t
      ())
    #(284
      "special case hash"
      #vu8(57 48 53 49 55 53 48 54 56)
      #vu8(48 62 2 29 0 246 26 184 158 172 85 246 34 67 129 7 28 35 67 223 144 33 112 181 131 137 237 207 126 84 153 206 196 2 29 0 239 220 129 88 232 57 45 254 161 197 92 93 98 174 123 105 95 130 42 100 7 206 82 195 220 210 248 35)
      #t
      ())
    #(285
      "special case hash"
      #vu8(49 54 49 51 55 55 52 50 57 53)
      #vu8(48 61 2 29 0 231 53 86 246 95 228 11 37 153 179 106 189 103 157 173 117 254 149 31 50 183 119 30 230 38 155 116 112 2 28 104 127 182 52 44 75 210 243 162 21 192 64 89 65 190 34 96 34 151 22 79 169 17 95 169 127 88 197)
      #t
      ())
    #(286
      "special case hash"
      #vu8(56 55 51 54 55 51 52 57 49)
      #vu8(48 61 2 28 107 18 1 73 66 133 182 62 66 181 156 168 189 103 187 101 95 65 208 32 72 124 109 75 69 197 38 138 2 29 0 149 40 196 236 251 117 98 142 203 222 153 170 10 19 4 99 161 223 145 176 32 93 224 183 38 254 111 223)
      #t
      ())
    #(287
      "special case hash"
      #vu8(52 51 53 53 49 48 54 52 48 53)
      #vu8(48 61 2 28 78 2 155 107 105 212 31 250 195 201 212 108 121 96 68 102 250 66 167 166 106 108 200 115 222 162 245 84 2 29 0 213 84 196 34 208 60 38 66 132 142 153 64 10 175 65 29 110 200 31 160 235 155 67 196 192 188 235 27)
      #t
      ())
    #(288
      "special case hash"
      #vu8(52 53 51 57 53 55 53 56 55 54)
      #vu8(48 61 2 28 123 152 201 222 231 172 18 166 194 245 155 32 84 138 134 202 253 119 117 161 95 226 144 212 132 132 221 68 2 29 0 230 105 12 50 182 177 174 200 37 207 249 210 212 122 27 245 214 210 0 0 152 51 151 191 72 192 76 226)
      #t
      ())
    #(289
      "special case hash"
      #vu8(56 57 51 54 54 51 50 48 49)
      #vu8(48 62 2 29 0 142 211 56 93 254 18 47 33 37 155 85 2 140 107 162 249 172 148 89 75 203 88 71 183 100 103 125 199 2 29 0 181 161 42 63 75 8 133 97 225 160 7 228 240 82 188 255 170 208 91 94 114 127 62 147 133 21 64 99)
      #t
      ())
    #(290
      "special case hash"
      #vu8(51 56 48 54 48 54 56 48 51 56)
      #vu8(48 61 2 29 0 163 254 91 241 234 224 67 222 200 2 30 91 201 9 15 232 213 145 28 29 109 90 91 152 176 248 136 234 2 28 126 213 91 225 233 174 114 143 233 84 211 76 62 255 234 228 45 95 3 9 45 126 235 7 16 191 29 90)
      #t
      ())
    #(291
      "special case hash"
      #vu8(50 50 51 50 56 49 55 52 57 55)
      #vu8(48 61 2 28 62 101 115 224 220 6 14 200 139 225 97 236 251 34 0 198 247 255 81 39 161 56 32 187 196 96 42 84 2 29 0 200 82 216 135 85 212 189 36 79 10 202 253 65 142 73 146 69 242 230 65 125 200 190 114 81 67 177 201)
      #t
      ())
    #(292
      "special case hash"
      #vu8(52 48 55 52 51 50 50 53 53 56)
      #vu8(48 62 2 29 0 204 221 249 156 251 58 224 108 71 142 98 180 153 205 178 229 169 140 102 93 95 211 35 205 103 51 242 98 2 29 0 235 59 147 179 93 221 146 98 227 23 74 170 50 188 244 106 239 75 236 217 145 97 102 250 61 124 176 180)
      #t
      ())
    #(293
      "special case hash"
      #vu8(54 49 48 54 55 53 56 50 55)
      #vu8(48 61 2 28 8 141 70 30 52 153 60 134 209 82 11 251 58 144 241 25 14 8 134 137 136 188 98 60 222 30 184 121 2 29 0 161 24 19 107 196 113 129 164 237 249 224 93 61 180 235 90 199 61 165 10 149 183 81 228 137 57 190 57)
      #t
      ())
    #(294
      "special case hash"
      #vu8(49 55 52 49 56 55 51 57 50 49 51)
      #vu8(48 61 2 29 0 181 27 243 137 168 152 64 115 34 213 254 20 42 178 248 20 57 0 90 185 180 172 63 64 49 192 109 67 2 28 89 48 3 90 0 246 161 187 128 93 140 122 205 244 43 24 176 32 169 66 106 183 226 206 65 243 105 74)
      #t
      ())
    #(295
      "special case hash"
      #vu8(53 49 50 55 56 52 50 50 56 55)
      #vu8(48 60 2 28 86 92 104 39 200 241 141 170 33 166 177 237 184 175 129 25 62 142 57 31 62 131 96 179 70 199 185 138 2 28 70 139 139 46 22 197 30 65 226 102 81 73 62 2 240 219 58 245 201 152 30 223 255 41 145 209 5 153)
      #t
      ())
    #(296
      "special case hash"
      #vu8(53 48 51 56 54 57 48 56 55 57)
      #vu8(48 60 2 28 96 48 236 7 174 28 217 145 223 188 107 72 218 67 198 36 11 91 184 247 254 25 131 45 245 150 117 77 2 28 84 185 61 74 229 46 76 183 235 150 154 30 182 47 11 227 149 211 10 67 231 213 115 109 246 181 8 252)
      #t
      ())
    #(297
      "special case hash"
      #vu8(51 56 55 55 48 52 50 51 57 55)
      #vu8(48 61 2 28 117 195 153 84 249 249 86 24 203 137 11 26 144 185 228 251 91 140 236 150 143 137 104 245 56 25 212 151 2 29 0 205 147 251 127 138 173 86 252 225 115 76 129 34 156 107 24 69 99 86 49 32 159 228 211 90 75 233 126)
      #t
      ())
    #(298
      "special case hash"
      #vu8(51 50 49 55 48 56 49 55 56)
      #vu8(48 61 2 28 31 163 137 210 244 229 134 213 193 233 252 243 75 86 237 109 53 85 135 20 213 101 166 25 36 197 158 223 2 29 0 238 26 31 83 208 246 94 0 198 252 205 238 243 85 102 227 211 203 181 185 16 18 125 10 64 2 83 24)
      #t
      ())
    #(299
      "special case hash"
      #vu8(55 54 54 55 48 52 52 50 55 48)
      #vu8(48 61 2 29 0 241 171 120 203 195 198 11 249 126 88 58 181 10 190 124 150 153 107 42 240 199 30 19 113 169 79 146 53 2 28 33 236 113 8 190 57 143 133 159 143 117 168 185 181 39 145 70 133 197 243 193 235 38 249 176 212 68 20)
      #t
      ())
    #(300
      "special case hash"
      #vu8(49 49 48 52 55 52 53 48 52 50)
      #vu8(48 61 2 28 80 224 228 35 252 164 25 70 128 255 173 149 209 229 223 83 71 147 213 82 64 153 173 223 218 234 192 244 2 29 0 145 196 73 90 215 153 41 51 43 28 163 26 59 125 75 148 160 91 84 77 2 159 141 246 78 84 209 112)
      #t
      ())
    #(301
      "special case hash"
      #vu8(49 53 51 56 55 48 49 53 52)
      #vu8(48 60 2 28 93 215 211 158 149 22 156 239 215 122 90 93 253 67 94 42 135 149 118 250 243 168 69 210 102 212 2 202 2 28 99 34 80 132 185 33 155 21 136 78 12 214 101 172 169 46 241 244 181 65 152 123 152 203 208 62 219 251)
      #t
      ())
    #(302
      "special case hash"
      #vu8(50 50 54 49 51 56 53 48 52 57)
      #vu8(48 61 2 29 0 144 47 188 126 237 124 164 66 201 66 64 199 83 35 219 159 105 10 132 129 127 130 75 190 18 194 249 233 2 28 18 228 156 78 216 137 9 52 75 97 196 238 254 174 74 174 4 148 4 75 208 22 83 230 109 188 72 14)
      #t
      ())
    #(303
      "special case hash"
      #vu8(55 53 53 56 55 52 55 54 54 50)
      #vu8(48 60 2 28 22 136 28 74 230 15 50 166 184 29 68 95 123 185 33 206 79 77 205 52 150 149 239 224 252 148 210 19 2 28 6 6 99 50 246 30 220 152 168 138 33 164 47 38 233 18 201 156 84 113 9 58 202 155 28 17 213 78)
      #t
      ())
    #(304
      "special case hash"
      #vu8(51 52 57 57 51 54 52 49 56 50)
      #vu8(48 60 2 28 61 10 243 151 96 47 192 209 141 138 115 51 119 204 62 89 108 20 63 117 214 169 210 198 44 153 243 39 2 28 48 173 139 240 190 243 184 162 187 65 88 219 98 29 228 87 13 117 197 254 199 187 140 62 120 175 132 69)
      #t
      ())
    #(305
      "special case hash"
      #vu8(50 51 54 57 50 55 51 57 56 53)
      #vu8(48 61 2 29 0 249 92 15 191 108 144 179 0 216 7 101 215 165 144 46 246 144 212 220 154 233 172 210 10 58 123 109 120 2 28 115 243 173 8 218 218 245 197 133 77 53 29 71 228 236 50 128 19 235 122 233 199 232 62 17 0 36 173)
      #t
      ())
    #(306
      "special case hash"
      #vu8(52 57 51 56 51 57 53 54 53)
      #vu8(48 62 2 29 0 179 36 174 196 66 13 17 167 218 103 210 135 25 138 187 175 44 158 102 6 162 49 175 160 146 77 89 2 2 29 0 219 30 214 185 144 246 94 188 219 140 91 195 140 126 27 131 207 200 248 208 11 164 206 211 155 181 101 200)
      #t
      ())
    #(307
      "special case hash"
      #vu8(50 53 51 52 51 55 57 57 51 55)
      #vu8(48 61 2 28 124 32 136 7 106 178 140 64 39 154 190 163 253 160 162 40 110 10 254 150 59 172 181 247 13 237 101 85 2 29 0 218 53 132 7 193 204 92 46 119 104 84 80 15 68 169 4 178 98 74 185 76 225 1 251 43 50 110 176)
      #t
      ())
    #(308
      "special case hash"
      #vu8(56 51 52 56 48 49 53 57 56)
      #vu8(48 62 2 29 0 171 191 105 224 116 163 158 22 125 108 74 97 254 14 178 244 42 66 175 219 216 64 246 61 219 62 5 125 2 29 0 177 126 201 176 16 112 215 216 130 89 105 191 95 114 170 4 127 180 85 123 244 82 91 104 58 45 208 97)
      #t
      ())
    #(309
      "special case hash"
      #vu8(50 52 49 49 48 53 55 52 56 54)
      #vu8(48 61 2 28 120 122 246 3 83 155 88 82 10 183 73 153 250 47 200 254 144 234 16 243 193 177 106 24 31 220 9 84 2 29 0 254 37 169 177 110 102 170 28 80 165 144 66 193 255 10 133 226 244 129 26 141 117 64 248 58 99 38 132)
      #t
      ())
    #(310
      "special case hash"
      #vu8(55 56 54 52 54 56 54 51 53)
      #vu8(48 62 2 29 0 198 254 41 159 56 74 151 139 225 143 213 221 46 148 202 29 242 72 207 23 129 156 149 209 179 23 178 87 2 29 0 156 43 209 17 221 65 251 86 169 222 213 206 68 207 97 108 62 115 94 134 138 27 25 210 87 95 232 236)
      #t
      ())
    #(311
      "special case hash"
      #vu8(51 48 53 52 55 55 51 55 54 56)
      #vu8(48 61 2 29 0 166 141 70 120 206 158 12 238 125 219 117 191 75 95 209 98 206 208 156 27 220 54 99 54 24 30 77 205 2 28 40 152 174 207 189 251 51 230 190 30 245 154 32 243 7 114 156 153 84 235 255 95 17 154 218 187 100 43)
      #t
      ())
    #(312
      "special case hash"
      #vu8(49 57 50 55 48 49 55 55 51 56)
      #vu8(48 60 2 28 50 194 143 114 109 121 212 97 15 99 130 195 41 163 169 85 5 159 88 118 239 52 53 133 9 143 64 219 2 28 32 215 223 10 225 31 57 9 255 220 84 177 45 5 189 41 69 5 171 118 5 140 121 198 29 252 238 221)
      #t
      ())
    #(313
      "special case hash"
      #vu8(49 48 53 49 51 50 53 54 51 52)
      #vu8(48 61 2 29 0 144 11 140 182 109 14 43 242 240 196 188 59 242 105 181 33 128 30 136 143 241 124 91 130 134 64 154 194 2 28 106 14 151 54 238 138 87 15 191 118 134 99 12 157 194 97 60 176 132 198 69 16 11 57 36 178 184 243)
      #t
      ())
    #(314
      "special case hash"
      #vu8(52 48 49 57 56 54 54 54 56 50)
      #vu8(48 61 2 29 0 250 212 123 156 167 172 185 77 163 76 197 149 134 169 164 43 149 165 45 128 158 61 88 22 205 31 42 248 2 28 66 200 149 240 90 37 164 67 202 50 160 112 175 247 34 37 17 75 85 119 52 185 102 41 59 101 126 172)
      #t
      ())
    #(315
      "special case hash"
      #vu8(49 48 52 53 48 50 53 55 51 53 48)
      #vu8(48 60 2 28 67 30 102 104 67 160 213 225 49 86 122 177 62 192 172 205 31 239 141 68 30 150 196 184 131 77 78 64 2 28 14 122 139 179 206 245 166 118 207 65 72 218 66 182 20 87 207 159 212 60 138 51 36 29 75 184 113 129)
      #t
      ())
    #(316
      "special case hash"
      #vu8(51 50 54 57 53 56 53 56 48)
      #vu8(48 61 2 28 65 50 126 52 151 166 21 25 44 105 122 230 166 248 98 43 164 147 152 127 97 118 19 231 109 19 79 38 2 29 0 226 83 159 13 97 33 178 125 79 113 119 113 78 165 234 212 244 212 146 132 36 62 62 190 150 79 156 71)
      #t
      ())
    #(317
      "special case hash"
      #vu8(51 48 55 52 54 53 51 50 52 49)
      #vu8(48 61 2 28 55 80 108 205 119 248 9 126 131 214 60 61 82 175 99 76 192 254 152 83 86 136 217 98 176 188 54 137 2 29 0 191 137 236 197 112 67 108 47 184 91 238 243 150 66 38 38 207 3 247 194 220 22 212 105 81 16 68 150)
      #t
      ())
    #(318
      "special case hash"
      #vu8(55 55 49 52 54 56 51 52 56 48)
      #vu8(48 62 2 29 0 201 127 188 80 39 32 75 129 31 76 37 12 202 183 65 226 40 118 209 168 248 198 35 126 169 21 202 56 2 29 0 197 28 239 207 130 163 3 147 91 1 95 5 81 175 7 185 75 178 32 62 43 199 203 211 69 32 163 91)
      #t
      ())
    #(319
      "special case hash"
      #vu8(49 55 57 51 51 56 49 51 50 48)
      #vu8(48 61 2 28 12 31 147 233 188 177 203 221 208 80 139 218 61 173 122 150 221 9 241 50 17 54 112 139 88 106 30 185 2 29 0 148 126 249 165 8 186 150 155 66 44 29 142 22 168 46 138 6 160 1 74 251 115 188 31 27 109 58 49)
      #t
      ())
    #(320
      "special case hash"
      #vu8(52 56 56 48 54 50 53 53 54 54)
      #vu8(48 61 2 29 0 251 12 161 87 44 16 179 150 30 149 57 169 66 58 85 221 8 221 153 31 192 78 19 32 123 128 26 126 2 28 124 156 4 152 54 225 86 107 136 156 148 65 108 4 164 168 97 243 87 61 231 113 190 62 207 192 198 202)
      #t
      ())
    #(321
      "special case hash"
      #vu8(52 57 52 51 55 54 52 56 56 53 55)
      #vu8(48 60 2 28 118 39 100 207 33 99 117 157 252 247 134 59 32 132 156 109 235 87 128 140 178 8 71 152 20 162 67 248 2 28 123 65 169 115 223 33 158 167 23 166 83 189 190 39 102 155 186 87 252 124 122 252 58 254 156 135 214 47)
      #t
      ())
    #(322
      "special case hash"
      #vu8(52 55 48 56 54 56 57 55 56 54)
      #vu8(48 61 2 28 92 193 8 19 136 129 190 12 247 3 93 202 217 77 179 96 99 234 241 72 210 79 237 254 68 114 62 93 2 29 0 209 22 55 164 235 30 46 67 133 147 237 163 137 112 83 122 5 89 11 58 154 80 84 211 175 201 233 188)
      #t
      ())
    #(323
      "special case hash"
      #vu8(51 48 50 57 56 55 50 57 53 49)
      #vu8(48 60 2 28 83 28 6 52 137 5 187 241 109 133 184 235 162 47 93 92 163 62 73 1 7 234 151 159 111 50 42 101 2 28 1 9 33 91 246 210 175 190 223 78 254 72 31 112 73 99 53 95 9 245 158 25 119 190 51 9 114 167)
      #t
      ())
    #(324
      "special case hash"
      #vu8(51 48 49 55 49 57 48 51 56 53)
      #vu8(48 62 2 29 0 189 198 131 165 231 203 229 223 51 44 133 175 140 51 215 237 226 226 114 220 230 180 13 54 13 102 106 207 2 29 0 167 121 166 241 254 146 186 63 121 149 149 40 157 127 55 212 122 17 135 40 93 118 54 51 10 33 122 122)
      #t
      ())
    #(325
      "special case hash"
      #vu8(57 53 54 51 54 51 57 51 57)
      #vu8(48 60 2 28 112 186 65 74 102 111 137 232 64 100 178 249 176 141 80 12 107 177 45 10 94 249 178 63 79 164 108 207 2 28 67 216 139 126 148 63 232 121 47 246 46 212 98 234 48 141 40 247 240 62 77 197 157 98 20 243 5 7)
      #t
      ())
    #(326
      "special case hash"
      #vu8(53 51 48 48 55 54 52 51 53 48)
      #vu8(48 61 2 28 18 101 7 133 47 54 6 186 229 39 116 153 130 197 179 3 135 12 191 153 157 47 1 145 245 251 124 98 2 29 0 244 201 41 137 119 93 212 24 60 98 251 164 35 230 40 252 18 77 177 113 134 71 166 147 22 224 97 78)
      #t
      ())
    #(327
      "special case hash"
      #vu8(49 57 51 52 54 54 52 56 52 52)
      #vu8(48 61 2 29 0 147 66 219 191 108 146 56 118 153 200 76 192 248 176 17 105 12 7 47 143 6 124 253 93 226 19 236 255 2 28 9 50 106 231 3 13 38 32 133 222 137 45 164 207 219 247 135 207 254 170 167 29 254 0 89 226 139 111)
      #t
      ())
    #(328
      "special case hash"
      #vu8(51 53 53 52 53 48 53 53 57 54 50)
      #vu8(48 61 2 28 30 110 55 111 33 67 208 32 132 142 242 101 58 237 247 18 62 39 250 140 103 88 86 85 231 249 229 198 2 29 0 148 200 234 53 103 237 119 38 213 161 69 244 23 186 68 191 122 253 88 110 56 200 55 72 220 34 120 48)
      #t
      ())
    #(329
      "special case hash"
      #vu8(49 51 48 49 55 50 50 49 48 56)
      #vu8(48 61 2 29 0 153 246 122 7 106 116 239 146 211 60 184 158 57 148 68 35 214 182 13 100 121 242 42 99 194 178 230 161 2 28 28 188 247 186 167 112 44 220 23 93 77 204 61 106 1 110 144 4 110 191 116 222 81 189 223 65 222 172)
      #t
      ())
    #(330
      "special case hash"
      #vu8(53 54 49 55 54 57 49 54 57 50)
      #vu8(48 61 2 28 97 236 138 138 110 168 46 132 34 2 243 39 202 62 89 113 82 27 225 60 109 198 5 231 121 250 155 71 2 29 0 159 135 41 76 112 38 118 204 171 138 107 49 174 245 170 16 65 57 218 124 188 105 177 166 212 215 122 109)
      #t
      ())
    #(331
      "special case hash"
      #vu8(51 53 56 49 57 51 50 53 51 52)
      #vu8(48 61 2 28 70 127 251 211 55 44 149 84 117 55 33 42 247 7 228 18 145 158 179 115 27 166 97 162 242 14 202 89 2 29 0 190 238 243 180 179 37 213 0 79 13 189 153 167 53 119 141 181 62 10 163 129 160 105 250 104 240 8 82)
      #t
      ())
    #(332
      "special case hash"
      #vu8(49 53 55 49 54 54 55 56 55 52 52)
      #vu8(48 61 2 29 0 212 187 235 129 146 47 14 95 16 214 55 164 141 190 61 128 203 83 82 72 118 130 29 194 250 187 52 87 2 28 35 248 255 9 25 213 102 224 90 38 172 151 213 27 220 121 186 156 146 14 45 108 119 123 141 124 212 228)
      #t
      ())
    #(333
      "special case hash"
      #vu8(51 49 57 57 55 56 51 51 54 48)
      #vu8(48 61 2 29 0 193 81 171 40 215 162 57 134 2 28 173 15 47 147 123 97 196 173 171 33 172 245 8 28 173 229 101 133 2 28 56 106 164 9 39 203 196 82 22 86 139 35 246 164 196 154 234 181 37 233 75 7 75 142 241 106 173 100)
      #t
      ())
    #(334
      "special case hash"
      #vu8(55 52 48 52 55 53 48 56 50)
      #vu8(48 61 2 28 64 164 182 16 105 96 193 178 73 193 22 213 57 201 171 39 249 146 240 193 233 45 142 4 169 25 167 73 2 29 0 129 29 52 218 22 107 36 71 162 218 14 56 33 207 241 44 212 122 224 251 39 63 177 141 248 48 209 121)
      #t
      ())
    #(335
      "special case hash"
      #vu8(52 49 55 52 51 54 53 51 57)
      #vu8(48 60 2 28 104 8 248 193 207 58 5 23 36 208 116 235 220 133 252 220 20 152 115 36 96 90 129 219 117 145 186 166 2 28 2 111 94 254 242 198 87 188 4 140 136 161 101 248 133 98 142 252 173 41 61 128 165 207 114 133 84 145)
      #t
      ())
    #(336
      "special case hash"
      #vu8(49 50 51 53 54 53 56 56 56 57)
      #vu8(48 61 2 29 0 175 113 119 236 130 185 7 202 254 58 195 191 176 174 47 42 42 131 85 56 12 232 179 18 23 253 179 240 2 28 5 40 42 29 200 28 180 88 241 197 86 135 125 194 51 1 205 143 105 165 38 157 246 131 186 29 149 155)
      #t
      ())
    #(337
      "special case hash"
      #vu8(50 52 50 57 50 53 53 52 48 52)
      #vu8(48 60 2 28 76 184 117 3 189 224 172 163 35 249 59 4 225 115 95 132 188 14 16 27 168 183 19 50 251 64 206 76 2 28 11 188 89 218 193 73 165 100 71 113 17 155 0 209 215 41 5 228 176 128 249 175 245 214 164 46 21 101)
      #t
      ())
    #(338
      "special case hash"
      #vu8(53 49 56 48 51 48 50 53 52 54 54)
      #vu8(48 62 2 29 0 174 9 113 142 14 110 127 176 35 112 86 245 49 34 28 12 147 48 107 66 106 152 90 197 26 112 168 49 2 29 0 181 5 153 164 22 85 60 52 16 42 145 121 144 199 12 63 159 110 208 23 25 250 158 0 156 20 162 48)
      #t
      ())
    #(339
      "special case hash"
      #vu8(52 52 55 54 51 57 56 50 48 48)
      #vu8(48 61 2 28 123 214 31 117 97 14 173 49 42 34 125 83 104 224 147 96 106 70 48 102 56 37 73 11 57 42 90 101 2 29 0 134 85 43 182 244 243 86 67 73 252 63 180 112 115 195 194 141 16 217 218 245 185 22 106 130 248 166 187)
      #t
      ())
    #(340
      "special case hash"
      #vu8(57 48 54 48 48 51 53 50 49 50)
      #vu8(48 62 2 29 0 163 218 241 35 188 138 62 57 62 141 102 155 215 108 68 134 163 230 91 209 111 195 144 224 155 35 8 201 2 29 0 156 104 12 219 202 157 58 163 120 207 230 4 129 178 230 141 59 54 135 54 62 103 22 84 45 165 10 114)
      #t
      ())
    #(341
      "special case hash"
      #vu8(49 55 53 54 48 53 51 48 57 56)
      #vu8(48 62 2 29 0 183 130 240 175 101 82 163 243 5 48 148 47 53 22 12 9 236 119 208 101 149 172 235 157 168 210 70 172 2 29 0 244 27 130 22 255 41 252 146 101 85 39 198 174 250 192 186 184 57 193 133 37 192 51 22 180 106 78 223)
      #t
      ())
    #(342
      "special case hash"
      #vu8(52 57 56 48 56 54 48 48 51 56)
      #vu8(48 61 2 28 62 233 69 200 122 157 78 116 216 116 113 248 62 79 121 25 69 183 115 58 27 199 95 230 115 143 35 236 2 29 0 171 6 133 141 17 54 22 182 148 211 111 250 241 115 101 103 211 137 94 0 94 128 245 33 49 11 94 208)
      #t
      ())
    #(343
      "special case hash"
      #vu8(51 54 50 49 56 55 53 51 51 53)
      #vu8(48 60 2 28 115 55 82 250 43 144 18 28 1 135 129 112 242 1 157 156 154 75 28 149 232 42 202 177 138 233 93 113 2 28 53 142 181 214 153 66 180 181 208 217 0 187 132 61 121 249 10 245 70 99 179 169 38 250 189 8 29 66)
      #t
      ())
    #(344
      "special case hash"
      #vu8(54 54 52 51 51 51 52 55 50 49)
      #vu8(48 60 2 28 114 250 12 179 136 99 192 110 83 84 2 224 16 186 199 9 239 75 235 11 56 17 140 123 19 48 142 131 2 28 51 235 33 246 192 129 175 167 219 98 194 248 207 120 237 25 130 203 118 42 19 5 9 189 181 63 23 116)
      #t
      ())
    #(345
      "special case hash"
      #vu8(52 52 53 52 57 52 50 55 56 50)
      #vu8(48 61 2 29 0 146 119 202 109 183 53 244 75 255 22 199 206 67 173 69 112 123 198 166 180 81 230 69 50 184 107 84 175 2 28 67 60 105 160 114 52 159 56 20 198 54 100 24 211 235 127 176 85 9 173 9 154 254 239 65 28 110 17)
      #t
      ())
    #(346
      "special case hash"
      #vu8(50 48 49 56 52 52 48 50)
      #vu8(48 60 2 28 55 224 94 187 55 110 222 13 63 199 82 143 25 219 228 163 142 79 49 2 149 5 142 33 115 248 137 0 2 28 79 141 92 166 39 212 60 84 219 102 116 225 70 45 18 196 38 3 205 220 111 48 103 48 122 176 77 79)
      #t
      ())
    #(347
      "special case hash"
      #vu8(53 56 49 51 50 49 55 51)
      #vu8(48 61 2 29 0 164 25 208 159 100 210 142 76 166 23 24 119 144 208 70 227 178 155 135 220 214 0 126 174 239 8 174 240 2 28 57 127 174 86 153 97 71 143 215 208 117 163 3 152 166 70 217 92 0 248 23 22 0 225 202 35 53 193)
      #t
      ())
    #(348
      "special case hash"
      #vu8(49 49 56 51 56 54 49 56 49 49)
      #vu8(48 60 2 28 5 234 15 4 233 180 235 59 98 252 248 241 241 209 32 229 138 147 44 169 160 78 140 100 187 238 83 126 2 28 22 102 51 163 200 210 181 198 36 109 166 158 6 159 47 9 167 145 46 252 53 92 64 83 2 178 152 75)
      #t
      ())
    #(349
      "special case hash"
      #vu8(49 57 50 50 54 48 50 57 48 54)
      #vu8(48 62 2 29 0 250 42 98 101 233 251 211 23 252 218 10 222 172 48 127 226 240 169 74 253 99 3 201 25 133 216 77 16 2 29 0 219 147 240 32 18 132 181 182 106 21 234 23 127 52 194 124 109 128 71 156 24 219 68 243 134 232 93 55)
      #t
      ())
    #(350
      "special case hash"
      #vu8(57 55 53 49 52 51 50 48 55)
      #vu8(48 61 2 28 45 88 194 208 203 190 114 21 66 75 148 48 6 221 86 210 49 89 234 16 20 5 105 220 34 102 59 252 2 29 0 141 155 222 192 99 154 35 110 149 253 179 93 194 206 61 99 247 213 68 123 109 211 217 82 39 251 160 161)
      #t
      ())
    #(351
      "special case hash"
      #vu8(56 51 49 53 49 49 54 51 56 51)
      #vu8(48 60 2 28 27 198 74 175 131 81 82 117 253 49 135 161 141 54 81 199 92 232 91 83 245 87 158 207 95 25 3 52 2 28 46 217 252 114 59 215 35 205 76 139 98 183 150 142 95 5 141 37 170 111 107 180 94 107 9 51 119 147)
      #t
      ())
    #(352
      "special case hash"
      #vu8(51 50 54 51 49 54 56 49 50)
      #vu8(48 60 2 28 36 13 139 5 136 146 116 215 22 245 117 136 83 99 32 119 90 254 216 36 215 159 65 243 44 53 231 40 2 28 37 3 26 7 61 99 129 101 248 192 180 106 40 224 8 241 222 159 160 207 114 109 49 98 105 246 105 214)
      #t
      ())
    #(353
      "special case hash"
      #vu8(52 48 50 57 54 56 55 49 51 54)
      #vu8(48 62 2 29 0 251 47 129 189 78 34 35 12 12 149 167 160 142 175 154 102 143 107 92 109 50 191 250 245 56 190 209 157 2 29 0 138 232 193 38 179 22 129 41 167 32 166 116 250 77 187 129 217 79 74 62 134 43 131 78 163 40 237 74)
      #t
      ())
    #(354
      "special case hash"
      #vu8(54 51 50 48 56 56 49 49 57 49)
      #vu8(48 61 2 29 0 253 205 243 148 13 91 155 56 65 250 14 230 103 212 237 154 199 78 12 220 222 150 65 39 15 46 101 141 2 28 49 103 242 182 96 27 115 123 196 167 0 221 9 64 239 134 16 126 181 124 57 239 175 107 61 113 253 56)
      #t
      ())
    #(355
      "special case hash"
      #vu8(53 50 50 53 51 57 48 55 56 48)
      #vu8(48 61 2 28 70 64 141 26 199 74 91 208 60 63 192 134 133 242 116 62 179 247 196 34 3 246 54 6 119 90 66 80 2 29 0 152 19 228 112 75 86 95 148 229 99 166 83 169 212 224 49 14 188 112 85 114 159 137 202 75 2 217 240)
      #t
      ())
    #(356
      "special case hash"
      #vu8(49 51 52 57 51 57 51 54 57 52)
      #vu8(48 61 2 29 0 201 9 96 113 201 41 115 25 142 250 198 157 107 57 18 228 225 66 72 187 7 118 2 135 12 84 60 242 2 28 99 28 153 92 171 143 12 207 94 61 203 48 212 185 149 220 150 210 87 63 172 198 237 149 97 203 157 147)
      #t
      ())
    #(357
      "special case hash"
      #vu8(49 48 51 57 55 57 54 48 55 54 49)
      #vu8(48 61 2 29 0 181 91 178 218 1 233 155 8 246 77 206 198 214 215 70 181 98 106 236 110 174 35 120 253 29 183 33 7 2 28 7 243 109 78 223 108 129 18 226 166 185 102 91 25 96 95 65 201 68 154 126 171 120 57 214 56 206 16)
      #t
      ())
    #(358
      "Signature generated without truncating the hash"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 230 48 148 155 6 253 224 106 118 60 212 87 252 23 118 160 6 147 44 15 224 129 49 244 74 161 202 65 2 28 61 231 228 61 54 113 250 0 219 113 208 62 127 77 159 128 176 214 215 237 182 149 3 46 9 185 61 68)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 7 142 77 26 86 230 244 133 199 133 208 26 140 185 187 46 245 199 100 111 177 232 130 40 171 207 94 1 202 31 178 108 147 102 205 145 134 40 3 61 173 149 24 168 248 169 255 74 81 60 102 5 245 205 170 233)
  :der-encode
  #t
  :tests
  '(#(359
      "k*G has a large x-coordinate"
      #vu8(49 50 51 52 48 48)
      #vu8(48 48 2 15 0 233 92 31 71 15 193 236 34 214 186 163 163 213 193 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 58)
      #t
      ())
    #(360
      "r too large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255 255 255 255 254 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 58)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 34 82 152 195 170 180 238 99 152 52 254 22 196 40 150 246 71 143 53 23 88 144 100 113 125 64 149 158 114 136 27 221 239 214 239 114 79 236 51 249 44 146 212 250 47 255 231 124 226 10 50 120 69 177 32 31)
  :der-encode
  #t
  :tests
  '(#(361
      "r,s are large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 59)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 68 139 173 23 182 56 245 83 114 178 86 198 113 122 192 254 68 60 32 175 19 51 72 190 143 114 133 119 66 28 112 26 230 1 93 169 138 46 196 20 1 34 9 21 136 192 19 167 79 215 139 56 20 201 129 178)
  :der-encode
  #t
  :tests
  '(#(362
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 2 28 61 80 82 105 27 141 200 157 235 173 54 4 102 242 163 158 130 232 174 42 239 183 124 60 146 173 124 209)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 20 110 41 254 87 235 191 185 31 37 98 222 18 78 98 64 142 108 62 149 28 150 250 187 131 210 67 202 128 16 103 132 141 41 65 10 22 17 101 104 102 227 206 206 207 197 105 9 19 117 182 116 215 228 209 103)
  :der-encode
  #t
  :tests
  '(#(363
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 2 29 0 191 25 171 77 62 191 90 26 73 215 101 144 147 8 218 168 140 43 123 227 150 157 181 82 234 48 86 43)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 250 217 141 246 165 251 217 243 192 35 242 171 128 156 87 199 45 227 57 109 28 174 75 195 93 120 216 209 136 158 55 42 144 24 158 206 143 188 105 15 227 205 238 239 56 171 18 255 218 114 31 50 248 73 174 80)
  :der-encode
  #t
  :tests
  '(#(364
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 3 2 1 1)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 210 234 235 107 230 181 220 237 72 213 149 185 95 115 176 105 244 154 7 133 114 199 77 188 85 127 162 90 166 56 140 67 98 230 170 18 171 156 19 80 205 103 137 208 149 84 69 217 25 142 204 58 70 24 218 115)
  :der-encode
  #t
  :tests
  '(#(365
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 3 2 1 3)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 45 246 206 96 25 215 126 60 110 4 144 138 63 222 91 136 51 249 196 147 191 60 198 86 142 61 64 203 12 237 46 156 173 46 211 99 253 32 174 185 152 59 203 34 9 31 203 85 156 31 111 213 56 160 174 4)
  :der-encode
  #t
  :tests
  '(#(366
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 3 2 1 4)
      #t
      ())
    #(367
      "r is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 64 2 1 4)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 147 170 147 131 135 137 120 38 219 35 177 153 3 197 138 50 248 38 157 147 165 54 106 122 103 62 48 218 39 172 90 81 91 112 129 205 116 191 105 82 129 20 36 23 40 218 38 174 104 149 232 63 234 37 190 196)
  :der-encode
  #t
  :tests
  '(#(368
      "s is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 3 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 111 0 196)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 9 205 208 17 154 57 42 39 28 64 85 250 194 250 113 252 198 120 185 195 24 191 185 13 209 173 10 214 77 189 65 135 38 240 211 240 191 12 238 122 27 54 109 151 17 121 60 131 146 6 230 32 92 65 110 189)
  :der-encode
  #t
  :tests
  '(#(369
      "small r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 35 2 2 1 0 2 29 0 201 147 38 76 153 50 100 201 147 38 76 153 50 100 17 210 229 91 50 20 168 214 117 40 129 42 85 171)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 143 113 30 159 190 164 27 210 90 173 245 132 153 153 38 162 156 40 1 231 219 178 235 29 190 13 21 134 132 26 20 59 222 234 201 150 155 232 127 87 180 215 26 70 107 43 106 237 36 232 84 176 117 112 230 41)
  :der-encode
  #t
  :tests
  '(#(370
      "smallish r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 39 2 7 45 155 77 52 121 82 204 2 28 62 133 213 100 116 181 197 95 190 134 96 132 66 168 75 43 240 147 183 215 95 83 164 114 80 225 199 12)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 194 136 221 216 23 20 169 231 102 179 90 3 200 53 251 225 165 44 84 11 116 123 17 186 62 186 189 204 178 107 208 73 189 48 136 181 83 22 34 97 235 147 171 90 117 216 115 191 202 129 34 162 41 226 207 199)
  :der-encode
  #t
  :tests
  '(#(371
      "100-bit r and small s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 13 16 51 230 126 55 179 43 68 85 128 191 78 251 2 28 2 253 2 253 2 253 2 253 2 253 2 253 2 253 0 67 164 253 45 163 23 36 115 8 199 77 198 184)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 253 147 30 143 8 177 44 168 42 107 5 14 44 40 27 0 105 37 138 200 81 19 16 8 249 194 133 60 139 234 187 75 254 255 152 190 78 226 63 144 181 82 204 195 138 114 151 107 199 30 118 55 218 210 127 186)
  :der-encode
  #t
  :tests
  '(#(372
      "small r and 100 bit s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 35 2 2 1 0 2 29 0 208 84 52 171 172 216 89 237 116 24 94 117 183 81 198 217 246 12 121 33 218 207 187 142 25 205 186 142)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 29 253 211 80 228 89 3 239 68 162 138 207 115 153 154 34 167 6 165 137 163 221 32 192 81 219 228 229 65 193 2 31 243 233 100 110 173 62 152 88 201 193 189 174 30 21 50 182 155 46 197 47 133 70 245 115)
  :der-encode
  #t
  :tests
  '(#(373
      "100-bit r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 13 6 37 34 187 211 236 190 124 57 233 62 124 36 2 29 0 208 84 52 171 172 216 89 237 116 24 94 117 183 81 198 217 246 12 121 33 218 207 187 142 25 205 186 142)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 252 6 232 66 72 57 235 149 32 49 149 249 238 18 104 124 121 11 188 201 167 64 212 12 27 187 207 102 13 26 250 71 54 55 215 8 149 41 84 161 128 103 180 203 255 229 132 233 232 145 64 53 65 194 31 167)
  :der-encode
  #t
  :tests
  '(#(374
      "r and s^-1 are close to n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 41 189 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 200 71 214 117 119 2 219 93 71 202 246 18 158 134 90 162 45 107 85 197 69 247 12 231 231 173 14 202 246 155 244 198 36 17 30 241 206 146 233 225 13 18 111 12 237 169 133 29 204 83 153 57 48 50 77 62)
  :der-encode
  #t
  :tests
  '(#(375
      "s == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 1 1)
      #t
      ())
    #(376
      "s == 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 1 0)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 97 192 208 159 196 13 213 154 123 82 129 175 84 253 77 184 129 153 151 207 49 33 42 75 53 207 96 120 165 94 241 76 175 172 213 124 165 1 149 170 25 98 170 125 1 247 89 93 118 211 66 216 63 237 68 236)
  :der-encode
  #t
  :tests
  '(#(377
      "point at infinity during verify"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 30 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 102 83 146 117 199 213 174 93 173 37 7 167 22 156 72 169 207 240 103 196 214 175 235 34 86 18 57 182 18 238 201 167 230 61 96 44 248 127 53 129 189 235 25 206 153 76 72 180 16 121 239 129 134 51 157 253)
  :der-encode
  #t
  :tests
  '(#(378
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 31 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 30)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 67 164 90 223 60 210 168 102 224 30 196 82 105 246 4 175 2 106 68 131 151 60 196 53 107 71 57 102 42 132 3 245 241 79 205 115 125 42 237 236 19 106 83 68 23 224 209 158 27 152 213 57 68 16 13 15)
  :der-encode
  #t
  :tests
  '(#(379
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 31 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 31)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 46 85 249 36 53 238 57 103 8 228 128 94 58 44 76 97 82 198 158 22 113 233 214 56 124 86 245 141 59 74 23 58 217 244 117 68 133 134 174 15 83 30 224 127 21 85 62 186 152 40 178 188 141 114 197 241)
  :der-encode
  #t
  :tests
  '(#(380
      "u1 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 28 52 45 174 117 26 99 163 202 129 137 207 52 43 59 52 234 170 37 101 226 199 226 97 33 193 191 213 67)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 91 193 235 10 182 52 145 70 191 19 210 170 253 157 68 201 9 57 125 57 193 35 113 255 126 86 177 38 76 127 133 0 74 34 170 8 201 59 123 20 192 105 112 250 25 98 94 103 28 31 181 177 110 138 11 213)
  :der-encode
  #t
  :tests
  '(#(381
      "u1 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 29 0 203 210 81 138 229 156 92 53 126 118 48 203 212 195 225 184 54 147 138 91 75 250 200 35 154 156 84 250)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 20 71 101 185 215 135 36 186 188 67 88 178 41 223 152 233 214 77 162 39 36 56 30 191 228 29 126 114 134 233 88 194 246 119 155 142 167 100 51 205 77 206 10 228 205 48 8 117 172 28 122 210 24 229 122 85)
  :der-encode
  #t
  :tests
  '(#(382
      "u2 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 227 252 111 238 33 110 177 250 138 234 115 252 40 2 112 155 44 92 210 159 153 237 150 75 204 8 6 170 45 252 99 75 144 80 172 245 104 150 62 57 150 172 240 242 199 101 106 59 192 240 145 215 170 26 223 122)
  :der-encode
  #t
  :tests
  '(#(383
      "u2 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 29 0 170 170 170 170 170 170 170 170 170 170 170 170 170 170 15 23 64 123 74 212 13 62 27 131 146 232 28 41)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 229 123 245 157 130 54 183 183 137 212 89 18 238 186 166 157 186 86 59 199 144 252 169 158 206 93 166 101 139 221 128 184 109 110 156 170 46 144 134 210 38 97 66 129 204 3 138 35 35 8 58 65 132 5 122 55)
  :der-encode
  #t
  :tests
  '(#(384
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 188 15 58 39 8 203 225 67 128 131 69 17 99 189 203 101 121 50 108 202 79 222 230 142 211 125 99 63)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 210 97 46 210 15 231 134 72 75 137 85 214 88 32 7 118 236 33 148 38 71 156 105 25 79 140 27 175 163 175 58 167 120 193 117 31 68 116 204 15 242 219 42 131 76 35 46 196 158 156 225 66 165 17 112 183)
  :der-encode
  #t
  :tests
  '(#(385
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 45 68 101 165 91 40 47 37 47 43 71 249 247 191 192 186 64 236 77 202 41 245 103 148 11 45 144 244)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 76 112 205 10 160 109 158 227 106 22 32 43 207 200 145 206 180 26 38 224 188 221 233 217 61 168 0 26 171 119 181 7 199 121 49 252 126 226 144 205 167 183 175 106 217 13 12 151 184 54 174 27 101 182 236 203)
  :der-encode
  #t
  :tests
  '(#(386
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 127 232 8 184 126 14 110 118 54 76 227 47 222 18 246 146 214 157 211 179 98 239 76 244 153 224 52 24)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 239 183 114 47 206 170 140 209 145 98 238 232 178 147 181 141 203 208 253 211 220 252 214 230 186 55 186 165 101 157 71 236 215 210 183 246 95 174 211 233 169 181 84 219 25 233 105 72 161 197 185 84 53 31 35 163)
  :der-encode
  #t
  :tests
  '(#(387
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 184 54 201 87 52 45 117 126 203 210 81 138 229 155 180 72 158 204 232 182 88 202 16 232 34 236 200 35)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 121 229 119 248 48 61 78 215 76 58 25 202 190 62 195 91 211 156 183 137 188 115 9 51 90 87 16 230 67 204 67 125 87 147 147 31 146 238 165 96 57 178 32 136 22 86 147 167 217 237 15 252 97 136 170 36)
  :der-encode
  #t
  :tests
  '(#(388
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 108 149 115 66 215 87 236 189 37 24 174 89 197 194 244 235 221 149 202 237 246 28 104 184 147 135 243 201)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 115 94 91 194 158 229 82 66 167 25 83 244 211 25 84 188 140 23 60 64 189 132 1 125 188 7 109 74 206 21 207 168 101 161 179 118 46 97 221 36 207 97 2 43 181 113 165 252 139 93 94 126 168 11 36 5)
  :der-encode
  #t
  :tests
  '(#(389
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 217 42 230 133 174 175 217 122 74 49 92 179 139 133 233 215 187 43 149 219 236 56 209 113 39 15 231 146)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 238 37 88 184 183 100 34 135 205 238 220 139 202 116 9 116 38 74 102 126 94 222 254 121 231 160 57 0 92 243 98 228 127 172 166 73 207 155 143 108 146 20 83 158 242 238 230 184 105 53 24 92 31 219 52 146)
  :der-encode
  #t
  :tests
  '(#(390
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 52 45 117 126 203 210 81 138 229 156 92 53 126 118 1 59 121 240 135 230 46 88 146 63 126 165 192 69)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 248 180 195 120 189 95 65 123 86 42 225 39 243 152 37 162 176 87 112 8 155 124 175 147 36 215 206 26 80 112 129 117 186 36 94 156 21 43 255 60 169 87 67 226 97 182 245 121 50 143 48 104 15 182 162 160)
  :der-encode
  #t
  :tests
  '(#(391
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 33 248 98 236 123 154 15 94 63 190 93 119 78 32 165 158 179 195 65 185 225 255 33 91 68 111 99 127)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 94 182 63 15 123 126 198 103 88 134 112 2 46 47 11 17 36 177 50 235 225 108 20 61 110 210 70 2 175 43 39 185 42 68 154 78 220 32 38 125 37 208 162 56 180 58 167 40 147 72 161 55 141 176 121 222)
  :der-encode
  #t
  :tests
  '(#(392
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 67 240 197 216 247 52 30 188 127 124 186 238 156 65 75 61 103 134 131 115 195 254 66 182 136 222 198 254)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 40 10 199 241 26 250 102 70 92 55 235 168 32 170 143 57 61 19 197 99 64 34 51 60 122 37 36 189 92 99 177 233 237 24 17 91 88 155 86 39 12 92 50 129 250 151 6 15 29 48 174 244 101 244 69 226)
  :der-encode
  #t
  :tests
  '(#(393
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 101 233 40 197 114 206 46 26 191 59 24 101 234 97 240 220 27 73 197 45 165 253 100 17 205 78 42 125)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 205 198 62 115 216 214 244 248 119 10 151 217 59 222 78 25 116 162 119 173 173 83 213 0 203 7 9 7 83 60 9 55 148 136 203 52 76 224 27 178 154 47 18 214 224 185 70 162 121 199 245 212 120 49 71 124)
  :der-encode
  #t
  :tests
  '(#(394
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 63 244 4 92 63 7 55 59 27 38 113 151 239 9 123 73 107 78 233 217 177 119 166 122 76 240 26 12)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 94 150 60 233 7 8 83 155 0 29 130 27 152 132 244 110 228 186 69 43 252 213 57 116 29 143 232 56 76 141 200 116 50 155 208 183 143 224 78 2 145 241 57 7 255 87 35 232 209 81 70 197 70 157 125 155)
  :der-encode
  #t
  :tests
  '(#(395
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 178 54 74 232 80 20 177 73 184 108 116 30 184 190)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 170 127 47 146 248 174 153 201 189 172 6 94 101 154 74 42 5 64 242 19 105 56 51 52 97 59 96 134 148 218 21 225 19 242 17 166 231 147 156 175 31 32 172 194 121 163 181 181 176 24 100 81 236 134 3 180)
  :der-encode
  #t
  :tests
  '(#(396
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 133 95 91 45 200 228 110 196 40 165 147 247 50 25 207 101 218 231 147 232 52 110 48 204 55 1 48 156)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 185 117 41 251 74 30 2 181 232 29 119 176 231 144 154 47 222 133 122 30 220 159 166 96 214 0 200 154 229 168 201 197 88 133 204 32 245 79 92 143 66 63 120 92 175 66 61 119 186 10 252 49 252 22 241 49)
  :der-encode
  #t
  :tests
  '(#(397
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 45 181 246 26 234 129 114 118 175 32 100 225 4 199 163 14 50 3 76 181 38 221 10 172 250 86 86 111)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 164 179 68 152 29 10 130 101 70 133 93 33 154 180 171 89 211 255 51 6 118 217 59 149 83 128 66 120 65 55 14 77 208 222 77 9 108 32 136 31 195 90 154 15 243 119 181 240 109 238 237 193 159 235 72 174)
  :der-encode
  #t
  :tests
  '(#(398
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 132 166 199 81 62 95 72 192 127 255 255 255 255 255 135 19 243 203 161 41 62 79 62 149 89 127 230 189)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 214 86 4 139 253 101 175 131 214 220 63 124 183 210 64 201 224 205 238 110 148 107 21 171 177 63 75 51 214 21 128 161 89 202 249 253 135 25 75 124 157 120 117 62 14 0 86 10 32 141 52 199 221 76 106 99)
  :der-encode
  #t
  :tests
  '(#(399
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 108 117 19 229 244 140 7 255 255 255 255 255 255 255 157 33 253 27 49 84 76 177 60 168 106 117 178 94)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 234 107 49 0 41 6 39 211 229 216 160 125 125 22 112 34 197 142 123 218 194 112 23 53 147 24 153 172 57 188 165 106 112 44 80 141 213 27 201 108 99 150 124 53 158 146 219 121 15 114 99 29 135 94 7 25)
  :der-encode
  #t
  :tests
  '(#(400
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 216 234 39 203 233 24 15 255 255 255 255 255 255 255 58 67 250 54 98 168 153 98 121 80 212 235 100 188)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 145 44 255 58 180 51 143 31 9 183 31 144 157 214 129 134 207 171 235 116 107 234 227 55 0 221 146 63 248 50 70 28 207 249 184 60 37 117 75 193 222 248 241 12 95 251 220 160 18 121 20 207 36 24 72 35)
  :der-encode
  #t
  :tests
  '(#(401
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 62 95 72 192 127 255 255 255 255 255 255 255 255 255 199 36 150 140 14 207 158 215 131 116 74 115 55 179)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 105 82 145 76 233 10 14 101 176 63 255 167 38 63 4 163 247 190 3 204 107 128 30 18 4 218 211 19 240 71 38 231 105 137 181 176 234 191 83 120 125 140 159 7 84 149 6 209 40 161 72 166 180 233 70 16)
  :der-encode
  #t
  :tests
  '(#(402
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 191 255 255 255 255 255 255 255 255 255 255 255 255 255 61 135 187 68 200 51 187 56 77 15 34 76 205 222)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 134 236 157 59 167 198 217 73 128 105 160 119 97 169 216 94 4 250 33 253 89 156 106 38 100 232 98 84 197 144 10 164 185 136 43 50 152 60 94 2 159 230 165 87 138 200 24 231 154 203 32 190 239 115 232 238)
  :der-encode
  #t
  :tests
  '(#(403
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 100 108 149 208 160 41 98 147 112 216 232 61 113 127)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 176 140 52 233 65 103 67 182 163 245 44 66 4 26 95 195 1 31 100 223 251 84 135 91 198 144 57 62 106 124 103 131 54 130 232 23 25 249 40 223 85 250 172 36 244 136 2 133 21 178 110 3 193 201 160 44)
  :der-encode
  #t
  :tests
  '(#(404
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 63 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 32)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 10 7 212 166 75 66 230 16 150 208 183 221 150 116 128 12 228 105 22 97 113 89 71 110 202 233 64 88 111 11 5 132 219 169 217 251 92 218 35 162 200 46 59 40 177 193 72 97 80 163 65 159 238 204 69 4)
  :der-encode
  #t
  :tests
  '(#(405
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 150 218 251 13 117 64 185 59 87 144 50 112 130 99 92 216 137 94 30 121 157 93 25 249 43 89 64 86)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 220 182 4 79 141 44 110 59 171 96 241 62 109 161 137 110 37 4 208 118 156 42 248 36 115 43 83 38 184 10 84 55 185 213 235 230 216 235 73 231 15 73 34 13 211 226 195 199 134 91 135 236 152 181 52 102)
  :der-encode
  #t
  :tests
  '(#(406
      "point duplication during verification"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 196 69 3 218 232 93 213 33 7 128 240 41 40 179 217 39 23 28 87 143 134 3 209 107 36 6 99 199 2 29 0 167 36 177 254 66 81 213 182 207 161 94 234 92 100 139 254 215 115 47 187 173 201 48 12 139 164 0 50)
      #t
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 220 182 4 79 141 44 110 59 171 96 241 62 109 161 137 110 37 4 208 118 156 42 248 36 115 43 83 38 71 245 171 200 70 42 20 25 39 20 182 24 240 182 221 241 44 29 60 56 121 164 120 19 103 74 203 155)
  :der-encode
  #t
  :tests
  '(#(407
      "duplication bug"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 196 69 3 218 232 93 213 33 7 128 240 41 40 179 217 39 23 28 87 143 134 3 209 107 36 6 99 199 2 29 0 167 36 177 254 66 81 213 182 207 161 94 234 92 100 139 254 215 115 47 187 173 201 48 12 139 164 0 50)
      #f
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 176 140 16 187 210 119 238 106 181 1 170 113 20 23 51 203 25 107 116 222 70 62 173 94 162 36 2 44 127 104 188 222 234 215 215 76 182 24 110 50 33 152 70 66 74 146 109 236 96 178 162 39 65 26 232 5)
  :der-encode
  #t
  :tests
  '(#(408
      "comparison with point at infinity "
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 28 51 51 51 51 51 51 51 51 51 51 51 51 51 51 4 134 249 190 150 114 208 197 213 13 223 69 162 12)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 177 186 190 253 3 246 247 56 252 134 211 44 162 69 245 219 33 246 126 123 217 25 7 155 215 53 243 91 217 173 94 104 134 220 252 127 34 114 185 140 72 167 196 63 28 87 160 36 242 240 84 252 89 187 67 84)
  :der-encode
  #t
  :tests
  '(#(409
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 34 43 117 102 242 108 135 118 6 111 47 64 101 228 230 172 69 163 6 195 6 174 171 130 80 182 82 252 188 99 0 73 97 165 84 4 124 3 101 92 234 125 172 136 229 115 253 69 202 75 64 123 99 150 114 144)
  :der-encode
  #t
  :tests
  '(#(410
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 2 29 0 219 109 182 219 109 182 219 109 182 219 109 182 219 108 238 212 192 158 132 199 126 189 145 22 225 115 145 235)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 249 151 63 104 135 5 220 16 37 190 183 38 99 223 111 132 189 164 161 74 121 229 149 61 105 146 105 186 136 111 1 230 9 52 85 150 73 68 104 55 141 117 140 97 143 73 226 22 40 125 133 85 74 248 235 104)
  :der-encode
  #t
  :tests
  '(#(411
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 2 28 51 51 51 51 51 51 51 51 51 51 51 51 51 51 4 134 249 190 150 114 208 197 213 13 223 69 162 12)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 193 8 202 138 222 239 130 241 64 207 21 138 112 211 31 10 91 102 216 102 18 181 212 240 14 36 51 134 92 240 242 250 68 102 235 53 39 156 169 157 239 23 134 72 53 149 74 116 209 46 108 126 132 148 6 11)
  :der-encode
  #t
  :tests
  '(#(412
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 2 29 0 204 204 204 204 204 204 204 204 204 204 204 204 204 204 18 27 230 250 89 203 67 23 84 55 125 22 136 49)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 10 196 105 232 22 86 90 106 116 190 200 33 202 32 184 138 97 1 138 3 53 25 155 93 123 217 105 233 70 51 85 199 58 45 156 81 4 159 122 148 80 154 154 196 234 1 101 118 59 161 19 163 13 185 153 226)
  :der-encode
  #t
  :tests
  '(#(413
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 2 28 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 82)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 102 46 179 40 210 79 181 72 245 23 146 181 86 58 195 203 35 127 10 101 25 148 96 238 191 202 165 195 231 88 209 62 123 65 155 65 124 140 151 196 114 124 57 253 55 48 69 225 135 146 173 128 118 176 114 180)
  :der-encode
  #t
  :tests
  '(#(414
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 2 28 14 177 14 90 185 95 172 222 212 6 16 41 214 58 70 244 111 18 148 116 17 242 234 86 26 89 32 87)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 174 109 156 6 86 211 99 178 30 86 43 86 243 200 91 109 119 166 172 198 100 173 87 5 52 26 194 98 221 58 129 79 248 249 4 158 70 53 53 29 37 102 155 80 181 27 48 226 165 186 252 159 206 23 30 144)
  :der-encode
  #t
  :tests
  '(#(415
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 170 147 180 10 136 241 114 161 72 26 173 49 47 75 204 10 125 146 16 62 66 254 235 152 107 205 196 164 230 42 124 46 77 211 79 183 229 24 99 15 238 165 74 101 129 206 95 250 172 167 222 234 59 38 214 71)
  :der-encode
  #t
  :tests
  '(#(416
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 2 29 0 219 109 182 219 109 182 219 109 182 219 109 182 219 108 238 212 192 158 132 199 126 189 145 22 225 115 145 235)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 66 244 207 147 158 58 168 60 43 241 124 190 139 233 48 105 90 237 63 238 167 230 74 223 104 66 215 27 161 123 157 208 5 137 33 46 51 188 25 0 81 190 135 122 69 86 34 194 42 220 206 142 224 152 251 238)
  :der-encode
  #t
  :tests
  '(#(417
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 2 28 51 51 51 51 51 51 51 51 51 51 51 51 51 51 4 134 249 190 150 114 208 197 213 13 223 69 162 12)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 85 169 24 243 193 144 119 67 43 34 206 238 124 47 248 125 254 155 167 50 60 85 35 126 231 95 2 222 17 14 153 237 91 227 186 14 3 6 37 119 18 22 135 18 175 174 224 8 22 58 105 59 96 31 80 57)
  :der-encode
  #t
  :tests
  '(#(418
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 2 29 0 204 204 204 204 204 204 204 204 204 204 204 204 204 204 18 27 230 250 89 203 67 23 84 55 125 22 136 49)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 191 24 79 136 164 82 179 191 133 237 174 161 80 221 119 14 144 244 156 135 27 80 32 160 164 13 234 220 40 231 246 166 144 51 142 244 254 200 132 126 111 8 93 196 112 198 64 18 183 167 71 98 75 201 201 10)
  :der-encode
  #t
  :tests
  '(#(419
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 2 28 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 82)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 135 47 17 44 228 170 15 248 239 231 5 67 220 28 107 11 209 77 6 139 200 142 182 67 98 69 72 27 162 174 181 33 228 114 229 225 146 26 241 98 16 250 99 211 238 228 45 245 213 255 49 230 208 118 27 94)
  :der-encode
  #t
  :tests
  '(#(420
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 2 28 14 177 14 90 185 95 172 222 212 6 16 41 214 58 70 244 111 18 148 116 17 242 234 86 26 89 32 87)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 189 55 99 136 181 247 35 251 76 34 223 230 205 67 117 160 90 7 71 100 68 213 129 153 133 0 126 52)
  :der-encode
  #t
  :tests
  '(#(421
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 52 45 174 117 26 99 163 202 129 137 207 52 43 59 52 234 170 37 101 226 199 226 97 33 193 191 213 67 2 28 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 81)
      #f
      ())
    #(422
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 203 210 81 138 229 156 92 53 126 118 48 203 212 195 225 184 54 147 138 91 75 250 200 35 154 156 84 250 2 28 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 81)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 66 200 156 119 74 8 220 4 179 221 32 25 50 188 138 94 165 248 184 155 187 42 126 102 122 255 129 205)
  :der-encode
  #t
  :tests
  '(#(423
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 52 45 174 117 26 99 163 202 129 137 207 52 43 59 52 234 170 37 101 226 199 226 97 33 193 191 213 67 2 28 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 81)
      #f
      ())
    #(424
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 203 210 81 138 229 156 92 53 126 118 48 203 212 195 225 184 54 147 138 91 75 250 200 35 154 156 84 250 2 28 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 81)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 76 36 102 112 101 138 29 65 245 215 123 206 36 108 190 56 106 194 40 72 226 105 185 212 205 103 196 102 221 217 71 21 61 57 178 212 37 51 164 96 222 242 104 128 64 140 175 45 211 221 72 254 136 140 209 118)
  :der-encode
  #t
  :tests
  '(#(425
      "pseudorandom signature"
      #vu8()
      #vu8(48 61 2 29 0 141 227 182 98 165 19 8 162 220 6 81 162 245 11 179 71 83 118 233 11 184 65 130 86 205 121 27 203 2 28 9 16 197 197 10 50 162 74 173 132 218 37 85 157 191 7 126 83 55 243 195 246 38 251 21 211 118 220)
      #t
      ())
    #(426
      "pseudorandom signature"
      #vu8(77 115 103)
      #vu8(48 61 2 29 0 220 237 176 42 253 255 221 25 155 71 229 69 225 57 106 27 23 15 223 150 161 14 228 211 173 210 180 150 2 28 74 60 137 75 128 222 27 205 165 9 171 88 117 46 0 86 220 120 214 104 58 133 202 159 21 194 81 185)
      #t
      ())
    #(427
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 167 202 180 50 220 122 191 38 156 19 99 37 137 217 217 205 163 116 130 219 158 141 207 65 28 35 68 164 2 29 0 251 56 255 11 234 95 129 89 86 21 96 138 211 52 148 204 234 236 72 238 96 7 212 149 29 45 91 208)
      #t
      ())
    #(428
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(48 60 2 28 3 22 162 37 147 112 68 124 27 6 245 31 97 137 176 51 234 217 86 193 30 187 195 237 189 194 181 228 2 28 36 189 162 208 101 160 71 92 159 197 238 48 15 108 76 130 107 7 167 64 212 153 15 204 20 96 6 170)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 174 214 252 173 36 0 196 217 78 85 219 182 176 18 206 61 76 43 70 132 63 190 153 212 40 158 110 207 138 36 168 158 113 52 61 125 21 29 37 141 44 182 144 52 156 45 86 179 102 221 16 166 0 0 0 0)
  :der-encode
  #t
  :tests
  '(#(429
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 200 169 58 143 27 58 170 169 187 142 45 140 196 245 181 3 58 144 155 21 173 129 178 218 225 76 22 32 2 29 0 230 134 130 9 18 242 149 201 193 179 30 96 193 250 39 216 208 244 156 1 114 73 56 15 146 142 207 242)
      #t
      ())
    #(430
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 57 137 50 25 52 112 46 83 86 53 69 157 148 9 96 108 252 70 52 195 178 130 250 134 169 60 128 22 2 29 0 193 246 195 153 204 178 174 90 34 232 6 241 65 56 116 254 87 206 201 23 181 118 211 237 136 126 56 220)
      #t
      ())
    #(431
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 140 151 35 44 212 48 187 50 221 137 245 21 82 5 246 174 3 241 115 248 138 27 233 106 44 51 217 225 2 29 0 251 59 78 181 57 85 61 102 69 228 52 190 250 118 12 159 171 61 42 230 69 206 208 63 231 113 58 161)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 191 25 236 254 67 255 226 137 246 153 244 121 49 97 69 185 167 247 55 11 158 206 90 177 33 33 116 241 115 213 40 148 154 233 20 47 129 139 173 231 26 150 4 7 150 59 224 182 72 42 106 96 255 255 255 255)
  :der-encode
  #t
  :tests
  '(#(432
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 114 121 26 134 67 159 118 238 64 150 41 217 35 250 183 57 54 81 14 248 147 73 238 76 195 4 185 21 2 29 0 237 103 197 238 220 74 89 175 19 254 128 144 81 153 222 66 251 196 94 170 214 189 68 50 156 124 117 207)
      #t
      ())
    #(433
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 36 87 95 249 229 234 119 157 149 100 75 94 249 175 250 103 39 151 133 83 223 59 81 251 197 162 120 32 2 29 0 139 32 0 180 192 42 31 204 120 128 164 44 109 190 7 227 34 235 226 9 64 214 255 50 160 142 173 217)
      #t
      ())
    #(434
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 229 88 25 214 62 12 219 97 102 118 209 109 26 214 202 43 185 121 190 148 146 69 52 219 163 253 111 58 2 28 77 188 71 200 48 253 133 225 109 1 62 5 107 47 11 22 70 208 72 205 111 194 23 87 175 66 143 5)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 38 229 171 241 53 203 84 234 170 22 182 158 75 11 41 34 117 52 78 136 160 157 246 223 128 0 0 0 234 184 145 222 84 227 242 111 245 10 185 137 243 51 218 197 81 88 61 70 138 230 35 197 150 67 74 240)
  :der-encode
  #t
  :tests
  '(#(435
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 209 44 34 180 239 31 242 222 112 198 225 162 193 143 125 200 125 252 254 194 37 203 63 50 74 118 101 75 2 29 0 182 75 215 221 62 49 132 7 58 207 88 75 253 51 219 195 113 42 137 242 1 56 99 18 247 19 225 218)
      #t
      ())
    #(436
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 200 208 111 3 146 1 192 57 149 129 49 82 161 159 229 46 60 56 207 50 176 241 59 141 140 236 135 186 2 28 68 147 7 247 146 79 162 118 172 28 168 41 115 213 245 95 202 124 102 144 200 88 29 187 229 80 1 40)
      #t
      ())
    #(437
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 163 112 210 119 242 142 60 134 201 54 126 44 29 122 224 126 107 13 163 51 218 101 239 39 128 179 158 0 2 28 19 79 95 85 227 117 37 67 249 96 224 231 37 124 255 227 236 65 123 155 197 218 59 117 87 222 68 234)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 236 98 127 52 85 69 208 63 140 109 189 8 229 117 82 113 22 86 127 227 117 249 236 170 255 255 255 255 65 191 112 86 151 213 247 22 188 247 135 24 213 57 59 99 169 134 145 244 161 242 66 70 55 85 56 253)
  :der-encode
  #t
  :tests
  '(#(438
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 35 54 175 105 218 130 95 236 53 16 104 28 113 108 155 80 0 177 126 241 230 219 115 112 120 23 177 69 2 29 0 158 245 156 18 12 227 158 76 131 227 65 175 113 212 169 26 52 196 189 209 44 146 202 244 64 91 121 77)
      #t
      ())
    #(439
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 28 63 219 23 204 68 201 160 233 149 41 10 69 140 47 100 184 86 85 65 207 86 19 149 117 33 46 193 104 2 28 94 81 199 120 181 96 243 198 27 195 191 14 181 15 248 211 77 203 94 184 92 194 91 74 230 167 68 58)
      #t
      ())
    #(440
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 28 29 152 37 58 99 184 63 14 4 46 210 195 66 253 66 23 194 159 153 15 205 91 92 187 158 81 114 31 2 28 73 252 245 228 214 128 205 211 100 5 197 20 65 76 196 125 151 49 169 124 78 220 186 199 183 178 127 137)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 21 1 110 82 179 100 114 213 54 71 118 5 251 128 93 211 144 48 130 160 98 209 234 48 175 158 85 90 0 0 0 0 118 45 40 241 253 194 25 24 79 129 104 31 191 245 102 212 101 181 241 243 30 135 45 245)
  :der-encode
  #t
  :tests
  '(#(441
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 160 246 170 95 96 127 52 228 154 249 118 216 176 251 79 66 218 23 253 28 43 3 184 17 159 123 131 75 2 29 0 171 83 149 192 250 164 238 83 16 98 93 80 29 106 10 249 102 68 4 10 51 95 248 244 43 173 101 211)
      #t
      ())
    #(442
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 154 15 103 121 38 114 220 186 75 25 137 155 162 227 90 192 181 76 160 12 164 149 114 112 231 164 63 140 2 29 0 167 2 136 120 136 81 29 209 46 149 14 221 210 57 180 163 196 35 218 103 59 186 136 32 130 149 74 10)
      #t
      ())
    #(443
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 28 77 150 231 67 172 13 187 242 65 55 37 161 147 199 231 9 71 181 149 1 96 30 51 118 101 2 62 226 2 28 118 78 247 26 24 79 2 68 192 225 222 27 114 155 132 33 190 83 189 13 237 32 21 220 61 31 26 19)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 21 1 110 82 179 100 114 213 54 71 118 5 251 128 93 211 144 48 130 160 98 209 234 48 175 158 85 90 255 255 255 255 137 210 215 14 2 61 230 231 176 126 151 223 64 10 153 43 154 74 14 12 225 120 210 12)
  :der-encode
  #t
  :tests
  '(#(444
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 28 6 10 201 97 239 244 229 5 63 112 69 185 234 29 179 56 221 75 58 108 206 51 19 134 211 152 134 85 2 28 12 252 97 164 58 103 208 102 15 195 134 239 193 182 3 178 143 101 24 133 191 245 25 198 50 225 26 140)
      #t
      ())
    #(445
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 28 52 21 208 121 13 155 155 168 255 168 47 68 122 79 237 88 204 227 235 186 244 59 104 193 98 73 92 133 2 28 30 14 32 172 147 209 157 189 157 221 99 46 92 9 16 86 14 148 26 207 43 165 215 243 242 171 226 127)
      #t
      ())
    #(446
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 28 32 102 89 59 225 13 180 17 30 3 44 206 121 0 74 46 102 175 241 119 77 89 90 212 195 123 97 214 2 28 42 173 223 226 171 203 177 55 235 248 13 53 200 108 127 129 252 118 6 64 238 195 158 179 171 233 238 125)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 0 0 0 0 247 228 113 61 8 81 18 17 44 55 205 244 96 31 246 136 218 121 96 22 183 26 114 122 222 90 158 193 101 5 76 201 135 249 220 135 233 153 27 146 228 250 100 156 166 85 238 174 159 42 48 225)
  :der-encode
  #t
  :tests
  '(#(447
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 213 117 29 0 230 158 134 48 45 149 243 164 133 195 87 134 123 49 193 247 38 2 31 131 24 51 14 235 2 28 54 225 92 154 185 21 44 162 75 211 46 219 208 222 58 16 231 204 178 59 73 60 56 39 0 151 152 189)
      #t
      ())
    #(448
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 28 45 115 135 133 176 66 130 38 20 87 169 177 73 166 197 28 76 97 31 41 225 65 19 187 210 98 89 129 2 28 108 172 183 103 23 81 57 75 147 26 184 106 9 99 30 226 108 208 119 192 26 248 195 73 27 83 89 130)
      #t
      ())
    #(449
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 28 18 31 89 146 255 40 146 168 224 179 108 244 243 19 49 253 220 185 181 61 26 236 44 125 156 216 135 203 2 28 64 106 33 159 87 44 88 186 171 119 157 140 56 111 232 232 72 87 2 74 33 192 31 148 149 5 166 104)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 255 255 255 255 234 223 124 238 141 52 208 76 242 44 143 125 227 86 116 251 47 80 29 36 42 118 247 37 134 196 9 48 157 57 142 96 206 30 10 76 158 5 169 211 38 39 87 126 140 226 204 127 58 250 44 62)
  :der-encode
  #t
  :tests
  '(#(450
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 194 142 78 154 127 74 150 242 43 171 149 163 245 100 9 158 196 109 218 126 208 209 86 139 52 116 250 31 2 29 0 167 217 58 215 5 244 96 75 248 45 192 41 210 37 121 23 209 235 126 9 212 121 150 55 187 195 22 97)
      #t
      ())
    #(451
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 142 90 155 116 195 93 7 178 220 120 138 155 175 19 118 75 204 242 87 10 7 203 75 81 229 44 54 244 2 28 30 186 160 86 53 54 247 174 99 55 228 70 249 255 153 64 144 27 75 30 108 138 106 242 131 213 107 94)
      #t
      ())
    #(452
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 151 91 30 248 105 150 181 54 39 146 208 68 78 28 184 198 79 181 131 185 20 119 133 49 98 237 121 20 2 29 0 171 202 4 133 158 61 244 48 141 157 64 179 55 152 194 240 144 125 208 115 238 117 135 100 106 203 47 46)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 176 1 60 111 191 246 240 159 236 218 28 38 62 246 83 153 212 207 152 156 165 252 79 143 255 15 233 225 0 0 0 0 14 42 176 232 73 94 133 158 178 175 176 7 105 214 231 254 98 106 17 145 103 192 182 188)
  :der-encode
  #t
  :tests
  '(#(453
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 220 253 166 119 148 135 74 70 19 193 89 118 88 220 82 255 133 4 222 157 180 90 41 9 137 64 82 253 2 29 0 235 143 188 110 103 178 3 9 185 192 193 49 91 210 136 48 41 224 73 183 112 51 253 192 190 106 14 137)
      #t
      ())
    #(454
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 173 57 199 100 69 46 148 195 157 198 81 188 161 73 191 244 227 123 126 24 86 171 61 64 98 95 149 46 2 28 15 69 79 30 209 145 232 206 220 185 194 144 117 139 212 185 116 122 50 184 20 133 43 29 164 25 209 182)
      #t
      ())
    #(455
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 159 246 2 216 3 126 241 43 47 34 133 132 17 169 146 162 28 85 79 225 14 7 86 115 56 160 52 18 2 29 0 146 209 116 216 5 189 14 174 16 147 178 12 75 58 116 249 224 157 171 10 41 45 65 71 23 56 116 234)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 176 1 60 111 191 246 240 159 236 218 28 38 62 246 83 153 212 207 152 156 165 252 79 143 255 15 233 225 255 255 255 255 241 213 79 23 182 161 122 97 77 80 79 247 150 41 24 1 157 149 238 110 152 63 73 69)
  :der-encode
  #t
  :tests
  '(#(456
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 80 65 0 111 29 208 109 59 235 202 175 77 16 225 55 25 152 216 113 192 79 226 247 48 180 62 192 37 2 29 0 205 42 200 52 101 128 155 60 101 129 21 210 134 168 160 15 103 219 138 16 104 248 78 202 180 24 187 13)
      #t
      ())
    #(457
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 238 88 124 40 210 33 11 12 255 125 71 172 53 9 245 144 5 51 32 229 71 211 224 52 223 156 154 80 2 28 33 83 116 180 232 84 26 228 151 73 116 237 117 117 210 193 85 13 146 71 8 227 3 192 183 68 238 119)
      #t
      ())
    #(458
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 182 106 87 158 162 220 164 14 58 72 7 69 103 175 125 170 211 79 215 132 227 237 9 125 27 57 86 156 2 29 0 148 162 183 44 113 60 16 145 83 134 62 187 113 168 204 128 245 112 148 216 17 193 63 162 105 225 74 66)
      #t
      ())))
