(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 41 39 177 5 18 186 227 237 220 254 70 120 40 18 139 173 41 3 38 153 25 247 8 96 105 200 196 223 108 115 40 56 199 120 121 100 234 172 0 229 146 31 177 73 138 96 244 96 103 102 179 217 104 80 1 85 141 26 151 78 115 65 81 62)
  :der-encode
  #f
  :tests
  '(#(1
      "signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(43 163 168 190 107 148 213 236 128 166 217 209 25 10 67 110 255 229 13 133 161 238 232 89 184 204 106 249 189 92 46 24 76 214 11 133 93 68 47 91 60 123 17 235 108 78 10 231 82 95 231 16 250 185 170 124 119 166 127 121 230 250 221 118)
      #t
      ())
    #(2
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(1 43 163 168 189 107 148 213 237 128 166 217 209 25 10 67 110 188 204 8 51 73 6 134 222 172 134 53 188 185 191 83 105 0 179 41 244 121 162 187 208 165 195 132 238 20 147 177 245 24 106 135 19 156 172 93 244 8 124 19 75 73 21 104 71 219)
      #f
      ())
    #(3
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(212 92 87 64 148 107 42 20 127 89 38 46 230 245 188 144 189 1 237 40 5 40 182 43 58 237 95 201 63 6 247 57 179 41 244 121 162 187 208 165 195 132 238 20 147 177 245 24 106 135 19 156 172 93 244 8 124 19 75 73 21 104 71 219)
      #f
      ())
    #(4
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(1 43 163 168 190 107 148 213 236 128 166 217 209 25 10 67 110 255 229 13 133 161 238 232 89 184 204 106 249 189 92 46 24 0 179 41 244 121 162 187 208 165 195 132 238 20 147 177 245 24 106 135 19 156 172 93 244 8 124 19 75 73 21 104 71 219)
      #f
      ())
    #(5
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(212 92 87 65 148 107 42 19 127 89 38 46 230 245 188 145 0 26 242 122 94 17 23 166 71 51 149 6 66 163 209 232 179 41 244 121 162 187 208 165 195 132 238 20 147 177 245 24 106 135 19 156 172 93 244 8 124 19 75 73 21 104 71 219)
      #f
      ())
    #(6
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(0 43 163 168 190 107 148 213 236 128 166 217 209 25 10 67 110 255 229 13 133 161 238 232 89 184 204 106 249 189 92 46 24 1 179 41 244 120 162 187 208 166 195 132 238 20 147 177 245 24 39 110 14 74 83 117 146 141 111 205 22 12 17 203 109 44)
      #f
      ())
    #(7
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(0 43 163 168 190 107 148 213 236 128 166 217 209 25 10 67 110 255 229 13 133 161 238 232 89 184 204 106 249 189 92 46 24 1 179 41 244 121 162 187 208 165 195 132 238 20 147 177 245 24 106 135 19 156 172 93 244 8 124 19 75 73 21 104 71 219)
      #f
      ())
    #(8
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(43 163 168 190 107 148 213 236 128 166 217 209 25 10 67 110 255 229 13 133 161 238 232 89 184 204 106 249 189 92 46 24 76 214 11 134 93 68 47 90 60 123 17 235 108 78 10 231 149 120 236 99 83 162 11 247 131 236 180 182 234 151 184 37)
      #f
      ())
    #(9
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(10
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(11
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(12
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(13
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(14
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(15
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(16
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(17
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(18
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(19
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(20
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(21
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(22
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(23
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(24
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(25
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(26
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(27
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(28
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(29
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(30
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(31
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(32
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(33
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(34
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(35
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(36
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(37
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(38
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(39
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(40
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(41
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(42
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(43
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(44
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(45
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(46
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(47
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(48
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(49
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(50
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(51
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(52
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(53
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(54
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(55
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(56
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(57
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(58
      "Edge case for Shamir multiplication"
      #vu8(54 57 56 49 57)
      #vu8(100 161 170 181 0 13 14 128 79 62 47 192 43 222 233 190 143 243 18 51 78 43 161 109 17 84 124 151 113 28 137 142 106 240 21 151 28 195 11 230 209 162 6 212 224 19 224 153 119 114 162 249 29 115 40 111 253 104 59 155 178 207 79 27)
      #t
      ())
    #(59
      "special case hash"
      #vu8(52 50 54 52 55 57 55 50 52)
      #vu8(22 174 169 100 162 246 80 109 111 120 200 28 145 252 126 139 222 215 211 151 115 132 72 222 30 25 160 236 88 11 242 102 37 44 215 98 19 12 102 103 207 232 183 188 71 210 125 120 57 30 142 128 197 120 209 205 56 195 255 3 59 233 40 233)
      #t
      ())
    #(60
      "special case hash"
      #vu8(55 49 51 56 54 56 52 56 57 49)
      #vu8(156 201 139 226 52 125 70 155 244 118 223 194 107 155 115 61 242 210 109 110 245 36 175 145 124 102 91 172 203 35 200 130 9 52 150 69 158 255 226 216 215 7 39 184 36 98 246 29 14 193 183 132 121 41 209 14 166 49 218 203 22 181 108 50)
      #t
      ())
    #(61
      "special case hash"
      #vu8(49 48 51 53 57 51 51 49 54 54 56)
      #vu8(115 179 201 14 205 57 0 40 5 129 100 82 77 222 137 39 3 220 227 222 160 213 63 168 9 57 153 240 122 184 170 67 47 103 176 184 226 6 54 105 91 183 216 191 10 101 28 128 46 210 90 57 83 135 181 244 24 140 12 64 117 200 134 52)
      #t
      ())
    #(62
      "special case hash"
      #vu8(51 57 52 57 52 48 49 50 49 53)
      #vu8(191 171 48 152 37 40 71 179 40 250 223 47 137 185 92 133 26 127 14 179 144 118 51 120 243 126 144 17 157 91 163 221 189 214 78 35 78 131 43 16 103 194 208 88 204 180 77 151 129 149 204 235 182 92 42 175 30 45 169 184 180 152 126 59)
      #t
      ())
    #(63
      "special case hash"
      #vu8(49 51 52 52 50 57 51 48 55 57)
      #vu8(32 74 151 132 7 75 36 109 139 248 191 4 164 206 177 193 241 201 170 171 22 139 21 150 209 112 147 197 205 33 210 205 81 204 228 22 112 99 103 131 220 6 167 89 200 132 120 104 164 6 194 80 111 225 121 117 88 47 230 72 209 216 139 82)
      #t
      ())
    #(64
      "special case hash"
      #vu8(51 55 48 54 50 49 49 55 49 50)
      #vu8(237 102 220 52 245 81 172 130 246 61 74 164 248 31 226 203 0 49 169 29 19 20 248 53 2 123 202 15 28 238 170 3 153 202 18 58 160 155 19 205 25 74 66 46 24 213 253 161 103 98 60 63 110 93 77 106 187 137 83 214 124 12 72 199)
      #t
      ())
    #(65
      "special case hash"
      #vu8(51 52 51 54 56 56 55 49 50)
      #vu8(6 11 112 11 239 102 92 104 137 157 68 242 53 106 87 141 18 107 6 32 35 204 195 192 86 191 15 96 162 55 1 43 141 24 108 2 120 50 150 95 79 204 120 163 54 108 169 93 237 187 65 12 190 243 242 109 107 229 213 129 193 29 54 16)
      #t
      ())
    #(66
      "special case hash"
      #vu8(49 51 53 49 53 51 48 51 55 48)
      #vu8(159 106 223 232 213 235 91 44 36 215 170 121 52 182 207 41 201 62 167 108 211 19 201 19 43 176 200 227 140 150 131 29 178 106 156 158 64 229 94 224 137 12 148 76 242 113 117 108 144 106 51 230 107 91 209 94 5 21 147 136 59 94 153 2)
      #t
      ())
    #(67
      "special case hash"
      #vu8(54 53 53 51 50 48 51 49 50 54)
      #vu8(161 175 3 202 145 103 123 103 58 210 243 54 21 229 97 116 161 171 246 218 22 140 235 250 136 104 244 186 39 63 22 183 32 170 115 255 228 138 250 100 53 205 37 139 23 61 12 35 119 214 144 34 231 208 152 215 92 175 36 200 197 224 107 28)
      #t
      ())
    #(68
      "special case hash"
      #vu8(49 53 54 52 51 52 54 54 48 51)
      #vu8(253 199 6 2 118 111 142 237 17 166 201 154 113 201 115 213 101 147 85 80 123 132 61 166 227 39 162 140 17 137 61 185 61 245 52 150 136 160 133 177 55 177 234 207 69 106 158 158 15 109 21 236 0 120 202 96 167 248 63 43 16 210 19 80)
      #t
      ())
    #(69
      "special case hash"
      #vu8(52 52 50 57 53 51 57 49 49 55)
      #vu8(181 22 163 20 242 252 229 48 214 83 127 106 108 73 150 108 35 69 111 99 198 67 207 142 13 199 56 247 184 118 230 117 211 159 253 3 60 146 182 215 23 221 83 111 188 94 253 241 150 124 75 216 9 84 71 155 166 107 1 32 205 22 255 242)
      #t
      ())
    #(70
      "special case hash"
      #vu8(49 48 57 53 51 50 54 49 51 53 49)
      #vu8(59 44 191 4 110 172 69 132 46 203 121 132 212 117 131 21 130 113 123 235 182 73 47 208 164 133 193 1 226 159 240 168 76 155 123 71 169 139 15 130 222 81 43 201 49 58 175 81 112 16 153 202 197 247 110 104 200 89 95 193 193 217 146 88)
      #t
      ())
    #(71
      "special case hash"
      #vu8(53 57 56 55 51 53 48 48 52 49)
      #vu8(48 200 125 53 230 54 245 64 132 31 20 175 84 226 249 237 215 157 3 18 207 161 171 101 108 63 177 91 253 228 141 207 71 193 90 90 130 210 75 117 200 90 105 43 214 236 175 235 113 64 158 222 35 239 208 142 13 185 171 246 52 6 119 237)
      #t
      ())
    #(72
      "special case hash"
      #vu8(51 52 54 51 48 48 54 56 55 56)
      #vu8(56 104 111 240 253 162 206 246 188 67 181 140 254 102 71 185 226 232 23 109 22 141 236 60 104 255 38 33 19 118 15 82 6 126 195 182 81 244 34 102 150 1 102 33 103 250 135 23 233 118 226 219 94 106 76 247 194 221 171 179 253 233 214 125)
      #t
      ())
    #(73
      "special case hash"
      #vu8(57 56 49 55 51 50 48 50 56 55)
      #vu8(68 163 226 59 243 20 242 179 68 252 37 199 242 222 139 106 243 225 125 39 245 238 132 75 34 89 133 171 110 39 117 207 45 72 226 35 32 94 152 4 29 220 135 190 83 42 190 213 132 240 65 31 87 41 80 4 147 201 204 63 77 209 94 134)
      #t
      ())
    #(74
      "special case hash"
      #vu8(51 50 50 50 48 52 49 48 52 54)
      #vu8(45 237 91 126 200 233 14 123 241 31 150 122 61 149 17 12 65 185 157 179 181 170 141 51 14 185 214 56 120 22 136 233 125 87 146 197 54 40 21 94 27 252 70 251 26 103 227 8 141 224 73 195 40 174 31 68 236 105 35 138 0 152 8 249)
      #t
      ())
    #(75
      "special case hash"
      #vu8(54 54 54 54 51 48 55 49 48 52)
      #vu8(189 174 123 203 88 11 243 53 239 211 188 61 49 135 15 146 62 172 202 252 212 14 194 246 5 151 111 21 19 125 139 143 246 223 161 47 25 229 37 39 11 1 6 238 207 226 87 73 159 55 58 79 179 24 153 79 36 131 129 34 206 126 195 199)
      #t
      ())
    #(76
      "special case hash"
      #vu8(49 48 51 53 57 53 49 56 57 56)
      #vu8(80 249 196 240 205 105 64 225 98 114 9 87 255 255 81 55 153 32 155 120 89 105 86 210 30 206 37 28 36 1 241 198 215 3 58 10 120 125 51 142 136 157 239 170 171 177 6 185 90 67 85 228 17 165 156 50 170 81 103 223 171 36 71 38)
      #t
      ())
    #(77
      "special case hash"
      #vu8(49 56 52 54 53 57 55 49 57 53)
      #vu8(246 18 130 6 135 96 79 160 25 6 6 106 55 141 103 84 9 130 226 149 117 208 25 170 190 144 146 78 173 92 134 13 63 147 103 112 45 215 221 79 117 234 152 175 210 14 50 138 26 153 244 133 123 49 101 37 50 130 48 206 41 75 15 239)
      #t
      ())
    #(78
      "special case hash"
      #vu8(51 49 51 54 48 52 54 49 56 57)
      #vu8(149 5 228 7 101 125 110 139 201 61 181 218 122 166 245 8 31 97 152 12 25 73 245 107 15 47 80 125 165 120 42 122 198 13 49 144 78 54 105 115 143 251 236 202 182 195 101 108 8 224 237 92 185 43 60 250 94 127 113 120 79 156 80 33)
      #t
      ())
    #(79
      "special case hash"
      #vu8(50 54 54 51 55 56 52 50 53 52)
      #vu8(187 209 111 187 182 86 182 208 216 62 106 119 135 205 105 27 8 115 90 237 55 23 50 114 62 28 104 164 4 4 81 125 157 142 53 219 169 96 40 183 120 125 145 49 91 230 117 135 125 45 9 123 229 232 238 52 86 14 62 127 210 92 15 0)
      #t
      ())
    #(80
      "special case hash"
      #vu8(49 54 53 50 49 48 48 53 50 52)
      #vu8(46 201 118 1 34 219 152 253 6 234 118 132 141 53 166 218 68 45 44 238 247 85 154 48 207 87 198 30 146 223 50 126 122 178 113 218 144 133 148 121 112 31 204 248 110 70 46 227 57 63 182 129 76 39 183 96 196 150 54 37 192 161 152 120)
      #t
      ())
    #(81
      "special case hash"
      #vu8(53 55 52 56 48 56 49 54 57 54)
      #vu8(84 231 107 118 131 182 101 11 170 106 127 196 155 28 81 238 217 186 157 212 99 34 31 122 79 16 5 168 159 224 12 89 46 160 118 136 108 119 62 185 55 236 28 200 55 75 121 21 207 209 27 28 26 225 22 97 82 242 247 128 106 49 200 253)
      #t
      ())
    #(82
      "special case hash"
      #vu8(54 51 52 51 57 49 51 52 54 56)
      #vu8(82 145 222 175 36 101 159 251 188 230 227 194 111 96 33 9 122 116 171 219 182 155 228 251 16 65 156 12 73 108 148 102 101 214 252 243 54 210 124 199 205 185 130 187 78 78 206 245 130 127 132 116 47 41 241 10 191 131 70 146 112 160 61 195)
      #t
      ())
    #(83
      "special case hash"
      #vu8(49 53 52 49 49 48 51 53 57 56)
      #vu8(32 122 50 65 129 45 117 217 71 65 157 197 142 251 5 232 0 59 51 252 23 235 80 249 209 81 102 168 132 121 241 7 205 238 116 159 46 73 43 33 60 232 11 50 208 87 79 98 241 197 215 7 147 207 85 227 130 213 202 173 247 89 39 103)
      #t
      ())
    #(84
      "special case hash"
      #vu8(49 48 52 55 56 53 56 48 49 50 56)
      #vu8(101 84 228 159 130 168 85 32 67 40 172 148 145 59 240 27 190 132 67 122 53 90 10 55 192 222 227 207 129 170 119 40 174 160 13 226 80 125 218 245 201 78 30 18 105 128 211 223 22 37 10 46 174 188 139 228 134 239 254 127 34 180 249 41)
      #t
      ())
    #(85
      "special case hash"
      #vu8(49 48 53 51 54 50 56 53 53 54 56)
      #vu8(165 76 80 98 100 131 57 210 191 240 111 113 200 130 22 194 108 110 25 180 216 10 140 96 41 144 172 130 112 126 253 252 233 155 190 127 207 175 174 62 105 253 1 103 119 81 122 160 16 86 49 127 70 122 208 154 255 9 190 115 201 115 27 13)
      #t
      ())
    #(86
      "special case hash"
      #vu8(57 53 51 57 48 52 49 48 53)
      #vu8(151 91 215 21 122 141 54 59 48 159 31 68 64 18 177 161 210 48 150 89 49 51 231 27 76 168 176 89 207 243 126 175 127 170 122 40 177 200 34 186 162 65 121 63 42 188 147 11 212 198 152 64 254 9 15 42 172 196 103 134 191 145 150 34)
      #t
      ())
    #(87
      "special case hash"
      #vu8(57 55 56 56 52 56 48 51 57)
      #vu8(86 148 166 248 75 143 135 92 39 106 253 46 188 254 77 97 222 158 201 3 5 175 177 53 123 149 179 224 218 67 136 94 13 255 173 159 253 11 117 125 128 81 222 192 46 189 247 13 142 226 220 92 120 112 192 130 59 108 204 124 103 156 186 164)
      #t
      ())
    #(88
      "special case hash"
      #vu8(51 54 49 48 54 55 50 52 52 50)
      #vu8(160 195 14 128 38 253 178 180 180 150 138 39 209 106 109 8 247 9 143 26 152 210 22 32 215 69 75 169 121 15 27 166 94 71 4 83 168 163 153 241 91 175 70 63 157 236 235 83 172 197 202 100 69 145 73 104 139 210 118 12 101 66 67 57)
      #t
      ())
    #(89
      "special case hash"
      #vu8(49 48 53 52 50 52 48 55 48 53)
      #vu8(97 78 168 74 207 115 101 39 221 115 96 44 212 187 78 234 29 254 190 189 90 216 172 165 42 160 34 140 247 185 154 136 115 124 200 95 95 45 47 96 209 184 24 63 62 212 144 228 222 20 54 142 150 169 72 44 42 77 209 147 25 92 144 47)
      #t
      ())
    #(90
      "special case hash"
      #vu8(53 49 55 52 52 52 56 49 57 55)
      #vu8(190 173 103 52 235 228 75 129 13 63 178 234 0 177 115 41 69 55 115 56 254 191 212 57 168 215 77 251 208 249 66 250 107 177 142 174 54 97 106 125 60 173 53 145 159 210 26 138 244 187 231 161 15 115 179 224 54 164 107 16 62 245 110 42)
      #t
      ())
    #(91
      "special case hash"
      #vu8(49 57 54 55 53 54 49 50 53 49)
      #vu8(73 150 37 71 158 22 29 172 212 219 157 156 230 72 84 201 141 146 44 191 33 39 3 233 101 79 174 24 45 249 186 210 66 193 119 207 55 184 25 58 1 49 16 141 151 129 158 221 148 57 147 96 40 134 74 193 149 182 79 202 118 217 214 147)
      #t
      ())
    #(92
      "special case hash"
      #vu8(51 52 52 55 50 53 51 51 52 51)
      #vu8(8 241 107 128 147 168 251 77 102 162 200 6 91 84 27 61 49 227 191 230 148 246 184 156 80 251 26 170 111 246 201 178 157 100 85 226 213 209 119 151 72 87 59 97 28 185 93 74 33 249 103 65 3 153 179 155 83 91 163 229 175 129 202 46)
      #t
      ())
    #(93
      "special case hash"
      #vu8(51 54 56 50 54 52 51 49 56)
      #vu8(190 38 35 27 97 145 101 138 25 221 114 221 185 158 216 248 197 121 182 147 141 25 188 232 238 216 220 43 51 140 181 248 225 217 163 46 229 108 255 237 55 240 242 43 45 203 87 213 201 67 193 79 121 105 74 3 185 197 233 105 82 87 92 137)
      #t
      ())
    #(94
      "special case hash"
      #vu8(51 50 54 49 49 57 56 54 48 56)
      #vu8(21 231 104 128 137 131 22 177 98 4 172 146 10 2 213 128 69 243 106 34 157 74 164 248 18 99 140 69 90 190 4 67 231 77 53 125 63 203 92 140 83 55 189 106 186 65 120 180 85 202 16 226 38 225 63 150 56 25 101 6 161 147 145 35)
      #t
      ())
    #(95
      "special case hash"
      #vu8(57 54 55 56 55 56 49 48 57 52)
      #vu8(53 46 203 83 248 223 44 80 58 69 249 132 111 194 141 29 49 230 48 125 61 219 255 193 19 35 21 204 7 241 109 173 19 72 223 169 196 130 197 88 225 208 92 82 66 202 28 57 67 103 38 236 210 130 88 177 137 151 146 136 125 208 163 198)
      #t
      ())
    #(96
      "special case hash"
      #vu8(52 57 53 56 56 50 51 56 50 51)
      #vu8(74 64 128 26 126 96 107 167 138 13 169 136 42 178 60 118 119 184 100 35 73 237 61 101 44 91 250 95 42 149 88 251 58 73 182 72 72 214 130 239 127 96 95 40 50 247 56 75 220 36 237 41 37 130 91 248 234 119 220 89 129 114 87 130)
      #t
      ())
    #(97
      "special case hash"
      #vu8(56 50 52 54 51 55 56 51 55)
      #vu8(234 204 94 26 131 4 167 77 43 228 18 176 120 146 75 59 179 81 27 172 133 92 5 201 229 233 228 77 243 214 30 150 116 81 205 142 24 214 237 24 133 221 130 119 20 132 127 150 236 75 176 237 76 54 206 152 8 219 143 113 66 4 246 209)
      #t
      ())
    #(98
      "special case hash"
      #vu8(49 49 48 50 48 56 51 51 55 55 54)
      #vu8(47 122 94 158 87 113 212 36 243 15 103 253 171 97 232 206 79 140 209 33 72 130 173 182 95 125 233 76 49 87 112 82 172 78 105 128 131 69 128 155 68 172 176 178 189 136 145 117 251 117 221 5 12 90 68 154 185 82 143 143 120 218 161 12)
      #t
      ())
    #(99
      "special case hash"
      #vu8(49 51 51 56 55 49 54 52 56)
      #vu8(255 205 164 15 121 44 228 217 62 126 15 14 149 225 162 20 125 221 215 246 72 118 33 195 10 3 215 16 179 48 2 25 121 147 139 85 248 161 127 126 215 186 154 222 143 32 101 161 250 119 97 143 11 103 173 216 213 140 66 44 36 83 164 154)
      #t
      ())
    #(100
      "special case hash"
      #vu8(51 50 50 49 52 52 49 54 50)
      #vu8(129 242 53 156 79 171 166 181 61 62 140 140 63 204 22 169 72 53 15 122 179 165 136 178 140 23 96 58 67 30 57 168 205 111 106 92 195 181 94 173 15 246 149 208 108 104 96 181 9 228 109 153 252 206 251 159 127 158 16 24 87 247 67 0)
      #t
      ())
    #(101
      "special case hash"
      #vu8(49 48 54 56 54 54 53 53 53 52 54)
      #vu8(223 200 191 82 4 69 203 184 238 21 150 251 7 62 162 131 234 19 2 81 166 253 255 165 195 245 242 170 247 92 168 8 4 142 51 239 206 20 124 157 217 40 35 100 14 51 142 104 191 215 208 220 122 73 5 179 167 172 113 30 87 126 144 231)
      #t
      ())
    #(102
      "special case hash"
      #vu8(54 50 49 53 53 50 52 54)
      #vu8(173 1 159 116 198 148 29 32 239 218 112 180 108 83 219 22 101 3 160 227 147 233 50 246 136 34 118 136 186 106 87 98 147 50 14 183 202 7 16 37 83 70 189 187 49 2 205 207 121 100 239 46 9 136 231 18 188 5 239 225 108 25 147 69)
      #t
      ())
    #(103
      "special case hash"
      #vu8(55 48 51 48 56 49 56 55 55 52)
      #vu8(172 128 150 132 46 138 221 104 195 78 120 206 17 221 113 228 181 67 22 189 62 191 127 255 222 183 189 90 62 188 24 131 245 202 47 79 35 214 116 80 45 76 175 133 209 135 33 93 54 227 206 159 12 226 25 112 159 33 163 170 192 3 183 168)
      #t
      ())
    #(104
      "special case hash"
      #vu8(53 57 50 52 53 50 51 55 52 52)
      #vu8(103 123 45 58 89 177 138 95 249 57 183 14 160 2 37 8 137 221 205 123 123 157 119 104 84 180 148 54 147 251 146 247 107 75 168 86 173 231 103 123 243 3 7 178 31 60 205 163 93 47 99 174 232 30 253 11 171 105 114 204 7 149 219 85)
      #t
      ())
    #(105
      "special case hash"
      #vu8(49 52 57 53 53 56 54 54 50 49)
      #vu8(71 158 29 237 20 188 174 208 55 155 168 225 183 61 49 21 216 77 49 212 183 195 14 31 5 225 252 13 89 87 207 176 145 143 121 227 91 61 137 72 124 246 52 164 240 91 46 12 48 133 124 168 121 249 124 119 30 135 112 39 53 91 36 67)
      #t
      ())
    #(106
      "special case hash"
      #vu8(52 48 48 53 51 49 52 52 48 54)
      #vu8(67 223 204 208 237 185 226 128 217 165 143 1 22 77 85 195 215 17 225 75 18 172 92 243 182 72 64 234 213 18 160 163 29 190 51 250 139 168 69 51 205 92 73 52 54 91 52 66 202 17 116 137 155 120 239 154 49 153 244 149 132 56 151 114)
      #t
      ())
    #(107
      "special case hash"
      #vu8(51 48 57 54 52 53 55 53 49 50)
      #vu8(91 9 171 99 123 212 202 240 244 199 199 228 188 165 146 254 162 14 144 135 194 89 210 106 56 187 64 133 240 187 255 17 69 183 235 70 123 103 72 175 97 142 157 128 214 253 205 106 162 73 100 229 161 63 136 91 202 129 1 222 8 235 13 117)
      #t
      ())
    #(108
      "special case hash"
      #vu8(50 55 56 52 48 50 53 54 50 48)
      #vu8(94 155 28 90 2 128 112 223 87 40 197 200 175 155 116 224 102 122 250 87 10 108 250 1 20 165 3 158 209 94 224 111 177 54 9 7 226 217 120 94 173 54 43 184 215 189 102 27 108 41 238 255 211 197 3 119 68 237 174 185 173 153 12 32)
      #t
      ())
    #(109
      "special case hash"
      #vu8(50 54 49 56 55 56 55 52 49 56)
      #vu8(6 113 160 168 92 43 114 213 74 47 176 153 14 52 83 139 72 144 5 15 90 87 18 246 209 167 165 251 133 120 243 46 219 24 70 186 182 183 54 20 121 171 156 50 133 202 65 41 24 8 242 127 213 189 79 218 199 32 229 133 71 19 105 76)
      #t
      ())
    #(110
      "special case hash"
      #vu8(49 54 52 50 54 50 53 50 54 50)
      #vu8(118 115 248 82 103 72 68 100 119 219 187 5 144 164 84 146 197 215 214 152 89 211 1 171 186 237 179 91 32 149 16 58 61 199 13 223 156 107 82 77 136 107 237 158 106 240 46 14 77 236 13 65 122 65 79 237 56 7 239 68 34 145 61 124)
      #t
      ())
    #(111
      "special case hash"
      #vu8(54 56 50 52 49 56 57 52 51 54)
      #vu8(127 8 84 65 7 14 205 43 178 18 133 8 158 187 26 166 69 13 26 6 195 109 63 243 157 253 101 122 121 109 18 181 36 151 18 1 32 41 135 10 36 89 209 141 71 218 154 164 146 165 230 203 75 45 141 175 169 228 197 197 74 43 154 139)
      #t
      ())
    #(112
      "special case hash"
      #vu8(52 56 52 50 52 53 52 50 53)
      #vu8(145 76 103 251 97 221 30 39 200 103 57 142 167 50 45 90 183 109 240 75 197 170 102 131 168 224 243 10 93 40 115 72 250 7 71 64 49 72 29 218 73 83 227 172 25 89 238 140 234 126 102 236 65 43 56 214 201 109 40 246 211 115 4 234)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 215 5 209 111 128 152 126 45 155 26 105 87 210 156 226 47 235 247 209 15 165 21 21 49 130 65 92 131 97 186 172 164 177 252 16 94 229 206 128 213 20 236 18 56 190 174 32 55 166 248 54 37 89 54 32 212 96 129 158 134 130 22 9 38)
  :der-encode
  #f
  :tests
  '(#(113
      "k*G has a large x-coordinate"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 67 25 5 83 88 232 97 123 12 70 53 61 3 156 218 171 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 78)
      #t
      ())
    #(114
      "r too large"
      #vu8(84 101 115 116)
      #vu8(255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 252 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 78)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 60 216 210 248 29 105 83 176 132 76 9 215 181 96 213 39 205 46 246 112 86 137 62 173 175 165 44 133 1 56 125 89 238 65 253 180 209 4 2 206 122 12 94 59 116 122 223 163 164 144 182 42 107 119 25 6 137 3 72 92 11 182 220 45)
  :der-encode
  #f
  :tests
  '(#(115
      "r,s are large"
      #vu8(84 101 115 116)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 79 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 78)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 130 64 205 129 237 217 28 182 147 97 51 80 140 57 21 16 14 129 243 50 196 84 93 65 24 155 72 17 150 133 19 120 224 91 6 231 45 74 27 255 128 234 93 181 20 170 47 147 234 109 214 217 192 174 39 183 131 125 196 50 249 206 137 217)
  :der-encode
  #f
  :tests
  '(#(116
      "r and s^-1 have a large Hamming weight"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 144 145 53 189 182 121 146 134 23 15 94 173 45 228 246 81 20 83 254 80 145 79 61 242 222 84 163 99 131 223 141 212)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 176 98 148 115 86 116 139 15 193 127 23 4 198 90 161 220 166 225 191 230 119 151 86 250 97 109 145 234 173 19 223 44 11 56 193 127 61 6 114 231 64 156 252 89 146 169 159 255 18 184 74 79 132 50 41 59 67 17 19 241 178 251 87 157)
  :der-encode
  #f
  :tests
  '(#(117
      "r and s^-1 have a large Hamming weight"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 39 180 87 124 160 9 55 111 113 48 63 213 221 34 125 206 245 222 183 115 173 95 90 132 54 6 68 102 156 162 73 165)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 74 3 239 159 146 235 38 140 175 166 1 7 36 137 165 99 128 250 13 196 49 113 215 113 40 19 179 161 154 30 181 229 62 33 62 40 166 8 206 154 47 74 23 253 131 12 102 84 1 138 121 179 224 38 61 145 168 186 144 98 45 246 242 240)
  :der-encode
  #f
  :tests
  '(#(118
      "small r and s"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #t
      ())
    #(119
      "incorrect size of signature"
      #vu8(84 101 115 116)
      #vu8(5 1)
      #t
      ("SigSize"))))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 9 17 148 193 203 161 127 52 226 134 180 131 55 1 96 106 65 206 242 97 119 173 168 133 11 96 30 161 248 89 231 1 39 36 47 206 199 8 130 135 88 64 60 226 254 80 25 131 167 152 78 98 9 244 214 185 93 185 173 119 118 127 85 235)
  :der-encode
  #f
  :tests
  '(#(120
      "small r and s"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3)
      #t
      ())
    #(121
      "incorrect size of signature"
      #vu8(84 101 115 116)
      #vu8(5 3)
      #t
      ("SigSize"))))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 16 60 110 204 239 245 158 113 234 143 86 254 227 164 178 177 72 232 28 43 219 221 57 193 149 129 44 150 220 251 65 167 35 3 161 147 220 89 27 225 80 184 131 215 112 236 81 235 180 235 206 139 9 4 44 46 203 22 196 72 216 229 123 245)
  :der-encode
  #f
  :tests
  '(#(122
      "small r and s"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5)
      #t
      ())
    #(123
      "incorrect size of signature"
      #vu8(84 101 115 116)
      #vu8(5 5)
      #t
      ("SigSize"))))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 59 102 184 41 254 96 70 56 188 178 191 232 194 34 40 190 103 57 12 32 17 27 210 180 81 70 137 39 232 127 182 234 188 142 89 192 9 54 23 88 178 116 186 44 173 54 181 143 222 72 90 62 208 157 173 231 103 18 250 158 156 74 194 18)
  :der-encode
  #f
  :tests
  '(#(124
      "small r and s"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6)
      #t
      ())
    #(125
      "incorrect size of signature"
      #vu8(84 101 115 116)
      #vu8(5 6)
      #t
      ("SigSize"))
    #(126
      "r is larger than n"
      #vu8(84 101 115 116)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 86 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 79 242 246 194 78 74 51 205 113 192 159 220 188 116 166 35 57 97 184 116 184 200 224 235 148 88 32 146 203 197 12 48 132 250 149 71 175 218 92 102 51 95 63 147 125 76 121 175 161 32 72 107 83 65 57 213 154 232 45 97 234 210 100 32)
  :der-encode
  #f
  :tests
  '(#(127
      "s is larger than n"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 117 251 216)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 132 185 89 8 11 179 8 89 205 83 194 251 151 60 241 77 96 205 170 142 224 5 135 136 155 91 198 87 172 88 129 117 160 44 229 193 229 60 177 150 17 60 120 180 203 141 199 211 96 229 234 120 80 176 246 101 11 12 69 175 44 60 215 202)
  :der-encode
  #f
  :tests
  '(#(128
      "small r and s^-1"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 143 30 60 120 98 197 139 22 187 118 237 219 183 110 221 187 81 106 244 246 63 45 116 215 110 13 40 201 187 117 234 136)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 223 64 131 189 110 203 218 90 119 174 87 142 93 131 95 167 247 74 7 235 185 30 5 112 225 255 50 165 99 53 78 153 37 175 128 176 154 22 125 158 246 71 223 40 226 217 172 208 212 188 79 45 238 197 114 56 24 237 175 144 113 227 17 248)
  :der-encode
  #f
  :tests
  '(#(129
      "smallish r and s^-1"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 45 155 77 52 121 82 214 239 48 67 231 50 149 129 219 179 151 68 151 113 10 177 21 5 238 28 135 255 144 123 238 186 221 25 90 15 254 109 122)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 194 86 154 60 155 248 193 131 140 168 33 247 186 111 0 12 200 103 157 39 143 55 54 180 20 163 74 124 149 106 3 119 3 135 234 133 188 79 40 128 75 74 145 201 183 214 91 198 67 76 151 88 6 121 90 183 212 65 164 233 104 58 235 9)
  :der-encode
  #f
  :tests
  '(#(130
      "100-bit r and small s^-1"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 16 51 230 126 55 179 43 68 85 128 191 78 255 139 116 139 116 0 0 0 0 139 116 139 116 139 116 139 116 102 231 105 173 74 22 211 220 216 113 41 184 233 29 27 77)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 74 159 125 162 166 195 89 161 101 64 194 113 119 74 107 241 197 134 53 124 151 130 86 244 74 100 150 216 6 112 150 138 196 150 231 58 68 86 63 141 86 251 215 187 158 78 58 227 4 200 111 44 80 142 183 119 176 57 36 117 91 235 64 212)
  :der-encode
  #f
  :tests
  '(#(131
      "small r and 100 bit s^-1"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 239 159 107 164 217 124 9 208 49 120 250 32 180 170 173 131 190 60 249 203 130 74 135 159 236 50 112 252 75 129 239 91)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 135 65 70 67 43 60 210 201 226 98 4 192 163 65 54 153 96 103 212 102 221 228 145 122 143 242 58 142 149 202 16 107 112 155 61 80 151 110 248 179 133 168 19 188 53 243 162 7 16 189 198 237 212 101 230 244 58 196 134 103 3 166 96 140)
  :der-encode
  #f
  :tests
  '(#(132
      "100-bit r and s^-1"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 37 34 187 211 236 190 124 57 233 62 124 37 239 159 107 164 217 124 9 208 49 120 250 32 180 170 173 131 190 60 249 203 130 74 135 159 236 50 112 252 75 129 239 91)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 122 115 109 142 50 106 156 166 43 190 37 163 78 164 227 99 59 73 154 150 175 167 170 163 252 243 253 136 248 224 126 222 179 228 88 121 216 98 43 147 232 24 68 58 104 110 134 158 237 167 191 154 228 106 163 234 252 196 138 89 52 134 70 39)
  :der-encode
  #f
  :tests
  '(#(133
      "r and s^-1 are close to n"
      #vu8(84 101 115 116)
      #vu8(255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 36 213 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 232 77 155 35 46 151 26 67 56 38 48 249 151 37 228 35 236 30 203 65 229 81 114 233 198 151 72 160 63 13 89 136 97 139 21 180 39 173 131 54 59 208 65 255 117 250 201 142 242 238 146 55 20 231 209 223 227 23 83 121 60 117 136 212)
  :der-encode
  #f
  :tests
  '(#(134
      "s == 1"
      #vu8(84 101 115 116)
      #vu8(85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #t
      ())
    #(135
      "s == 0"
      #vu8(84 101 115 116)
      #vu8(85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 2 3 115 111 203 25 139 21 216 215 160 200 15 102 221 221 21 37 146 64 170 120 208 138 174 103 196 103 222 4 80 52 52 56 52 56 213 4 30 169 163 135 238 142 77 78 132 180 71 27 22 12 107 207 37 104 176 114 248 242 14 135 169 150)
  :der-encode
  #f
  :tests
  '(#(136
      "point at infinity during verify"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 128 0 0 0 127 255 255 255 255 255 255 255 222 115 125 86 211 139 207 66 121 220 229 97 126 49 146 168 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 120 216 68 220 127 22 183 59 31 42 57 115 13 165 216 205 153 254 46 112 161 132 130 56 78 55 220 210 191 234 2 225 237 101 114 224 30 183 168 209 19 208 44 102 108 69 239 34 211 185 166 166 222 169 154 164 58 129 131 194 110 117 211 54)
  :der-encode
  #f
  :tests
  '(#(137
      "edge case for signature malleability"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 128 0 0 0 127 255 255 255 255 255 255 255 222 115 125 86 211 139 207 66 121 220 229 97 126 49 146 169 127 255 255 255 128 0 0 0 127 255 255 255 255 255 255 255 222 115 125 86 211 139 207 66 121 220 229 97 126 49 146 168)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 222 198 200 37 125 222 148 17 14 172 200 192 157 46 87 137 204 91 235 129 169 88 176 43 77 98 218 149 153 167 64 20 102 250 225 97 65 116 190 99 151 11 131 246 82 68 33 6 123 6 221 111 78 156 86 186 202 78 52 79 221 105 15 29)
  :der-encode
  #f
  :tests
  '(#(138
      "edge case for signature malleability"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 128 0 0 0 127 255 255 255 255 255 255 255 222 115 125 86 211 139 207 66 121 220 229 97 126 49 146 169 127 255 255 255 128 0 0 0 127 255 255 255 255 255 255 255 222 115 125 86 211 139 207 66 121 220 229 97 126 49 146 169)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 161 127 91 117 163 94 214 70 35 202 92 191 31 145 149 18 146 219 12 35 240 194 234 36 195 208 202 208 152 140 171 192 131 167 166 24 98 92 34 137 64 115 11 79 163 238 100 250 236 187 47 194 15 221 231 197 139 58 63 99 0 66 77 198)
  :der-encode
  #f
  :tests
  '(#(139
      "u1 == 1"
      #vu8(84 101 115 116)
      #vu8(85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 83 46 170 189 149 116 136 13 191 118 185 184 204 0 131 44 32 166 236 17 61 104 34 153 85 13 122 110 15 52 94 37)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 4 186 12 186 41 26 55 219 19 243 59 249 13 171 98 140 4 236 131 147 160 32 4 25 233 234 161 235 204 159 181 195 31 58 10 14 104 35 164 155 98 90 213 123 18 163 45 64 71 151 15 195 66 143 15 0 73 236 244 38 93 193 47 98)
  :der-encode
  #f
  :tests
  '(#(140
      "u1 == n - 1"
      #vu8(84 101 115 116)
      #vu8(85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 172 209 85 65 106 139 119 243 64 137 70 71 51 255 124 211 156 64 14 156 105 175 123 235 158 172 80 84 237 46 199 44)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 105 43 108 130 142 15 238 214 61 138 234 162 183 50 47 156 203 232 114 58 30 211 159 34 159 32 74 67 75 137 0 239 161 246 246 171 203 56 234 59 143 222 56 185 140 124 39 31 39 74 245 106 140 86 40 220 51 41 6 154 228 221 87 22)
  :der-encode
  #f
  :tests
  '(#(141
      "u2 == 1"
      #vu8(84 101 115 116)
      #vu8(85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 0 206 253 145 98 209 62 100 203 147 104 122 156 216 249 117 94 187 90 62 247 99 47 128 15 132 135 24 116 204 239 9 84 62 203 234 247 232 4 78 247 33 190 47 181 245 73 228 184 72 13 37 135 64 78 191 125 187 239 44 84 188 12 177)
  :der-encode
  #f
  :tests
  '(#(142
      "u2 == n - 1"
      #vu8(84 101 115 116)
      #vu8(85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 170 170 170 170 0 0 0 0 170 170 170 170 170 170 170 170 125 239 81 201 26 15 191 3 77 38 135 44 168 66 24 225)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 185 117 24 59 66 85 28 245 47 41 29 92 25 33 253 94 18 245 12 140 133 164 190 185 222 3 239 163 240 242 68 134 34 67 1 142 104 102 223 146 45 195 19 97 32 32 49 31 242 30 36 44 227 251 21 188 120 196 6 178 90 180 48 145)
  :der-encode
  #f
  :tests
  '(#(143
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 113 15 142 62 220 124 45 90 63 210 61 232 68 0 43 185 73 217 247 148 246 213 64 95 109 151 193 187 3 221 43 210)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 194 95 29 22 111 62 33 28 223 4 42 38 248 171 246 9 77 72 184 209 113 145 215 78 215 23 20 146 116 70 105 153 101 208 109 214 168 138 191 164 158 139 76 93 166 187 146 40 81 150 154 223 150 4 181 172 207 181 42 17 78 119 204 219)
  :der-encode
  #f
  :tests
  '(#(144
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 237 255 188 39 15 114 44 36 48 105 167 229 244 3 53 166 26 88 82 92 123 77 178 231 168 226 105 39 79 254 78 27)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 143 229 232 130 67 167 110 65 160 4 35 98 24 163 195 162 214 238 227 152 162 60 58 11 0 141 127 1 100 203 192 202 152 162 13 27 220 245 115 81 60 124 253 155 131 198 62 58 130 212 1 39 200 151 105 124 134 184 203 56 122 247 242 64)
  :der-encode
  #f
  :tests
  '(#(145
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 162 90 220 174 16 94 215 255 79 149 210 52 78 36 238 82 51 20 195 225 120 82 93 0 121 4 182 137 25 186 77 83)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 2 20 130 86 181 48 251 196 112 199 179 65 151 11 56 36 62 206 230 213 168 64 163 123 236 162 239 179 126 141 255 44 192 173 190 160 136 36 130 167 72 156 167 3 163 153 134 75 169 135 238 182 221 183 56 175 83 168 53 115 71 60 179 13)
  :der-encode
  #f
  :tests
  '(#(146
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 46 67 72 198 69 112 125 206 103 96 215 115 222 63 62 135 52 105 36 178 246 75 211 221 2 151 231 102 181 128 94 187)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 163 77 176 18 206 110 218 30 156 115 117 197 252 243 229 78 214 152 225 150 21 18 66 115 179 166 33 208 33 199 111 142 119 116 88 214 245 90 54 76 34 30 57 225 32 93 85 16 187 79 187 125 223 8 216 216 253 222 19 209 214 223 127 20)
  :der-encode
  #f
  :tests
  '(#(147
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 52 140 103 59 7 220 227 146 13 119 61 227 243 232 116 8 134 158 145 109 188 247 151 216 249 104 79 182 119 83 209 220)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 185 122 243 254 120 190 21 242 145 43 98 113 221 138 67 186 219 109 210 161 179 21 178 206 122 227 123 78 119 120 4 29 147 13 113 238 25 146 210 70 100 149 196 33 2 208 142 129 21 76 48 83 7 209 220 213 45 15 164 196 121 178 120 231)
  :der-encode
  #f
  :tests
  '(#(148
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 105 24 206 118 15 185 199 36 26 238 123 199 231 208 232 17 13 61 34 219 121 239 47 177 242 208 159 108 238 167 163 184)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 129 231 25 138 60 63 35 144 28 237 199 161 214 239 246 233 191 129 16 142 108 53 205 133 89 19 154 243 19 93 188 187 158 241 86 133 48 41 26 128 97 185 12 159 66 133 238 252 186 153 13 69 112 164 227 183 183 55 82 91 93 88 0 52)
  :der-encode
  #f
  :tests
  '(#(149
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 115 179 198 148 57 29 142 173 222 63 62 135 64 137 70 71 21 172 32 228 193 38 187 246 216 100 214 72 150 159 91 90)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 171 77 121 44 161 33 209 219 163 156 185 222 100 81 73 194 171 87 62 139 236 198 221 255 60 201 150 15 24 141 223 115 127 144 186 35 102 65 83 233 50 98 255 115 53 84 21 25 88 88 215 190 19 21 166 148 86 56 109 230 130 133 163 200)
  :der-encode
  #f
  :tests
  '(#(150
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 187 7 172 122 134 148 140 44 41 137 161 109 177 147 14 241 184 156 225 18 89 81 151 101 104 119 229 60 65 69 127 40)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 81 132 18 182 154 244 58 174 8 68 118 166 141 89 187 222 81 251 250 158 91 232 5 99 245 135 201 194 101 47 136 239 45 59 144 210 91 170 107 219 123 12 85 229 36 10 58 152 251 194 74 254 216 82 62 222 193 199 5 3 252 16 242 51)
  :der-encode
  #f
  :tests
  '(#(151
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 39 228 216 44 182 192 97 221 147 55 198 155 249 51 46 211 209 152 102 45 111 34 153 68 63 98 200 97 24 125 182 72)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 160 143 20 166 68 185 169 53 223 254 164 118 30 186 245 146 209 246 111 230 205 55 58 167 245 211 112 175 52 248 53 45 165 75 91 196 2 92 243 53 144 10 145 76 41 52 236 47 236 122 57 109 10 122 255 202 215 50 165 116 28 122 170 245)
  :der-encode
  #f
  :tests
  '(#(152
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 231 197 207 58 172 46 136 146 59 119 133 5 21 255 246 161 45 19 179 86 223 233 236 39 92 61 216 26 233 70 9 164)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 204 242 41 106 106 137 182 43 144 115 157 56 175 74 227 162 14 159 69 113 91 144 4 70 57 36 16 97 227 63 143 140 170 206 0 70 73 30 234 161 198 233 164 114 185 109 136 244 175 131 231 255 27 184 68 56 199 224 88 3 68 18 174 8)
  :der-encode
  #f
  :tests
  '(#(153
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 199 120 56 223 145 193 233 83 224 22 225 11 221 255 234 35 23 249 254 227 43 172 254 85 60 237 233 229 122 116 143 104)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 148 176 252 21 37 188 171 248 43 31 52 137 94 88 25 160 108 2 178 62 4 0 34 118 225 101 249 98 200 110 57 39 190 124 42 180 208 178 83 3 32 79 179 42 31 130 146 144 39 146 34 94 22 166 210 219 251 41 251 200 154 156 51 118)
  :der-encode
  #f
  :tests
  '(#(154
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 142 240 113 192 35 131 210 166 192 45 194 23 187 255 212 70 115 13 3 24 176 66 94 37 134 34 9 7 248 133 249 127)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 83 81 243 126 29 224 200 140 80 133 39 216 152 130 209 131 204 220 242 239 202 64 126 219 6 39 202 223 209 109 230 236 68 180 181 124 223 150 13 50 235 204 76 151 132 126 237 33 132 37 133 59 91 103 94 183 129 183 102 161 161 48 3 73)
  :der-encode
  #f
  :tests
  '(#(155
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 86 104 170 160 181 69 187 249 160 68 163 35 153 255 190 105 206 32 7 78 52 215 189 245 207 86 40 42 118 151 99 150)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 116 139 186 252 50 14 103 53 203 100 1 151 16 162 105 198 194 181 209 71 189 200 49 50 92 178 251 39 106 201 113 166 157 101 94 154 117 91 201 216 0 173 33 238 63 212 217 128 217 58 122 73 168 197 204 211 112 5 23 117 120 245 17 99)
  :der-encode
  #f
  :tests
  '(#(156
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 209 45 110 86 136 47 108 0 39 202 233 26 39 18 119 40 247 253 223 71 143 180 253 194 182 95 64 166 11 14 185 82)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 20 179 187 215 92 94 28 12 54 83 90 147 77 74 184 81 18 65 11 59 144 250 151 163 28 51 3 137 100 253 133 204 17 47 125 131 127 143 156 54 180 96 214 54 201 101 165 248 24 242 181 12 93 0 251 63 151 5 86 29 214 99 24 131)
  :der-encode
  #f
  :tests
  '(#(157
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 127 255 255 255 170 170 170 170 255 255 255 255 255 255 255 255 233 162 83 143 55 178 138 44 81 61 238 64 254 203 183 26)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 216 35 83 60 4 205 142 220 109 111 149 10 142 8 173 224 74 155 175 162 241 74 89 3 86 147 86 113 174 147 5 191 67 23 141 31 136 182 165 122 150 146 76 38 95 13 219 117 181 131 18 144 123 25 90 203 89 215 121 115 3 18 55 117)
  :der-encode
  #f
  :tests
  '(#(158
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 182 47 38 181 242 162 178 111 109 232 109 66 173 138 19 218 58 179 204 205 4 89 178 1 222 0 158 82 106 223 33 242)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 219 43 52 8 179 22 125 145 3 6 36 198 50 142 140 227 236 16 140 16 85 117 194 243 210 9 185 46 101 75 171 105 195 67 24 19 156 80 176 128 44 110 97 47 15 211 24 157 128 13 247 201 150 213 215 183 195 214 190 130 131 111 162 88)
  :der-encode
  #f
  :tests
  '(#(159
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 187 29 154 201 73 221 116 140 208 43 187 231 73 189 53 28 213 123 56 187 97 64 61 112 6 134 170 123 76 144 133 30)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 9 23 156 231 197 146 37 57 34 22 69 59 42 193 233 209 120 194 72 55 223 174 38 188 29 215 171 96 99 133 39 66 85 86 180 46 51 2 137 243 184 38 178 219 122 134 209 157 69 194 134 10 89 242 190 29 220 195 182 145 249 90 146 85)
  :der-encode
  #f
  :tests
  '(#(160
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 102 117 90 0 99 140 218 236 28 115 37 19 202 2 52 236 229 37 69 218 193 31 129 110 129 143 114 91 79 96 170 242)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 1 149 159 184 222 218 86 229 70 123 126 75 33 78 164 194 208 194 251 41 215 15 241 155 107 30 204 235 214 86 141 126 217 219 215 122 145 130 151 253 151 11 255 1 225 52 63 105 37 22 125 181 161 77 9 138 33 28 57 204 58 65 51 152)
  :der-encode
  #f
  :tests
  '(#(161
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 85 160 12 159 205 174 187 96 50 81 60 160 35 78 207 255 233 142 190 73 47 223 2 228 140 164 142 152 43 235 54 105)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 86 127 31 220 56 126 83 80 200 82 180 232 248 186 157 109 148 126 28 93 215 204 198 26 89 56 36 93 214 188 171 58 153 96 190 186 249 25 81 79 149 53 194 46 170 240 181 129 40 87 151 14 38 102 34 103 177 243 235 16 17 19 10 17)
  :der-encode
  #f
  :tests
  '(#(162
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 171 64 25 63 155 93 118 192 100 162 121 64 70 157 159 255 211 29 124 146 95 190 5 201 25 73 29 48 87 214 108 210)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 52 153 249 116 255 76 166 187 178 245 22 130 253 95 81 118 47 157 214 221 40 85 38 38 96 179 109 70 211 228 190 194 244 152 250 226 72 120 7 226 32 17 145 82 240 18 36 118 198 77 79 164 109 220 232 92 69 70 99 15 13 92 94 129)
  :der-encode
  #f
  :tests
  '(#(163
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 202 2 52 235 181 253 203 19 202 2 52 236 255 255 255 255 203 13 173 187 199 245 73 248 162 107 68 8 208 220 134 0)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 44 92 1 102 44 240 12 25 41 89 98 87 219 19 178 110 207 48 208 243 236 75 159 3 81 176 242 112 148 71 52 38 233 134 160 134 6 13 8 110 238 130 45 221 47 199 68 36 122 1 84 181 127 122 105 197 29 159 218 250 72 78 74 199)
  :der-encode
  #f
  :tests
  '(#(164
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 191 255 255 255 62 163 103 126 8 43 147 16 87 38 32 174 25 147 58 158 101 178 133 89 135 17 199 114 152 129 90 211)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 145 212 203 168 19 160 77 134 219 174 148 194 59 230 245 44 21 119 65 131 190 123 165 178 217 243 207 1 11 22 5 1 144 11 138 223 234 100 145 1 154 154 192 128 213 22 2 90 84 27 244 185 82 176 173 123 228 177 135 75 2 253 84 74)
  :der-encode
  #f
  :tests
  '(#(165
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 38 102 102 102 59 187 187 187 230 102 102 102 102 102 102 102 91 55 144 46 2 63 171 124 143 5 93 134 229 204 65 244)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 239 127 208 163 163 99 134 99 131 48 236 173 65 225 163 179 2 175 54 150 8 49 208 33 12 97 75 148 142 138 161 36 239 13 109 128 14 64 71 214 211 193 190 15 222 175 17 252 216 202 181 171 89 199 48 235 52 17 110 53 168 199 208 152)
  :der-encode
  #f
  :tests
  '(#(166
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 191 255 255 255 54 219 109 183 164 146 73 36 146 73 36 146 20 108 87 63 76 109 252 141 8 164 67 226 88 151 11 9)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 165 33 218 177 60 201 21 45 140 167 112 53 166 7 254 160 108 85 204 60 165 219 235 134 140 234 146 234 254 147 223 42 123 251 155 40 83 25 150 99 94 106 92 202 162 130 106 64 108 225 17 27 219 156 46 12 163 101 0 65 138 47 67 222)
  :der-encode
  #f
  :tests
  '(#(167
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 191 255 255 255 42 170 170 171 127 255 255 255 255 255 255 255 200 21 208 230 11 62 89 110 203 26 211 162 124 253 73 196)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 71 77 88 164 238 193 110 13 86 95 33 135 254 17 212 232 231 162 104 58 18 243 139 79 192 29 18 55 168 26 16 151 110 85 247 59 183 205 218 70 189 182 126 247 127 111 210 150 157 242 182 121 32 251 89 69 253 227 165 23 166 222 212 205)
  :der-encode
  #f
  :tests
  '(#(168
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 127 255 255 255 85 85 85 85 255 255 255 255 255 255 255 255 211 68 167 30 111 101 20 88 162 123 220 129 253 151 110 55)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 105 45 165 205 67 9 217 166 229 203 82 92 55 218 143 160 135 159 123 87 32 140 218 187 244 125 34 58 91 35 166 33 64 224 218 167 140 253 210 7 167 56 154 174 214 23 56 177 127 197 252 62 106 94 211 57 125 41 2 233 18 94 106 180)
  :der-encode
  #f
  :tests
  '(#(169
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 63 255 255 255 128 0 0 0 127 255 255 255 255 255 255 255 222 115 125 86 211 139 207 66 121 220 229 97 126 49 146 170)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 133 104 155 62 7 117 199 113 138 144 39 159 20 168 8 44 252 212 209 241 103 146 116 244 233 184 128 92 87 10 6 112 22 127 204 92 167 52 85 46 9 175 163 100 15 74 3 78 21 185 183 202 102 30 199 255 112 211 242 64 235 231 5 177)
  :der-encode
  #f
  :tests
  '(#(170
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 93 142 205 100 164 238 186 70 104 21 221 243 164 222 154 142 106 189 156 93 176 160 30 184 3 67 85 61 166 72 66 143)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 1 88 19 119 85 185 1 247 151 169 13 76 168 136 126 2 60 178 239 99 178 186 44 13 69 94 218 239 66 207 35 126 42 150 79 192 13 55 122 133 146 184 182 26 175 167 164 170 167 199 185 253 43 65 214 224 225 123 209 186 86 119 237 205)
  :der-encode
  #f
  :tests
  '(#(171
      "point duplication during verification"
      #vu8(84 101 115 116)
      #vu8(111 35 71 202 183 221 118 133 143 224 85 90 195 188 153 4 140 74 172 175 223 182 188 190 5 234 108 66 196 147 69 105 242 29 144 126 56 144 145 109 196 250 31 71 3 193 229 13 63 84 221 247 56 62 68 2 58 65 222 86 42 161 142 216)
      #t
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 1 88 19 119 85 185 1 247 151 169 13 76 168 136 126 2 60 178 239 99 178 186 44 13 69 94 218 239 66 207 35 126 213 105 176 62 242 200 133 123 109 71 73 229 80 88 91 85 88 56 70 3 212 190 41 31 30 132 46 69 169 136 18 50)
  :der-encode
  #f
  :tests
  '(#(172
      "duplication bug"
      #vu8(84 101 115 116)
      #vu8(111 35 71 202 183 221 118 133 143 224 85 90 195 188 153 4 140 74 172 175 223 182 188 190 5 234 108 66 196 147 69 105 242 29 144 126 56 144 145 109 196 250 31 71 3 193 229 13 63 84 221 247 56 62 68 2 58 65 222 86 42 161 142 216)
      #f
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 56 160 132 255 204 196 174 47 130 4 190 42 188 169 251 138 212 171 40 59 42 165 15 19 182 187 35 71 173 171 198 156 166 153 121 155 119 177 204 109 173 39 30 136 184 153 193 41 49 152 110 149 142 31 92 245 101 61 221 247 56 147 101 226)
  :der-encode
  #f
  :tests
  '(#(173
      "point with x-coordinate 0"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 122 135 111 191 130 29 150 197 85 195 83 147 211 178 210 232 9 166 216 57 176 177 21 217 100 218 62 145 158 248 37 4 115 61 207 65 216 51 176 83 11 135 167 177 165 47 125 145 191 161 153 19 247 21 24 134 145 59 22 13 224 124 214 155)
  :der-encode
  #f
  :tests
  '(#(174
      "point with x-coordinate 0"
      #vu8(84 101 115 116)
      #vu8(1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 51 51 51 51 0 0 0 0 51 51 51 51 51 51 51 51 37 199 203 188 84 158 82 231 99 241 245 90 50 122 58 169)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 102 76 226 115 50 13 145 141 139 219 46 97 32 27 69 73 179 107 124 220 84 227 59 132 173 182 242 193 10 172 131 30 73 230 136 49 241 139 218 41 115 172 61 118 191 188 140 94 225 204 238 210 221 134 46 45 199 201 21 199 54 206 241 244)
  :der-encode
  #f
  :tests
  '(#(175
      "comparison with point at infinity "
      #vu8(84 101 115 116)
      #vu8(85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 51 51 51 51 0 0 0 0 51 51 51 51 51 51 51 51 37 199 203 188 84 158 82 231 99 241 245 90 50 122 58 169)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 150 22 145 165 233 96 208 122 48 29 187 173 77 134 36 126 194 125 112 137 250 235 61 221 26 221 57 94 255 241 224 254 114 84 98 44 195 113 134 108 223 153 13 44 83 119 121 14 55 209 241 81 152 23 240 154 35 27 210 96 169 231 138 235)
  :der-encode
  #f
  :tests
  '(#(176
      "extreme value for k and edgecase s"
      #vu8(84 101 115 116)
      #vu8(124 242 123 24 141 3 79 126 138 82 56 3 4 181 26 195 192 137 105 226 119 242 27 53 166 11 72 252 71 102 153 120 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 93 40 62 19 206 140 166 13 168 104 227 176 251 51 230 180 241 7 71 147 39 78 41 40 37 14 113 226 172 166 62 156 33 77 199 79 162 83 113 251 77 158 80 109 65 142 217 161 191 214 208 200 187 101 145 211 224 244 69 5 168 72 134 206)
  :der-encode
  #f
  :tests
  '(#(177
      "extreme value for k and s^-1"
      #vu8(84 101 115 116)
      #vu8(124 242 123 24 141 3 79 126 138 82 56 3 4 181 26 195 192 137 105 226 119 242 27 53 166 11 72 252 71 102 153 120 182 219 109 182 36 146 73 37 73 36 146 73 36 146 73 36 98 91 215 160 155 236 76 168 27 205 217 248 253 107 99 204)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 15 195 81 218 3 138 224 128 59 209 216 101 20 174 4 98 249 248 33 101 81 217 49 90 169 210 151 247 146 238 246 163 65 199 78 237 120 111 45 51 218 53 54 12 167 170 146 94 117 63 0 214 7 122 30 158 95 195 57 214 52 1 156 115)
  :der-encode
  #f
  :tests
  '(#(178
      "extreme value for k and s^-1"
      #vu8(84 101 115 116)
      #vu8(124 242 123 24 141 3 79 126 138 82 56 3 4 181 26 195 192 137 105 226 119 242 27 53 166 11 72 252 71 102 153 120 204 204 204 204 0 0 0 0 204 204 204 204 204 204 204 204 151 31 46 241 82 121 75 157 143 199 213 104 201 232 234 167)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 161 227 76 143 22 209 56 103 63 238 85 192 128 84 124 43 253 77 231 85 0 101 246 56 50 43 186 148 48 206 75 96 102 43 233 187 81 38 99 170 77 125 248 171 63 59 65 129 197 212 74 123 223 66 67 102 32 183 216 166 184 26 201 54)
  :der-encode
  #f
  :tests
  '(#(179
      "extreme value for k and s^-1"
      #vu8(84 101 115 116)
      #vu8(124 242 123 24 141 3 79 126 138 82 56 3 4 181 26 195 192 137 105 226 119 242 27 53 166 11 72 252 71 102 153 120 51 51 51 51 0 0 0 0 51 51 51 51 51 51 51 51 37 199 203 188 84 158 82 231 99 241 245 90 50 122 58 170)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 126 26 138 131 56 215 253 140 244 29 50 42 48 45 32 120 168 122 35 199 24 97 80 237 124 218 110 82 129 124 27 223 208 169 19 90 137 210 28 232 33 226 144 20 178 137 131 73 37 77 116 130 114 178 212 235 141 89 238 52 198 21 55 127)
  :der-encode
  #f
  :tests
  '(#(180
      "extreme value for k and s^-1"
      #vu8(84 101 115 116)
      #vu8(124 242 123 24 141 3 79 126 138 82 56 3 4 181 26 195 192 137 105 226 119 242 27 53 166 11 72 252 71 102 153 120 73 36 146 72 219 109 182 219 182 219 109 182 219 109 182 219 90 139 35 13 11 43 81 220 215 235 240 201 254 247 193 133)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 92 25 254 34 122 97 171 198 92 97 238 122 1 140 201 87 27 44 111 102 62 163 53 131 247 106 104 111 100 190 7 139 123 74 13 115 73 64 246 19 213 43 196 134 115 180 87 194 207 120 73 36 144 165 204 86 6 192 84 29 23 178 77 219)
  :der-encode
  #f
  :tests
  '(#(181
      "extreme value for k"
      #vu8(84 101 115 116)
      #vu8(124 242 123 24 141 3 79 126 138 82 56 3 4 181 26 195 192 137 105 226 119 242 27 53 166 11 72 252 71 102 153 120 22 164 80 46 39 129 225 26 200 44 188 157 30 221 140 152 21 132 209 62 24 65 30 47 110 4 120 195 68 22 227 187)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 219 2 209 243 66 29 96 14 157 158 249 228 116 25 219 163 32 142 237 8 194 212 24 154 93 182 58 190 178 115 150 102 224 237 38 150 123 154 218 158 215 255 228 128 130 127 144 160 210 16 213 253 142 198 40 227 23 21 230 178 65 37 81 42)
  :der-encode
  #f
  :tests
  '(#(182
      "extreme value for k and edgecase s"
      #vu8(84 101 115 116)
      #vu8(107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 98 34 209 150 38 85 80 24 147 194 158 68 19 149 182 192 87 17 189 62 213 160 239 114 207 171 51 139 136 34 156 75 170 174 7 156 180 74 26 240 112 54 42 170 82 14 226 76 172 38 38 66 59 11 248 26 241 197 67 17 216 226 253 35)
  :der-encode
  #f
  :tests
  '(#(183
      "extreme value for k and s^-1"
      #vu8(84 101 115 116)
      #vu8(107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 182 219 109 182 36 146 73 37 73 36 146 73 36 146 73 36 98 91 215 160 155 236 76 168 27 205 217 248 253 107 99 204)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 76 207 162 76 103 243 222 247 250 129 188 153 199 11 176 65 156 9 82 186 89 159 76 3 54 29 161 132 176 76 220 165 219 118 183 151 247 244 29 156 114 154 34 25 71 138 126 98 151 40 223 135 8 0 190 140 246 202 122 10 130 21 59 250)
  :der-encode
  #f
  :tests
  '(#(184
      "extreme value for k and s^-1"
      #vu8(84 101 115 116)
      #vu8(107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 204 204 204 204 0 0 0 0 204 204 204 204 204 204 204 204 151 31 46 241 82 121 75 157 143 199 213 104 201 232 234 167)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 234 28 114 201 16 52 3 107 172 113 64 43 110 158 204 74 243 219 222 122 153 220 87 64 97 233 159 239 255 157 132 218 183 221 5 126 117 183 138 198 245 110 52 235 4 143 10 157 41 213 208 85 64 140 144 208 43 194 234 145 140 24 203 99)
  :der-encode
  #f
  :tests
  '(#(185
      "extreme value for k and s^-1"
      #vu8(84 101 115 116)
      #vu8(107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 51 51 51 51 0 0 0 0 51 51 51 51 51 51 51 51 37 199 203 188 84 158 82 231 99 241 245 90 50 122 58 170)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 194 135 154 102 216 108 178 11 130 11 119 149 218 45 166 43 56 146 79 120 23 209 205 53 13 147 105 136 233 14 121 188 84 49 167 38 143 246 147 28 122 117 157 224 36 239 249 11 203 1 119 33 109 182 253 31 58 170 161 31 163 182 160 131)
  :der-encode
  #f
  :tests
  '(#(186
      "extreme value for k and s^-1"
      #vu8(84 101 115 116)
      #vu8(107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 73 36 146 72 219 109 182 219 182 219 109 182 219 109 182 219 90 139 35 13 11 43 81 220 215 235 240 201 254 247 193 133)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 171 28 15 39 63 116 171 194 184 72 199 80 6 242 239 60 84 194 109 242 119 17 176 101 88 244 85 7 154 238 11 163 223 81 15 46 206 246 217 160 89 151 199 118 241 74 214 69 108 23 159 10 19 175 23 113 228 214 195 127 164 139 71 242)
  :der-encode
  #f
  :tests
  '(#(187
      "extreme value for k"
      #vu8(84 101 115 116)
      #vu8(107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 22 164 80 46 39 129 225 26 200 44 188 157 30 221 140 152 21 132 209 62 24 65 30 47 110 4 120 195 68 22 227 187)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 79 227 66 226 254 26 127 155 142 231 235 74 124 15 158 22 43 206 51 87 107 49 94 206 203 182 64 104 55 191 81 245)
  :der-encode
  #f
  :tests
  '(#(188
      "testing point duplication"
      #vu8(84 101 115 116)
      #vu8(83 46 170 189 149 116 136 13 191 118 185 184 204 0 131 44 32 166 236 17 61 104 34 153 85 13 122 110 15 52 94 37 36 146 73 36 109 182 219 109 219 109 182 219 109 182 219 109 173 69 145 134 133 149 168 238 107 245 248 100 255 123 224 194)
      #f
      ())
    #(189
      "testing point duplication"
      #vu8(84 101 115 116)
      #vu8(172 209 85 65 106 139 119 243 64 137 70 71 51 255 124 211 156 64 14 156 105 175 123 235 158 172 80 84 237 46 199 44 36 146 73 36 109 182 219 109 219 109 182 219 109 182 219 109 173 69 145 134 133 149 168 238 107 245 248 100 255 123 224 194)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 176 28 189 28 1 229 128 101 113 24 20 181 131 240 97 233 212 49 204 169 148 206 161 49 52 73 191 151 200 64 174 10)
  :der-encode
  #f
  :tests
  '(#(190
      "testing point duplication"
      #vu8(84 101 115 116)
      #vu8(83 46 170 189 149 116 136 13 191 118 185 184 204 0 131 44 32 166 236 17 61 104 34 153 85 13 122 110 15 52 94 37 36 146 73 36 109 182 219 109 219 109 182 219 109 182 219 109 173 69 145 134 133 149 168 238 107 245 248 100 255 123 224 194)
      #f
      ())
    #(191
      "testing point duplication"
      #vu8(84 101 115 116)
      #vu8(172 209 85 65 106 139 119 243 64 137 70 71 51 255 124 211 156 64 14 156 105 175 123 235 158 172 80 84 237 46 199 44 36 146 73 36 109 182 219 109 219 109 182 219 109 182 219 109 173 69 145 134 133 149 168 238 107 245 248 100 255 123 224 194)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 29 47 201 148 223 32 75 99 240 90 232 66 12 163 144 85 155 128 196 152 142 246 57 185 92 70 158 92 178 76 242 22 84 12 190 188 71 11 202 160 70 102 18 219 222 109 3 9 140 105 150 224 160 95 2 144 33 131 206 186 75 83 15 79 53 0 169 158 76 220 138 80 192 217 141 135 9 68 229 101 72 220 76 246 187 191 61 105 120 239 188 143 200 119 139 51 225 50 210 193 133 194 8 68 207 61 243 148 213 34 37 147 23 227 147 31 1 48 242 63 101 0 200 128 243 168 49 154 180 74 14)
  :der-encode
  #f
  :tests
  '(#(192
      "k*G has a large x-coordinate"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 174 121 120 124 64 208 105 148 128 51 254 183 8 246 90 47 196 74 54 71 118 99 184 81 68 144 72 225 110 199 155 245 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 81 134 135 131 191 47 150 107 127 204 1 72 247 9 165 208 59 181 201 184 137 156 71 174 187 111 183 30 145 56 100 6)
      #t
      ())
    #(193
      "r too large"
      #vu8(84 101 115 116)
      #vu8(1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 81 134 135 131 191 47 150 107 127 204 1 72 247 9 165 208 59 181 201 184 137 156 71 174 187 111 183 30 145 56 100 6)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 154 2 156 119 254 208 76 171 26 184 147 127 218 129 40 252 25 191 140 65 168 242 66 246 169 202 111 10 232 19 193 112 155 139 3 226 106 146 152 254 89 249 158 55 6 255 194 140 67 210 106 17 105 13 47 253 129 90 51 234 50 144 118 105 120 0 18 91 42 75 99 95 81 79 213 214 50 21 103 47 49 26 229 147 92 23 116 237 93 138 68 137 123 104 25 30 99 105 171 38 223 145 94 32 102 169 67 229 154 53 119 49 157 172 90 134 100 11 200 199 24 210 177 89 71 159 221 34 209 20 65)
  :der-encode
  #f
  :tests
  '(#(194
      "r,s are large"
      #vu8(84 101 115 116)
      #vu8(1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 81 134 135 131 191 47 150 107 127 204 1 72 247 9 165 208 59 181 201 184 137 156 71 174 187 111 183 30 145 56 100 7 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 81 134 135 131 191 47 150 107 127 204 1 72 247 9 165 208 59 181 201 184 137 156 71 174 187 111 183 30 145 56 100 6)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 235 98 135 128 64 180 202 12 140 97 175 231 225 149 226 46 57 95 105 199 133 154 194 183 152 2 150 112 152 50 85 115 181 109 61 101 183 188 243 17 27 196 133 158 29 8 22 197 65 71 58 193 255 207 74 44 199 214 230 170 89 27 161 23 175 0 91 234 38 202 199 206 33 53 132 181 211 90 178 45 139 69 220 136 255 38 237 186 221 72 122 169 140 202 167 22 19 187 123 121 220 230 122 155 195 109 62 152 15 193 13 67 19 172 32 196 207 39 30 204 31 74 218 179 149 19 151 26 164 251 157)
  :der-encode
  #f
  :tests
  '(#(195
      "r and s^-1 have a large Hamming weight"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 0 149 225 159 210 183 85 214 3 191 153 69 98 217 161 31 99 207 78 173 236 189 192 236 181 163 148 229 69 41 232 218 88 165 39 188 109 133 114 80 67 120 99 98 171 77 230 203 199 216 14 98 90 224 169 136 97 174 161 199 191 113 9 201 31 102)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 41 107 4 159 25 121 120 91 51 119 197 226 142 223 76 39 135 242 19 242 131 107 234 245 214 20 7 135 10 222 133 125 80 131 224 29 135 40 176 221 222 27 161 187 62 121 22 23 237 219 2 165 44 120 4 151 145 202 82 182 70 249 49 23 194 0 185 119 167 17 165 3 12 78 246 153 8 51 41 97 50 32 59 173 189 188 1 64 124 74 206 180 156 150 182 88 252 119 255 31 101 90 215 78 19 68 226 252 85 201 28 127 195 67 35 85 25 45 179 210 192 60 209 52 186 56 122 211 172 222 64)
  :der-encode
  #f
  :tests
  '(#(196
      "r and s^-1 have a large Hamming weight"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 0 21 131 118 69 88 58 55 167 166 101 249 131 197 227 71 246 93 202 71 100 122 168 15 210 73 138 121 29 68 217 178 133 10 21 26 110 134 252 231 215 187 129 78 114 79 241 27 158 247 38 191 54 198 231 84 140 55 248 42 36 144 40 118 238 25)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 95 80 89 48 131 73 249 235 187 77 28 85 192 175 204 246 33 98 236 29 209 46 243 237 144 102 86 146 79 253 153 202 185 240 107 14 178 24 207 240 120 164 103 122 92 225 204 7 101 43 201 118 174 252 115 44 40 246 126 240 120 164 52 233 153 0 165 209 77 243 16 99 13 118 236 3 203 111 155 149 191 26 34 67 129 5 200 140 217 253 61 172 128 248 87 173 211 130 113 216 186 144 22 132 178 109 67 109 74 133 154 212 205 165 233 103 123 115 202 179 243 229 228 26 61 121 150 96 114 121 171)
  :der-encode
  #f
  :tests
  '(#(197
      "small r and s"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #t
      ())
    #(198
      "incorrect size of signature"
      #vu8(84 101 115 116)
      #vu8(1 1)
      #t
      ("SigSize"))))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 31 183 6 66 116 186 59 89 80 240 10 2 124 178 207 66 209 237 105 200 157 148 77 160 65 94 144 134 243 92 133 180 74 253 214 53 205 193 250 222 44 231 30 98 72 94 36 60 235 159 7 90 17 20 118 48 46 96 215 215 139 18 7 205 167 0 107 66 82 7 113 114 51 32 89 169 198 15 150 104 147 253 167 231 51 119 222 188 186 154 143 105 206 232 245 157 103 162 202 137 47 173 29 244 70 49 97 241 87 199 193 23 193 187 253 220 136 68 28 76 138 188 99 102 123 229 193 255 34 246 226)
  :der-encode
  #f
  :tests
  '(#(199
      "small r and s"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2)
      #t
      ())
    #(200
      "incorrect size of signature"
      #vu8(84 101 115 116)
      #vu8(1 2)
      #t
      ("SigSize"))))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 135 125 66 193 16 169 251 227 114 62 104 78 160 28 85 38 151 168 232 54 120 20 92 186 220 46 39 195 62 118 239 46 216 133 231 175 119 248 51 19 33 59 4 16 123 75 146 248 10 235 253 103 15 209 70 123 43 185 51 58 194 128 234 155 97 1 172 244 232 90 12 203 223 196 112 54 56 194 30 180 91 74 147 219 63 167 71 179 101 35 133 53 205 174 228 252 86 170 149 133 75 78 201 196 81 105 58 175 114 169 13 102 211 0 210 33 27 220 31 160 207 133 229 194 74 224 142 242 162 66 72)
  :der-encode
  #f
  :tests
  '(#(201
      "small r and s"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3)
      #t
      ())
    #(202
      "incorrect size of signature"
      #vu8(84 101 115 116)
      #vu8(1 3)
      #t
      ("SigSize"))
    #(203
      "r is larger than n"
      #vu8(84 101 115 116)
      #vu8(1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 81 134 135 131 191 47 150 107 127 204 1 72 247 9 165 208 59 181 201 184 137 156 71 174 187 111 183 30 145 56 100 10 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 110 175 44 48 67 177 10 216 169 155 231 248 204 196 147 21 25 182 236 89 50 111 106 6 243 116 203 79 134 225 35 125 240 242 109 246 169 12 248 108 48 212 46 59 208 88 60 116 72 48 222 207 120 52 69 69 244 182 218 234 103 74 136 45 185 0 109 253 9 50 10 151 109 89 44 77 57 211 9 13 111 74 211 153 43 112 14 62 144 237 26 19 70 35 140 117 244 186 244 147 190 140 28 22 131 142 206 194 217 153 66 102 4 47 249 198 36 134 146 150 238 155 2 59 187 18 212 11 192 175 7)
  :der-encode
  #f
  :tests
  '(#(204
      "s is larger than n"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 81 134 135 131 191 47 150 107 127 204 1 72 247 9 165 208 59 181 201 184 137 156 71 174 187 111 183 30 145 75 58 144)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 139 112 223 57 106 107 216 65 141 230 161 247 232 15 145 91 204 7 145 41 205 203 74 28 118 176 225 210 87 105 16 241 174 22 243 194 118 113 140 132 28 3 225 140 226 67 235 174 90 166 24 240 156 221 244 112 52 18 36 165 1 111 111 4 232 1 122 211 198 16 43 40 33 32 13 55 60 255 213 97 74 103 11 235 220 230 242 68 179 77 206 135 221 135 88 120 107 122 40 41 205 83 229 147 37 220 235 233 75 86 64 185 209 202 119 92 82 113 106 89 109 158 58 8 64 255 219 214 75 242 71)
  :der-encode
  #f
  :tests
  '(#(205
      "small r and s^-1"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 239 223 191 126 253 251 247 239 223 191 126 253 251 247 239 223 191 126 253 251 247 239 223 191 126 253 251 247 239 223 191 126 248 123 77 225 252 146 221 117 118 57 64 138 80 190 225 7 100 227 38 253 210 250 48 141 253 227 229 36 63 223 74 197 172)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 19 51 121 136 100 69 136 8 253 107 16 166 200 37 23 64 218 109 98 52 64 205 241 227 89 110 131 18 181 143 35 105 45 106 2 16 209 104 44 6 164 118 244 71 3 77 122 52 105 118 208 194 206 26 88 63 150 247 154 83 86 185 160 128 185 0 100 61 35 181 33 41 47 169 105 102 183 247 51 207 32 139 107 231 86 71 223 134 226 226 204 218 64 171 51 96 171 29 99 30 241 63 230 110 179 224 143 174 161 148 69 182 249 62 131 35 225 125 226 144 147 31 173 190 43 106 125 44 223 51 215)
  :der-encode
  #f
  :tests
  '(#(206
      "smallish r and s^-1"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 45 155 77 52 121 82 205 1 0 80 141 7 52 19 222 130 146 117 231 101 9 253 129 207 244 154 223 76 128 237 45 221 74 121 55 209 217 24 121 104 120 254 194 76 196 101 112 152 44 63 184 245 233 44 205 203 62 103 127 7 233 189 13 176 184 72 20 190 28 121 73 176 222)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 83 250 11 225 249 209 153 186 98 177 234 112 72 147 233 179 75 77 145 227 143 22 174 140 67 207 59 169 227 183 176 155 31 147 207 135 101 83 99 174 254 147 150 52 138 175 183 26 239 193 86 120 144 80 223 70 248 64 59 4 110 26 144 106 175 1 194 196 26 127 160 13 15 122 234 236 161 86 77 171 232 112 201 9 113 130 85 27 28 239 235 166 180 103 62 85 122 27 41 117 135 17 57 67 226 92 0 194 26 84 244 95 40 14 15 188 81 22 100 147 53 103 247 156 189 14 158 42 90 218 117)
  :der-encode
  #f
  :tests
  '(#(207
      "100-bit r and small s^-1"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 16 51 230 126 55 179 43 68 85 128 191 78 255 1 60 195 60 195 60 195 60 195 60 195 60 195 60 195 60 195 60 195 60 195 60 195 60 195 60 195 60 195 60 195 60 195 57 63 99 42 255 211 234 163 200 251 100 80 123 213 153 100 151 189 88 143 185 227 148 124 9 124 237 117 70 181 124 137 152)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 82 48 69 153 186 33 252 249 239 36 123 153 223 18 173 167 20 201 6 115 243 23 0 167 20 188 202 166 71 246 48 128 137 164 56 217 90 70 32 100 98 75 140 22 212 45 102 15 60 22 162 122 130 61 241 221 3 152 137 144 40 239 139 230 192 0 226 230 26 39 232 251 240 176 175 177 195 148 142 139 137 55 91 110 94 203 93 221 70 225 210 194 161 150 186 174 30 248 214 142 79 10 146 74 155 107 248 94 80 252 207 113 157 182 16 170 0 79 175 206 248 61 153 108 209 239 203 208 8 40 166)
  :der-encode
  #f
  :tests
  '(#(208
      "small r and 100 bit s^-1"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 134 236 191 84 171 89 164 225 149 240 190 20 2 237 216 101 123 185 70 24 250 181 15 47 226 15 229 235 188 159 240 228 145 57 126 211 19 204 145 141 67 142 237 185 181 236 180 217 223 163 5 48 53 5 186 242 84 0 237 140 32 252 63 196 123)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 208 58 204 238 221 183 216 246 0 65 32 93 239 130 224 158 100 188 89 129 28 246 80 45 234 143 114 169 168 231 221 60 106 176 62 62 109 77 19 27 104 133 125 10 233 111 212 181 157 79 172 130 11 16 100 143 178 130 223 148 229 210 156 98 211 1 11 1 200 83 10 8 155 7 177 178 163 79 218 157 254 151 18 59 28 14 249 124 124 158 182 79 68 166 193 172 242 16 17 87 216 89 106 155 219 219 84 173 121 179 180 163 109 208 103 100 202 176 36 117 28 63 132 205 10 60 215 20 215 228 156)
  :der-encode
  #f
  :tests
  '(#(209
      "100-bit r and s^-1"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 37 34 187 211 236 190 124 57 233 62 124 36 0 134 236 191 84 171 89 164 225 149 240 190 20 2 237 216 101 123 185 70 24 250 181 15 47 226 15 229 235 188 159 240 228 145 57 126 211 19 204 145 141 67 142 237 185 181 236 180 217 223 163 5 48 53 5 186 242 84 0 237 140 32 252 63 196 123)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 217 41 186 182 16 91 237 201 197 241 133 76 227 100 116 34 72 78 147 58 71 44 130 47 63 200 140 118 132 84 3 154 160 220 30 196 247 82 21 125 70 2 94 173 7 34 179 203 134 246 130 51 62 136 237 230 189 47 116 135 8 72 115 173 70 0 88 136 36 51 96 176 139 166 35 141 124 130 215 73 32 251 124 141 92 202 249 43 44 71 136 46 115 14 106 104 165 98 71 77 60 76 217 205 19 3 87 76 41 10 237 218 194 19 204 131 27 110 113 12 156 209 54 137 44 172 199 172 142 46 154)
  :der-encode
  #f
  :tests
  '(#(210
      "r and s^-1 are close to n"
      #vu8(84 101 115 116)
      #vu8(1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 81 134 135 131 191 47 150 107 127 204 1 72 247 9 165 208 59 181 201 184 137 156 71 174 187 111 183 30 145 56 99 138 1 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 81 139 175 5 2 127 117 14 242 85 50 171 133 250 6 110 138 210 121 49 37 177 18 218 116 124 245 36 191 11 122 237 91)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 123 254 58 218 74 26 6 231 50 244 132 241 131 13 12 11 113 196 123 116 250 80 109 227 171 222 166 209 57 171 33 221 114 199 177 193 48 53 240 255 209 37 67 61 1 0 167 3 3 55 185 157 209 98 107 145 202 87 35 51 88 83 160 246 127 0 125 40 68 124 47 196 194 159 199 74 131 142 48 234 227 153 226 130 182 7 255 240 97 162 123 13 105 50 28 204 60 235 15 195 174 134 165 140 119 64 40 218 253 16 139 216 116 184 196 79 52 245 171 157 46 49 202 119 210 170 179 204 94 172 219)
  :der-encode
  #f
  :tests
  '(#(211
      "s == 1"
      #vu8(84 101 115 116)
      #vu8(0 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 168 197 215 130 129 63 186 135 121 42 153 85 194 253 3 55 69 105 60 152 146 216 137 109 58 62 122 146 95 133 189 118 173 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #t
      ())
    #(212
      "s == 0"
      #vu8(84 101 115 116)
      #vu8(0 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 168 197 215 130 129 63 186 135 121 42 153 85 194 253 3 55 69 105 60 152 146 216 137 109 58 62 122 146 95 133 189 118 173 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 59 115 190 14 196 241 139 54 253 194 10 172 150 117 88 10 32 204 114 94 208 222 111 234 99 171 97 17 180 170 236 198 155 31 223 5 187 28 122 113 196 183 165 161 234 175 242 59 225 86 4 244 5 181 236 211 179 237 106 254 168 228 156 214 73 0 145 33 128 201 129 244 128 210 184 183 67 137 136 176 58 12 94 253 189 45 160 148 240 130 247 250 87 236 196 31 222 140 101 211 201 216 15 52 249 18 78 21 29 165 93 150 210 169 185 145 103 45 231 148 73 188 193 192 25 43 118 80 174 144 183)
  :der-encode
  #f
  :tests
  '(#(213
      "point at infinity during verify"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 40 195 67 193 223 151 203 53 191 230 0 164 123 132 210 232 29 218 228 220 68 206 35 215 93 183 219 143 72 156 50 4 0 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 168 197 215 130 129 63 186 135 121 42 153 85 194 253 3 55 69 105 60 152 146 216 137 109 58 62 122 146 95 133 189 118 173)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 67 235 134 42 90 77 206 109 228 176 144 27 145 223 148 250 178 120 195 38 172 52 152 196 129 174 63 73 184 147 171 139 49 216 9 114 60 2 163 202 81 84 229 213 185 224 212 63 222 140 189 251 184 9 183 70 32 134 116 131 129 125 120 159 216 1 127 71 126 1 150 138 193 41 119 175 255 195 147 245 19 35 206 77 186 14 208 211 199 0 170 107 59 111 180 146 153 123 4 189 9 246 74 118 115 177 38 35 77 194 91 2 57 99 58 92 211 130 40 150 251 209 213 226 113 3 138 47 59 121 181)
  :der-encode
  #f
  :tests
  '(#(214
      "edge case for signature malleability"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 40 195 67 193 223 151 203 53 191 230 0 164 123 132 210 232 29 218 228 220 68 206 35 215 93 183 219 143 72 156 50 6 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 40 195 67 193 223 151 203 53 191 230 0 164 123 132 210 232 29 218 228 220 68 206 35 215 93 183 219 143 72 156 50 4)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 25 133 209 157 19 29 118 207 29 168 136 123 49 78 46 235 72 29 20 31 130 65 254 196 108 242 119 159 162 4 35 100 168 160 195 101 98 30 247 46 24 196 78 228 182 9 127 121 85 32 96 215 167 101 213 143 82 64 57 78 102 194 59 207 168 0 29 178 42 97 109 136 105 58 189 40 156 199 125 220 90 203 208 2 32 222 117 218 4 154 88 186 48 70 142 44 162 86 167 35 186 18 160 157 69 135 30 173 195 116 118 205 46 82 204 223 30 6 201 169 78 197 47 117 210 154 25 1 47 198 150)
  :der-encode
  #f
  :tests
  '(#(215
      "edge case for signature malleability"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 40 195 67 193 223 151 203 53 191 230 0 164 123 132 210 232 29 218 228 220 68 206 35 215 93 183 219 143 72 156 50 6 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 40 195 67 193 223 151 203 53 191 230 0 164 123 132 210 232 29 218 228 220 68 206 35 215 93 183 219 143 72 156 50 5)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 192 30 171 155 166 221 210 30 51 66 16 52 172 214 172 146 58 64 159 171 52 158 3 128 191 170 84 180 4 137 0 134 165 225 47 176 158 19 82 113 44 253 225 90 188 37 99 7 154 115 211 51 201 199 156 103 15 176 107 93 128 42 169 183 118 0 167 106 40 208 63 101 124 97 191 135 255 120 231 115 58 6 149 86 210 189 99 139 121 49 106 183 11 90 40 9 188 138 152 162 168 67 35 141 74 190 38 152 178 170 106 237 225 178 84 27 243 220 208 7 207 156 213 196 212 150 156 79 127 252 203)
  :der-encode
  #f
  :tests
  '(#(216
      "u1 == 1"
      #vu8(84 101 115 116)
      #vu8(0 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 168 197 215 130 129 63 186 135 121 42 153 85 194 253 3 55 69 105 60 152 146 216 137 109 58 62 122 146 95 133 189 118 173 0 0 198 238 158 51 207 92 103 21 161 209 72 253 115 247 49 136 132 180 26 220 185 22 2 30 43 192 232 0 165 197 221 151 245 20 33 120 246 174 136 200 253 217 142 26 251 12 228 200 210 197 75 95 55 179 11 125 161 153 123 179 59 11 138 49)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 24 99 101 199 53 136 128 122 81 0 84 18 219 0 75 69 245 247 190 58 96 116 230 17 144 66 151 141 191 188 90 67 30 22 204 147 7 71 230 205 117 17 80 91 76 147 73 206 223 144 138 90 157 189 51 205 176 174 204 191 105 69 68 87 251 0 20 98 10 41 162 105 29 128 56 211 158 30 77 231 196 36 60 140 66 96 30 113 153 69 193 41 124 26 75 16 215 65 90 243 123 241 237 13 220 144 48 188 229 48 24 93 253 252 70 88 255 99 95 107 217 102 11 236 200 255 158 202 79 221 250)
  :der-encode
  #f
  :tests
  '(#(217
      "u1 == n - 1"
      #vu8(84 101 115 116)
      #vu8(0 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 168 197 215 130 129 63 186 135 121 42 153 85 194 253 3 55 69 105 60 152 146 216 137 109 58 62 122 146 95 133 189 118 173 1 255 57 17 97 204 48 163 152 234 94 46 183 2 140 8 206 119 123 75 229 35 70 233 253 225 212 63 23 255 90 58 34 98 92 114 102 10 200 129 13 162 129 242 115 45 251 252 193 7 104 240 126 89 81 233 60 49 25 214 59 107 86 44 217 216)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 46 42 116 107 85 224 91 193 48 211 116 200 171 184 191 101 26 46 43 2 84 4 240 133 69 190 252 185 92 159 127 104 31 111 91 155 242 235 196 93 76 133 114 146 29 58 181 220 225 68 234 93 80 235 236 137 184 200 240 16 234 49 73 72 99 0 140 129 111 18 45 93 99 181 254 160 13 26 0 237 35 87 127 126 247 212 143 57 115 86 131 83 212 104 54 142 199 124 188 158 60 80 18 131 155 116 131 48 135 213 27 163 230 128 171 83 117 190 104 14 168 193 143 123 97 159 50 177 65 242 129)
  :der-encode
  #f
  :tests
  '(#(218
      "u2 == 1"
      #vu8(84 101 115 116)
      #vu8(0 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 168 197 215 130 129 63 186 135 121 42 153 85 194 253 3 55 69 105 60 152 146 216 137 109 58 62 122 146 95 133 189 118 173 0 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 168 197 215 130 129 63 186 135 121 42 153 85 194 253 3 55 69 105 60 152 146 216 137 109 58 62 122 146 95 133 189 118 173)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 211 121 247 152 38 176 65 152 223 55 26 176 81 157 26 127 10 79 25 157 97 73 202 139 127 19 165 218 9 203 160 36 251 231 212 255 127 215 168 169 59 92 188 175 60 104 36 63 99 13 71 216 242 182 82 182 167 214 177 197 34 167 95 169 242 1 198 96 114 45 149 200 60 107 148 87 148 74 204 103 30 136 30 141 23 176 115 98 242 248 39 153 69 111 47 21 214 98 211 106 160 157 90 82 54 40 141 60 19 130 227 226 48 143 70 134 125 83 197 136 163 112 133 127 174 77 50 240 163 221 175)
  :der-encode
  #f
  :tests
  '(#(219
      "u2 == n - 1"
      #vu8(84 101 115 116)
      #vu8(0 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 168 197 215 130 129 63 186 135 121 42 153 85 194 253 3 55 69 105 60 152 146 216 137 109 58 62 122 146 95 133 189 118 173 1 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 81 139 175 5 2 127 117 14 242 85 50 171 133 250 6 110 138 210 121 49 37 177 18 218 116 124 245 36 191 11 122 237 92)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 185 204 140 171 106 243 239 206 98 161 93 225 242 173 187 178 42 77 45 116 232 220 243 47 236 10 148 163 218 53 8 222 29 74 7 63 82 69 249 108 154 106 163 2 30 84 234 163 83 58 120 23 196 229 121 68 171 33 116 84 155 107 147 235 80 1 113 44 221 131 102 196 81 24 240 22 22 58 115 71 25 143 73 90 42 155 196 39 144 141 188 109 212 179 48 245 110 28 29 244 169 136 111 127 214 60 73 18 74 222 96 213 191 142 107 122 195 214 157 56 249 196 219 216 161 34 22 56 39 44 203)
  :der-encode
  #f
  :tests
  '(#(220
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 0 0 66 79 138 17 69 30 205 7 53 240 109 169 209 82 101 216 44 60 8 244 61 178 0 180 185 64 77 85 140 151 73 221 81 177 96 125 167 143 130 237 169 243 47 94 83 174 246 237 155 151 25 31 189 59 174 127 53 221 211 230 105 3 216 187)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 56 38 201 26 170 51 161 131 222 63 110 19 77 134 83 8 174 188 121 14 146 135 188 122 225 54 237 89 191 3 190 68 167 181 180 58 24 202 138 241 161 78 140 168 142 254 28 101 248 148 151 108 86 196 138 240 11 90 193 243 203 205 245 136 182 1 172 59 206 95 174 60 43 182 220 241 157 156 39 94 178 235 86 20 82 58 4 191 14 127 152 164 165 11 231 248 12 140 206 232 169 231 183 76 138 240 118 52 23 4 167 172 35 118 154 66 7 23 34 125 111 125 27 188 252 236 247 32 236 172 57)
  :der-encode
  #f
  :tests
  '(#(221
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 0 65 238 171 125 61 126 128 147 124 173 11 134 211 229 62 20 131 1 102 194 239 168 157 241 142 198 248 143 198 168 165 128 96 26 145 147 75 169 34 189 116 99 81 160 8 172 79 134 220 196 209 58 127 240 148 32 248 151 181 43 248 138 76 146 105)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 200 97 179 213 151 125 175 211 33 196 46 171 25 19 162 241 167 52 233 251 26 33 143 51 192 42 148 29 175 164 30 127 95 165 180 215 63 82 199 76 53 230 38 43 28 74 21 69 197 205 223 169 18 254 68 46 231 161 106 170 224 197 195 246 67 0 96 29 185 129 171 149 147 201 64 87 35 202 168 109 134 44 87 91 92 84 164 135 70 124 35 64 228 149 242 109 187 21 135 87 13 16 211 134 9 179 140 80 9 72 5 95 89 107 41 1 148 177 230 110 168 208 111 250 117 84 209 216 251 107 24)
  :der-encode
  #f
  :tests
  '(#(222
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 1 162 235 37 194 211 249 219 21 243 32 164 221 66 226 54 249 138 93 140 103 116 193 47 152 46 43 206 108 94 22 203 83 219 197 45 166 224 145 32 17 112 199 177 20 99 112 8 101 18 11 86 15 16 110 20 72 197 127 149 122 59 236 40 219 144)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 31 2 218 54 56 41 238 8 180 204 147 70 78 45 123 22 242 194 98 239 121 119 164 180 212 15 19 132 180 11 222 104 8 18 136 96 229 83 159 185 30 146 49 4 128 36 153 154 188 225 143 31 190 234 137 131 72 117 73 164 4 59 83 2 56 0 117 74 5 154 142 161 27 202 76 31 44 83 111 187 217 16 197 3 134 172 213 84 194 116 120 9 13 250 146 153 159 39 226 110 156 95 12 85 31 123 2 170 21 35 219 245 96 99 247 187 112 4 214 73 4 193 174 195 91 199 58 239 226 232 8)
  :der-encode
  #f
  :tests
  '(#(223
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 0 165 33 164 69 254 128 29 209 255 57 17 97 204 48 163 152 234 94 46 183 2 140 8 206 119 123 75 229 35 70 233 253 223 255 37 97 45 76 100 11 151 47 68 0 229 191 89 123 52 44 196 160 229 228 213 12 165 121 206 138 10 224 156 9 19)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 46 206 41 98 239 71 17 244 155 22 151 172 127 173 7 89 22 119 103 161 4 183 106 216 119 73 200 58 226 129 139 246 106 185 217 80 159 115 251 21 62 171 139 84 96 125 204 167 61 60 56 9 117 175 163 238 57 55 50 180 74 89 52 153 44 1 24 106 216 11 241 35 186 53 189 91 33 179 217 94 44 103 42 211 180 133 240 120 98 8 88 207 178 79 27 246 30 173 144 251 26 39 35 236 80 28 43 122 151 205 209 252 62 150 78 134 210 60 3 10 42 185 13 166 243 151 29 164 246 140 153)
  :der-encode
  #f
  :tests
  '(#(224
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 0 26 68 95 232 1 221 31 243 145 22 28 195 10 57 142 165 226 235 112 40 192 140 231 119 180 190 82 52 110 159 222 29 67 166 225 141 240 180 42 66 61 204 91 186 114 214 234 163 72 45 0 117 15 57 92 114 247 181 40 193 78 100 148 253 143)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 171 152 31 80 122 172 108 8 169 175 141 121 99 192 204 149 217 164 23 106 48 189 54 217 184 185 102 105 121 18 245 105 8 121 44 207 21 198 202 65 129 81 170 46 132 28 23 120 63 132 20 250 77 92 34 46 73 192 7 173 202 177 10 160 52 0 141 26 22 136 168 57 147 16 132 202 237 227 55 88 32 134 86 131 114 146 32 154 135 127 188 28 18 235 86 255 152 80 141 35 72 61 110 54 166 212 126 15 34 23 210 88 205 220 198 242 239 254 36 60 10 51 102 78 10 186 14 70 218 51 185)
  :der-encode
  #f
  :tests
  '(#(225
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 0 52 136 191 208 3 186 63 231 34 44 57 134 20 115 29 75 197 214 224 81 129 25 206 239 105 124 164 104 221 63 188 58 135 77 195 27 225 104 84 132 123 152 183 116 229 173 213 70 144 90 0 234 30 114 184 229 239 106 81 130 156 201 41 251 30)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 254 250 207 66 86 97 200 211 162 24 63 196 206 17 185 167 151 152 185 35 103 30 66 198 147 193 11 238 6 216 167 180 97 239 164 163 37 115 202 199 160 22 79 43 163 233 244 131 102 184 173 6 65 112 251 231 152 102 75 21 56 157 142 141 164 1 127 75 41 203 26 224 159 100 10 106 190 183 138 132 103 116 34 190 251 128 65 99 65 56 106 222 228 218 231 2 199 225 106 232 61 2 69 49 225 182 59 1 172 178 196 110 76 14 37 222 86 145 91 212 201 14 241 19 232 119 145 8 250 226 103)
  :der-encode
  #f
  :tests
  '(#(226
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 1 254 128 29 209 255 57 17 97 204 48 163 152 234 94 46 183 2 140 8 206 119 123 75 229 35 70 233 253 225 212 63 23 249 176 3 48 79 182 38 156 159 85 7 104 83 123 53 249 100 67 85 106 98 181 236 119 149 139 216 228 32 77 99 84 206)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 186 86 63 36 61 133 144 35 59 229 151 69 220 142 49 30 135 182 169 227 43 221 189 244 15 13 200 122 17 189 209 215 93 88 211 18 195 109 200 226 114 34 54 144 218 27 106 5 141 93 171 86 242 252 111 41 113 33 165 171 40 140 38 158 117 1 224 52 210 229 221 185 14 253 72 147 228 134 148 180 207 92 133 232 189 202 251 188 174 81 136 13 151 226 45 20 216 56 248 22 46 219 14 2 111 91 168 139 21 14 63 44 31 196 158 210 66 151 147 183 110 146 241 175 169 240 24 5 16 92 216)
  :der-encode
  #f
  :tests
  '(#(227
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 1 65 40 21 26 125 51 164 101 118 126 135 104 16 80 102 122 229 40 175 60 67 207 197 158 60 60 28 128 55 217 65 177 43 237 107 121 239 203 202 207 37 173 70 34 108 92 43 43 191 161 54 14 35 195 49 219 103 206 222 71 217 176 170 63 210)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 36 52 204 162 124 57 101 211 12 26 195 118 4 254 205 86 240 212 172 112 28 29 122 76 199 53 119 74 16 145 54 92 193 167 203 94 45 102 216 153 49 85 31 220 224 76 13 239 21 3 226 236 43 120 32 193 153 174 153 14 54 53 35 134 229 1 90 59 215 219 98 249 181 249 111 80 241 76 240 179 21 170 161 52 43 244 53 37 201 205 46 176 77 43 131 236 33 64 79 229 31 103 81 29 30 231 41 103 231 131 107 131 22 232 34 132 119 248 147 62 69 223 85 183 95 235 164 49 153 83 198)
  :der-encode
  #f
  :tests
  '(#(228
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 1 155 207 39 85 154 179 36 242 160 235 201 93 5 158 222 204 214 19 96 66 50 218 149 200 77 65 212 217 144 174 123 178 209 43 141 41 125 153 251 134 182 69 114 214 252 226 163 78 79 165 225 104 246 137 77 74 26 130 142 44 109 187 223 49 162)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 62 234 183 36 27 73 130 95 141 179 144 67 195 7 169 219 187 98 108 204 48 105 49 198 168 141 66 69 37 122 224 5 118 45 84 148 75 138 151 149 15 211 190 2 238 91 203 181 161 0 104 178 48 193 189 33 0 48 115 3 59 91 64 114 226 0 137 178 19 74 250 255 29 126 25 252 35 212 65 16 96 142 251 198 226 184 18 10 22 166 59 223 242 224 101 252 201 66 231 150 198 219 223 241 79 193 121 171 105 78 232 101 232 58 40 231 14 139 166 53 101 194 250 47 49 172 62 113 189 196 106)
  :der-encode
  #f
  :tests
  '(#(229
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 0 182 205 56 25 69 113 48 65 199 153 3 86 55 10 0 161 8 136 206 144 93 242 199 146 34 106 150 202 219 97 223 148 188 66 119 192 74 251 205 171 243 118 240 45 42 106 221 244 5 42 215 103 59 26 225 225 236 73 175 56 144 102 129 7 146)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 127 184 56 239 154 107 200 135 110 242 24 138 95 13 54 251 118 100 38 115 236 34 47 35 244 156 253 216 96 197 5 52 211 71 118 9 195 161 22 94 147 223 175 204 16 52 214 207 118 41 108 208 47 86 227 63 80 239 162 2 205 215 221 10 23 1 0 210 117 188 184 54 156 52 207 48 70 209 152 255 175 76 206 187 3 19 154 173 142 68 1 49 15 118 62 120 180 173 13 216 127 166 224 67 139 244 48 178 193 15 37 248 129 157 197 70 182 176 102 19 234 240 104 197 156 236 178 187 145 104 74)
  :der-encode
  #f
  :tests
  '(#(230
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 0 255 222 216 58 247 93 112 153 124 101 7 201 43 23 86 205 19 233 225 251 133 225 38 255 165 163 95 217 85 57 180 91 14 127 234 147 131 11 208 9 190 234 236 104 245 81 173 87 113 80 15 88 76 102 48 76 151 194 200 241 156 20 26 69 167)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 61 42 85 24 196 91 96 47 123 62 238 46 38 26 153 122 167 138 90 131 28 68 227 173 161 111 219 12 241 179 41 38 158 251 21 44 254 142 78 8 7 123 103 204 39 171 74 228 41 149 183 169 151 30 254 82 72 23 92 181 215 202 99 247 138 0 210 182 118 202 61 65 248 237 139 182 83 9 222 110 197 55 153 65 165 247 74 109 112 221 202 225 247 54 92 231 31 222 240 62 55 42 163 20 8 168 165 28 195 76 172 84 246 171 115 102 217 135 88 183 249 63 201 118 224 254 81 243 135 27 130)
  :der-encode
  #f
  :tests
  '(#(231
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 1 255 189 176 117 238 186 225 50 248 202 15 146 86 46 173 154 39 211 195 247 11 194 77 255 75 70 191 178 170 115 104 182 28 255 213 39 6 23 160 19 125 213 216 209 234 163 90 174 226 160 30 176 152 204 96 153 47 133 145 227 56 40 52 139 78)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 172 78 154 209 250 216 5 74 46 19 32 63 204 72 147 51 149 91 251 119 98 174 212 91 97 231 81 130 111 138 19 11 83 7 193 242 240 82 0 29 195 159 151 31 25 93 106 156 106 90 181 208 37 151 130 42 137 42 226 190 103 20 59 242 174 0 92 224 253 130 227 80 184 95 45 122 46 219 213 149 161 232 144 161 67 238 154 23 241 74 237 49 149 13 81 125 69 126 149 238 22 15 129 139 126 122 230 183 33 53 80 69 22 180 187 219 200 87 24 244 66 163 220 154 33 238 77 160 243 39 182)
  :der-encode
  #f
  :tests
  '(#(232
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 0 255 156 136 176 230 24 81 204 117 47 23 91 129 70 4 103 59 189 165 242 145 163 116 254 240 234 31 139 255 173 29 17 49 46 57 51 5 100 64 134 209 64 249 57 150 253 254 96 131 180 120 63 44 168 244 158 24 140 235 29 181 171 22 108 236)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 157 26 239 192 17 96 135 116 221 230 177 87 76 247 151 53 105 27 204 208 213 52 151 149 85 185 35 228 128 63 73 110 9 109 149 175 125 191 128 37 149 83 18 207 49 128 242 177 36 225 64 75 168 189 70 44 248 199 80 189 21 125 187 24 241 1 110 55 54 86 37 226 131 198 68 118 118 190 194 152 65 10 54 185 200 198 75 165 161 182 145 121 23 157 216 184 243 232 230 89 204 172 12 223 28 66 241 116 211 88 10 0 130 193 49 168 134 94 80 173 154 249 8 142 178 214 63 11 71 104 174)
  :der-encode
  #f
  :tests
  '(#(233
      "edge case for u1"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 0 209 117 146 225 105 252 237 138 249 144 82 110 161 113 27 124 197 46 198 51 186 96 151 204 23 21 231 54 47 11 101 169 237 226 150 211 112 72 144 8 184 99 216 138 49 184 4 50 137 5 171 7 136 55 10 36 98 191 202 189 29 246 20 109 200)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 15 88 36 209 29 16 15 156 29 234 31 68 15 255 230 174 241 67 168 252 154 172 158 100 225 79 123 175 243 166 42 90 233 246 221 64 221 54 139 101 35 154 168 2 49 134 158 42 167 170 36 240 88 209 122 108 53 146 70 189 245 236 133 215 5 1 45 7 194 81 254 203 207 80 22 168 234 158 60 70 188 83 24 75 186 150 29 74 232 157 171 250 161 174 227 52 220 249 72 36 207 26 111 132 14 154 139 161 206 191 187 152 129 172 200 232 6 40 77 5 129 183 200 89 143 62 126 70 109 234 9)
  :der-encode
  #f
  :tests
  '(#(234
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 0 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 181 87 246 252 33 241 110 106 142 81 178 144 75 36 251 140 117 200 254 228 177 176 255 151 95 205 84 196 145 160 229 39 88 163 136 48 56 219 207 33 241 158 87 145 70 60 45 149 43 180 176 182 66 143 10 231 54 155 65 209 217 118 97 178 148 0 247 92 133 147 249 236 245 74 38 204 140 123 65 143 159 188 164 41 104 133 185 54 112 147 153 66 245 220 246 203 74 3 194 52 77 4 17 223 30 90 84 134 82 83 76 75 125 188 206 148 1 105 114 82 38 126 135 69 208 113 56 142 236 131 46)
  :der-encode
  #f
  :tests
  '(#(235
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 0 159 87 112 143 169 126 186 148 198 212 120 44 221 78 51 187 149 193 53 59 222 9 82 50 227 226 186 178 119 187 93 43 72 245 90 83 255 233 40 208 52 194 153 112 169 229 243 132 160 3 144 125 61 155 130 168 104 23 204 97 251 23 244 197 158)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 206 2 43 84 58 24 31 221 49 48 206 53 146 97 120 167 240 239 151 28 95 232 72 176 45 193 191 104 200 131 178 154 163 83 105 171 209 153 237 98 142 168 55 58 150 96 161 192 133 65 74 44 102 222 1 40 192 143 131 134 239 236 160 13 63 0 162 156 112 75 170 234 2 20 171 148 68 233 45 71 219 89 196 72 198 85 148 183 9 197 189 67 7 137 124 152 208 188 203 74 159 53 28 81 210 39 62 242 187 132 214 135 195 5 231 99 107 85 253 62 56 84 180 179 76 167 186 113 39 106 202)
  :der-encode
  #f
  :tests
  '(#(236
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 0 104 217 143 169 7 54 239 243 233 15 143 207 229 8 56 182 250 11 242 205 231 123 197 30 63 65 1 156 128 6 244 233 203 174 173 206 125 187 68 70 45 166 66 91 233 207 218 236 178 52 196 23 73 206 105 91 225 181 234 210 230 177 32 95 53)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 64 13 25 79 81 216 2 24 192 41 110 151 139 155 122 94 187 13 55 61 33 233 237 127 75 232 174 37 234 91 111 206 181 128 220 69 16 130 101 37 254 19 141 26 78 32 204 41 60 83 13 186 75 133 195 210 155 184 116 134 124 54 132 105 106 1 83 123 163 195 44 31 31 155 45 158 128 248 143 252 220 74 165 36 110 129 69 184 124 55 212 115 4 66 52 216 173 40 198 171 213 161 134 237 10 182 28 110 114 221 239 119 176 153 245 30 220 88 235 235 67 58 237 6 69 3 202 73 76 76 115)
  :der-encode
  #f
  :tests
  '(#(237
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 0 233 122 230 107 205 76 174 54 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 104 188 151 38 240 45 191 133 152 169 139 62 80 119 239 246 242 73 30 182 120 237 4 15 179 56 192 132 169 234 138 76)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 120 38 111 87 157 202 19 234 20 51 140 50 160 214 129 45 253 152 114 10 42 30 162 191 164 75 162 179 254 21 198 48 99 200 204 121 60 150 238 150 12 245 55 227 74 208 202 250 70 33 146 207 98 133 203 140 72 217 57 155 245 82 212 252 106 1 152 190 222 97 38 137 210 40 152 65 228 144 91 231 102 219 168 160 123 0 164 212 169 111 154 16 113 96 169 178 110 179 47 218 121 150 52 224 7 238 80 227 79 107 37 86 13 126 237 23 40 212 181 237 196 83 125 244 245 8 145 10 206 247 54)
  :der-encode
  #f
  :tests
  '(#(238
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 1 174 102 188 212 202 227 111 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 57 84 33 47 139 234 87 141 147 230 133 229 219 163 41 129 27 37 66 187 57 130 51 226 148 75 206 177 146 99 50 93)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 92 88 92 15 173 236 154 52 252 192 128 65 84 241 76 181 102 139 153 127 46 9 109 160 151 75 35 233 144 46 52 153 149 96 55 161 120 165 33 8 51 80 126 30 16 142 229 205 153 79 101 158 62 140 170 222 157 41 88 237 72 246 105 145 195 1 40 44 25 105 166 142 25 12 97 30 192 50 35 82 239 1 199 80 220 135 70 74 160 16 36 178 193 12 157 75 106 74 41 249 158 167 64 219 141 175 171 101 237 117 66 54 1 101 77 104 244 223 100 46 128 164 231 156 161 45 251 14 228 36 4)
  :der-encode
  #f
  :tests
  '(#(239
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 1 92 205 121 169 149 198 223 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 33 33 186 219 88 165 24 175 168 1 10 130 192 60 173 49 250 148 187 189 233 104 32 22 109 39 230 68 147 142 0 177)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 145 157 12 191 247 4 61 226 235 2 78 94 206 122 89 222 20 177 189 139 8 66 137 88 116 48 5 110 53 14 73 19 107 248 146 117 123 56 151 53 231 117 179 82 215 116 55 111 226 158 98 228 1 82 83 80 46 76 204 41 159 37 117 118 106 0 64 60 223 164 159 228 100 119 148 214 121 253 40 137 195 166 194 166 81 235 176 78 79 238 132 104 189 76 36 13 139 167 34 9 126 174 189 82 71 180 190 188 110 135 59 39 1 28 73 209 248 161 49 234 15 122 86 122 140 42 124 23 50 137 226)
  :der-encode
  #f
  :tests
  '(#(240
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 1 205 76 174 54 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 225 141 204 17 223 247 82 98 51 217 35 160 178 2 203 41 231 19 242 45 232 187 106 176 161 40 33 197 171 190 63 35)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 60 137 182 142 226 22 92 229 131 226 154 107 70 48 62 81 228 155 101 131 185 127 164 143 201 127 72 202 138 208 221 212 221 208 157 250 223 207 112 149 240 202 24 150 52 50 132 28 78 255 145 95 97 56 208 239 89 30 138 228 190 159 74 153 117 0 16 130 156 41 107 73 232 62 162 32 24 189 29 75 227 12 195 59 252 226 5 170 186 84 82 225 4 159 120 190 222 11 0 58 226 194 123 175 192 205 127 122 193 18 16 137 40 139 254 55 226 33 225 143 90 79 221 125 115 179 192 229 174 106 209)
  :der-encode
  #f
  :tests
  '(#(241
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 0 34 232 186 46 139 162 232 186 46 139 162 232 186 46 139 162 232 186 46 139 162 232 186 46 139 162 232 186 46 139 162 232 185 196 195 247 60 200 22 20 63 172 52 18 182 45 228 198 61 176 143 140 87 228 197 140 49 241 180 87 202 94 87 226 10)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 217 28 160 255 121 7 151 168 60 59 225 200 36 37 175 145 114 8 8 122 166 115 94 235 211 73 132 15 217 251 195 186 89 98 238 17 248 4 51 56 193 179 243 80 65 113 250 168 232 68 72 128 182 165 197 90 230 102 124 82 202 7 237 63 121 1 243 71 134 194 220 113 112 74 195 70 52 16 10 142 145 42 124 64 99 120 32 233 124 211 45 87 57 215 3 75 199 246 135 75 144 238 148 204 224 118 98 163 178 117 178 63 162 10 231 252 131 112 208 91 174 239 224 40 97 104 189 52 23 209 63)
  :der-encode
  #f
  :tests
  '(#(242
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 1 5 144 178 22 66 200 89 11 33 100 44 133 144 178 22 66 200 89 11 33 100 44 133 144 178 22 66 200 89 11 33 100 41 142 181 126 90 255 147 67 89 122 84 45 49 50 249 231 52 253 195 5 18 94 14 193 57 197 247 128 238 142 140 185 194)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 64 175 47 77 220 30 82 114 178 174 211 88 183 119 111 40 240 220 153 111 119 47 149 31 37 209 47 159 139 15 61 224 209 193 210 155 99 183 74 149 13 180 116 112 26 52 200 221 128 59 89 78 149 123 214 163 235 126 147 139 228 81 31 76 121 1 192 27 66 201 115 213 95 184 153 110 64 238 104 225 18 229 138 137 46 171 3 44 92 221 109 179 159 178 193 22 146 232 179 206 189 187 220 8 251 61 149 162 167 96 112 5 8 159 69 44 222 185 130 27 90 17 132 1 252 208 41 201 173 36 132)
  :der-encode
  #f
  :tests
  '(#(243
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 1 164 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 68 69 225 6 112 237 4 55 201 219 65 37 172 65 117 251 215 14 155 209 121 154 133 244 76 160 168 230 26 51 84 232 8)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 105 224 180 129 219 153 248 148 240 120 15 132 113 157 225 106 236 89 156 118 94 186 80 184 97 84 119 7 60 50 194 106 177 228 231 174 93 31 149 37 19 173 50 50 37 32 59 79 12 101 162 74 131 104 205 50 44 35 233 32 73 209 33 116 124 1 119 144 30 55 158 94 114 79 65 100 135 254 231 7 126 106 234 129 229 37 12 170 60 255 187 125 27 34 112 170 117 75 79 218 229 30 68 48 80 195 60 123 132 33 199 179 197 56 196 154 103 74 52 226 39 140 126 160 157 144 12 245 133 29 207)
  :der-encode
  #f
  :tests
  '(#(244
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 1 213 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 79 166 219 220 217 20 132 235 192 213 33 86 158 76 94 251 37 145 11 31 13 222 241 157 4 16 197 12 115 230 141 185 95)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 169 194 197 127 26 46 145 196 238 107 61 3 192 146 59 88 208 236 64 157 248 142 79 48 101 186 129 72 191 207 127 113 206 178 241 161 233 157 200 48 8 75 22 153 52 84 231 225 141 162 60 26 30 119 25 148 145 219 84 24 174 40 183 108 103 0 28 151 238 114 4 147 180 39 253 51 161 60 142 135 232 66 236 150 230 144 60 201 124 176 246 147 64 73 139 253 198 245 67 202 128 68 236 165 17 234 231 240 221 86 42 172 19 242 195 243 86 210 22 196 43 115 221 173 71 86 208 50 246 151 144)
  :der-encode
  #f
  :tests
  '(#(245
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 1 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 164 252 49 50 46 105 218 65 22 42 118 171 243 161 180 80 122 230 96 116 99 52 70 242 89 102 26 97 201 59 227 14 181)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 223 154 110 165 168 53 126 130 158 96 187 167 17 209 31 134 162 221 40 197 239 219 249 104 233 100 109 251 176 210 127 168 191 77 129 212 98 85 193 152 223 74 39 230 202 49 86 144 177 234 104 121 82 151 195 101 34 155 214 149 155 41 100 180 163 1 170 180 90 33 30 144 18 178 188 105 171 192 88 138 13 232 226 197 147 52 205 56 163 194 33 222 250 183 137 249 207 180 96 135 148 168 197 17 80 167 131 229 149 106 10 159 154 47 84 124 222 130 209 181 214 207 81 197 102 96 75 80 188 247 141)
  :der-encode
  #f
  :tests
  '(#(246
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 1 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 250 81 134 135 131 191 47 150 107 127 204 1 72 247 9 165 208 59 181 201 184 137 156 71 174 187 111 183 30 145 56 100 11)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 223 48 239 38 225 96 21 58 20 104 165 221 208 107 2 204 177 100 223 227 172 140 127 21 246 141 79 25 7 239 139 233 202 220 107 231 5 162 41 68 35 64 103 11 209 24 110 216 38 211 155 164 194 49 27 29 247 148 0 26 41 60 2 124 223 0 19 79 48 228 67 85 4 16 42 84 195 68 237 128 0 156 225 185 197 9 44 64 186 50 223 128 83 147 106 140 216 169 65 174 82 132 80 95 209 174 12 83 2 8 108 147 165 130 131 13 36 187 100 98 114 221 157 210 242 21 4 37 162 215 229)
  :der-encode
  #f
  :tests
  '(#(247
      "edge case for u2"
      #vu8(84 101 115 116)
      #vu8(0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 1 52 108 199 212 131 155 119 249 244 135 199 231 242 132 28 91 125 5 249 102 243 189 226 143 31 160 128 206 64 3 122 116 227 0 26 43 0 189 57 238 76 147 7 46 153 99 114 73 65 56 60 240 129 44 2 209 200 56 173 69 2 161 44 97 159)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 64 15 163 188 135 72 46 193 186 117 52 106 18 158 200 247 148 86 231 214 52 59 42 107 226 36 144 136 75 143 139 137 17 76 14 95 149 88 215 98 122 222 174 83 255 140 227 123 175 148 185 157 4 247 80 152 202 142 62 119 198 190 2 188 62 1 105 13 119 8 6 189 233 244 210 118 2 147 171 166 7 96 102 241 118 46 132 72 240 208 135 36 239 49 31 247 89 111 53 232 182 169 52 109 230 91 234 146 75 157 48 187 151 46 59 56 135 129 114 249 4 3 120 160 219 71 41 158 151 152 86)
  :der-encode
  #f
  :tests
  '(#(248
      "point duplication during verification"
      #vu8(84 101 115 116)
      #vu8(0 144 200 208 215 24 203 157 141 129 9 78 109 6 143 177 60 22 180 223 140 119 186 198 118 221 223 227 230 136 85 190 208 107 155 168 208 248 168 14 220 224 58 159 172 125 165 97 226 75 28 210 45 69 146 57 161 70 105 90 103 31 129 247 58 175 0 162 79 189 96 47 247 1 43 107 0 233 170 22 131 180 91 250 45 98 220 118 135 55 232 218 146 202 213 47 6 158 251 234 82 106 204 104 9 111 192 239 153 96 198 185 137 191 137 34 174 163 143 212 99 208 44 14 124 37 227 54 243 43 8 116)
      #t
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 64 15 163 188 135 72 46 193 186 117 52 106 18 158 200 247 148 86 231 214 52 59 42 107 226 36 144 136 75 143 139 137 17 76 14 95 149 88 215 98 122 222 174 83 255 140 227 123 175 148 185 157 4 247 80 152 202 142 62 119 198 190 2 188 62 0 150 242 136 247 249 66 22 11 45 137 253 108 84 89 248 159 153 14 137 209 123 183 15 47 120 219 16 206 224 8 166 144 202 23 73 86 203 146 25 164 21 109 180 98 207 68 104 209 196 199 120 126 141 6 251 252 135 95 36 184 214 97 104 103 169)
  :der-encode
  #f
  :tests
  '(#(249
      "duplication bug"
      #vu8(84 101 115 116)
      #vu8(0 144 200 208 215 24 203 157 141 129 9 78 109 6 143 177 60 22 180 223 140 119 186 198 118 221 223 227 230 136 85 190 208 107 155 168 208 248 168 14 220 224 58 159 172 125 165 97 226 75 28 210 45 69 146 57 161 70 105 90 103 31 129 247 58 175 0 162 79 189 96 47 247 1 43 107 0 233 170 22 131 180 91 250 45 98 220 118 135 55 232 218 146 202 213 47 6 158 251 234 82 106 204 104 9 111 192 239 153 96 198 185 137 191 137 34 174 163 143 212 99 208 44 14 124 37 227 54 243 43 8 116)
      #f
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 154 123 82 225 223 240 24 5 129 67 206 241 92 112 42 122 9 78 129 179 230 101 181 41 135 164 176 119 208 12 125 28 195 152 189 190 22 125 42 60 30 217 218 255 32 247 104 172 179 253 150 44 6 177 252 22 89 58 41 23 52 8 15 64 192 0 142 68 180 68 163 246 104 3 255 56 70 242 38 220 247 36 236 60 230 146 230 122 201 145 224 98 174 74 14 85 90 26 209 132 144 93 50 49 195 240 88 174 64 194 102 84 123 7 106 124 132 32 214 167 233 74 163 0 52 42 238 237 28 95 125)
  :der-encode
  #f
  :tests
  '(#(250
      "point with x-coordinate 0"
      #vu8(84 101 115 116)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 168 197 215 130 129 63 186 135 121 42 153 85 194 253 3 55 69 105 60 152 146 216 137 109 58 62 122 146 95 133 189 118 173)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 226 111 240 32 11 115 20 80 173 23 187 111 239 26 110 56 122 62 196 28 212 216 8 35 74 100 39 46 129 156 34 2 102 190 121 197 173 174 55 130 84 100 158 200 204 160 94 201 40 21 184 185 235 60 236 88 105 58 166 171 208 186 25 26 189 1 239 197 54 255 112 15 54 17 211 88 225 130 145 71 13 132 84 115 181 117 11 117 37 205 55 9 67 47 242 250 135 116 58 249 40 148 167 166 70 168 47 210 77 63 110 12 196 122 182 115 214 134 48 215 112 189 13 114 75 13 96 222 107 81 246)
  :der-encode
  #f
  :tests
  '(#(251
      "point with x-coordinate 0"
      #vu8(84 101 115 116)
      #vu8(2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 101 67 129 78 77 140 163 30 21 127 245 153 219 100 155 135 144 11 241 40 88 27 133 167 239 191 22 87 210 233 216 20 1)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 119 212 19 11 176 255 85 151 243 165 31 90 0 249 2 19 193 216 88 83 137 130 157 237 99 24 9 193 128 166 101 99 100 72 49 66 174 218 211 20 134 255 39 162 170 171 176 237 48 136 150 148 61 223 150 89 14 22 101 69 11 163 76 158 135 0 43 186 96 154 216 164 180 200 148 211 3 179 135 44 79 99 147 158 25 174 145 210 27 26 131 204 34 96 112 15 142 14 193 152 166 243 141 166 42 110 165 114 30 19 100 165 167 240 47 96 245 232 222 83 169 124 225 28 134 102 213 136 203 205 179)
  :der-encode
  #f
  :tests
  '(#(252
      "comparison with point at infinity "
      #vu8(84 101 115 116)
      #vu8(0 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 168 197 215 130 129 63 186 135 121 42 153 85 194 253 3 55 69 105 60 152 146 216 137 109 58 62 122 146 95 133 189 118 173 0 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 101 67 129 78 77 140 163 30 21 127 245 153 219 100 155 135 144 11 241 40 88 27 133 167 239 191 22 87 210 233 216 20 1)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 88 211 27 159 59 163 79 56 79 36 120 253 96 213 76 250 105 59 188 84 114 16 40 28 0 9 88 156 2 68 186 25 88 242 186 145 173 247 106 41 108 119 86 110 142 170 236 19 43 92 189 85 91 19 237 236 12 15 10 224 97 232 201 161 177 1 135 40 176 221 2 209 49 252 104 5 183 81 104 201 130 163 253 185 63 232 92 162 181 48 209 216 57 203 83 76 14 188 2 26 227 114 57 38 163 0 39 55 180 183 150 193 38 136 215 104 131 77 5 226 81 104 24 67 138 56 192 35 181 47 207)
  :der-encode
  #f
  :tests
  '(#(253
      "extreme value for k and edgecase s"
      #vu8(84 101 115 116)
      #vu8(0 67 60 33 144 36 39 126 126 104 47 203 40 129 72 194 130 116 116 3 39 155 28 204 6 53 44 110 85 5 215 105 190 151 179 178 4 218 110 245 85 7 170 16 74 58 53 197 175 65 207 47 163 100 214 15 217 103 244 62 57 51 186 109 120 61 0 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 168 197 215 130 129 63 186 135 121 42 153 85 194 253 3 55 69 105 60 152 146 216 137 109 58 62 122 146 95 133 189 118 173)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 81 249 129 147 128 117 95 171 88 244 150 168 31 132 101 85 75 207 144 117 84 233 17 88 3 102 33 82 150 211 166 216 27 162 44 236 152 106 227 48 16 214 65 107 241 219 59 102 55 246 77 36 11 111 75 92 126 162 41 248 126 15 205 105 159 1 129 36 135 39 94 103 44 54 71 18 120 63 228 168 165 55 41 227 252 144 19 138 254 91 134 156 80 104 203 93 69 84 225 167 241 216 172 157 215 143 188 169 172 171 78 167 145 49 29 102 224 30 4 130 1 180 13 159 56 61 10 11 6 141 170)
  :der-encode
  #f
  :tests
  '(#(254
      "extreme value for k and s^-1"
      #vu8(84 101 115 116)
      #vu8(0 67 60 33 144 36 39 126 126 104 47 203 40 129 72 194 130 116 116 3 39 155 28 204 6 53 44 110 85 5 215 105 190 151 179 178 4 218 110 245 85 7 170 16 74 58 53 197 175 65 207 47 163 100 214 15 217 103 244 62 57 51 186 109 120 61 0 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 145 121 92 92 128 137 6 204 88 127 248 146 120 35 74 133 102 227 245 101 245 202 132 10 61 136 125 172 114 20 190 233 184)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 252 165 182 218 75 150 95 44 136 177 79 122 88 68 206 111 130 118 210 245 208 55 57 219 38 108 79 93 133 252 155 55 25 190 69 58 200 0 79 2 127 113 76 240 122 193 178 124 123 42 30 249 39 5 210 165 123 189 235 245 33 100 118 21 182 1 168 218 188 219 191 53 16 165 9 36 77 205 154 242 114 171 197 96 179 13 135 78 146 173 82 197 43 166 75 25 50 91 37 14 21 231 235 91 4 161 144 235 101 142 12 246 99 240 38 92 5 191 74 184 235 150 10 112 132 197 20 37 13 231 144)
  :der-encode
  #f
  :tests
  '(#(255
      "extreme value for k and s^-1"
      #vu8(84 101 115 116)
      #vu8(0 67 60 33 144 36 39 126 126 104 47 203 40 129 72 194 130 116 116 3 39 155 28 204 6 53 44 110 85 5 215 105 190 151 179 178 4 218 110 245 85 7 170 16 74 58 53 197 175 65 207 47 163 100 214 15 217 103 244 62 57 51 186 109 120 61 1 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 149 14 5 57 54 50 140 120 85 255 214 103 109 146 110 30 64 47 196 161 96 110 22 159 190 252 89 95 75 167 96 80 7)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 76 134 67 229 70 167 27 147 24 92 165 131 174 80 152 193 230 192 176 211 63 194 214 24 135 15 148 56 177 197 149 219 200 146 0 132 86 95 0 116 218 250 202 120 186 194 85 140 166 35 194 81 246 213 48 50 140 39 52 160 65 56 33 223 229 0 29 138 192 167 37 27 130 4 111 156 242 206 103 158 18 119 15 134 129 164 63 14 39 229 83 104 15 197 35 66 149 172 36 33 42 37 200 87 225 82 53 6 118 228 229 44 163 4 65 129 182 113 16 206 1 41 250 11 220 21 164 213 167 14 142)
  :der-encode
  #f
  :tests
  '(#(256
      "extreme value for k and s^-1"
      #vu8(84 101 115 116)
      #vu8(0 67 60 33 144 36 39 126 126 104 47 203 40 129 72 194 130 116 116 3 39 155 28 204 6 53 44 110 85 5 215 105 190 151 179 178 4 218 110 245 85 7 170 16 74 58 53 197 175 65 207 47 163 100 214 15 217 103 244 62 57 51 186 109 120 61 0 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 101 67 129 78 77 140 163 30 21 127 245 153 219 100 155 135 144 11 241 40 88 27 133 167 239 191 22 87 210 233 216 20 2)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 166 89 124 118 149 96 70 252 208 60 68 78 154 78 19 185 251 117 26 201 31 180 252 186 95 211 58 255 97 243 48 95 167 184 49 229 34 122 92 4 112 229 225 253 228 162 94 83 159 194 55 115 187 58 44 244 30 238 15 198 120 208 80 112 90 1 246 245 174 74 59 153 68 115 103 144 116 246 238 101 121 197 0 94 111 216 96 205 77 210 158 7 212 71 88 35 175 107 232 175 93 65 75 186 71 180 46 96 27 151 102 13 16 166 98 227 123 81 128 232 230 155 51 197 247 215 152 218 24 190 73)
  :der-encode
  #f
  :tests
  '(#(257
      "extreme value for k and s^-1"
      #vu8(84 101 115 116)
      #vu8(0 67 60 33 144 36 39 126 126 104 47 203 40 129 72 194 130 116 116 3 39 155 28 204 6 53 44 110 85 5 215 105 190 151 179 178 4 218 110 245 85 7 170 16 74 58 53 197 175 65 207 47 163 100 214 15 217 103 244 62 57 51 186 109 120 61 1 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 219 104 216 42 43 3 54 40 202 18 255 211 110 208 211 191 32 105 87 192 99 194 191 24 61 113 50 242 10 172 124 121 122 81)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 167 47 160 70 177 21 117 103 185 145 58 138 97 16 127 180 221 14 18 178 180 6 239 33 155 118 127 147 19 15 57 213 73 152 116 92 81 209 175 245 27 104 215 141 52 65 141 97 40 191 147 204 219 225 95 100 118 130 78 11 49 27 210 103 173 0 243 228 215 25 97 5 90 76 23 99 252 30 239 160 128 15 132 172 124 123 188 79 216 237 119 59 121 183 10 153 224 29 26 108 0 150 94 225 255 102 101 9 58 164 35 249 211 4 121 42 247 164 244 20 28 58 42 93 144 5 36 149 74 149 212)
  :der-encode
  #f
  :tests
  '(#(258
      "extreme value for k"
      #vu8(84 101 115 116)
      #vu8(0 67 60 33 144 36 39 126 126 104 47 203 40 129 72 194 130 116 116 3 39 155 28 204 6 53 44 110 85 5 215 105 190 151 179 178 4 218 110 245 85 7 170 16 74 58 53 197 175 65 207 47 163 100 214 15 217 103 244 62 57 51 186 109 120 61 0 14 177 14 90 185 95 47 38 164 7 0 177 48 15 184 195 200 213 56 79 251 236 241 253 185 225 30 103 203 127 214 167 245 3 230 226 90 192 155 184 139 108 57 131 223 118 77 77 114 188 41 32 226 51 240 247 151 74 35 74 33 176 11 180 71)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 207 109 241 202 240 47 144 152 190 80 46 24 122 146 79 190 140 193 15 4 34 221 102 191 217 249 21 108 242 45 131 15 8 75 141 179 164 238 88 143 177 8 186 23 129 3 161 170 69 170 104 127 233 179 1 115 121 27 110 254 222 75 96 7 116 0 53 155 150 231 36 254 134 154 187 149 244 84 154 244 14 19 198 100 209 160 9 173 2 5 180 84 241 164 149 88 26 119 14 92 130 170 152 75 210 165 205 45 53 154 223 72 124 57 46 68 16 72 254 96 194 105 111 250 149 140 128 125 224 151 201)
  :der-encode
  #f
  :tests
  '(#(259
      "extreme value for k and edgecase s"
      #vu8(84 101 115 116)
      #vu8(0 198 133 142 6 183 4 4 233 205 158 62 203 102 35 149 180 66 156 100 129 57 5 63 181 33 248 40 175 96 107 77 61 186 161 75 94 119 239 231 89 40 254 29 193 39 162 255 168 222 51 72 179 193 133 106 66 155 249 126 126 49 194 229 189 102 0 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 168 197 215 130 129 63 186 135 121 42 153 85 194 253 3 55 69 105 60 152 146 216 137 109 58 62 122 146 95 133 189 118 173)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 111 131 156 79 35 239 4 11 58 153 145 212 124 156 77 239 111 219 14 207 111 195 184 41 93 7 114 155 235 55 80 92 180 233 177 13 104 151 47 3 182 239 93 102 150 3 193 81 94 38 205 243 167 255 93 52 205 79 112 231 173 75 148 162 123 0 84 223 151 120 93 184 33 109 154 94 33 17 139 198 204 169 89 125 137 198 109 177 223 144 201 200 48 58 73 0 26 184 84 253 57 211 193 143 46 179 115 106 8 39 167 81 1 24 112 193 219 106 0 19 189 191 97 117 194 251 254 39 217 31 229)
  :der-encode
  #f
  :tests
  '(#(260
      "extreme value for k and s^-1"
      #vu8(84 101 115 116)
      #vu8(0 198 133 142 6 183 4 4 233 205 158 62 203 102 35 149 180 66 156 100 129 57 5 63 181 33 248 40 175 96 107 77 61 186 161 75 94 119 239 231 89 40 254 29 193 39 162 255 168 222 51 72 179 193 133 106 66 155 249 126 126 49 194 229 189 102 0 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 145 121 92 92 128 137 6 204 88 127 248 146 120 35 74 133 102 227 245 101 245 202 132 10 61 136 125 172 114 20 190 233 184)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 80 36 109 212 39 202 204 230 110 109 229 122 140 192 223 226 73 150 159 63 207 78 214 77 227 65 51 158 185 3 49 219 31 5 71 82 146 206 156 41 145 109 166 92 234 182 230 126 242 220 225 59 30 23 184 209 162 222 127 252 21 4 243 253 157 1 146 135 240 145 134 210 167 239 214 196 188 86 144 66 157 195 26 23 221 234 83 212 170 102 42 88 170 17 254 180 8 1 220 156 117 12 24 125 67 81 245 153 12 221 22 113 171 144 151 186 172 5 18 184 202 55 245 87 254 203 245 144 250 253 106)
  :der-encode
  #f
  :tests
  '(#(261
      "extreme value for k and s^-1"
      #vu8(84 101 115 116)
      #vu8(0 198 133 142 6 183 4 4 233 205 158 62 203 102 35 149 180 66 156 100 129 57 5 63 181 33 248 40 175 96 107 77 61 186 161 75 94 119 239 231 89 40 254 29 193 39 162 255 168 222 51 72 179 193 133 106 66 155 249 126 126 49 194 229 189 102 1 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 149 14 5 57 54 50 140 120 85 255 214 103 109 146 110 30 64 47 196 161 96 110 22 159 190 252 89 95 75 167 96 80 7)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 212 43 39 20 69 36 30 78 81 54 207 142 91 112 110 212 64 50 52 204 165 72 33 115 113 105 233 166 13 236 84 116 95 29 192 119 197 237 157 96 194 245 114 197 229 116 159 79 68 49 149 37 97 194 163 13 154 195 18 251 195 229 220 157 202 1 121 183 166 59 103 179 69 170 134 93 177 77 145 71 179 96 148 161 33 100 38 62 88 142 32 153 106 216 20 178 241 255 217 104 23 32 48 91 59 3 246 185 72 219 3 167 216 154 242 239 247 219 222 160 196 17 148 14 216 12 206 109 155 52 198)
  :der-encode
  #f
  :tests
  '(#(262
      "extreme value for k and s^-1"
      #vu8(84 101 115 116)
      #vu8(0 198 133 142 6 183 4 4 233 205 158 62 203 102 35 149 180 66 156 100 129 57 5 63 181 33 248 40 175 96 107 77 61 186 161 75 94 119 239 231 89 40 254 29 193 39 162 255 168 222 51 72 179 193 133 106 66 155 249 126 126 49 194 229 189 102 0 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 101 67 129 78 77 140 163 30 21 127 245 153 219 100 155 135 144 11 241 40 88 27 133 167 239 191 22 87 210 233 216 20 2)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 112 120 14 163 194 231 59 36 0 244 79 72 163 147 182 201 1 156 250 120 138 165 227 210 114 236 190 201 220 13 188 179 81 135 217 87 94 31 95 21 186 242 47 80 46 60 169 40 124 82 36 245 135 251 175 29 136 148 161 195 59 214 209 42 166 0 14 11 205 113 132 132 237 159 77 164 215 122 151 246 181 164 47 248 44 15 37 211 36 26 176 178 161 222 36 25 190 224 69 69 234 21 157 142 86 78 195 187 145 38 124 236 73 43 251 155 252 171 168 253 164 232 128 81 252 175 201 138 63 83 54)
  :der-encode
  #f
  :tests
  '(#(263
      "extreme value for k and s^-1"
      #vu8(84 101 115 116)
      #vu8(0 198 133 142 6 183 4 4 233 205 158 62 203 102 35 149 180 66 156 100 129 57 5 63 181 33 248 40 175 96 107 77 61 186 161 75 94 119 239 231 89 40 254 29 193 39 162 255 168 222 51 72 179 193 133 106 66 155 249 126 126 49 194 229 189 102 1 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 182 219 104 216 42 43 3 54 40 202 18 255 211 110 208 211 191 32 105 87 192 99 194 191 24 61 113 50 242 10 172 124 121 122 81)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 249 136 233 39 145 241 77 219 255 53 234 177 221 221 54 243 22 123 81 78 149 199 13 254 110 97 106 119 160 6 71 33 248 174 248 113 212 196 130 82 78 86 71 255 32 32 79 164 218 250 234 168 13 211 183 217 144 7 229 146 174 91 88 153 22 0 58 146 153 186 93 251 89 145 201 78 136 15 246 198 20 149 140 238 229 94 44 229 178 44 11 251 14 180 55 89 180 132 140 224 7 72 46 116 33 174 245 200 218 0 11 162 36 172 180 219 191 115 73 141 115 112 92 6 182 127 38 126 90 138 16)
  :der-encode
  #f
  :tests
  '(#(264
      "extreme value for k"
      #vu8(84 101 115 116)
      #vu8(0 198 133 142 6 183 4 4 233 205 158 62 203 102 35 149 180 66 156 100 129 57 5 63 181 33 248 40 175 96 107 77 61 186 161 75 94 119 239 231 89 40 254 29 193 39 162 255 168 222 51 72 179 193 133 106 66 155 249 126 126 49 194 229 189 102 0 14 177 14 90 185 95 47 38 164 7 0 177 48 15 184 195 200 213 56 79 251 236 241 253 185 225 30 103 203 127 214 167 245 3 230 226 90 192 155 184 139 108 57 131 223 118 77 77 114 188 41 32 226 51 240 247 151 74 35 74 33 176 11 180 71)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 198 133 142 6 183 4 4 233 205 158 62 203 102 35 149 180 66 156 100 129 57 5 63 181 33 248 40 175 96 107 77 61 186 161 75 94 119 239 231 89 40 254 29 193 39 162 255 168 222 51 72 179 193 133 106 66 155 249 126 126 49 194 229 189 102 1 24 57 41 106 120 154 59 192 4 92 138 95 180 44 125 27 217 152 245 68 73 87 155 68 104 23 175 189 23 39 62 102 44 151 238 114 153 94 244 38 64 197 80 185 1 63 173 7 97 53 60 112 134 162 114 194 64 136 190 148 118 159 209 102 80)
  :der-encode
  #f
  :tests
  '(#(265
      "testing point duplication"
      #vu8(84 101 115 116)
      #vu8(0 0 198 238 158 51 207 92 103 21 161 209 72 253 115 247 49 136 132 180 26 220 185 22 2 30 43 192 232 0 165 197 221 151 245 20 33 120 246 174 136 200 253 217 142 26 251 12 228 200 210 197 75 95 55 179 11 125 161 153 123 179 59 11 138 49 0 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 145 121 92 92 128 137 6 204 88 127 248 146 120 35 74 133 102 227 245 101 245 202 132 10 61 136 125 172 114 20 190 233 184)
      #f
      ())
    #(266
      "testing point duplication"
      #vu8(84 101 115 116)
      #vu8(1 255 57 17 97 204 48 163 152 234 94 46 183 2 140 8 206 119 123 75 229 35 70 233 253 225 212 63 23 255 90 58 34 98 92 114 102 10 200 129 13 162 129 242 115 45 251 252 193 7 104 240 126 89 81 233 60 49 25 214 59 107 86 44 217 216 0 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 145 121 92 92 128 137 6 204 88 127 248 146 120 35 74 133 102 227 245 101 245 202 132 10 61 136 125 172 114 20 190 233 184)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 198 133 142 6 183 4 4 233 205 158 62 203 102 35 149 180 66 156 100 129 57 5 63 181 33 248 40 175 96 107 77 61 186 161 75 94 119 239 231 89 40 254 29 193 39 162 255 168 222 51 72 179 193 133 106 66 155 249 126 126 49 194 229 189 102 0 231 198 214 149 135 101 196 63 251 163 117 160 75 211 130 228 38 103 10 187 182 168 100 187 151 232 80 66 232 216 193 153 211 104 17 141 102 161 11 217 191 58 175 70 254 192 82 248 158 202 195 143 121 93 141 61 191 119 65 107 137 96 46 153 175)
  :der-encode
  #f
  :tests
  '(#(267
      "testing point duplication"
      #vu8(84 101 115 116)
      #vu8(0 0 198 238 158 51 207 92 103 21 161 209 72 253 115 247 49 136 132 180 26 220 185 22 2 30 43 192 232 0 165 197 221 151 245 20 33 120 246 174 136 200 253 217 142 26 251 12 228 200 210 197 75 95 55 179 11 125 161 153 123 179 59 11 138 49 0 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 145 121 92 92 128 137 6 204 88 127 248 146 120 35 74 133 102 227 245 101 245 202 132 10 61 136 125 172 114 20 190 233 184)
      #f
      ())
    #(268
      "testing point duplication"
      #vu8(84 101 115 116)
      #vu8(1 255 57 17 97 204 48 163 152 234 94 46 183 2 140 8 206 119 123 75 229 35 70 233 253 225 212 63 23 255 90 58 34 98 92 114 102 10 200 129 13 162 129 242 115 45 251 252 193 7 104 240 126 89 81 233 60 49 25 214 59 107 86 44 217 216 0 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 145 121 92 92 128 137 6 204 88 127 248 146 120 35 74 133 102 227 245 101 245 202 132 10 61 136 125 172 114 20 190 233 184)
      #f
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 4 170 236 115 99 87 38 242 19 251 138 158 100 218 59 134 50 228 20 149 169 68 208 4 91 82 46 186 114 64 250 213 135 217 49 87 152 170 163 165 186 1 119 87 135 206 208 94 170 247 180 224 159 200 29 109 26 165 70 232 54 93 82 93)
  :der-encode
  #f
  :tests
  '(#(269
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(168 234 21 12 184 1 37 215 56 28 76 31 29 168 233 222 39 17 249 145 112 96 64 106 115 215 144 69 25 229 19 136 243 171 159 166 139 212 121 115 167 59 45 64 72 12 43 165 12 34 201 215 110 194 23 37 114 136 41 50 133 68 155 134)
      #t
      ())
    #(270
      "pseudorandom signature"
      #vu8(84 101 115 116)
      #vu8(48 231 130 249 100 178 226 255 6 90 5 27 199 173 194 6 21 216 196 58 19 101 113 60 136 38 136 34 194 83 188 206 91 22 223 101 42 161 236 178 220 139 70 197 21 249 96 78 46 132 202 207 167 198 238 195 4 40 210 211 244 224 142 213)
      #t
      ())
    #(271
      "pseudorandom signature"
      #vu8()
      #vu8(178 146 166 25 51 159 110 86 122 48 92 149 28 13 203 204 66 209 110 71 242 25 249 233 142 118 224 157 135 112 179 74 1 119 230 4 146 197 168 36 47 118 240 123 254 54 97 189 229 158 194 161 124 229 189 45 171 42 190 189 248 154 98 226)
      #t
      ())
    #(272
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(152 110 101 147 62 242 237 78 229 170 218 19 159 82 183 5 57 170 246 63 0 169 31 41 198 145 120 73 13 87 251 113 61 175 237 251 141 166 24 157 55 35 8 203 241 72 155 187 218 191 12 2 23 209 192 255 15 112 26 170 122 105 75 156)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 41 189 183 109 95 167 65 191 215 2 51 203 58 102 204 125 68 190 179 176 102 61 146 168 19 102 80 71 139 206 251 97 239 24 46 21 90 84 52 90 94 142 94 136 240 100 229 188 154 82 90 183 247 100 218 211 218 225 70 140 43 65 159 59 98 185 186 145 125 94 140 79 177 236 71 64 74 63 199 100 116 178 113 48 129 190 157 180 192 14 4 58 218 159 196 163)
  :der-encode
  #f
  :tests
  '(#(273
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(35 69 3 252 202 87 129 33 152 109 150 190 7 251 200 218 93 137 78 216 88 140 109 188 219 233 116 180 184 19 178 28 82 210 10 137 40 242 226 253 172 20 112 91 7 5 73 140 205 123 155 118 107 151 181 61 26 128 252 11 118 10 241 106 17 191 74 89 199 195 103 198 199 39 93 251 110 24 168 128 145 238 211 115 75 245 207 65 179 220 111 236 214 211 186 175)
      #t
      ())
    #(274
      "pseudorandom signature"
      #vu8(84 101 115 116)
      #vu8(153 200 238 83 16 101 63 107 182 245 64 20 110 220 1 92 206 60 17 91 243 8 139 225 244 32 89 48 176 129 132 190 136 104 216 184 50 15 14 204 96 243 177 188 205 65 11 50 202 73 185 244 253 167 21 213 34 189 14 201 183 103 239 109 125 11 52 13 58 169 252 172 103 88 116 187 61 171 199 184 224 195 57 35 134 11 148 203 0 17 91 16 172 80 86 241)
      #t
      ())
    #(275
      "pseudorandom signature"
      #vu8()
      #vu8(50 64 18 73 113 78 144 145 240 90 94 16 157 92 18 22 253 192 94 152 97 66 97 170 13 189 158 156 212 65 93 238 41 35 138 251 211 177 3 193 228 14 229 201 20 74 238 15 67 38 117 111 178 196 253 114 99 96 221 100 121 181 132 148 120 199 169 208 84 168 51 165 140 22 49 195 59 99 195 68 19 54 221 242 199 254 14 209 41 170 230 212 221 254 183 83)
      #t
      ())
    #(276
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(92 173 154 225 86 95 37 136 248 109 130 28 44 193 180 208 253 248 116 51 19 38 86 143 91 14 19 14 78 12 14 196 151 248 245 245 100 33 43 210 162 110 203 120 44 240 161 141 191 46 157 9 128 251 176 6 150 103 62 127 187 3 225 248 84 185 215 89 107 117 154 23 191 110 110 103 169 94 166 193 102 79 130 220 68 154 229 234 119 154 189 153 199 142 104 64)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 42 144 139 252 91 112 225 123 223 174 116 41 73 148 128 139 242 164 45 171 89 175 139 5 35 160 38 214 64 162 163 214 211 68 82 11 98 23 126 44 250 51 156 164 47 176 136 62 196 37 144 79 189 162 131 58 59 91 10 154 0 129 19 101 216 1 35 51 213 50 248 248 235 26 98 60 55 138 54 148 101 17 146 187 218 131 62 59 141 123 143 144 178 191 201 176 69 248 165 94 27 106 95 225 81 44 64 12 75 201 200 111 215 198 153 214 66 245 206 233 187 130 124 139 10 188 13 160 28 239 30)
  :der-encode
  #f
  :tests
  '(#(277
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(1 65 65 228 217 74 88 193 231 71 203 217 238 102 112 164 30 172 60 38 251 77 179 36 142 69 213 131 23 144 118 230 177 154 142 32 3 101 122 16 143 145 249 161 3 21 126 223 249 179 125 242 180 54 167 125 193 18 146 125 144 122 201 186 37 135 1 8 175 169 27 52 189 144 76 104 4 113 233 67 175 51 111 185 12 95 178 185 20 1 165 140 155 31 70 123 248 26 248 4 153 101 221 139 69 241 46 21 47 79 127 211 120 14 52 146 243 30 210 104 13 71 119 251 230 85 254 119 154 216 151 171)
      #t
      ())
    #(278
      "pseudorandom signature"
      #vu8(84 101 115 116)
      #vu8(1 178 87 228 111 74 159 203 160 48 18 251 238 164 205 59 178 226 15 215 221 78 28 237 112 132 5 51 10 135 89 116 7 165 135 8 97 231 28 58 21 124 2 30 180 190 185 136 31 206 156 63 69 143 60 217 219 217 78 66 44 240 122 117 1 46 1 181 95 1 189 23 229 166 173 125 40 191 191 117 96 222 84 143 150 202 82 104 61 18 236 107 163 71 230 243 193 196 195 182 70 60 115 189 38 57 1 77 229 219 20 67 241 129 214 32 212 46 111 105 181 96 243 119 50 175 131 166 162 239 33 25)
      #t
      ())
    #(279
      "pseudorandom signature"
      #vu8()
      #vu8(1 98 93 97 21 9 42 142 46 226 27 159 138 66 90 167 56 20 222 200 178 51 94 134 21 10 180 34 159 90 52 33 210 230 37 109 99 44 122 67 101 161 238 1 221 42 147 105 33 187 180 85 26 81 45 29 75 90 86 195 20 228 160 37 52 197 1 183 146 210 63 38 73 134 37 149 69 16 85 119 123 218 27 2 220 108 200 254 242 50 49 228 75 146 27 22 21 92 212 34 87 68 29 117 167 144 55 30 145 129 159 10 155 31 208 235 208 44 144 181 183 116 82 119 70 237 155 254 116 61 190 47)
      #t
      ())
    #(280
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(0 8 19 93 63 26 233 226 111 186 130 86 67 237 138 41 214 61 120 67 114 14 147 86 106 160 157 178 189 245 170 166 154 251 204 12 81 229 41 92 41 143 48 91 167 184 112 240 168 91 181 105 156 223 64 118 74 171 89 65 143 119 198 255 180 82 1 29 52 82 86 136 127 179 81 245 112 9 97 167 212 117 114 224 214 105 5 108 177 213 97 147 69 192 201 135 243 51 28 47 226 198 223 132 138 92 97 4 34 222 253 98 18 182 67 70 22 26 168 113 174 85 177 254 74 221 95 104 131 110 177 129)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 120 44 142 209 126 59 42 120 59 84 100 243 59 9 101 42 113 198 120 224 94 197 30 132 226 188 252 102 58 61 233 99 175 154 203 66 128 184 199 247 196 47 78 249 171 166 36 94 193 236 23 18 253 56 160 250 150 65 141 140 214 170 97 82)
  :der-encode
  #f
  :tests
  '(#(281
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(208 53 238 31 23 253 176 178 104 27 22 62 51 195 89 147 38 89 153 10 247 125 202 99 32 18 179 11 39 160 87 179 25 57 217 243 178 133 139 193 62 52 116 203 80 230 168 43 228 79 170 113 148 15 135 108 28 186 76 62 152 146 2 182)
      #t
      ())
    #(282
      "pseudorandom signature"
      #vu8(84 101 115 116)
      #vu8(36 129 58 90 239 244 88 72 38 167 46 60 224 48 255 57 18 75 69 108 141 177 21 116 171 68 233 99 79 43 229 69 12 80 201 20 224 75 254 60 135 239 141 253 163 53 104 111 170 121 149 145 20 28 155 141 239 57 140 94 234 225 7 197)
      #t
      ())
    #(283
      "pseudorandom signature"
      #vu8()
      #vu8(248 10 228 249 108 219 201 216 83 248 61 71 170 226 37 191 64 125 81 197 107 119 118 205 103 208 220 25 93 153 169 220 179 3 226 107 225 247 52 101 49 82 33 240 179 49 82 136 7 161 169 182 235 6 142 222 110 235 234 170 73 175 138 54)
      #t
      ())
    #(284
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(79 5 63 86 58 211 75 116 253 140 153 52 206 89 231 156 46 184 230 236 160 254 245 179 35 202 103 213 172 126 210 56 77 75 5 218 160 113 158 119 61 134 23 220 229 99 28 95 214 245 156 155 220 116 142 75 85 201 112 4 10 240 27 229)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 89 147 38 78 225 125 223 32 154 236 49 254 10 60 21 59 90 42 132 93 79 230 127 188 33 138 177 57 125 66 223 7 201 201 139 26 152 210 161 215 146 1 77 252 119 254 153 189 43 131 177 135 133 235 78 188 190 141 22 236 209 79 143 98 80 21 178 104 122 242 209 61 104 114 229 43 5 92 149 235 52 129 122 159 24 251 232 254 242 53 129 133 21 36 37 101)
  :der-encode
  #f
  :tests
  '(#(285
      "Hash weaker than DL-group"
      #vu8(72 101 108 108 111)
      #vu8(33 209 79 34 85 16 161 15 66 240 14 213 92 7 113 8 93 94 226 43 194 66 102 192 51 63 3 25 112 135 157 52 171 237 93 87 1 224 184 111 142 20 221 120 254 226 67 54 140 99 97 9 225 87 73 138 87 228 180 73 189 187 177 178 46 189 98 21 100 180 218 232 119 110 38 22 4 94 177 139 182 203 142 84 42 5 46 80 54 136 117 167 42 242 229 51)
      #t
      ("WeakHash"))))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 143 13 42 116 46 24 203 133 90 52 119 136 100 97 161 90 218 85 51 16 15 72 141 195 154 237 137 108 94 166 47 160 41 197 184 4 84 180 234 186 235 242 145 125 118 44 80 83 219 161 38 179 154 7 140 15 0 178 249 54 160 145 132 219 254 0 80 60 196 204 160 16 189 210 170 141 133 245 98 93 81 111 62 65 208 104 207 212 234 65 62 196 169 117 16 98 121 32 192 25 126 239 42 210 35 131 197 127 46 147 165 213 37 82 31 216 99 85 80 251 93 217 142 59 108 115 89 43 36 168 49)
  :der-encode
  #f
  :tests
  '(#(286
      "Hash weaker than DL-group"
      #vu8(72 101 108 108 111)
      #vu8(0 112 44 169 242 90 10 168 60 3 118 149 216 152 78 174 111 82 193 89 157 82 144 50 40 251 114 212 28 7 50 16 63 51 130 246 35 151 21 21 63 79 78 151 133 50 115 99 123 56 236 220 16 78 77 240 174 207 163 182 31 47 202 49 230 234 0 6 170 96 194 171 249 61 90 18 172 187 6 191 91 138 141 37 92 202 71 129 241 47 43 196 181 201 174 167 224 176 222 27 67 33 6 24 74 66 115 242 66 173 86 207 9 221 164 135 48 83 64 177 243 108 87 186 77 56 84 144 50 176 17 111)
      #t
      ("WeakHash"))))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 143 13 42 116 46 24 203 133 90 52 119 136 100 97 161 90 218 85 51 16 15 72 141 195 154 237 137 108 94 166 47 160 41 197 184 4 84 180 234 186 235 242 145 125 118 44 80 83 219 161 38 179 154 7 140 15 0 178 249 54 160 145 132 219 254 0 80 60 196 204 160 16 189 210 170 141 133 245 98 93 81 111 62 65 208 104 207 212 234 65 62 196 169 117 16 98 121 32 192 25 126 239 42 210 35 131 197 127 46 147 165 213 37 82 31 216 99 85 80 251 93 217 142 59 108 115 89 43 36 168 49)
  :der-encode
  #f
  :tests
  '(#(287
      "Hash weaker than DL-group"
      #vu8(72 101 108 108 111)
      #vu8(0 184 148 70 207 119 163 114 192 167 137 178 7 212 13 132 159 25 241 174 244 172 168 116 214 45 65 155 88 6 141 1 172 203 78 230 238 103 242 122 172 122 215 66 224 146 237 130 28 159 187 131 210 83 116 205 224 39 175 219 156 236 77 140 13 101 1 93 40 16 44 167 197 70 250 185 136 175 189 114 134 196 18 164 188 176 225 145 62 251 224 63 160 141 64 151 9 40 0 190 209 124 72 183 205 33 206 151 119 209 138 180 33 225 27 162 120 35 217 248 17 210 80 4 248 242 131 148 103 102 63 214)
      #t
      ("WeakHash"))))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 79 51 124 207 214 119 38 168 5 228 241 96 10 226 132 157 243 128 126 202 17 115 128 35 159 189 129 105 0 0 0 0 237 157 234 18 76 200 195 150 65 100 17 233 136 195 15 66 126 181 4 175 67 163 20 108 213 223 126 166 6 102 214 133)
  :der-encode
  #f
  :tests
  '(#(288
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(212 52 226 98 164 158 171 119 129 227 83 163 86 94 72 37 80 221 15 213 222 250 1 60 127 41 116 94 255 53 105 241 155 12 10 147 242 103 251 96 82 253 128 119 190 118 156 43 152 149 49 149 215 188 16 222 132 66 24 48 92 107 161 122)
      #t
      ())
    #(289
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(15 231 116 53 92 4 208 96 247 109 121 253 122 119 46 66 20 99 72 146 33 191 10 51 173 208 190 155 25 121 17 11 80 13 203 161 198 154 143 189 67 250 79 87 247 67 206 18 76 168 185 26 31 50 95 63 172 97 129 23 93 245 87 55)
      #t
      ())
    #(290
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(187 64 191 33 123 237 63 179 149 12 125 57 240 61 54 220 142 59 44 215 150 147 241 37 191 208 101 149 238 17 53 227 84 27 243 83 35 81 235 176 50 113 11 219 106 27 241 191 200 154 30 41 26 198 146 179 250 71 128 116 91 181 86 119)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 60 240 61 97 77 137 57 207 212 153 160 120 115 250 194 129 97 143 6 184 255 135 232 1 92 63 73 114 101 0 73 53 132 250 23 77 121 28 114 191 44 227 136 10 137 96 221 42 124 122 19 56 168 47 133 169 229 156 219 222 128 0 0 0)
  :der-encode
  #f
  :tests
  '(#(291
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(102 78 183 238 109 184 74 52 223 60 134 234 49 56 154 84 5 186 221 92 169 146 49 255 85 109 62 117 162 51 231 58 89 243 199 82 229 46 202 70 19 118 66 73 10 81 86 12 224 186 220 103 135 84 184 247 46 81 162 144 20 38 161 189)
      #t
      ())
    #(292
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(76 208 66 155 186 189 40 39 0 157 111 205 132 61 76 227 156 62 66 226 209 99 31 208 1 152 90 121 209 253 139 67 150 56 191 18 221 104 47 96 190 126 241 208 224 217 143 8 183 188 167 122 26 43 134 154 228 102 24 157 42 205 171 227)
      #t
      ())
    #(293
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(229 108 110 162 209 176 23 9 28 68 216 182 203 98 185 244 96 227 206 154 237 94 95 212 30 138 221 237 151 197 108 4 163 8 236 49 242 129 233 85 190 32 180 87 228 99 68 11 79 207 43 128 37 128 120 32 127 193 55 129 128 248 155 85)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 60 240 61 97 77 137 57 207 212 153 160 120 115 250 194 129 97 143 6 184 255 135 232 1 92 63 73 114 101 0 73 53 123 5 232 177 134 227 141 65 211 28 119 245 118 159 34 213 131 133 236 200 87 208 122 86 26 99 36 33 127 255 255 255)
  :der-encode
  #f
  :tests
  '(#(294
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(17 88 160 141 41 21 0 180 202 190 211 52 109 137 30 238 87 193 118 53 106 38 36 251 1 31 143 187 243 70 104 48 34 138 140 72 106 115 96 6 224 130 50 91 133 41 12 91 201 31 55 139 117 212 135 221 164 103 152 193 143 40 85 25)
      #t
      ())
    #(295
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(177 219 146 137 100 159 89 65 14 163 107 12 15 200 214 170 38 135 178 145 118 147 157 210 62 13 222 86 211 9 250 157 62 21 53 228 40 5 89 1 91 13 189 152 115 102 220 244 58 109 26 245 194 60 125 88 78 28 63 72 161 37 19 54)
      #t
      ())
    #(296
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(183 177 110 118 34 134 203 150 68 106 168 212 230 231 87 139 10 52 26 121 242 221 26 34 10 198 240 202 78 36 237 134 221 198 10 112 10 19 155 4 102 28 84 125 7 187 176 114 23 128 20 109 247 153 204 245 94 85 35 78 203 143 18 188)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 40 41 195 31 170 46 64 14 52 78 217 75 202 63 205 5 69 149 110 188 254 138 208 246 223 165 255 142 255 255 255 255 160 26 175 175 0 14 82 88 88 85 175 167 103 106 222 40 65 19 9 144 82 223 87 231 235 59 211 126 190 185 34 46)
  :der-encode
  #f
  :tests
  '(#(297
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(216 42 124 39 23 38 17 135 200 224 13 141 249 99 255 53 215 150 237 173 54 188 110 107 209 201 28 103 13 145 5 180 61 202 189 218 248 252 170 97 244 96 62 124 186 192 243 192 53 30 205 89 136 239 178 63 104 13 7 222 189 19 153 41)
      #t
      ())
    #(298
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(94 185 200 132 93 230 142 177 61 91 239 231 25 244 98 215 119 135 128 43 175 243 12 233 106 92 186 6 50 84 175 120 44 2 106 233 190 46 42 94 124 160 255 155 189 146 251 110 68 151 33 134 34 142 233 166 43 135 221 190 46 246 111 181)
      #t
      ())
    #(299
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(150 132 61 208 60 34 171 210 243 183 130 177 112 35 159 144 242 119 146 27 236 193 23 208 64 74 142 78 54 35 12 40 242 190 55 143 82 111 116 165 67 246 113 101 151 109 233 237 154 49 33 78 180 215 230 219 25 225 237 225 35 221 153 29)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 255 255 255 249 72 8 30 106 4 88 221 143 158 115 143 38 101 255 144 89 173 106 172 7 8 49 140 76 169 167 164 245 90 138 188 186 45 218 132 116 49 30 229 65 73 185 115 202 224 192 251 137 85 122 208 191 120 230 82 154 22 99 189 115)
  :der-encode
  #f
  :tests
  '(#(300
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(118 100 86 220 225 133 124 144 111 153 150 175 114 147 57 70 77 39 233 217 142 220 45 14 59 118 2 151 6 116 33 246 64 35 133 236 173 174 13 128 129 220 202 245 209 144 55 236 78 85 55 110 206 214 153 233 54 70 191 187 241 157 11 65)
      #t
      ())
    #(301
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(198 5 196 178 237 234 178 4 25 230 81 138 17 178 219 194 185 126 216 176 124 206 208 177 156 52 247 119 222 123 159 217 237 240 246 18 197 244 110 3 199 25 100 123 200 175 27 41 178 205 226 237 167 0 251 28 255 94 21 157 71 50 109 186)
      #t
      ())
    #(302
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(212 139 104 230 202 191 224 60 246 20 28 154 197 65 65 242 16 230 68 133 217 146 154 215 183 50 191 227 183 235 138 132 254 237 174 80 198 27 208 14 25 220 38 249 183 226 38 94 69 8 195 137 16 154 210 242 8 240 119 35 21 182 201 65)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 0 0 0 3 250 21 249 99 148 157 95 3 166 245 199 248 111 158 0 21 238 178 58 235 191 241 23 57 55 186 116 142 16 153 135 32 112 232 232 124 85 95 161 54 89 204 165 215 250 220 252 176 2 62 168 137 84 140 164 138 242 186 126 113)
  :der-encode
  #f
  :tests
  '(#(303
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(183 200 20 87 212 174 182 170 101 149 112 152 86 159 4 121 113 10 215 246 89 93 88 116 195 90 147 209 42 93 212 199 183 150 26 11 101 40 120 194 213 104 6 154 67 44 161 138 26 145 153 242 202 87 77 173 75 158 58 5 192 161 205 179)
      #t
      ())
    #(304
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(107 1 51 45 219 110 223 169 163 10 19 33 213 133 142 30 227 207 151 226 99 230 105 248 222 94 150 82 231 111 243 247 89 57 84 95 206 212 87 48 154 106 4 172 226 189 15 112 19 156 143 125 134 176 44 177 204 88 249 230 158 150 205 90)
      #t
      ())
    #(305
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(239 219 136 71 32 234 234 220 52 159 159 195 86 182 192 52 65 1 205 47 216 67 107 125 14 106 79 185 63 16 99 97 242 75 238 106 213 220 5 247 97 57 117 71 58 173 243 170 203 169 231 125 231 214 155 108 228 140 182 13 129 19 56 93)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 188 187 41 20 199 159 4 94 170 110 203 188 97 40 22 179 190 93 45 103 150 112 125 129 37 233 248 81 193 138 240 21 0 0 0 0 19 82 187 74 15 162 234 76 206 185 171 99 221 104 74 222 90 17 39 188 243 0 166 152 167 25 59 194)
  :der-encode
  #f
  :tests
  '(#(306
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(49 35 4 40 64 85 96 220 184 143 181 166 70 131 106 234 155 35 162 61 217 115 220 190 128 20 200 123 139 32 235 7 15 147 68 214 232 18 206 22 102 70 116 118 148 164 27 10 175 151 55 78 25 243 197 251 139 215 174 61 155 208 190 255)
      #t
      ())
    #(307
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(202 167 151 218 101 179 32 171 13 92 71 12 218 11 54 178 148 53 156 125 185 132 29 103 145 116 219 52 196 133 87 67 207 84 58 98 242 62 33 39 69 57 26 175 117 5 243 69 18 61 38 133 238 59 148 29 61 230 217 179 98 66 229 160)
      #t
      ())
    #(308
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(126 95 10 181 217 0 211 211 215 134 118 87 229 214 211 101 25 188 84 8 69 54 231 210 28 51 110 216 0 24 89 69 148 80 192 127 32 31 174 201 75 130 223 179 34 229 172 103 102 136 41 74 173 53 170 114 231 39 255 11 25 182 70 170)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 188 187 41 20 199 159 4 94 170 110 203 188 97 40 22 179 190 93 45 103 150 112 125 129 37 233 248 81 193 138 240 21 255 255 255 254 236 173 68 182 240 93 21 179 49 70 84 156 34 151 181 34 165 238 216 67 12 255 89 103 88 230 196 61)
  :der-encode
  #f
  :tests
  '(#(309
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(215 215 12 88 26 233 227 246 109 198 164 128 191 3 122 226 63 138 30 74 33 54 254 75 3 170 105 240 202 37 179 86 137 196 96 248 165 165 194 187 186 150 44 138 62 232 51 164 19 232 86 88 230 42 89 226 175 65 217 18 124 196 114 36)
      #t
      ())
    #(310
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(52 28 27 159 243 200 61 213 224 223 160 191 104 188 223 75 183 170 32 198 37 151 94 94 238 227 75 179 150 38 107 52 114 182 159 6 27 117 15 213 18 27 34 177 19 102 250 213 73 198 52 231 119 101 160 23 144 42 103 9 158 10 68 105)
      #t
      ())
    #(311
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(112 190 190 104 76 220 181 202 114 164 47 13 135 56 121 53 155 209 120 26 89 24 9 148 118 40 211 19 163 129 79 103 174 192 58 202 143 85 135 164 213 53 250 49 2 123 190 156 192 228 100 177 195 87 127 76 45 205 230 178 9 71 152 169)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 110 130 53 85 69 41 20 9 145 130 198 178 193 214 240 181 210 141 80 204 208 5 175 44 225 187 165 65 170 64 202 255 0 0 0 1 6 4 146 213 165 103 62 15 37 216 213 15 183 229 140 73 216 109 70 212 33 105 85 224 170 61 64 225)
  :der-encode
  #f
  :tests
  '(#(312
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(109 106 79 85 108 204 225 84 231 251 159 25 231 108 61 236 161 61 89 204 42 235 78 202 217 104 170 178 222 212 89 101 83 185 250 116 128 62 222 15 196 68 27 246 131 213 108 86 77 62 39 78 9 204 244 115 144 186 221 20 113 192 95 183)
      #t
      ())
    #(313
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(170 213 3 222 155 159 214 107 148 142 154 207 89 111 10 14 101 231 0 178 139 38 236 86 230 228 94 132 100 137 179 196 255 242 35 197 208 118 84 71 232 68 122 63 157 49 253 6 150 232 157 36 68 34 2 47 246 26 17 11 42 140 47 4)
      #t
      ())
    #(314
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(145 130 206 189 59 184 171 87 46 22 113 116 57 114 9 239 75 29 67 154 243 178 0 205 240 3 98 0 137 228 50 37 171 184 131 103 209 95 230 45 30 255 251 104 3 218 3 16 158 226 46 144 188 156 120 232 180 237 35 99 11 130 234 157)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 110 130 53 85 69 41 20 9 145 130 198 178 193 214 240 181 210 141 80 204 208 5 175 44 225 187 165 65 170 64 202 255 255 255 255 254 249 251 109 42 90 152 193 240 218 39 42 240 72 26 115 182 39 146 185 43 222 150 170 30 85 194 187 78)
  :der-encode
  #f
  :tests
  '(#(315
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(56 84 163 153 138 235 223 45 188 40 173 172 65 129 70 44 202 199 135 57 7 171 127 33 44 66 219 14 105 181 110 216 193 44 9 71 92 119 47 208 193 178 6 13 81 99 228 43 247 29 114 126 74 231 192 62 235 169 84 191 80 180 59 179)
      #t
      ())
    #(316
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(233 77 189 195 135 149 254 92 144 77 143 22 217 105 211 181 135 240 162 93 45 233 11 109 140 92 83 255 136 126 54 7 133 107 140 150 62 155 104 218 222 68 117 11 249 126 196 209 27 26 10 56 4 244 203 121 170 39 189 234 120 172 20 228)
      #t
      ())
    #(317
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(73 252 16 42 8 202 71 182 14 8 88 205 2 132 210 44 221 215 35 63 148 170 255 187 45 177 221 44 240 132 37 225 91 22 252 165 161 44 219 57 112 22 151 173 142 57 255 214 189 236 0 36 41 138 250 162 50 106 234 9 32 11 20 214)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 0 0 0 1 63 210 34 72 214 77 149 247 60 41 180 138 180 134 49 133 11 229 3 253 0 248 70 139 95 15 112 224 246 238 122 164 59 194 198 253 37 177 216 38 146 65 203 221 157 187 13 172 150 220 150 35 31 67 7 5 248 56 113 125)
  :der-encode
  #f
  :tests
  '(#(318
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(65 239 167 211 240 90 0 16 103 95 203 145 138 69 198 147 218 75 52 141 242 26 89 214 249 205 115 224 216 49 214 122 187 171 82 89 108 26 29 148 132 41 108 220 146 203 240 126 102 82 89 161 55 145 168 254 136 69 226 192 124 243 252 103)
      #t
      ())
    #(319
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(182 21 105 140 53 139 53 146 13 216 131 236 166 37 166 197 247 86 57 112 205 252 55 143 143 224 206 225 112 146 20 76 218 11 132 205 148 164 30 4 158 244 119 174 172 21 123 42 155 250 107 122 200 222 6 237 56 88 197 238 222 109 221 109)
      #t
      ())
    #(320
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(135 207 140 14 184 45 68 246 156 96 162 255 84 87 211 170 163 34 231 236 97 174 90 236 253 103 138 225 193 147 43 14 197 34 196 238 167 234 251 130 145 76 191 92 31 247 103 96 16 159 85 221 221 207 88 39 77 65 201 188 67 17 224 110)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 37 175 214 137 172 171 174 214 124 31 41 109 229 148 6 248 197 80 245 113 70 160 180 236 44 151 135 109 255 255 255 255 250 70 167 110 82 3 34 223 188 73 30 196 240 204 25 116 32 252 78 165 136 61 143 109 213 60 53 75 196 246 124 53)
  :der-encode
  #f
  :tests
  '(#(321
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(98 244 142 247 26 206 39 191 90 1 131 77 225 247 227 249 72 185 220 225 202 30 145 29 94 19 211 177 4 71 29 130 161 87 12 192 243 136 118 141 59 167 223 127 33 37 100 202 162 86 255 130 93 249 151 242 31 114 245 40 13 83 1 31)
      #t
      ())
    #(322
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(246 176 226 246 254 2 12 247 192 194 1 55 67 67 68 237 122 221 108 75 229 24 97 226 209 76 189 164 114 166 255 180 155 233 55 34 193 163 173 125 76 249 23 35 112 12 181 72 109 229 71 157 140 27 56 174 78 142 91 161 99 142 151 50)
      #t
      ())
    #(323
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(219 9 216 70 15 5 239 242 59 199 228 54 182 125 165 99 250 75 78 219 88 172 36 206 32 31 168 163 88 18 80 87 70 218 17 103 84 96 41 64 200 153 156 141 102 95 120 108 80 245 119 44 10 60 219 218 7 94 119 234 188 100 223 22)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 209 46 108 102 182 119 52 195 200 77 38 1 207 93 53 220 9 126 39 99 127 10 202 74 79 219 116 182 170 221 59 185 63 91 223 248 139 213 115 109 248 152 230 153 0 110 215 80 241 28 240 124 88 102 205 122 215 12 113 33 255 255 255 255)
  :der-encode
  #f
  :tests
  '(#(324
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(89 44 65 225 101 23 241 47 202 189 152 38 118 116 249 116 181 136 233 243 93 53 64 108 26 123 178 237 29 25 183 184 193 154 95 148 38 7 195 85 20 132 255 13 201 114 129 240 205 200 43 196 142 34 5 160 100 92 12 243 215 245 157 160)
      #t
      ())
    #(325
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(190 13 112 136 125 94 64 130 26 97 182 128 71 222 78 160 61 235 253 245 28 223 77 75 25 85 88 185 89 160 50 178 130 102 180 210 112 226 68 20 236 172 177 76 9 26 35 49 52 185 24 211 115 32 198 85 125 96 173 10 99 84 74 196)
      #t
      ())
    #(326
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(250 233 45 252 178 238 57 45 39 10 243 165 115 159 170 38 212 249 123 253 57 237 60 190 228 210 158 38 175 59 32 106 147 100 92 128 96 85 149 224 44 9 160 220 75 23 172 42 81 132 106 114 139 62 141 96 68 46 214 68 159 211 52 43)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 109 74 127 96 212 119 74 79 10 168 187 222 219 149 60 126 234 121 9 64 126 49 100 117 86 100 188 40 0 0 0 0 230 89 211 78 77 243 141 158 140 158 170 223 186 54 97 44 118 145 149 190 134 199 122 172 63 54 231 139 83 134 128 251)
  :der-encode
  #f
  :tests
  '(#(327
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(23 106 37 87 86 111 250 81 139 17 34 102 148 235 152 2 237 32 152 191 226 120 229 87 15 225 213 215 175 24 169 67 237 110 32 149 241 42 3 242 234 246 113 143 67 14 197 254 40 41 253 22 70 171 100 135 1 101 111 211 18 33 185 125)
      #t
      ())
    #(328
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(96 190 32 195 219 193 98 221 52 210 103 128 98 28 16 75 190 93 172 230 48 23 27 45 174 240 216 38 64 158 229 194 189 128 129 178 119 98 171 110 143 66 89 86 191 96 78 51 47 160 102 169 155 89 248 126 39 220 17 152 178 111 92 170)
      #t
      ())
    #(329
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(237 240 60 246 63 101 136 131 40 154 26 89 61 16 7 137 91 159 35 109 39 201 193 241 49 48 137 170 237 107 22 174 229 178 41 3 247 235 35 173 194 224 16 87 227 155 4 8 212 149 246 148 200 63 48 111 18 22 201 191 135 80 96 116)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 255 255 255 255 170 99 241 162 57 172 112 25 124 110 191 206 165 117 109 192 18 18 63 130 197 31 168 116 214 96 40 190 0 233 118 161 8 6 6 115 124 199 92 64 189 254 74 172 172 189 133 56 144 136 166 42 99 152 56 76 34 181 45 73 47 35 244 110 74 39 164 114 74 213 85 81 218 92 72 52 56 9 90 36 124 176 195 55 143 31 82 195 66 95 249 241)
  :der-encode
  #f
  :tests
  '(#(330
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(7 100 139 102 96 208 27 162 82 10 9 210 152 173 243 177 160 44 50 116 75 210 135 114 8 245 164 22 47 108 152 67 115 19 157 128 10 76 220 31 254 161 91 206 72 113 160 237 153 253 54 112 18 203 158 2 205 226 116 148 85 224 212 149 197 40 24 243 193 79 110 106 173 16 91 9 37 226 167 41 10 196 160 109 159 173 244 177 91 87 133 86 254 51 42 95)
      #t
      ())
    #(331
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(160 73 220 217 108 114 228 243 97 68 165 27 186 48 65 123 69 26 48 93 208 28 158 48 165 224 77 249 67 66 97 125 195 131 241 119 39 112 142 50 119 205 114 70 202 68 7 65 57 112 226 100 216 91 34 139 249 233 185 196 148 124 93 208 65 234 139 91 222 48 185 58 165 159 237 242 196 40 211 226 84 10 84 224 83 6 136 172 204 184 58 199 178 155 121 162)
      #t
      ())
    #(332
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(68 24 0 234 147 119 194 120 101 190 0 10 208 8 235 61 117 2 189 209 5 130 75 38 209 92 243 208 100 82 150 154 157 6 7 169 21 168 254 152 146 21 252 77 97 175 110 5 220 226 159 170 81 55 247 90 215 126 3 145 140 142 230 116 124 199 163 155 10 105 248 185 21 101 76 172 76 244 191 217 200 124 196 106 225 99 27 92 107 174 189 79 192 143 248 253)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 209 130 127 198 246 241 47 33 153 44 90 64 154 6 83 177 33 210 239 2 178 176 171 1 169 22 28 233 86 40 7 64 177 227 86 178 85 112 27 10 109 220 158 194 202 138 148 34 198 237 93 44 237 141 138 183 86 15 165 187 136 199 56 231 69 65 136 61 138 43 28 14 43 167 227 109 3 15 196 217 191 184 178 47 36 219 137 126 186 196 157 212 0 0 0 0)
  :der-encode
  #f
  :tests
  '(#(333
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(50 68 118 128 22 69 124 70 59 116 242 9 127 33 109 150 112 177 145 247 98 129 199 75 198 161 161 151 29 25 242 9 191 70 150 70 143 94 183 93 99 38 160 164 60 10 101 41 80 30 10 217 133 237 159 149 105 123 209 127 219 227 249 202 146 224 247 100 38 211 102 78 104 150 100 141 156 117 11 245 136 208 206 125 1 28 26 30 141 108 46 8 36 34 220 147)
      #t
      ())
    #(334
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(94 26 244 15 36 128 227 217 124 74 228 191 211 74 159 69 38 146 65 53 111 58 70 190 205 134 164 167 201 113 109 115 202 90 235 219 61 177 167 118 86 80 102 102 131 188 133 107 126 124 75 71 58 43 170 164 149 55 133 190 138 162 161 0 6 246 211 107 64 10 185 129 134 77 105 206 206 192 70 113 141 4 4 185 100 116 84 177 89 170 90 146 215 109 121 85)
      #t
      ())
    #(335
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(102 136 227 106 38 241 91 220 28 63 145 54 127 138 118 103 247 187 62 48 163 53 214 240 144 14 149 52 235 136 178 96 203 41 52 76 114 63 237 251 231 172 156 90 51 244 191 13 170 53 253 223 15 220 144 23 134 11 55 143 128 28 216 6 243 226 215 84 205 47 217 78 183 187 54 164 108 232 40 206 248 126 158 187 244 71 6 142 99 11 135 254 227 133 173 143)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 16 153 187 69 16 15 85 245 168 92 202 61 226 179 189 94 37 15 79 111 173 102 49 163 21 108 46 82 163 61 125 97 93 210 121 247 159 139 75 175 247 199 19 172 0 0 0 0 230 201 183 54 168 146 159 46 215 190 12 117 58 84 203 180 139 132 105 224 65 30 175 147 164 168 36 89 186 11 104 27 186 143 95 179 131 180 144 109 73 1 163 48 62 47 21 87)
  :der-encode
  #f
  :tests
  '(#(336
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(212 168 243 176 180 211 165 118 158 58 11 188 100 75 53 241 213 9 53 94 209 254 64 30 23 15 102 123 102 31 105 59 50 89 142 140 20 58 129 122 149 137 130 132 80 66 187 72 4 204 7 87 139 189 25 129 219 246 232 169 122 53 76 152 212 27 139 111 110 138 44 43 23 99 199 194 162 157 121 226 79 132 118 7 92 154 237 154 236 108 100 223 245 4 97 174)
      #t
      ())
    #(337
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(194 134 209 146 142 156 121 253 211 190 189 242 42 29 189 55 200 16 94 142 207 65 233 227 119 127 227 65 182 184 213 168 155 157 152 104 39 214 209 219 179 129 205 130 57 72 74 34 32 17 25 174 48 91 147 96 170 155 94 93 21 103 224 103 76 9 228 240 37 85 110 191 129 185 135 70 107 15 66 27 141 49 247 43 190 149 243 206 42 169 135 74 132 237 253 64)
      #t
      ())
    #(338
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(217 198 120 85 1 103 241 12 81 30 98 172 180 189 10 63 127 51 107 192 144 201 78 108 107 2 98 36 57 195 72 162 21 156 95 65 249 181 170 75 71 5 144 212 13 205 124 194 31 213 234 238 41 90 187 64 129 203 98 103 69 244 173 39 156 235 68 96 64 98 131 11 88 230 192 70 92 86 45 65 240 43 165 136 252 13 177 235 190 51 156 220 0 141 122 27)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 0 0 0 0 43 8 158 221 117 65 105 1 1 69 242 99 243 52 252 22 124 193 157 174 130 37 151 10 225 156 200 203 126 199 53 147 214 164 101 195 112 245 71 139 14 83 157 105 209 149 29 89 123 86 166 115 69 172 178 88 9 88 31 7 205 14 183 141 149 56 163 248 166 95 48 14 104 161 235 120 80 125 247 109 230 80 232 248 238 99 165 240 197 104 124 152)
  :der-encode
  #f
  :tests
  '(#(339
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(32 254 231 199 27 108 176 209 218 54 65 236 102 34 192 85 163 177 106 31 89 108 100 179 77 161 178 208 184 104 182 106 143 10 13 13 185 131 179 220 126 83 187 114 149 218 129 151 129 65 169 49 211 87 154 236 28 172 152 135 210 255 249 198 241 45 71 162 126 74 171 140 242 98 169 209 74 113 91 202 11 32 87 203 195 241 139 111 211 209 223 118 247 65 15 22)
      #t
      ())
    #(340
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(145 62 236 197 89 179 207 113 8 166 93 108 195 7 107 253 243 108 111 148 220 198 105 61 6 105 4 112 243 74 46 129 86 66 65 225 222 95 95 81 66 29 227 10 244 103 241 15 100 155 211 113 114 68 232 239 60 107 14 218 152 63 132 220 165 234 134 209 190 193 83 134 185 196 115 236 67 168 205 11 165 88 238 232 25 247 145 217 255 146 114 185 175 213 149 81)
      #t
      ())
    #(341
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(35 133 92 70 64 58 151 183 108 187 49 110 195 254 126 44 66 43 129 131 135 96 75 218 140 61 145 18 27 79 32 23 157 145 7 197 249 45 237 200 182 32 215 219 135 252 204 205 80 245 115 67 171 20 142 80 102 35 32 196 22 30 68 84 60 53 188 153 32 17 234 91 22 128 185 67 130 207 34 78 160 236 93 165 17 225 2 245 102 203 103 32 31 48 162 238)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 251 1 186 173 95 11 143 121 185 205 16 77 18 170 185 49 1 70 173 215 214 180 192 34 216 122 230 113 17 120 185 77 97 140 167 179 175 19 133 75 28 88 136 121 232 119 179 54 0 0 0 0 32 139 63 90 211 179 147 122 204 157 96 108 197 236 236 171 74 112 31 117 237 66 149 126 164 215 133 141 51 245 194 108 106 226 10 156 204 218 86 153 103 0 214 180)
  :der-encode
  #f
  :tests
  '(#(342
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(210 0 149 141 73 31 206 189 230 103 205 115 108 157 186 9 97 199 13 178 236 175 87 60 49 221 127 164 30 204 163 43 64 181 137 111 154 13 223 39 33 16 227 210 30 132 89 58 194 236 247 57 67 185 173 206 89 107 172 20 252 230 36 149 174 147 130 92 95 246 246 28 36 125 29 138 252 186 82 8 47 201 111 99 162 110 85 188 207 195 119 159 136 207 215 153)
      #t
      ())
    #(343
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(106 193 125 113 38 12 121 248 26 117 102 18 71 56 203 62 229 208 170 105 14 115 169 138 233 231 102 241 51 102 145 229 0 202 213 27 161 48 35 102 192 156 192 107 143 112 73 224 50 202 150 93 109 112 18 236 24 124 124 171 149 68 51 77 102 194 167 101 141 222 250 103 228 173 64 66 152 21 81 142 204 135 177 73 45 221 87 51 59 210 48 11 70 96 168 53)
      #t
      ())
    #(344
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(225 154 70 70 240 237 138 39 31 232 107 165 51 248 190 79 216 27 191 70 116 113 111 102 142 250 137 164 12 172 81 238 194 166 207 189 146 50 125 37 239 233 28 164 255 113 43 197 74 134 178 232 225 35 120 230 51 222 194 105 30 59 30 237 78 147 44 196 139 40 228 95 163 212 100 204 14 148 140 2 204 157 236 242 187 67 178 89 55 252 243 126 154 216 110 240)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-384"
  :public-key
  #vu8(48 118 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 34 3 98 0 4 251 1 186 173 95 11 143 121 185 205 16 77 18 170 185 49 1 70 173 215 214 180 192 34 216 122 230 113 17 120 185 77 97 140 167 179 175 19 133 75 28 88 136 121 232 119 179 54 255 255 255 255 223 116 192 165 44 76 108 133 51 98 159 147 58 19 19 84 181 143 224 138 18 189 106 129 91 40 122 113 204 10 61 146 149 29 245 99 51 37 169 103 152 255 41 75)
  :der-encode
  #f
  :tests
  '(#(345
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(21 170 198 192 244 53 203 102 45 17 13 181 207 104 108 174 229 60 100 254 45 109 96 10 131 235 229 5 160 230 252 98 220 87 5 22 4 119 196 117 40 200 201 3 250 134 91 93 127 148 221 192 26 96 63 155 236 93 16 201 242 200 159 178 59 63 250 182 178 182 141 15 4 51 109 73 144 133 227 45 34 191 58 182 122 73 167 76 116 63 114 71 49 114 181 159)
      #t
      ())
    #(346
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(144 185 90 125 25 75 115 73 143 186 90 252 149 193 174 169 190 7 49 98 169 237 197 124 77 18 244 89 240 161 115 11 175 47 135 215 214 98 74 234 123 147 30 197 51 112 254 71 203 193 239 71 14 102 96 16 96 76 96 147 132 184 114 219 127 167 184 165 169 242 15 222 253 101 107 226 252 199 93 181 57 72 16 47 122 178 3 234 24 96 166 163 42 242 70 161)
      #t
      ())
    #(347
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(221 67 145 206 117 87 203 208 5 227 213 215 39 205 38 67 153 220 195 198 80 30 69 71 80 91 109 87 180 11 191 10 127 172 121 77 204 141 66 51 21 157 208 170 64 212 224 185 167 127 161 55 79 214 10 169 22 0 145 34 0 252 131 198 170 68 127 129 113 236 234 114 174 50 45 243 45 204 214 137 81 220 92 175 108 80 56 14 64 14 69 191 92 14 98 107)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 48 75 61 7 30 209 239 48 35 145 181 102 175 140 157 28 183 175 233 170 188 20 26 195 154 179 150 118 198 62 72 193 178 198 69 30 180 96 228 82 189 87 62 31 181 241 91 142 95 156 3 246 52 216 219 104 151 40 80 100 179 206 155 217 138 0 0 0 0 0 155 152 191 211 51 152 194 207 134 6 252 10 228 104 182 214 23 204 179 231 4 175 59 133 6 100 42 119 93 91 77 169 208 2 9 54 74 159 10 74 215 124 186 198 4 160 21 201 126 107 90 24 132 74 88 154 79 28 125 150 37)
  :der-encode
  #f
  :tests
  '(#(348
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(1 28 150 132 175 109 197 39 40 65 4 115 198 48 83 176 28 53 141 103 232 31 138 19 36 173 113 28 96 72 26 74 134 221 62 117 222 32 202 85 206 122 154 57 177 248 47 213 218 79 173 242 106 91 184 237 212 103 175 136 37 239 228 116 98 24 0 52 192 88 171 166 72 141 105 67 225 30 13 19 72 66 148 73 234 23 172 94 223 139 202 246 84 16 107 152 178 221 243 70 197 55 184 169 163 249 179 23 75 119 99 125 34 14 245 49 141 187 195 61 10 172 15 226 221 237 161 123 35 203 45 230)
      #t
      ())
    #(349
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(0 124 71 166 104 98 86 72 205 138 49 172 146 23 76 243 214 16 65 247 173 41 37 136 222 246 237 20 59 31 249 162 136 253 32 207 54 245 141 75 254 75 44 212 163 129 212 218 80 200 237 165 103 79 2 4 73 174 29 61 215 126 68 237 72 94 1 5 142 134 179 39 210 132 227 91 171 73 252 124 51 84 23 87 63 49 10 250 158 26 83 86 110 15 174 81 110 9 144 7 150 80 48 246 244 107 7 113 22 53 63 38 203 70 109 28 243 243 83 0 215 68 210 216 248 131 200 163 27 67 194 13)
      #t
      ())
    #(350
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(1 228 233 243 167 184 0 222 99 64 123 135 3 172 84 82 38 84 28 151 166 115 86 103 17 247 14 43 156 203 33 161 69 173 70 55 130 91 2 61 30 169 241 142 96 137 116 19 113 22 17 168 92 17 121 191 249 193 7 54 143 28 27 97 194 76 1 222 148 142 229 119 195 212 228 18 42 82 236 204 172 89 171 182 250 147 125 251 62 75 152 140 178 67 239 233 135 64 48 148 82 186 1 49 18 178 37 179 177 177 56 77 95 104 121 104 69 25 154 38 2 168 212 80 90 51 27 7 209 1 24 142)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 48 75 61 7 30 209 239 48 35 145 181 102 175 140 157 28 183 175 233 170 188 20 26 195 154 179 150 118 198 62 72 193 178 198 69 30 180 96 228 82 189 87 62 31 181 241 91 142 95 156 3 246 52 216 219 104 151 40 80 100 179 206 155 217 138 1 255 255 255 255 100 103 64 44 204 103 61 48 121 249 3 245 27 151 73 41 232 51 76 24 251 80 196 122 249 155 213 136 162 164 178 86 47 253 246 201 181 96 245 181 40 131 69 57 251 95 234 54 129 148 165 231 123 181 167 101 176 227 130 105 218)
  :der-encode
  #f
  :tests
  '(#(351
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(0 182 207 100 134 26 43 22 227 57 118 9 93 191 69 165 146 199 194 66 40 196 161 221 114 127 48 61 94 235 135 229 56 138 208 92 50 143 130 76 64 171 211 230 206 0 63 239 92 213 157 238 0 105 173 99 72 234 110 87 249 15 107 220 10 130 0 34 129 129 193 128 54 110 84 81 223 239 53 147 206 102 72 4 203 66 213 168 213 4 107 129 107 61 175 102 2 250 253 154 194 220 36 184 201 58 16 2 68 128 136 37 88 182 173 61 158 144 89 35 220 208 253 42 17 150 71 84 169 180 107 143)
      #t
      ())
    #(352
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(0 147 200 247 102 130 125 109 193 92 129 15 163 4 51 21 58 94 116 40 89 32 94 232 56 159 191 105 92 136 64 220 145 116 64 135 10 204 91 22 0 135 255 208 205 154 96 129 2 156 96 167 194 109 94 138 169 160 87 15 78 253 235 19 222 162 1 46 195 187 247 90 10 211 223 64 49 2 102 100 138 54 219 130 2 23 237 127 169 78 156 131 19 224 50 147 239 79 106 64 231 54 251 143 32 138 216 251 136 60 165 9 212 128 70 145 5 35 100 84 89 194 120 41 213 68 49 70 59 37 72 199)
      #t
      ())
    #(353
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(1 82 56 140 109 166 97 100 183 6 180 29 212 221 72 23 109 110 175 101 37 248 118 239 15 242 209 71 246 150 110 191 173 241 118 127 166 109 4 32 61 62 201 201 55 161 240 201 69 174 217 83 227 75 228 68 194 25 253 59 148 211 39 122 166 82 1 101 140 30 91 46 86 58 73 209 28 136 61 5 196 145 214 40 240 169 44 62 61 200 219 154 76 141 95 13 200 70 172 34 175 139 60 95 181 187 226 207 169 134 20 220 255 216 125 225 206 226 197 145 42 88 153 80 90 12 91 202 165 19 226 198)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 0 0 0 2 251 166 160 97 32 30 166 177 237 66 101 22 53 104 115 94 186 183 134 0 205 246 167 17 1 220 99 190 175 84 109 151 162 20 252 99 150 121 59 1 78 177 170 122 114 143 83 222 178 255 153 153 163 128 141 223 237 21 233 98 155 1 153 56 82 218 220 57 41 154 90 69 182 189 124 141 200 236 103 231 173 187 53 159 168 250 93 68 151 126 21 226 229 169 172 240 195 54 69 243 242 198 140 82 110 7 115 47 179 80 67 113 156 250 252 22 6 60 142 88 133 10 149 132 54 164 229)
  :der-encode
  #f
  :tests
  '(#(354
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(1 14 137 71 15 152 29 44 124 92 150 88 113 33 166 115 35 187 150 255 36 39 115 157 13 136 94 162 119 41 62 250 59 37 192 189 160 77 129 70 97 152 163 203 252 68 31 27 27 152 246 188 220 37 137 217 217 26 23 167 137 159 112 208 70 30 1 115 81 176 218 140 141 14 74 160 151 70 105 209 144 250 47 144 170 80 34 113 96 89 77 251 85 117 80 2 54 84 65 222 23 234 66 144 33 40 166 248 30 85 65 119 237 80 156 12 236 49 253 80 83 250 224 63 98 255 118 87 155 169 43 218)
      #t
      ())
    #(355
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(1 16 148 172 35 202 70 163 226 180 172 59 170 230 80 79 27 251 61 223 45 185 171 64 237 163 45 142 10 5 114 121 152 248 85 42 3 59 176 82 65 232 38 168 106 29 3 1 78 174 58 165 254 26 69 202 172 29 179 232 19 139 156 245 144 104 1 71 237 177 90 80 128 238 47 146 159 120 182 172 134 96 74 174 81 182 116 250 70 234 174 127 223 217 11 246 77 97 137 52 17 85 244 235 169 55 234 231 76 158 72 14 180 251 126 106 175 212 40 94 127 197 3 238 110 194 15 11 20 21 190 6)
      #t
      ())
    #(356
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(1 216 118 174 23 77 163 30 18 139 171 255 159 29 21 80 118 96 189 199 149 135 80 132 77 196 244 41 31 117 168 130 162 47 23 127 112 75 230 6 123 247 206 143 6 184 98 109 151 30 110 245 220 182 102 250 151 92 30 17 18 110 4 252 204 226 1 171 177 38 48 166 139 102 158 106 210 216 214 38 84 215 93 251 198 181 74 142 58 156 145 91 230 99 224 128 221 204 52 142 87 161 14 43 29 217 240 62 27 137 119 150 173 136 155 7 94 89 25 220 91 243 122 17 45 146 198 147 69 110 100 87)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 1 255 255 255 254 29 93 82 179 28 165 47 137 71 163 85 147 237 241 100 205 50 79 131 59 144 147 88 70 198 77 177 69 77 249 240 40 220 139 195 107 176 76 183 240 204 236 235 160 26 56 68 9 127 124 53 238 170 129 66 141 176 204 166 51 49 1 183 199 2 119 208 191 120 163 199 182 44 147 127 12 178 202 210 86 95 85 20 246 32 92 235 26 25 61 79 219 69 186 110 108 236 7 130 123 174 11 22 184 49 108 53 57 161 81 20 208 222 109 45 228 7 253 113 23 85 26 112 130 110 173 166)
  :der-encode
  #f
  :tests
  '(#(357
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(0 78 214 146 175 30 209 180 189 92 234 58 168 221 198 243 241 93 138 110 224 1 111 160 232 235 149 133 128 231 66 24 50 236 192 227 135 195 74 175 172 99 128 186 196 25 234 69 196 42 230 66 106 245 3 132 127 34 196 156 47 69 99 56 193 167 0 122 206 173 222 2 172 225 102 139 193 163 54 13 52 225 37 175 222 35 15 83 108 21 77 145 230 200 118 190 225 211 74 224 110 220 187 202 12 124 209 118 70 132 9 19 22 71 64 177 46 46 34 79 227 239 61 236 111 216 74 129 181 129 193 136)
      #t
      ())
    #(358
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(0 224 16 148 4 143 207 122 30 46 198 111 174 223 252 64 244 140 156 147 81 67 37 189 230 180 149 141 128 240 65 62 253 231 238 193 220 109 230 95 150 0 156 6 147 151 229 29 162 235 23 41 239 162 135 175 213 85 43 37 169 228 39 166 216 54 1 72 158 126 18 79 102 148 46 100 45 233 146 230 11 58 134 252 206 87 103 103 113 147 144 195 163 18 252 222 170 86 10 127 187 12 171 179 94 5 166 214 243 73 145 96 253 45 186 18 210 155 97 59 22 222 199 73 76 149 13 101 253 241 31 163)
      #t
      ())
    #(359
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(1 210 150 41 34 19 56 13 225 51 220 102 236 235 139 216 87 165 196 104 175 232 85 192 93 169 219 147 115 115 181 31 144 32 202 17 53 52 21 218 118 187 106 249 151 164 134 210 55 14 49 173 204 10 69 49 149 42 59 89 66 134 120 238 89 67 1 89 121 163 198 9 194 194 9 154 225 178 144 218 61 97 59 36 142 58 16 222 122 215 112 223 252 130 251 51 231 79 195 32 117 51 249 114 133 207 69 87 166 64 126 154 119 94 89 239 234 238 66 100 178 99 73 51 166 186 248 196 6 240 196 169)
      #t
      ())))
(test-signature/testvector
  "ecdsa_webcrypto_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 35 3 129 134 0 4 0 199 200 129 123 242 240 101 42 74 75 81 64 199 115 226 97 8 10 10 17 19 149 133 110 138 51 80 245 235 86 18 189 99 179 103 185 101 233 46 149 56 234 59 121 8 174 241 173 228 182 142 23 249 249 20 132 149 193 103 209 196 221 73 19 73 0 8 191 11 226 151 154 187 129 17 253 13 118 138 220 173 119 65 19 168 34 193 187 96 136 112 83 181 207 140 149 99 231 103 5 163 145 236 225 84 181 223 177 20 178 14 53 29 244 1 75 236 25 250 135 114 8 69 128 28 240 107 127 255 255 255)
  :der-encode
  #f
  :tests
  '(#(360
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(1 239 143 120 92 81 162 90 226 205 147 72 123 92 132 141 74 241 51 33 122 145 245 19 89 201 102 231 83 142 104 116 53 120 18 45 245 131 0 2 249 111 111 173 181 188 68 72 14 59 59 44 128 78 76 81 207 149 208 89 213 100 108 92 239 33 1 186 34 118 204 0 62 135 190 163 124 55 36 229 138 10 184 133 245 109 9 184 181 113 143 103 79 156 112 243 181 236 251 74 209 243 65 123 66 14 196 8 16 224 136 38 239 167 216 173 108 167 198 167 132 3 72 9 127 146 178 222 141 110 8 11)
      #t
      ())
    #(361
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(1 85 151 138 220 75 87 13 137 117 17 245 236 251 101 163 25 71 230 233 137 218 23 222 167 22 98 91 179 250 123 146 184 83 98 62 176 205 156 226 165 226 180 216 193 194 169 14 192 79 231 157 1 37 118 236 114 138 69 197 206 71 198 213 0 192 0 247 159 168 185 78 226 130 163 209 129 88 146 203 241 93 126 189 246 44 176 66 199 107 179 199 16 194 62 50 183 89 146 204 36 157 132 7 33 152 228 237 99 215 36 53 160 125 46 215 111 39 141 115 153 246 26 91 92 153 127 69 105 47 237 34)
      #t
      ())
    #(362
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(1 162 175 41 197 129 132 202 134 30 124 217 49 243 156 234 6 75 25 158 238 86 63 36 28 213 236 246 235 178 173 231 40 241 190 35 207 0 126 190 142 240 196 45 153 249 245 25 15 104 21 68 106 252 48 67 168 32 215 218 242 126 134 184 59 138 1 162 172 209 130 46 181 57 56 61 239 255 135 105 170 216 186 205 80 205 36 202 122 166 103 6 113 65 129 16 23 120 8 195 244 251 230 4 27 156 184 152 53 158 230 30 4 130 74 222 221 98 179 159 229 121 25 7 162 5 134 51 59 211 199 109)
      #t
      ())))
