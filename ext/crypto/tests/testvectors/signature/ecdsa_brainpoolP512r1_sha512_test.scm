(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 103 206 161 190 223 132 203 220 186 105 160 91 178 206 58 45 28 157 145 29 35 108 72 9 41 161 106 214 151 180 90 108 161 39 7 159 232 215 134 134 113 226 142 243 59 223 147 25 226 229 28 132 177 144 172 92 145 181 27 175 10 152 11 165 0 167 231 144 6 25 75 83 120 246 92 190 98 94 242 196 124 100 229 96 64 216 115 185 149 181 177 235 170 74 108 233 113 218 22 67 145 255 97 154 243 188 252 113 197 225 173 39 238 14 133 156 41 67 226 222 142 247 196 61 60 151 110 155)
  :der-encode
  #t
  :tests
  '(#(1
      "signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 68 180 35 4 230 147 121 102 24 208 144 219 203 42 37 81 195 203 120 83 70 17 230 31 217 209 165 192 147 139 91 142 198 237 83 210 210 137 153 234 187 216 231 121 45 22 127 207 88 36 146 64 58 106 15 124 201 76 115 162 143 183 107 113)
      #t
      ())
    #(2
      "valid"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #t
      ())
    #(3
      "length of sequence contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 130 0 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ("BER"))
    #(4
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(5
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 131 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(6
      "uint32 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 1 0 0 0 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(7
      "uint64 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 137 1 0 0 0 0 0 0 0 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(8
      "length of sequence = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 127 255 255 255 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(9
      "length of sequence = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 255 255 255 255 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(10
      "length of sequence = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 255 255 255 255 255 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(11
      "length of sequence = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 136 255 255 255 255 255 255 255 255 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(12
      "incorrect length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 255 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(13
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(14
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 128 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(15
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 128 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(16
      "removing sequence"
      #vu8(49 50 51 52 48 48)
      #vu8()
      #f
      ())
    #(17
      "lonely sequence tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48)
      #f
      ())
    #(18
      "appending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 0 0)
      #f
      ())
    #(19
      "prepending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 0 0 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(20
      "appending unused 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 0 0)
      #f
      ())
    #(21
      "appending null value to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 5 0)
      #f
      ())
    #(22
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 138 73 129 119 48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(23
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 137 37 0 48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(24
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 135 48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 0 4 222 173 190 239)
      #f
      ())
    #(25
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 137 34 69 73 129 119 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(26
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 136 34 68 37 0 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(27
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 140 34 66 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 0 4 222 173 190 239 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(28
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 137 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 34 69 73 129 119 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(29
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 136 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 34 68 37 0 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(30
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 140 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 34 66 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 0 4 222 173 190 239)
      #f
      ())
    #(31
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 141 170 0 187 0 205 0 48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(32
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 139 170 2 170 187 48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(33
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 140 34 72 170 0 187 0 205 0 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(34
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 138 34 70 170 2 170 187 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(35
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 140 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 34 72 170 0 187 0 205 0 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(36
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 138 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 34 70 170 2 170 187 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(37
      "truncated length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129)
      #f
      ())
    #(38
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 0 0)
      #f
      ())
    #(39
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 136 34 128 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 0 0 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(40
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 136 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 34 128 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 0 0)
      #f
      ())
    #(41
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 49 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 0 0)
      #f
      ())
    #(42
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 136 34 128 3 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 0 0 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(43
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 136 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 34 128 3 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 0 0)
      #f
      ())
    #(44
      "Replacing sequence with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(5 0)
      #f
      ())
    #(45
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(46 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(46
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(47 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(47
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(49 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(48
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(50 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(49
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(255 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(50
      "dropping value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 0)
      #f
      ())
    #(51
      "using composition for sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 137 48 1 2 48 129 131 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(52
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 131 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148)
      #f
      ())
    #(53
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 131 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(54
      "indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 0 0)
      #f
      ("BER"))
    #(55
      "indefinite length with truncated delimiter"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 0)
      #f
      ())
    #(56
      "indefinite length with additional element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 5 0 0 0)
      #f
      ())
    #(57
      "indefinite length with truncated element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 6 8 17 34 0 0)
      #f
      ())
    #(58
      "indefinite length with garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 0 0 254 2 190 239)
      #f
      ())
    #(59
      "indefinite length with nonempty EOC"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 0 2 190 239)
      #f
      ())
    #(60
      "prepend empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 48 0 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(61
      "append empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 48 0)
      #f
      ())
    #(62
      "append garbage with high tag number"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 135 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 191 127 0)
      #f
      ())
    #(63
      "sequence of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 135 48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(64
      "truncated sequence: removed last 1 elements"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199)
      #f
      ())
    #(65
      "repeating element in sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 198 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(66
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 129 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ("BER"))
    #(67
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 129 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ("BER"))
    #(68
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 130 0 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ("BER"))
    #(69
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 130 0 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ("BER"))
    #(70
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 65 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(71
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 63 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(72
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 65 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(73
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 63 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(74
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 137 2 133 1 0 0 0 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(75
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 137 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 133 1 0 0 0 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(76
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 141 2 137 1 0 0 0 0 0 0 0 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(77
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 141 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 137 1 0 0 0 0 0 0 0 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(78
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 136 2 132 127 255 255 255 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(79
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 136 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 132 127 255 255 255 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(80
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 136 2 132 255 255 255 255 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(81
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 136 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 132 255 255 255 255 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(82
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 137 2 133 255 255 255 255 255 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(83
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 137 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 133 255 255 255 255 255 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(84
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 140 2 136 255 255 255 255 255 255 255 255 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(85
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 140 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 136 255 255 255 255 255 255 255 255 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(86
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 255 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(87
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 255 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(88
      "removing integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(89
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 2 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(90
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2)
      #f
      ())
    #(91
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 66 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 0 0 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(92
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 66 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 0 0)
      #f
      ())
    #(93
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 66 0 0 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ("BER"))
    #(94
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 66 0 0 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ("BER"))
    #(95
      "appending unused 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 0 0 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(96
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 66 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 5 0 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(97
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 66 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248 5 0)
      #f
      ())
    #(98
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 129 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(99
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 129)
      #f
      ())
    #(100
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 5 0 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(101
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 5 0)
      #f
      ())
    #(102
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 0 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(103
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 1 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(104
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 3 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(105
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 4 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(106
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 255 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(107
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 0 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(108
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 1 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(109
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 3 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(110
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 4 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(111
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 255 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(112
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 0 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(113
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 0)
      #f
      ())
    #(114
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 136 34 68 2 1 11 2 63 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(115
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 136 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 34 68 2 1 102 2 63 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(116
      "modify first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 9 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(117
      "modify first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 100 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(118
      "modify last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 71 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(119
      "modify last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 120)
      #f
      ())
    #(120
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 131 2 63 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(121
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 131 2 63 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(122
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 131 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 63 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148)
      #f
      ())
    #(123
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 131 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 63 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(124
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 65 255 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(125
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 65 255 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(126
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 9 1 128 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(127
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 9 1 128)
      #f
      ())
    #(128
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 1 0 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(129
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 1 0)
      #f
      ())
    #(130
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 65 0 182 175 246 237 35 182 48 142 10 206 132 14 117 87 208 54 101 73 218 68 194 49 39 251 226 211 246 119 28 152 115 117 34 60 122 196 148 239 84 253 113 236 227 84 109 219 253 195 189 196 189 10 22 89 68 100 35 2 127 14 1 175 250 48 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(131
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 65 255 96 244 187 123 107 226 167 119 139 36 182 178 13 195 216 38 206 232 190 221 90 157 131 222 54 12 188 226 60 50 98 148 119 191 194 65 251 157 8 202 238 224 33 33 110 131 221 53 130 97 22 8 5 157 142 168 183 243 82 8 200 93 249 94 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(132
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 244 45 166 203 184 51 147 253 53 6 98 159 190 114 43 209 101 230 179 110 241 152 170 18 243 143 166 83 83 154 148 251 51 1 225 124 183 185 209 27 207 153 125 197 17 208 18 131 95 237 22 118 242 4 150 121 146 133 23 116 154 249 6 57 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(133
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 65 0 159 11 68 132 148 29 88 136 116 219 73 77 242 60 39 217 49 23 65 34 165 98 124 33 201 243 67 29 195 205 157 107 136 64 61 190 4 98 247 53 17 31 222 222 145 124 34 202 125 158 233 247 250 98 113 87 72 12 173 247 55 162 6 162 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(134
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 65 255 73 80 9 18 220 73 207 113 245 49 123 241 138 168 47 201 154 182 37 187 61 206 216 4 29 44 9 136 227 103 140 138 221 195 133 59 107 16 171 2 142 19 28 171 146 36 2 60 66 59 66 245 233 166 187 155 220 253 128 241 254 80 5 208 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(135
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 65 1 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(136
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 65 0 244 45 166 203 184 51 147 253 53 6 98 159 190 114 43 209 101 230 179 110 241 152 170 18 243 143 166 83 83 154 148 251 51 1 225 124 183 185 209 27 207 153 125 197 17 208 18 131 95 237 22 118 242 4 150 121 146 133 23 116 154 249 6 57 2 64 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(137
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 65 1 17 7 24 108 209 64 15 176 102 217 60 128 156 105 210 189 210 149 163 20 33 129 189 253 210 245 147 212 76 218 181 81 227 143 100 175 198 200 178 71 199 51 218 185 210 65 160 190 227 63 20 193 214 81 166 62 161 194 185 98 169 154 149 97)
      #f
      ())
    #(138
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 187 75 220 251 25 108 134 153 231 47 111 36 52 213 218 174 60 52 135 172 185 238 25 224 38 46 90 63 108 116 164 113 57 18 172 45 45 118 102 21 68 39 24 134 210 233 128 48 167 219 109 191 197 149 240 131 54 179 140 93 112 72 148 143)
      #f
      ())
    #(139
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 64 153 214 133 76 10 169 180 218 216 251 170 45 151 96 41 73 248 154 234 159 146 72 20 17 3 110 8 246 35 88 83 30 113 174 247 145 133 224 115 209 122 82 134 95 173 106 111 136 58 114 190 191 50 12 52 159 19 196 221 31 243 14 107 8)
      #f
      ())
    #(140
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 65 254 238 248 231 147 46 191 240 79 153 38 195 127 99 150 45 66 45 106 92 235 222 126 66 2 45 10 108 43 179 37 74 174 28 112 155 80 57 55 77 184 56 204 37 70 45 190 95 65 28 192 235 62 41 174 89 193 94 61 70 157 86 101 106 159)
      #f
      ())
    #(141
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 65 1 102 41 122 179 245 86 75 37 39 4 85 210 104 159 214 182 7 101 21 96 109 183 235 238 252 145 247 9 220 167 172 225 142 81 8 110 122 31 140 46 133 173 121 160 82 149 144 119 197 141 65 64 205 243 203 96 236 59 34 224 12 241 148 248)
      #f
      ())
    #(142
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 64 11 210 89 52 71 204 108 2 202 249 157 96 65 141 212 46 154 25 76 145 14 103 85 237 12 112 89 172 172 101 107 4 204 254 30 131 72 70 46 228 48 102 130 58 238 47 237 124 160 18 233 137 13 251 105 134 109 122 232 139 101 6 249 199 2 65 0 153 214 133 76 10 169 180 218 216 251 170 45 151 96 41 73 248 154 234 159 146 72 20 17 3 110 8 246 35 88 83 30 113 174 247 145 133 224 115 209 122 82 134 95 173 106 111 136 58 114 190 191 50 12 52 159 19 196 221 31 243 14 107 8)
      #f
      ())
    #(143
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 0)
      #f
      ("EdgeCase"))
    #(144
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 1)
      #f
      ("EdgeCase"))
    #(145
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 255)
      #f
      ("EdgeCase"))
    #(146
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 1 0 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 105)
      #f
      ("EdgeCase"))
    #(147
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 1 0 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 104)
      #f
      ("EdgeCase"))
    #(148
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 1 0 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 106)
      #f
      ("EdgeCase"))
    #(149
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 1 0 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 243)
      #f
      ("EdgeCase"))
    #(150
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 1 0 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 244)
      #f
      ("EdgeCase"))
    #(151
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 0 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(152
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 9 1 66)
      #f
      ("EdgeCase"))
    #(153
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 0)
      #f
      ("EdgeCase"))
    #(154
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 1)
      #f
      ("EdgeCase"))
    #(155
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 255)
      #f
      ("EdgeCase"))
    #(156
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 1 1 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 105)
      #f
      ("EdgeCase"))
    #(157
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 1 1 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 104)
      #f
      ("EdgeCase"))
    #(158
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 1 1 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 106)
      #f
      ("EdgeCase"))
    #(159
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 1 1 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 243)
      #f
      ("EdgeCase"))
    #(160
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 1 1 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 244)
      #f
      ("EdgeCase"))
    #(161
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(162
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 9 1 66)
      #f
      ("EdgeCase"))
    #(163
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 0)
      #f
      ("EdgeCase"))
    #(164
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 1)
      #f
      ("EdgeCase"))
    #(165
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 255)
      #f
      ("EdgeCase"))
    #(166
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 1 255 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 105)
      #f
      ("EdgeCase"))
    #(167
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 1 255 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 104)
      #f
      ("EdgeCase"))
    #(168
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 1 255 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 106)
      #f
      ("EdgeCase"))
    #(169
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 1 255 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 243)
      #f
      ("EdgeCase"))
    #(170
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 1 255 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 244)
      #f
      ("EdgeCase"))
    #(171
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 255 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(172
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 9 1 66)
      #f
      ("EdgeCase"))
    #(173
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 105 2 1 0)
      #f
      ("EdgeCase"))
    #(174
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 105 2 1 1)
      #f
      ("EdgeCase"))
    #(175
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 105 2 1 255)
      #f
      ("EdgeCase"))
    #(176
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 105 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 105)
      #f
      ("EdgeCase"))
    #(177
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 105 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 104)
      #f
      ("EdgeCase"))
    #(178
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 105 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 106)
      #f
      ("EdgeCase"))
    #(179
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 105 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 243)
      #f
      ("EdgeCase"))
    #(180
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 105 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 244)
      #f
      ("EdgeCase"))
    #(181
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 105 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(182
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 105 9 1 66)
      #f
      ("EdgeCase"))
    #(183
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 104 2 1 0)
      #f
      ("EdgeCase"))
    #(184
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 104 2 1 1)
      #f
      ("EdgeCase"))
    #(185
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 104 2 1 255)
      #f
      ("EdgeCase"))
    #(186
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 104 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 105)
      #f
      ("EdgeCase"))
    #(187
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 104 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 104)
      #f
      ("EdgeCase"))
    #(188
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 104 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 106)
      #f
      ("EdgeCase"))
    #(189
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 104 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 243)
      #f
      ("EdgeCase"))
    #(190
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 104 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 244)
      #f
      ("EdgeCase"))
    #(191
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 104 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(192
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 104 9 1 66)
      #f
      ("EdgeCase"))
    #(193
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 106 2 1 0)
      #f
      ("EdgeCase"))
    #(194
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 106 2 1 1)
      #f
      ("EdgeCase"))
    #(195
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 106 2 1 255)
      #f
      ("EdgeCase"))
    #(196
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 106 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 105)
      #f
      ("EdgeCase"))
    #(197
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 106 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 104)
      #f
      ("EdgeCase"))
    #(198
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 106 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 106)
      #f
      ("EdgeCase"))
    #(199
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 106 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 243)
      #f
      ("EdgeCase"))
    #(200
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 106 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 244)
      #f
      ("EdgeCase"))
    #(201
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 106 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(202
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 106 9 1 66)
      #f
      ("EdgeCase"))
    #(203
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 243 2 1 0)
      #f
      ("EdgeCase"))
    #(204
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 243 2 1 1)
      #f
      ("EdgeCase"))
    #(205
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 243 2 1 255)
      #f
      ("EdgeCase"))
    #(206
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 243 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 105)
      #f
      ("EdgeCase"))
    #(207
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 243 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 104)
      #f
      ("EdgeCase"))
    #(208
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 243 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 106)
      #f
      ("EdgeCase"))
    #(209
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 243 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 243)
      #f
      ("EdgeCase"))
    #(210
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 243 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 244)
      #f
      ("EdgeCase"))
    #(211
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 243 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(212
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 243 9 1 66)
      #f
      ("EdgeCase"))
    #(213
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 244 2 1 0)
      #f
      ("EdgeCase"))
    #(214
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 244 2 1 1)
      #f
      ("EdgeCase"))
    #(215
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 244 2 1 255)
      #f
      ("EdgeCase"))
    #(216
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 244 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 105)
      #f
      ("EdgeCase"))
    #(217
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 244 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 104)
      #f
      ("EdgeCase"))
    #(218
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 244 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 106)
      #f
      ("EdgeCase"))
    #(219
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 244 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 243)
      #f
      ("EdgeCase"))
    #(220
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 244 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 244)
      #f
      ("EdgeCase"))
    #(221
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 244 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(222
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 244 9 1 66)
      #f
      ("EdgeCase"))
    #(223
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 12 1 48)
      #f
      ())
    #(224
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 5 2 1 1 12 0)
      #f
      ())
    #(225
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 9 12 2 37 115 12 3 115 37 115)
      #f
      ())
    #(226
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 48 3 2 1 0)
      #f
      ())
    #(227
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 3 2 1 1)
      #f
      ())
    #(228
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 1 1 0)
      #f
      ())
    #(229
      "Edge case for Shamir multiplication"
      #vu8(49 49 49 56)
      #vu8(48 129 132 2 64 125 161 30 91 75 183 147 33 53 205 145 172 206 248 137 44 66 134 101 74 123 231 201 211 132 182 0 217 121 0 238 18 162 63 241 249 174 154 79 231 76 202 24 93 13 201 245 157 194 75 224 61 2 35 216 254 181 91 109 222 23 119 71 95 2 64 6 134 188 49 58 165 193 146 58 176 84 51 49 57 129 144 202 95 34 163 169 126 150 58 19 206 223 104 141 161 223 228 163 72 148 84 151 178 28 1 200 161 124 35 37 43 62 142 172 31 154 146 214 50 14 170 50 75 68 128 124 50 97 117)
      #t
      ())
    #(230
      "special case hash"
      #vu8(51 57 52 57 49 57 52 49 55 50)
      #vu8(48 129 132 2 64 109 135 190 5 149 140 165 199 12 93 41 98 145 96 80 33 64 45 235 161 119 47 49 187 186 9 220 101 168 55 176 154 120 211 50 182 22 42 50 1 202 26 48 212 22 45 143 24 107 43 255 202 83 2 51 58 202 20 137 77 95 9 63 231 2 64 16 184 179 201 11 70 9 204 189 221 237 39 93 66 73 133 125 136 39 73 228 184 54 208 23 219 170 224 94 58 25 207 120 16 99 35 41 160 37 128 218 228 65 54 202 220 240 108 165 125 254 86 14 28 17 34 226 236 0 255 4 215 136 30)
      #t
      ())
    #(231
      "special case hash"
      #vu8(53 51 54 55 54 52 49 56 55 55)
      #vu8(48 129 133 2 64 35 233 186 195 241 77 86 103 155 218 11 178 244 241 158 236 175 109 213 3 100 156 129 20 146 39 136 15 20 55 109 2 36 25 61 43 27 218 75 8 248 126 70 104 125 217 20 18 120 163 153 240 163 205 13 0 47 35 109 14 125 115 130 183 2 65 0 156 36 251 33 40 214 46 93 223 89 187 134 179 166 183 135 177 12 199 88 101 229 174 171 65 168 79 135 138 179 169 71 162 246 180 176 135 26 244 148 193 48 245 139 179 149 124 224 61 97 55 63 63 181 203 233 126 190 220 27 58 202 23 77)
      #t
      ())
    #(232
      "special case hash"
      #vu8(53 54 55 49 52 56 49 48 57 53)
      #vu8(48 129 132 2 64 45 7 216 187 98 119 183 143 164 72 213 46 62 29 144 28 203 221 104 41 48 252 169 216 105 89 166 59 90 121 42 138 168 47 249 189 125 163 228 5 127 64 42 118 232 40 54 170 61 163 75 111 246 187 139 33 137 172 36 43 174 162 176 238 2 64 88 235 239 80 234 48 209 90 194 111 160 62 43 6 92 123 165 15 51 26 92 242 64 23 95 243 166 161 216 219 64 14 21 151 206 103 94 179 47 38 155 67 103 1 26 207 50 118 88 6 2 238 215 194 147 132 57 119 46 27 225 185 56 190)
      #t
      ())
    #(233
      "special case hash"
      #vu8(49 49 50 48 55 49 55 50 57 48 57)
      #vu8(48 129 132 2 64 13 103 67 167 188 144 74 33 215 49 32 95 202 167 252 208 1 142 173 68 110 204 155 175 196 83 43 208 206 107 250 105 96 21 159 89 181 235 55 199 80 212 35 196 251 207 178 10 113 142 86 85 213 23 183 79 255 137 134 201 99 143 79 41 2 64 3 153 215 148 31 229 243 243 8 175 184 168 164 255 143 43 236 27 254 107 145 12 131 153 216 49 235 98 33 104 72 117 246 127 230 162 87 108 134 254 173 243 205 42 241 71 41 120 48 17 54 17 252 255 250 205 138 140 140 82 207 149 127 248)
      #t
      ())
    #(234
      "special case hash"
      #vu8(49 49 50 57 56 48 51 52 50 51 54)
      #vu8(48 129 134 2 65 0 170 188 75 220 196 76 234 207 224 58 150 167 147 155 240 140 64 125 48 13 228 70 81 79 201 100 222 77 171 242 158 189 160 96 140 23 9 199 34 68 248 216 136 203 14 85 109 117 130 135 86 209 28 17 190 119 135 96 59 255 198 113 138 197 2 65 0 129 235 132 200 116 58 214 171 120 160 33 166 245 91 58 224 132 95 24 48 126 161 142 119 30 60 78 17 179 18 235 142 83 0 2 201 92 219 81 120 85 177 126 169 114 110 201 96 47 52 126 120 159 171 66 5 94 104 138 85 142 63 201 143)
      #t
      ())
    #(235
      "special case hash"
      #vu8(57 56 55 54 48 50 57 54 56 51)
      #vu8(48 129 132 2 64 78 127 117 104 29 215 203 46 234 2 46 91 134 50 155 37 48 124 33 184 40 199 65 105 22 207 31 89 56 7 21 25 203 125 166 104 236 107 194 25 231 45 53 135 50 241 199 122 191 204 97 6 90 163 35 148 25 8 159 171 239 227 150 223 2 64 79 158 193 150 167 28 92 142 216 141 127 225 208 3 143 55 42 198 11 250 24 12 238 36 152 170 156 2 72 22 111 23 56 35 104 250 43 59 140 226 157 80 215 162 30 145 168 60 168 141 181 212 239 208 115 248 33 168 197 170 77 38 103 91)
      #t
      ())
    #(236
      "special case hash"
      #vu8(50 48 50 48 52 50 57 54 53 49 57)
      #vu8(48 129 134 2 65 0 160 225 194 187 51 32 2 84 190 171 94 115 92 26 44 89 15 193 24 84 3 1 173 215 229 73 23 1 210 44 113 41 58 223 237 223 67 8 148 15 216 160 102 34 44 207 179 128 46 175 255 224 59 33 86 200 231 156 50 96 209 128 179 184 2 65 0 157 132 130 18 127 34 236 161 11 39 146 116 125 96 22 186 113 153 101 96 62 232 231 31 42 57 80 10 47 33 29 203 45 165 130 213 219 208 198 164 7 21 94 27 1 8 91 117 156 128 151 28 241 133 253 10 38 227 136 146 99 167 242 192)
      #t
      ())
    #(237
      "special case hash"
      #vu8(49 52 53 49 54 54 57 49 56 48)
      #vu8(48 129 132 2 64 46 233 202 84 226 223 121 214 224 111 19 1 137 250 202 128 28 203 8 28 67 71 45 79 136 138 237 137 45 248 120 209 44 161 76 142 128 15 183 167 92 34 144 160 40 251 125 18 147 100 153 195 1 11 197 199 192 123 47 115 137 36 118 110 2 64 85 140 2 188 209 50 144 255 52 224 57 161 153 56 67 133 164 79 151 239 154 125 205 170 15 172 166 99 87 236 123 156 27 64 234 122 53 41 244 187 121 111 189 218 223 190 100 211 230 171 252 84 194 148 111 91 31 84 143 160 135 127 58 230)
      #t
      ())
    #(238
      "special case hash"
      #vu8(49 48 57 51 54 56 53 57 53 49)
      #vu8(48 129 132 2 64 84 244 95 11 195 10 136 154 79 174 126 170 4 126 160 44 160 185 227 135 214 54 120 1 248 188 206 194 236 124 15 248 157 102 3 215 15 124 142 5 94 89 250 105 144 91 24 95 170 180 55 119 157 98 196 210 238 244 177 42 144 194 10 180 2 64 67 194 202 50 5 167 248 182 31 100 102 29 15 231 70 189 35 253 15 38 73 153 49 10 86 179 152 4 138 212 111 186 184 165 227 179 226 225 108 75 47 3 241 1 87 62 47 101 147 182 74 204 243 25 220 158 46 46 132 123 6 252 221 49)
      #t
      ())
    #(239
      "special case hash"
      #vu8(54 50 49 57 53 54 48 50 48 49)
      #vu8(48 129 134 2 65 0 138 3 15 212 186 72 211 245 153 128 16 199 100 232 105 33 26 76 227 49 34 167 253 199 184 223 38 118 59 225 128 242 94 6 141 182 201 40 32 190 100 27 138 253 23 138 128 51 96 189 25 122 134 204 142 247 108 160 8 68 62 196 173 99 2 65 0 128 55 195 162 193 202 194 110 111 248 152 148 160 123 62 37 245 19 104 15 194 228 110 214 147 223 150 208 238 133 185 64 12 214 45 114 63 201 138 220 162 166 121 250 254 201 219 95 224 120 242 95 152 4 224 208 206 22 209 164 50 209 148 255)
      #t
      ())
    #(240
      "special case hash"
      #vu8(53 54 56 50 52 55 52 51 48 51)
      #vu8(48 129 132 2 64 59 189 25 151 128 43 95 197 212 242 184 123 108 221 185 117 41 202 193 186 41 221 41 207 255 115 21 183 135 17 109 157 61 171 221 209 180 65 73 149 194 38 153 6 167 188 25 89 160 109 229 188 212 213 99 4 46 23 65 175 0 156 186 159 2 64 81 179 212 53 239 231 149 115 172 168 239 211 204 28 138 34 126 205 148 235 64 121 103 84 89 182 244 241 104 182 17 28 7 198 51 230 78 96 212 58 95 59 13 11 47 67 113 246 140 124 222 182 189 143 187 243 190 210 239 250 37 66 176 174)
      #t
      ())
    #(241
      "special case hash"
      #vu8(51 55 51 54 53 51 49 55 56 54)
      #vu8(48 129 133 2 65 0 130 147 165 69 151 68 48 179 215 247 227 20 171 14 244 135 49 113 90 95 121 194 243 75 148 241 32 252 1 112 57 113 48 41 136 3 119 139 83 47 241 0 32 219 6 13 25 217 49 215 72 86 251 243 48 167 91 40 65 109 69 175 84 182 2 64 43 141 180 131 8 192 177 246 33 226 44 125 193 231 98 176 133 8 190 26 142 180 53 95 111 156 203 132 32 133 161 246 100 215 182 139 26 36 189 136 241 123 22 209 65 176 193 195 165 215 241 167 239 77 83 59 144 13 24 83 188 90 111 110)
      #t
      ())
    #(242
      "special case hash"
      #vu8(52 55 57 53 57 48 51 55 57 50)
      #vu8(48 129 132 2 64 82 89 64 194 23 152 107 126 240 225 140 129 254 16 6 61 101 219 225 128 157 114 108 138 26 160 182 23 243 52 137 30 148 197 223 20 247 185 68 161 99 153 80 164 62 152 235 111 28 52 145 33 209 7 249 28 167 20 43 127 246 46 199 118 2 64 107 53 103 228 150 95 45 118 111 208 114 128 243 31 140 119 146 18 101 240 14 113 156 124 0 85 229 28 133 225 243 212 106 201 57 103 129 97 48 166 83 44 144 37 67 165 48 226 123 65 151 207 209 71 140 144 206 31 199 65 36 99 107 115)
      #t
      ())
    #(243
      "special case hash"
      #vu8(57 51 57 57 54 49 49 48 48 55)
      #vu8(48 129 132 2 64 32 92 174 247 139 127 3 0 38 97 8 221 244 226 139 110 193 162 25 139 133 127 146 178 223 88 166 217 104 211 219 62 246 70 159 122 252 32 198 50 33 154 196 49 57 234 8 71 110 22 88 173 20 92 232 227 151 60 103 75 168 23 62 252 2 64 74 122 83 32 229 226 73 195 255 84 207 144 59 172 232 111 57 182 32 172 193 144 7 65 60 209 58 45 240 161 245 152 78 122 77 24 205 141 18 151 86 2 149 212 24 58 241 133 123 216 230 227 56 170 55 153 202 21 80 99 94 74 224 6)
      #t
      ())
    #(244
      "special case hash"
      #vu8(49 48 56 55 52 57 49 49 56 53)
      #vu8(48 129 133 2 65 0 137 246 226 243 66 180 188 47 0 79 220 29 14 36 167 209 212 203 107 0 50 184 250 47 80 227 249 15 56 128 145 143 49 170 253 80 34 255 116 187 225 204 100 254 186 187 59 243 58 142 113 79 89 125 219 11 232 6 125 138 9 100 223 225 2 64 58 214 125 213 83 100 194 157 74 91 68 108 100 111 48 188 94 100 138 136 154 199 177 190 228 155 113 145 140 50 85 77 13 149 213 165 126 245 231 244 178 103 4 47 163 2 95 19 35 189 125 189 29 96 196 78 50 93 79 120 198 90 74 223)
      #t
      ())
    #(245
      "special case hash"
      #vu8(51 50 51 54 54 55 56 53 48 48)
      #vu8(48 129 132 2 64 47 48 82 85 12 89 94 216 146 10 121 148 180 173 183 139 143 117 2 252 6 106 196 122 180 255 190 1 13 74 94 62 84 84 82 121 167 71 210 156 97 199 210 133 107 142 71 208 4 14 7 19 189 229 14 66 224 56 223 213 175 97 232 145 2 64 84 248 197 136 147 241 159 188 240 16 210 39 1 123 136 164 156 182 253 30 230 171 136 61 33 203 88 252 8 105 195 126 215 60 115 18 198 127 90 193 155 245 191 10 190 75 200 54 238 53 178 162 200 5 195 149 60 72 231 154 184 102 90 160)
      #t
      ())
    #(246
      "special case hash"
      #vu8(49 52 52 56 57 57 55 55 48 51)
      #vu8(48 129 133 2 65 0 142 54 105 85 255 178 167 251 200 54 68 20 146 247 76 174 69 82 251 13 36 150 207 231 216 196 75 148 32 41 9 71 226 155 248 168 130 101 226 198 207 195 125 41 210 187 189 61 16 81 62 8 149 231 53 81 226 215 250 128 208 105 113 6 2 64 99 17 82 129 82 188 246 18 23 51 134 123 97 252 82 62 127 1 189 21 0 153 132 234 48 177 126 193 91 130 64 193 63 26 209 55 223 55 222 74 50 246 227 185 59 193 144 149 157 225 122 27 163 254 113 176 62 151 84 28 144 168 73 57)
      #t
      ())
    #(247
      "special case hash"
      #vu8(53 55 49 52 54 51 50 56 48 55)
      #vu8(48 129 133 2 64 56 164 159 95 136 249 158 100 7 79 2 129 236 250 185 184 191 2 9 45 188 17 184 112 65 191 181 97 180 179 207 41 148 90 181 217 220 69 241 237 244 22 6 239 109 34 4 186 219 103 97 21 132 184 146 153 61 226 126 143 100 2 205 154 2 65 0 151 226 218 117 138 142 55 122 125 104 47 80 176 227 15 105 90 111 108 83 230 113 66 67 170 157 83 59 74 155 152 119 213 213 10 243 231 164 241 254 96 119 199 234 112 75 145 140 89 149 0 175 184 77 11 160 22 130 138 162 230 253 19 47)
      #t
      ())
    #(248
      "special case hash"
      #vu8(50 50 54 52 56 55 52 57 50)
      #vu8(48 129 133 2 64 109 226 157 11 80 149 10 100 9 210 157 37 131 230 194 215 115 137 116 14 208 190 78 187 212 87 30 130 181 48 60 162 112 135 206 19 39 131 46 153 145 203 247 51 8 161 186 237 249 125 31 58 249 237 243 94 39 193 90 12 192 3 214 170 2 65 0 154 25 243 63 243 168 142 211 3 255 249 5 53 170 22 5 187 220 0 107 128 58 128 78 177 223 9 43 90 235 157 177 190 12 185 182 118 105 69 3 227 109 44 211 134 141 176 195 72 150 201 76 221 171 213 78 201 95 254 182 152 138 127 195)
      #t
      ())
    #(249
      "special case hash"
      #vu8(53 51 53 51 52 52 57 52 55 57)
      #vu8(48 129 133 2 64 23 15 1 233 43 105 203 240 211 217 228 165 116 1 99 215 235 175 167 187 141 56 53 3 159 20 13 7 94 149 13 213 125 253 241 183 184 209 103 133 72 68 100 16 70 140 242 137 142 19 12 116 94 7 221 255 146 28 85 66 25 28 174 250 2 65 0 167 181 217 40 190 66 121 154 85 176 94 21 117 138 26 255 2 119 90 249 237 194 20 33 76 168 159 115 173 18 1 125 103 46 89 205 106 165 79 24 242 112 224 26 180 219 187 47 116 140 135 203 194 172 144 129 223 46 118 82 77 161 119 17)
      #t
      ())
    #(250
      "special case hash"
      #vu8(52 55 56 55 51 48 51 56 56 48)
      #vu8(48 129 133 2 65 0 139 192 137 188 205 216 132 60 6 213 167 158 56 108 81 58 245 25 49 102 13 184 184 136 188 229 181 189 219 190 76 115 149 106 154 203 195 46 28 234 165 5 63 195 147 8 221 100 81 230 228 3 202 87 67 16 102 112 147 198 215 137 185 128 2 64 65 124 150 109 195 109 186 92 19 217 103 1 148 108 134 160 104 56 5 105 47 36 192 18 177 167 213 113 64 94 253 133 10 153 112 101 177 157 53 98 27 180 179 156 118 73 51 132 159 247 216 184 247 223 159 197 4 139 89 142 193 250 238 176)
      #t
      ())
    #(251
      "special case hash"
      #vu8(50 50 51 50 49 57 53 56 50 51)
      #vu8(48 129 134 2 65 0 143 171 201 57 231 166 193 58 198 156 221 71 249 150 36 139 254 190 63 142 128 222 175 156 53 229 165 205 202 8 111 159 129 102 26 26 65 246 158 53 149 176 85 165 20 213 126 251 46 175 92 21 37 220 207 33 115 109 43 190 137 165 102 140 2 65 0 168 249 177 113 179 211 56 152 207 126 172 227 93 173 108 63 219 153 143 196 9 253 183 8 51 143 32 201 228 184 41 123 55 84 133 165 232 126 174 111 230 139 17 57 177 251 74 59 250 37 15 71 4 95 18 165 250 233 69 162 171 231 12 80)
      #t
      ())
    #(252
      "special case hash"
      #vu8(49 48 55 51 57 51 57 49 57 49 55)
      #vu8(48 129 132 2 64 38 244 5 201 207 90 251 41 227 246 13 230 114 226 80 22 211 150 102 246 179 74 245 75 116 86 45 76 169 224 61 216 126 43 240 32 24 158 93 47 174 165 191 186 226 26 222 206 159 33 11 203 2 167 85 141 173 27 115 215 139 5 50 248 2 64 43 75 12 53 5 123 149 36 232 102 98 94 125 248 32 225 92 134 194 239 220 28 214 196 195 205 78 110 255 93 87 88 189 127 149 184 247 126 16 22 63 246 91 56 14 255 151 12 170 167 237 59 208 161 33 211 187 255 59 110 122 38 27 117)
      #t
      ())
    #(253
      "special case hash"
      #vu8(49 56 56 49 48 50 55 51 49 53)
      #vu8(48 129 133 2 64 54 197 196 114 13 16 164 85 244 149 42 149 135 44 198 158 92 72 233 104 154 110 166 227 226 130 201 203 165 139 1 250 60 246 76 156 153 166 0 61 66 72 149 185 150 226 96 114 171 110 118 178 157 28 241 218 188 43 39 104 2 53 138 214 2 65 0 129 169 230 183 159 128 85 226 189 228 54 94 172 21 61 244 0 61 72 123 88 154 211 48 109 74 73 56 125 36 74 188 218 160 156 27 99 240 135 123 21 70 143 227 225 77 207 76 182 52 0 169 159 174 125 206 95 233 70 84 142 100 171 208)
      #t
      ())
    #(254
      "special case hash"
      #vu8(54 48 54 49 54 57 51 57 48 55)
      #vu8(48 129 132 2 64 110 104 70 17 50 124 252 217 212 14 82 82 171 211 212 143 183 53 136 89 112 233 179 186 63 85 161 11 56 120 152 92 84 143 12 82 68 97 150 118 160 229 196 75 76 155 28 204 26 32 172 206 66 229 13 77 26 238 203 74 166 216 122 229 2 64 119 73 253 34 130 147 174 82 126 61 48 222 143 111 174 153 21 30 56 50 154 16 148 201 43 52 114 9 164 247 182 148 116 172 144 242 29 86 198 37 241 199 106 185 27 76 61 18 162 191 75 162 130 108 240 10 223 186 117 54 142 245 12 36)
      #t
      ())
    #(255
      "special case hash"
      #vu8(56 56 57 53 50 50 55 48 57 52)
      #vu8(48 129 134 2 65 0 136 127 229 51 148 84 95 16 122 39 134 125 240 47 188 31 89 134 88 90 66 181 33 149 36 58 15 183 209 231 0 188 171 237 48 28 175 243 173 140 42 242 52 151 178 172 2 127 193 134 184 170 244 230 81 43 245 190 165 163 87 173 131 250 2 65 0 169 35 163 180 175 227 14 174 73 176 24 118 109 162 145 60 102 71 215 56 65 120 246 86 212 13 1 15 225 20 125 120 110 229 9 50 40 108 129 62 164 14 92 17 85 95 107 141 138 111 130 117 20 92 185 76 192 65 241 205 252 223 221 193)
      #t
      ())
    #(256
      "special case hash"
      #vu8(49 53 56 48 50 51 52 48 57 52)
      #vu8(48 129 133 2 64 104 217 251 24 26 132 80 174 55 125 199 80 243 191 191 130 203 195 147 71 207 93 37 38 188 182 195 246 52 58 116 81 6 92 180 167 178 192 237 61 104 206 50 13 154 156 53 201 102 192 91 191 69 177 172 210 207 234 179 59 123 191 23 109 2 65 0 133 56 70 158 99 25 96 245 225 63 106 60 219 213 207 110 137 61 11 21 79 67 3 43 27 220 219 226 197 255 83 56 207 245 34 58 31 14 174 124 163 237 57 35 34 25 200 72 250 117 176 170 24 227 24 192 106 190 71 71 48 226 110 219)
      #t
      ())
    #(257
      "special case hash"
      #vu8(51 57 54 53 57 57 49 53 49 50)
      #vu8(48 129 133 2 64 13 13 30 178 18 94 175 170 164 125 46 48 224 101 11 199 229 201 159 79 181 190 20 115 112 141 25 169 145 244 207 209 254 49 156 167 62 209 168 181 157 76 0 178 46 224 205 169 187 47 0 231 143 19 188 191 55 46 252 10 0 61 45 30 2 65 0 135 142 113 194 245 213 58 192 123 46 161 52 145 16 255 172 109 253 250 33 82 211 185 251 102 47 111 158 244 231 96 223 171 223 129 237 105 14 133 216 13 179 33 52 129 218 190 246 218 225 75 32 194 95 111 86 163 96 236 151 98 17 75 218)
      #t
      ())
    #(258
      "special case hash"
      #vu8(50 50 56 56 55 51 50 49 57 56)
      #vu8(48 129 132 2 64 28 117 207 204 161 22 97 188 145 40 155 37 153 10 44 131 104 105 162 251 91 182 26 85 48 207 36 137 24 219 69 136 50 115 216 217 210 74 73 45 204 196 41 72 14 185 216 67 84 77 251 139 249 110 167 95 6 228 202 238 145 252 60 94 2 64 69 122 152 246 135 11 77 19 31 159 118 146 41 203 233 62 151 97 67 44 244 226 42 224 244 179 92 85 18 55 112 51 103 132 6 11 116 124 52 188 211 186 211 248 151 7 24 250 136 119 123 43 86 93 163 243 36 152 40 106 208 1 83 223)
      #t
      ())
    #(259
      "special case hash"
      #vu8(50 50 51 48 56 56 55 51 49 57)
      #vu8(48 129 134 2 65 0 150 188 151 135 204 109 81 42 47 218 155 52 152 176 75 83 249 192 63 64 96 171 3 130 190 124 183 7 120 85 25 110 96 224 209 80 234 170 230 9 154 203 147 65 161 93 6 201 71 138 252 68 80 33 165 239 41 143 20 152 191 254 189 156 2 65 0 141 178 110 81 251 240 215 165 234 188 103 167 247 221 105 141 22 169 118 67 120 77 73 199 242 146 72 17 20 160 28 88 31 223 198 247 121 177 203 204 245 232 234 89 92 152 183 96 195 197 161 15 254 30 110 44 177 1 225 165 200 161 74 68)
      #t
      ())
    #(260
      "special case hash"
      #vu8(49 50 57 48 53 54 57 51 55)
      #vu8(48 129 132 2 64 6 226 15 70 141 111 206 75 85 113 214 225 136 241 12 234 5 84 29 130 201 248 23 145 215 231 178 113 109 146 220 87 73 64 83 113 43 11 1 179 70 229 121 114 67 50 109 185 32 40 232 15 29 142 3 130 177 230 60 77 150 218 169 217 2 64 33 85 235 35 100 146 111 195 71 151 146 49 37 80 60 218 218 153 131 230 37 18 115 229 254 30 2 152 230 30 38 133 125 196 18 25 12 126 103 119 96 86 149 0 248 90 178 102 91 110 136 144 27 232 97 207 206 63 164 226 189 165 84 41)
      #t
      ())
    #(261
      "special case hash"
      #vu8(50 55 52 56 54 53 54 52 51 56)
      #vu8(48 129 132 2 64 30 36 128 197 107 231 42 82 254 0 148 95 215 194 254 239 221 3 189 113 59 195 227 214 230 212 52 213 162 167 162 200 225 180 124 177 66 139 150 244 216 88 157 110 229 251 50 221 125 10 118 119 144 248 32 155 95 211 65 44 13 86 37 121 2 64 60 5 0 247 83 29 197 240 4 15 11 176 245 51 188 91 243 68 253 31 50 90 128 196 32 67 95 147 211 202 126 238 177 91 26 79 67 145 64 143 22 105 113 201 221 183 155 251 104 242 60 105 151 194 174 64 214 108 208 244 250 113 18 23)
      #t
      ())
    #(262
      "special case hash"
      #vu8(55 53 56 51 53 48 50 54 48 52)
      #vu8(48 129 132 2 64 119 77 133 42 29 249 243 181 48 219 77 3 69 195 247 196 19 200 220 77 241 193 143 66 137 203 223 57 222 45 158 184 189 144 202 120 3 194 179 254 138 142 185 216 4 223 207 13 11 199 146 17 172 25 157 161 192 154 189 128 176 242 32 244 2 64 112 253 3 166 251 99 88 43 198 65 40 117 140 200 191 252 245 186 11 241 84 237 66 27 55 233 89 135 212 100 126 215 163 237 229 21 154 193 117 247 55 10 46 35 255 246 69 16 92 78 13 153 221 209 72 106 214 172 90 131 41 3 213 94)
      #t
      ())
    #(263
      "special case hash"
      #vu8(50 51 50 55 55 53 52 50 55 57)
      #vu8(48 129 132 2 64 46 127 99 218 101 122 101 16 82 135 198 68 203 160 123 15 152 107 75 47 58 24 192 128 157 207 141 138 194 22 148 80 178 6 124 197 224 172 61 101 225 234 198 127 60 234 58 98 199 35 238 224 98 211 7 87 220 170 158 146 110 191 189 0 2 64 97 178 98 164 170 133 11 161 46 49 118 29 203 222 140 199 201 171 212 136 82 167 52 179 139 38 203 177 83 168 2 137 196 120 131 137 177 107 175 16 31 108 93 168 238 198 213 132 208 186 136 62 83 182 215 210 175 227 109 184 62 169 81 165)
      #t
      ())
    #(264
      "special case hash"
      #vu8(55 55 53 53 48 56 53 56 52)
      #vu8(48 129 134 2 65 0 155 11 225 239 241 29 22 182 196 128 160 225 124 95 52 113 234 228 252 174 255 146 72 114 9 240 242 60 87 167 223 171 237 233 117 102 152 239 198 37 199 121 53 102 122 81 158 66 6 46 157 8 120 66 200 62 8 185 118 211 185 110 166 220 2 65 0 156 158 245 231 118 10 3 107 196 14 199 16 186 136 233 173 111 142 6 148 141 250 119 162 108 184 253 108 59 135 17 45 192 208 246 204 175 224 143 165 182 54 244 41 160 151 175 57 213 105 67 60 147 63 144 37 22 232 88 113 190 195 1 7)
      #t
      ())
    #(265
      "special case hash"
      #vu8(49 55 57 56 50 54 52 56 51 56 50)
      #vu8(48 129 132 2 64 115 150 180 150 150 49 29 16 218 92 133 163 50 75 192 123 133 90 222 217 245 86 252 239 107 58 21 124 205 238 206 223 175 235 254 194 126 155 118 74 204 132 240 171 19 126 227 1 109 186 133 244 86 78 185 178 32 100 30 115 103 31 133 9 2 64 52 216 94 174 155 253 67 137 15 205 43 5 17 174 170 117 52 164 112 212 166 16 253 89 42 205 14 1 120 77 198 190 74 176 250 229 234 111 174 182 193 122 92 42 132 220 117 185 26 5 23 53 148 246 33 47 42 162 22 15 34 155 208 150)
      #t
      ())
    #(266
      "special case hash"
      #vu8(50 51 57 54 55 55 55 51 54 53)
      #vu8(48 129 132 2 64 36 220 125 10 168 156 162 45 206 194 2 72 246 112 107 98 9 88 50 54 219 163 188 50 111 41 50 28 91 239 119 221 244 150 142 39 171 45 191 24 130 222 41 133 228 144 28 3 220 229 57 208 223 23 22 9 126 162 7 250 230 182 17 64 2 64 97 104 193 39 123 124 136 23 102 183 103 8 61 228 244 223 130 175 138 196 7 18 34 149 236 229 143 164 156 192 81 48 136 72 220 56 6 117 128 10 74 77 253 107 129 50 7 216 208 228 34 194 50 243 11 223 247 223 125 137 244 39 193 148)
      #t
      ())
    #(267
      "special case hash"
      #vu8(53 57 57 56 49 48 53 56 48 49)
      #vu8(48 129 132 2 64 45 71 202 44 3 173 191 242 132 3 30 44 99 21 131 99 151 186 52 183 96 80 87 82 107 21 158 105 117 238 102 14 200 9 234 21 245 82 8 123 42 181 189 63 113 143 143 130 249 233 238 71 241 12 126 150 203 6 165 167 180 176 36 122 2 64 60 177 245 104 30 75 161 176 91 92 154 44 3 240 214 189 131 154 213 188 207 75 226 234 8 91 109 181 81 96 55 204 93 54 250 168 60 103 161 124 247 63 143 117 229 12 163 63 183 89 28 242 79 149 8 167 238 214 19 20 164 125 158 84)
      #t
      ())
    #(268
      "special case hash"
      #vu8(49 54 54 55 55 56 50 55 48 53 55)
      #vu8(48 129 132 2 64 10 243 39 59 65 25 98 73 121 234 179 5 160 248 62 81 54 239 106 86 89 124 83 83 216 215 103 35 82 148 3 153 92 69 243 162 75 177 58 232 93 56 114 220 129 30 0 142 170 44 88 66 244 154 124 46 198 141 199 203 79 51 204 195 2 64 97 245 178 54 51 73 100 235 62 226 198 198 188 235 159 47 142 207 6 68 206 156 167 35 213 152 227 148 114 227 211 154 153 52 129 210 124 141 245 223 43 120 29 106 2 42 196 137 169 25 148 117 98 13 75 171 57 10 63 203 107 244 73 65)
      #t
      ())
    #(269
      "special case hash"
      #vu8(50 48 54 50 49 52 51 54 50)
      #vu8(48 129 134 2 65 0 157 84 204 220 221 225 183 177 31 166 167 15 215 93 169 162 56 122 238 249 72 130 80 110 184 152 215 37 109 164 208 174 46 160 207 84 249 102 237 53 12 228 116 199 79 0 174 255 66 204 22 6 75 6 155 138 104 130 11 165 87 181 52 208 2 65 0 153 18 198 2 153 71 129 96 111 152 114 19 180 225 224 86 243 174 23 147 93 160 89 52 27 186 23 72 74 198 46 50 242 208 75 57 115 39 94 115 136 118 235 177 111 161 70 95 142 107 210 96 25 217 106 170 40 204 254 148 171 126 169 79)
      #t
      ())
    #(270
      "special case hash"
      #vu8(54 56 52 50 52 57 54 48 52 53)
      #vu8(48 129 132 2 64 127 123 20 194 80 42 43 191 63 125 24 41 1 38 55 161 228 99 17 239 177 184 125 180 19 4 49 130 80 208 209 178 85 45 36 37 55 141 173 75 253 166 239 17 151 215 185 132 99 132 172 253 191 174 3 106 95 115 46 148 151 200 88 74 2 64 80 105 62 238 113 174 93 112 97 5 216 25 8 154 201 72 179 215 180 21 27 10 245 84 54 137 152 84 217 204 139 117 38 174 216 150 174 31 61 221 254 48 25 98 4 63 79 59 161 64 134 78 248 209 187 109 69 213 173 209 50 93 132 138)
      #t
      ())
    #(271
      "special case hash"
      #vu8(51 50 54 57 56 57 55 51 50 49)
      #vu8(48 129 133 2 65 0 140 51 177 98 62 16 226 245 30 220 11 150 134 44 210 234 245 250 238 142 166 204 201 133 204 219 148 191 177 65 214 61 178 81 250 241 231 214 158 211 144 162 190 183 17 133 219 64 41 240 127 3 175 74 196 170 234 244 138 240 30 111 36 32 2 64 85 176 54 91 18 247 214 64 247 88 229 175 110 45 106 65 252 92 86 200 5 152 247 187 160 153 11 13 137 159 34 203 99 76 34 246 77 122 30 151 8 86 179 179 27 176 19 211 159 118 29 88 139 161 74 149 131 248 56 125 145 208 88 181)
      #t
      ())
    #(272
      "special case hash"
      #vu8(49 51 56 55 51 50 52 54 57 50)
      #vu8(48 129 133 2 65 0 163 74 201 192 119 83 140 33 249 42 180 191 13 212 13 159 171 238 31 64 158 129 204 231 27 237 35 208 107 167 46 177 91 123 122 150 251 226 86 189 12 65 160 213 227 240 116 137 150 193 109 116 39 5 217 160 108 84 74 78 87 60 53 151 2 64 69 0 237 153 92 38 8 220 98 236 201 32 238 86 5 144 100 129 0 229 184 158 127 16 154 44 21 168 81 112 137 83 230 153 73 156 152 124 30 149 35 249 216 152 94 96 97 203 154 132 229 142 44 38 87 155 187 8 75 157 93 113 243 170)
      #t
      ())
    #(273
      "special case hash"
      #vu8(52 49 49 56 56 56 55 53 51 54)
      #vu8(48 129 132 2 64 99 154 108 192 195 229 15 36 87 248 67 196 15 23 20 9 110 97 99 124 120 186 157 132 122 223 15 107 46 206 120 173 234 152 221 21 106 145 99 142 234 199 67 151 31 93 70 149 6 253 25 225 21 85 252 85 254 227 248 42 231 176 91 143 2 64 36 39 179 250 35 132 48 224 205 121 79 40 180 224 242 193 211 200 58 182 253 0 212 122 76 99 15 95 7 47 150 21 35 205 83 22 176 248 231 161 56 119 39 227 48 254 246 146 137 10 71 36 149 198 156 242 22 114 127 186 55 113 173 142)
      #t
      ())
    #(274
      "special case hash"
      #vu8(57 56 56 54 48 54 53 52 53)
      #vu8(48 129 133 2 64 97 148 146 32 214 104 205 89 0 155 0 105 96 122 250 195 163 190 56 102 245 11 12 59 219 217 142 158 179 6 8 43 35 19 111 190 97 115 220 182 184 211 78 129 169 224 56 232 167 128 113 99 91 123 196 199 135 239 183 191 138 139 161 42 2 65 0 132 38 246 142 140 127 195 232 190 168 77 123 86 170 46 107 187 43 6 62 50 14 205 82 13 54 90 6 109 146 64 245 218 165 51 218 234 40 217 156 161 255 174 156 59 155 14 124 210 141 116 33 186 53 195 5 200 145 3 72 103 118 139 31)
      #t
      ())
    #(275
      "special case hash"
      #vu8(50 52 55 57 49 49 53 56 52 53)
      #vu8(48 129 132 2 64 71 255 201 205 244 14 85 128 164 169 56 195 114 122 207 140 55 173 99 139 17 194 53 208 94 68 191 176 166 128 163 198 239 245 121 1 84 27 224 198 2 70 116 159 31 0 113 168 89 78 214 235 164 62 161 249 38 104 213 77 147 140 152 211 2 64 21 33 236 179 235 64 140 152 96 184 59 183 72 175 227 6 195 91 147 238 107 158 30 88 76 152 215 136 208 77 1 61 230 145 202 252 208 245 215 31 227 220 108 140 119 237 3 72 141 139 146 171 44 46 0 126 227 90 208 44 77 221 5 99)
      #t
      ())
    #(276
      "special case hash"
      #vu8(53 48 55 54 56 56 55 51 54 55)
      #vu8(48 129 133 2 64 100 99 140 81 175 146 105 251 36 216 224 151 65 2 190 110 148 188 234 223 233 206 161 169 200 159 215 120 1 8 145 132 93 38 229 220 122 15 231 240 166 234 158 160 193 221 124 144 94 140 228 59 230 72 96 158 175 132 148 240 96 80 181 80 2 65 0 159 242 171 216 49 145 89 191 81 198 243 48 113 152 211 192 80 10 216 103 79 66 169 22 120 49 115 66 232 46 192 120 29 67 16 214 24 105 75 216 208 116 101 10 230 73 16 162 74 3 89 143 0 22 129 32 229 48 170 96 49 122 212 112)
      #t
      ())
    #(277
      "special case hash"
      #vu8(57 56 56 53 48 54 57 54 55)
      #vu8(48 129 132 2 64 37 61 122 255 129 113 55 33 150 221 21 44 227 83 110 101 255 0 172 63 238 252 50 215 144 182 221 200 91 12 239 7 74 23 54 187 71 51 49 179 129 75 47 105 210 14 144 5 14 210 211 202 18 87 53 51 109 21 249 192 18 226 137 203 2 64 56 80 87 58 133 155 127 155 21 63 224 217 95 72 237 48 135 126 235 52 255 211 14 153 128 244 196 44 38 233 83 143 126 223 229 13 82 248 228 83 175 3 212 85 75 202 122 178 179 185 141 121 74 49 125 218 18 63 211 30 78 167 6 218)
      #t
      ())
    #(278
      "special case hash"
      #vu8(50 55 50 49 51 48 54 49 51 49)
      #vu8(48 129 132 2 64 116 130 181 230 188 132 242 137 190 150 255 156 1 234 45 246 50 204 29 35 185 136 249 83 38 65 0 232 162 18 231 124 131 111 195 246 96 113 217 236 98 84 52 28 236 252 216 170 169 64 204 12 193 226 96 119 243 192 161 168 85 227 12 81 2 64 50 142 138 31 193 64 200 121 27 157 23 225 226 223 220 235 150 154 33 210 176 36 91 28 194 7 102 182 180 26 45 108 223 150 9 221 161 177 210 194 198 195 133 152 110 108 111 172 191 214 138 103 72 96 244 143 184 209 19 245 119 239 35 29)
      #t
      ())
    #(279
      "special case hash"
      #vu8(51 50 48 52 49 48 49 54 53 53)
      #vu8(48 129 132 2 64 101 153 68 28 14 217 226 168 47 95 9 207 169 98 123 37 213 1 149 117 7 35 172 24 144 126 222 163 181 136 183 54 222 237 205 205 10 238 68 223 115 245 243 100 228 132 185 148 155 125 123 105 143 222 4 62 97 2 207 238 214 157 180 105 2 64 64 4 159 141 214 238 11 187 75 154 41 242 237 237 60 139 240 177 12 139 211 190 107 245 228 249 127 7 77 113 104 101 250 130 79 81 250 121 204 254 121 29 93 246 173 127 238 107 173 150 172 91 255 33 165 2 249 10 184 14 33 18 83 219)
      #t
      ())
    #(280
      "special case hash"
      #vu8(51 49 53 48 54 56 48 57 53 48)
      #vu8(48 129 132 2 64 116 225 28 116 212 19 158 185 229 50 229 131 207 62 221 11 158 14 123 110 130 163 183 157 130 0 232 229 129 222 183 27 21 59 150 22 70 167 99 32 51 159 76 26 95 117 166 56 186 43 12 63 6 94 216 86 173 10 21 142 50 53 199 14 2 64 111 249 64 51 156 4 73 214 226 64 55 48 181 141 13 252 141 231 155 202 13 240 108 90 109 67 124 194 193 38 106 70 138 138 202 42 41 3 194 153 121 215 244 212 247 135 26 16 107 49 236 72 92 40 202 182 46 178 16 1 152 135 27 131)
      #t
      ())
    #(281
      "special case hash"
      #vu8(49 55 50 55 52 54 48 49 48 51)
      #vu8(48 129 132 2 64 85 72 2 12 42 7 100 82 76 165 67 208 142 21 38 206 20 118 186 151 106 248 214 21 13 141 42 228 116 149 229 254 104 204 233 132 147 181 3 4 19 29 247 28 26 61 71 118 167 125 92 235 116 228 123 42 142 101 1 8 235 171 20 40 2 64 98 14 45 191 103 33 95 149 251 188 146 169 146 242 10 78 127 48 26 44 60 56 128 183 232 145 173 72 70 71 169 122 160 10 236 222 253 3 21 82 7 169 228 89 239 116 90 157 41 165 75 8 244 123 129 202 219 228 190 164 87 234 198 212)
      #t
      ())
    #(282
      "special case hash"
      #vu8(49 52 53 55 49 52 54 49 50 50 53)
      #vu8(48 129 133 2 65 0 131 222 145 34 171 70 39 34 147 157 133 29 69 107 155 2 41 55 190 133 177 94 182 93 46 193 164 132 16 162 242 52 233 129 64 242 8 237 89 93 226 251 80 115 178 234 73 74 202 222 141 197 164 78 215 22 44 254 122 112 24 36 121 221 2 64 46 12 147 143 86 83 56 87 149 110 86 215 156 120 253 16 29 222 203 26 150 149 165 111 24 246 168 155 148 192 211 219 71 66 154 253 222 107 104 40 50 191 76 15 184 73 236 127 175 114 156 181 157 142 33 157 173 112 183 200 226 87 255 20)
      #t
      ())
    #(283
      "special case hash"
      #vu8(52 49 55 57 53 49 54 48 57 48)
      #vu8(48 129 134 2 65 0 141 66 179 190 208 32 37 147 173 68 169 59 67 235 172 126 224 217 236 29 188 92 84 102 25 213 169 191 181 201 206 231 68 164 69 135 63 16 83 155 81 84 94 167 135 100 141 188 68 186 45 39 249 30 238 197 157 233 47 45 113 96 21 83 2 65 0 152 90 196 151 44 123 18 35 101 109 254 199 150 205 51 82 217 29 108 131 206 51 14 29 203 30 201 129 115 153 52 13 124 169 116 87 175 81 193 156 111 208 120 126 105 101 212 248 94 222 92 127 80 117 152 184 189 213 200 8 219 69 158 115)
      #t
      ())
    #(284
      "special case hash"
      #vu8(53 56 57 50 55 49 51 48 53 52)
      #vu8(48 129 132 2 64 91 130 109 22 4 14 68 141 251 112 25 93 225 110 151 69 75 19 58 235 16 81 55 61 81 17 241 8 20 183 244 173 23 20 178 92 12 86 97 239 238 67 250 147 41 164 175 9 96 126 182 108 114 178 190 46 33 187 77 2 41 227 161 175 2 64 7 240 15 57 53 86 111 76 161 110 52 110 245 172 71 178 149 63 200 181 204 136 112 174 99 140 85 250 222 27 88 107 55 161 25 1 95 215 190 58 51 253 57 22 85 100 246 17 116 53 188 26 32 191 213 116 6 96 139 59 39 169 27 227)
      #t
      ())
    #(285
      "special case hash"
      #vu8(51 56 57 54 49 56 50 50 57 55)
      #vu8(48 129 133 2 65 0 143 137 219 90 109 109 198 254 150 236 95 149 150 12 47 3 166 160 114 230 68 209 88 36 125 91 139 102 226 52 104 52 238 17 229 237 230 191 158 142 2 52 167 247 92 232 100 73 20 197 133 224 149 61 55 28 54 62 47 33 254 170 39 99 2 64 102 1 210 40 244 181 61 171 21 70 235 247 103 51 96 219 165 220 61 89 201 83 191 134 124 117 67 37 192 207 222 133 182 69 5 252 153 89 65 146 155 83 197 86 107 66 240 52 186 26 9 237 150 225 19 150 26 26 115 87 162 39 147 168)
      #t
      ())
    #(286
      "special case hash"
      #vu8(56 50 56 51 51 52 54 55 51 50)
      #vu8(48 129 132 2 64 126 97 7 188 110 95 13 9 88 120 158 75 145 32 28 161 157 147 193 43 196 25 76 131 22 194 34 68 81 245 116 139 182 251 70 73 113 6 198 19 176 126 250 172 149 78 44 203 33 6 32 5 185 239 78 167 44 228 71 29 170 90 62 163 2 64 127 24 55 130 119 39 104 93 232 200 134 141 148 37 219 6 227 63 103 120 179 180 209 224 142 95 115 226 104 4 161 66 114 58 61 104 167 215 95 223 130 110 121 247 145 247 166 176 248 154 54 229 121 205 169 25 111 221 159 100 25 247 28 203)
      #t
      ())
    #(287
      "special case hash"
      #vu8(51 51 54 54 57 55 52 56 57 49)
      #vu8(48 129 132 2 64 53 57 148 78 82 208 219 31 229 233 202 61 76 141 147 19 154 45 92 133 229 25 96 237 104 232 251 95 41 203 16 143 161 132 253 102 134 79 237 43 217 14 0 23 146 92 93 84 61 97 142 40 125 228 61 34 247 169 79 23 81 79 133 170 2 64 6 10 55 218 39 83 146 92 24 186 75 151 201 93 22 206 87 76 233 84 46 145 139 78 162 231 243 137 14 114 58 55 91 12 124 205 73 124 218 108 36 17 21 3 255 148 142 225 176 151 91 144 178 28 7 71 240 180 191 211 84 226 234 54)
      #t
      ())
    #(288
      "special case hash"
      #vu8(50 49 57 57 49 53 51 50 50 57)
      #vu8(48 129 133 2 64 19 57 204 133 185 16 200 44 125 90 6 4 66 113 80 227 37 196 88 203 45 225 207 39 25 69 70 219 19 202 176 86 192 33 246 167 143 85 5 232 191 104 101 242 155 54 191 103 163 194 48 0 97 126 53 249 44 135 54 133 76 93 114 161 2 65 0 128 24 147 110 39 132 126 230 129 155 16 69 133 34 215 137 145 205 233 208 139 94 133 242 227 57 186 198 186 154 253 186 25 165 201 158 33 23 117 35 69 189 170 122 113 190 87 240 14 74 45 141 176 136 243 80 114 24 83 246 234 20 64 160)
      #t
      ())
    #(289
      "special case hash"
      #vu8(53 54 48 48 51 49 54 56 50 50)
      #vu8(48 129 132 2 64 11 98 183 104 134 65 42 62 146 24 10 218 49 232 108 40 226 136 101 158 231 18 81 181 252 171 105 251 227 163 234 122 158 203 229 19 239 47 126 9 0 115 130 80 210 129 141 37 91 131 141 192 146 240 69 254 95 144 233 154 111 196 140 32 2 64 117 37 93 235 245 83 24 162 101 81 30 63 123 223 100 124 136 219 206 24 90 225 57 5 12 67 113 84 252 77 238 39 134 196 64 180 246 117 40 161 163 67 200 244 32 87 233 189 34 61 246 76 231 87 8 29 255 127 22 167 132 239 88 104)
      #t
      ())
    #(290
      "special case hash"
      #vu8(56 54 57 54 53 49 54 57 53)
      #vu8(48 129 132 2 64 2 81 124 253 210 44 43 228 198 47 247 47 2 66 248 68 207 19 127 35 11 65 189 27 150 132 38 215 95 208 31 43 70 122 61 61 186 225 86 209 158 227 52 152 7 10 103 39 148 18 153 101 6 69 20 51 117 150 209 188 102 72 26 26 2 64 30 64 80 154 103 31 191 150 56 209 210 178 66 243 4 16 150 214 181 157 30 183 16 114 6 134 32 253 243 25 83 178 10 75 222 191 176 141 36 143 13 126 52 240 83 230 52 244 58 164 42 56 99 215 83 20 125 231 54 139 40 167 77 132)
      #t
      ())
    #(291
      "special case hash"
      #vu8(54 53 56 51 57 50 54 51 55 50)
      #vu8(48 129 133 2 65 0 143 239 107 82 196 214 67 253 157 95 40 253 82 4 252 91 91 106 62 87 230 219 156 142 239 117 20 6 137 51 55 122 127 22 160 105 169 91 182 246 73 221 51 16 146 42 152 34 17 242 66 9 58 35 171 68 223 129 14 180 215 68 176 84 2 64 94 56 98 164 47 232 165 96 67 45 93 224 66 249 128 97 62 104 246 179 68 77 125 83 82 102 0 165 5 153 35 113 246 247 45 209 170 119 94 88 226 66 18 160 194 100 57 210 235 113 115 64 253 83 109 56 249 20 141 33 54 133 10 126)
      #t
      ())
    #(292
      "special case hash"
      #vu8(49 51 50 48 53 48 49 53 55 50 53)
      #vu8(48 129 132 2 64 20 190 99 109 154 160 170 203 132 241 215 208 184 131 114 192 50 38 135 118 125 69 35 157 123 136 55 215 71 214 15 198 203 15 167 232 151 187 219 25 25 76 130 222 189 219 70 221 208 148 203 0 29 219 126 2 89 35 131 93 126 14 237 164 2 64 9 13 98 153 127 180 255 130 137 109 46 138 10 226 44 239 109 172 241 136 155 239 113 128 93 186 15 112 29 65 172 33 152 32 225 94 145 94 16 81 61 73 27 106 163 8 179 89 6 220 93 69 25 25 40 245 2 86 131 190 138 58 159 27)
      #t
      ())
    #(293
      "special case hash"
      #vu8(53 48 56 53 51 51 48 55 57 49)
      #vu8(48 129 134 2 65 0 154 249 139 238 153 17 100 15 181 213 143 160 128 62 83 147 183 114 251 12 134 46 233 248 84 93 157 173 186 251 26 108 115 200 91 121 243 157 17 133 244 178 196 187 84 229 19 23 226 99 61 80 252 143 117 136 133 4 38 139 132 244 14 36 2 65 0 135 251 124 138 45 129 247 34 109 235 255 49 180 240 162 154 8 241 249 164 197 14 86 21 181 112 85 94 242 204 161 223 43 112 78 146 233 184 173 180 65 137 230 149 83 237 121 239 254 49 91 212 1 208 178 50 140 176 101 207 16 225 48 203)
      #t
      ())
    #(294
      "special case hash"
      #vu8(55 56 54 54 56 49 51 49 49 57)
      #vu8(48 129 133 2 65 0 166 74 157 173 245 182 165 112 40 4 78 8 215 136 120 78 7 172 152 223 161 237 35 131 72 228 94 149 212 79 99 29 159 20 171 185 70 67 248 125 28 243 249 254 197 220 39 32 228 41 100 108 14 199 21 31 184 153 36 205 67 28 48 115 2 64 17 95 101 58 61 50 125 147 17 140 221 36 255 255 3 157 165 22 175 162 127 55 199 135 53 201 133 151 60 254 85 39 91 97 13 123 226 73 105 235 83 23 33 160 164 134 25 75 107 136 35 208 215 11 13 193 253 76 118 17 195 40 97 224)
      #t
      ())
    #(295
      "special case hash"
      #vu8(50 48 56 50 53 51 57 52 50 57)
      #vu8(48 129 134 2 65 0 149 208 129 192 114 143 238 63 91 17 165 147 57 88 105 170 52 44 38 13 250 5 229 87 83 23 21 2 54 72 45 0 238 128 166 240 163 162 92 12 142 58 103 144 1 76 103 71 216 181 221 176 129 50 139 213 62 76 100 34 198 35 215 149 2 65 0 152 51 77 220 42 30 216 135 178 111 162 53 153 1 43 49 251 213 250 56 77 181 192 144 34 51 193 239 230 31 133 252 206 9 169 231 252 19 251 2 83 200 207 206 184 118 35 96 238 93 32 225 125 235 190 132 161 200 235 104 219 127 253 76)
      #t
      ())
    #(296
      "special case hash"
      #vu8(49 48 48 54 53 57 53 54 54 57 55)
      #vu8(48 129 133 2 65 0 157 221 74 195 146 233 184 57 29 118 107 111 93 38 241 100 239 111 69 82 215 63 30 233 208 150 183 126 61 204 58 66 2 53 115 21 108 89 84 24 126 190 203 47 96 237 122 1 67 152 9 221 142 186 40 110 83 64 238 183 225 132 89 61 2 64 22 106 74 43 158 12 238 171 130 120 60 26 125 98 45 207 123 255 198 155 133 174 65 229 173 155 85 43 243 182 135 162 40 207 246 68 213 73 123 160 161 100 76 3 145 98 236 223 176 149 210 61 218 37 239 225 79 72 3 44 109 9 202 164)
      #t
      ())
    #(297
      "special case hash"
      #vu8(51 48 50 52 49 56 49 54 48 52)
      #vu8(48 129 132 2 64 125 176 251 221 207 67 126 37 128 75 250 109 71 96 7 187 46 73 19 133 39 255 39 215 89 208 92 11 26 61 173 162 50 124 73 129 50 0 204 36 253 129 240 222 239 182 6 19 20 208 104 41 2 79 68 100 89 31 82 13 92 189 157 174 2 64 23 83 203 231 246 209 142 143 194 38 169 80 56 90 67 133 141 221 223 186 75 87 197 192 125 88 31 81 203 245 200 249 55 129 180 140 204 136 124 3 159 205 236 214 230 94 62 89 72 148 198 120 117 237 137 232 108 68 229 45 101 108 52 106)
      #t
      ())
    #(298
      "special case hash"
      #vu8(55 55 54 55 56 53 50 56 55 52)
      #vu8(48 129 134 2 65 0 137 134 176 234 156 87 224 55 150 14 118 216 181 57 175 199 20 204 58 220 144 57 75 150 188 250 63 127 190 173 79 197 133 19 62 79 97 183 206 62 223 240 147 185 140 37 125 187 180 151 248 109 191 70 127 26 237 141 122 125 191 180 70 50 2 65 0 158 125 31 160 156 203 75 77 73 162 70 63 18 169 247 96 211 204 11 227 142 64 154 53 33 114 62 111 72 57 128 1 144 17 83 225 65 193 33 80 12 139 166 137 137 110 44 60 136 55 103 55 137 32 55 92 181 47 12 190 90 233 129 97)
      #t
      ())
    #(299
      "special case hash"
      #vu8(53 52 52 49 57 57 57 55 52)
      #vu8(48 129 132 2 64 117 223 240 252 103 150 77 87 255 1 62 78 184 167 211 86 185 244 8 190 111 90 237 129 133 70 176 100 16 34 112 168 20 127 58 183 139 148 50 123 96 35 47 224 134 34 47 126 231 192 39 198 162 248 86 70 121 34 21 108 208 12 82 70 2 64 89 114 84 65 23 86 114 33 205 103 87 84 40 197 198 30 223 178 40 177 49 70 73 39 101 126 69 174 142 85 98 92 135 76 70 151 140 125 212 129 210 219 142 233 202 189 26 97 188 36 71 206 210 255 154 114 237 225 34 218 188 109 156 49)
      #t
      ())
    #(300
      "special case hash"
      #vu8(53 56 52 51 52 56 48 51 57 49)
      #vu8(48 129 133 2 65 0 162 206 74 150 97 199 31 126 222 128 193 103 198 117 134 12 246 141 126 245 64 3 18 242 174 5 12 65 45 221 221 136 105 206 9 59 46 17 227 132 149 36 93 4 37 46 68 18 158 153 69 54 67 82 16 227 183 209 235 176 192 21 186 197 2 64 105 50 133 94 254 204 65 33 93 44 175 139 190 214 240 162 216 6 210 190 52 133 118 13 250 140 136 23 149 129 71 226 111 111 107 253 145 240 135 78 20 73 201 116 86 83 72 140 6 138 184 15 217 146 39 181 167 156 23 253 38 107 123 251)
      #t
      ())
    #(301
      "special case hash"
      #vu8(55 49 56 56 57 50 54 50 57)
      #vu8(48 129 132 2 64 27 96 38 63 5 226 232 24 246 121 65 177 181 245 232 102 141 187 165 26 175 196 223 223 155 73 151 154 128 174 12 81 242 177 178 136 36 253 157 75 10 45 50 183 230 246 227 234 197 128 89 7 82 225 113 191 29 237 4 218 84 23 174 41 2 64 122 175 246 54 133 245 14 1 251 178 215 39 172 166 99 85 199 245 36 179 176 183 197 35 1 203 155 90 234 162 182 35 133 66 124 198 170 193 38 225 101 47 224 230 44 203 20 121 177 164 138 199 221 129 115 215 84 208 111 80 93 212 67 193)
      #t
      ())
    #(302
      "special case hash"
      #vu8(49 55 52 51 50 50 51 52 52 51)
      #vu8(48 129 133 2 65 0 134 3 156 127 19 148 49 230 100 139 235 235 94 172 163 218 192 124 232 7 181 28 104 231 89 1 32 250 174 231 250 228 40 11 51 177 164 220 151 146 1 130 59 49 241 80 239 45 2 133 164 88 134 98 183 200 126 80 21 93 64 98 116 167 2 64 94 215 203 203 107 160 141 10 32 81 79 128 21 3 202 132 180 164 9 206 143 85 101 22 67 1 57 153 248 211 255 101 169 176 191 42 124 82 248 77 210 148 93 34 103 127 164 98 39 166 76 115 89 24 15 187 75 21 3 62 232 168 171 229)
      #t
      ())
    #(303
      "special case hash"
      #vu8(50 52 48 54 48 48 53 57 51 54)
      #vu8(48 129 132 2 64 112 22 70 138 54 248 85 171 187 180 212 216 89 147 127 95 174 86 164 218 44 77 39 25 250 119 225 17 165 108 211 162 30 146 103 18 1 39 219 90 103 175 226 179 44 123 76 59 254 21 208 173 68 198 12 64 137 164 254 79 165 60 220 169 2 64 127 203 97 218 86 28 183 203 138 186 140 7 231 65 116 35 190 210 233 151 132 181 246 70 153 0 20 230 135 37 82 160 126 16 52 216 14 105 179 25 183 205 44 123 21 117 70 50 61 244 162 171 132 51 198 35 235 12 119 212 21 159 1 78)
      #t
      ())
    #(304
      "special case hash"
      #vu8(49 54 49 52 48 51 54 57 56 56)
      #vu8(48 129 133 2 64 67 172 248 74 7 109 116 14 153 123 202 163 93 236 158 117 223 60 12 79 37 178 7 93 175 7 125 230 11 91 159 183 247 132 166 2 118 153 162 22 160 71 162 19 90 59 83 15 216 250 0 119 51 141 77 200 95 187 170 206 182 100 16 34 2 65 0 128 122 60 223 192 243 59 190 122 90 82 247 228 120 124 103 52 13 149 139 175 13 149 125 1 92 115 201 200 208 182 15 135 164 38 191 210 201 32 159 167 245 250 177 176 90 136 96 133 113 113 64 7 20 8 27 111 110 115 63 56 12 57 99)
      #t
      ())
    #(305
      "special case hash"
      #vu8(50 48 57 53 52 50 53 54 56 53)
      #vu8(48 129 133 2 65 0 133 31 168 133 149 73 141 213 165 251 90 7 16 224 47 238 26 2 62 75 74 172 254 186 3 247 196 193 74 143 180 51 147 78 162 51 229 210 125 225 85 218 202 77 78 56 67 240 242 205 88 97 112 114 138 45 76 230 82 35 88 12 236 102 2 64 23 49 182 192 2 0 244 71 77 78 162 4 103 117 217 53 14 69 242 171 212 91 188 193 22 60 119 222 174 175 201 66 16 152 91 116 102 207 97 188 120 213 155 221 36 57 170 28 125 218 199 30 0 114 215 61 135 106 20 243 38 26 247 123)
      #t
      ())
    #(306
      "special case hash"
      #vu8(49 48 48 56 48 57 56 57 56 51)
      #vu8(48 129 132 2 64 120 69 109 53 131 185 63 186 32 157 111 175 115 99 248 232 120 102 204 232 241 168 247 86 82 13 95 199 210 45 54 148 8 117 51 115 169 153 200 229 186 88 23 198 31 249 163 160 169 128 65 33 160 1 4 199 193 93 218 155 96 189 116 77 2 64 103 225 73 174 106 32 109 61 238 238 175 120 249 15 197 252 105 192 193 1 39 53 18 173 66 213 253 57 147 186 188 103 29 233 196 170 192 21 49 11 232 235 109 131 18 27 151 9 185 60 212 55 99 191 186 157 216 57 118 169 26 117 245 103)
      #t
      ())
    #(307
      "special case hash"
      #vu8(49 53 55 52 49 52 55 57 50 55)
      #vu8(48 129 132 2 64 95 252 49 162 232 22 135 72 198 41 224 105 1 97 204 98 73 104 12 3 222 92 186 212 75 18 26 168 86 245 87 207 154 132 152 62 73 63 64 226 192 245 152 115 139 15 110 200 87 91 102 228 196 229 155 107 99 153 96 88 228 172 162 170 2 64 65 224 133 126 110 149 156 85 189 128 118 41 54 26 196 29 222 100 15 234 205 194 18 215 205 46 29 203 154 58 154 78 147 60 248 233 31 199 177 37 123 122 79 150 150 40 62 6 227 47 151 105 135 223 134 218 44 135 151 139 52 204 94 180)
      #t
      ())
    #(308
      "special case hash"
      #vu8(50 56 54 54 55 55 49 53 50 50)
      #vu8(48 129 132 2 64 49 73 43 8 136 246 255 245 45 36 123 238 23 52 200 66 92 53 96 108 157 140 198 61 243 130 220 229 34 76 141 85 255 43 166 207 162 157 9 80 1 36 232 87 106 187 208 215 16 186 235 9 158 254 240 47 232 16 212 161 157 194 202 68 2 64 36 211 179 32 222 243 148 58 200 86 104 14 0 137 28 40 218 1 24 64 175 41 244 242 200 136 74 2 36 99 161 218 157 188 203 17 189 75 114 14 114 185 175 168 182 184 113 168 111 18 248 117 204 28 9 7 127 204 21 169 15 64 42 207)
      #t
      ())
    #(309
      "special case hash"
      #vu8(49 54 57 52 50 56 48 55 56 55)
      #vu8(48 129 133 2 65 0 142 227 173 91 97 222 42 30 58 16 170 162 181 183 193 249 247 144 235 205 17 10 253 204 8 172 155 112 254 117 48 253 169 206 148 228 64 88 116 14 23 183 48 131 49 221 176 206 176 188 105 185 73 68 33 34 113 53 130 228 148 26 236 211 2 64 50 93 254 251 143 70 45 94 125 196 18 78 240 113 159 239 118 73 212 112 243 241 85 81 114 72 75 3 4 231 91 161 34 128 45 26 133 151 180 98 179 69 243 78 23 223 74 60 37 234 234 38 158 161 30 245 176 66 68 11 92 171 183 20)
      #t
      ())
    #(310
      "special case hash"
      #vu8(57 57 50 49 54 57 50 53 54 56)
      #vu8(48 129 132 2 64 85 107 81 57 2 41 20 80 233 162 177 38 184 88 225 226 187 10 35 226 238 144 70 119 217 229 234 200 138 37 240 20 8 184 245 18 217 19 82 196 60 81 157 157 116 87 11 61 120 54 109 244 55 164 41 139 49 26 57 166 60 68 42 189 2 64 123 132 38 37 135 137 151 28 86 197 61 153 125 207 161 39 5 67 188 159 124 66 202 46 162 250 192 136 82 196 114 187 43 40 74 171 89 164 186 175 15 44 152 106 44 104 253 62 111 201 31 29 40 190 155 117 119 247 120 76 88 127 55 20)
      #t
      ())
    #(311
      "special case hash"
      #vu8(49 49 54 48 57 52 51 57 55 57 56)
      #vu8(48 129 132 2 64 96 85 123 121 62 252 111 216 226 47 111 184 128 185 178 79 76 233 91 9 15 105 79 171 40 102 188 24 221 133 237 95 71 159 168 150 216 64 146 218 220 180 185 104 106 216 7 77 105 190 132 41 234 173 99 208 60 99 198 33 127 215 204 113 2 64 120 25 135 159 81 5 243 12 232 239 216 124 4 66 121 174 158 172 50 85 50 125 154 139 8 62 157 205 187 218 30 1 236 188 158 166 144 191 171 119 27 99 49 138 150 73 66 244 87 120 71 245 113 182 121 54 51 17 206 27 210 10 42 224)
      #t
      ())
    #(312
      "special case hash"
      #vu8(55 49 56 54 49 54 50 49 48 48)
      #vu8(48 129 133 2 65 0 150 168 183 54 180 209 194 228 1 50 176 193 220 53 28 112 11 98 219 129 232 187 57 170 113 122 30 192 37 142 185 45 168 25 223 1 23 167 4 126 108 51 84 157 56 72 214 238 163 247 37 170 57 176 50 34 70 63 242 70 232 150 100 33 2 64 107 183 193 229 253 233 139 94 171 151 97 147 104 44 234 134 72 223 128 166 73 194 173 104 224 178 237 165 226 190 233 170 155 119 63 77 98 72 110 219 176 158 207 67 76 26 224 219 162 115 246 139 250 15 152 92 237 93 123 1 32 237 136 231)
      #t
      ())
    #(313
      "special case hash"
      #vu8(51 50 57 52 51 52 55 49 55 55)
      #vu8(48 129 132 2 64 77 157 7 211 164 95 28 145 54 52 113 61 123 167 79 251 211 205 17 74 231 95 23 143 231 172 125 239 206 115 20 129 139 97 103 118 12 182 231 208 162 79 66 125 142 238 96 18 181 44 104 56 131 189 151 227 81 64 92 147 126 79 110 218 2 64 39 188 182 41 227 16 102 221 106 76 101 67 45 57 194 90 221 0 191 163 105 212 139 14 72 32 161 159 8 30 158 218 151 120 117 99 106 140 249 132 1 34 213 225 187 60 234 95 239 224 32 63 96 22 22 214 174 200 32 161 88 5 144 250)
      #t
      ())
    #(314
      "special case hash"
      #vu8(49 56 53 49 52 52 53 53 49 50 48)
      #vu8(48 129 134 2 65 0 145 81 235 16 20 85 123 0 200 242 136 146 162 145 31 93 103 213 147 150 169 61 164 50 125 0 89 251 167 103 185 125 237 213 46 12 200 94 11 248 152 140 126 236 35 16 8 160 249 114 213 17 57 162 254 18 183 85 145 192 113 252 233 236 2 65 0 170 137 181 146 253 48 147 39 230 201 17 226 223 13 149 254 153 191 1 222 50 106 159 240 102 72 163 33 163 99 167 158 123 213 176 81 224 22 15 239 24 171 129 64 49 160 118 1 166 120 60 196 239 198 140 104 29 45 246 72 251 197 71 126)
      #t
      ())
    #(315
      "special case hash"
      #vu8(52 55 54 48 52 51 57 51 48)
      #vu8(48 129 132 2 64 55 78 61 59 255 87 178 160 249 36 170 25 237 44 141 68 66 159 143 138 98 147 74 218 92 11 216 60 44 169 239 37 56 241 134 242 134 54 128 24 60 81 50 78 244 202 197 169 69 220 185 8 172 64 244 219 203 29 32 69 202 198 88 84 2 64 43 161 195 150 3 134 23 119 35 128 157 221 171 63 128 106 16 218 94 116 198 124 156 70 11 108 65 99 243 114 48 195 85 205 75 9 138 173 35 218 82 78 30 112 64 54 63 77 114 143 175 228 217 82 173 95 241 55 12 16 16 239 191 9)
      #t
      ())
    #(316
      "special case hash"
      #vu8(50 53 54 55 51 55 56 55 52 49)
      #vu8(48 129 132 2 64 96 241 165 188 74 53 240 1 17 78 93 113 5 194 29 110 81 97 173 235 93 29 136 37 23 145 253 8 224 25 42 111 201 78 222 33 9 40 131 137 179 234 157 0 87 91 102 236 12 238 95 30 83 28 5 192 136 84 39 163 189 101 214 71 2 64 95 98 195 92 251 170 42 239 222 193 19 51 95 197 245 100 110 216 88 218 11 228 133 33 119 19 93 126 230 44 18 32 206 68 124 182 171 38 203 245 67 33 91 44 21 175 66 217 90 81 91 114 80 251 94 215 146 4 165 124 176 79 101 103)
      #t
      ())
    #(317
      "special case hash"
      #vu8(53 55 51 57 57 51 52 57 57 53)
      #vu8(48 129 133 2 64 75 236 214 87 253 76 152 102 251 221 164 204 7 196 205 82 137 100 177 32 180 19 122 254 28 20 39 88 208 72 3 152 161 254 110 32 59 86 70 87 201 158 240 58 4 79 137 196 165 188 251 60 250 102 89 103 31 207 161 216 56 75 130 217 2 65 0 161 100 146 86 208 196 63 127 108 25 38 119 65 115 137 3 216 41 118 204 58 103 139 72 12 80 181 42 234 61 73 58 128 194 15 253 231 181 127 146 145 178 43 229 180 19 13 206 252 130 254 231 11 195 241 243 8 171 10 132 3 130 142 222)
      #t
      ())
    #(318
      "special case hash"
      #vu8(51 52 55 56 51 54 54 49 51 57)
      #vu8(48 129 132 2 64 107 63 21 51 245 63 218 116 72 167 16 164 208 227 216 39 140 150 214 86 99 90 142 201 200 96 133 237 35 55 183 51 104 245 197 147 74 70 213 157 199 158 230 195 52 159 199 136 116 192 95 94 94 248 89 234 176 61 216 88 210 194 142 133 2 64 37 207 90 47 38 56 235 242 231 98 56 187 84 218 177 233 110 157 224 214 125 85 121 21 30 34 86 201 82 126 189 77 56 87 115 31 174 132 171 59 86 183 75 200 156 74 153 99 155 12 104 123 42 19 59 247 112 41 213 171 228 165 253 249)
      #t
      ())
    #(319
      "special case hash"
      #vu8(54 52 57 48 53 50 54 48 50)
      #vu8(48 129 132 2 64 111 244 190 93 243 241 44 242 203 120 22 152 94 155 160 9 156 245 137 162 162 35 103 171 224 25 50 135 137 173 80 146 16 125 18 223 237 131 82 161 221 74 217 117 232 97 171 159 156 100 203 107 91 201 140 87 134 36 123 219 78 164 130 157 2 64 94 255 41 230 226 14 158 191 26 198 2 88 156 91 166 75 32 32 209 242 254 232 62 109 12 156 221 161 175 141 124 10 184 229 255 5 158 164 87 185 3 210 253 212 143 248 74 50 227 56 240 39 5 21 251 11 164 76 0 149 36 171 120 128)
      #t
      ())
    #(320
      "special case hash"
      #vu8(52 55 54 51 56 56 55 52 57 54)
      #vu8(48 129 132 2 64 86 185 28 227 127 86 12 28 101 87 247 254 0 41 117 79 135 200 241 13 146 220 82 93 252 180 205 90 150 107 224 232 217 159 192 8 81 232 91 133 130 125 49 200 97 3 76 32 210 172 180 158 79 30 235 216 224 208 33 93 84 219 43 17 2 64 124 236 41 112 254 159 41 60 157 58 103 45 55 119 255 14 223 114 133 69 188 190 0 92 23 142 11 64 95 228 34 58 171 96 221 68 82 27 227 33 103 46 129 68 88 146 145 17 48 230 2 164 184 53 155 179 99 47 144 153 24 224 42 88)
      #t
      ())
    #(321
      "special case hash"
      #vu8(53 55 57 48 50 48 48 56 48)
      #vu8(48 129 132 2 64 73 205 87 226 92 251 104 4 55 5 24 73 105 227 9 6 105 134 5 125 156 11 122 47 135 118 106 173 207 118 237 168 2 141 78 206 172 236 237 145 83 172 151 96 244 117 20 221 221 51 71 58 240 159 240 223 192 0 213 49 48 162 1 14 2 64 115 213 52 189 118 82 38 129 231 17 9 192 124 177 123 9 230 97 193 28 81 155 32 254 109 184 13 71 117 111 132 72 64 183 190 107 149 197 219 73 126 112 108 95 88 199 138 53 10 142 128 46 255 189 85 181 150 123 223 135 206 117 240 100)
      #t
      ())
    #(322
      "special case hash"
      #vu8(53 51 52 52 55 56 55 56 52 56)
      #vu8(48 129 132 2 64 104 13 124 130 187 255 41 27 183 31 45 165 50 241 169 49 235 57 162 34 51 109 94 64 101 124 194 251 18 107 34 71 207 45 174 35 53 85 86 78 164 66 78 195 121 18 179 126 136 102 212 92 57 60 106 145 206 19 45 188 159 70 99 93 2 64 31 12 81 88 86 166 42 246 143 15 35 20 90 173 146 167 125 113 7 216 216 170 70 202 188 199 43 44 8 33 133 219 29 117 209 84 106 78 108 245 39 198 159 229 44 183 110 225 94 170 98 4 68 182 242 114 180 2 118 53 235 232 54 118)
      #t
      ())
    #(323
      "special case hash"
      #vu8(49 57 50 54 54 52 49 48 57 50 48)
      #vu8(48 129 132 2 64 89 255 245 174 151 41 178 28 56 154 18 112 35 96 172 162 87 94 212 164 73 34 225 125 229 124 233 57 121 241 149 86 222 14 37 88 28 252 152 193 166 142 240 1 167 248 209 87 231 89 27 174 164 78 0 60 69 78 148 27 191 158 95 126 2 64 16 145 150 168 11 50 160 165 122 123 205 58 108 231 249 37 209 79 81 198 21 42 216 102 211 55 48 8 214 80 181 175 122 37 226 191 189 89 182 55 31 255 236 253 225 22 210 163 106 141 31 233 23 139 163 179 243 124 9 178 113 165 176 80)
      #t
      ())
    #(324
      "special case hash"
      #vu8(51 55 48 51 57 49 53 55 48 53)
      #vu8(48 129 132 2 64 102 239 36 108 123 128 181 110 14 167 131 172 115 113 81 199 54 16 33 141 0 201 54 244 193 141 90 108 68 243 94 225 157 138 161 87 101 223 253 254 81 170 163 49 18 62 228 197 200 214 114 99 246 149 86 30 124 247 230 72 239 183 164 247 2 64 42 10 196 154 152 76 189 246 108 89 198 93 238 154 60 197 129 107 120 130 175 69 52 30 157 197 20 174 250 236 210 70 140 213 185 103 165 54 84 136 0 70 225 142 26 220 153 31 225 183 188 14 83 121 23 155 163 220 132 188 238 18 198 27)
      #t
      ())
    #(325
      "special case hash"
      #vu8(56 49 53 52 53 55 55 48)
      #vu8(48 129 132 2 64 116 105 118 126 117 18 199 210 148 216 50 144 135 27 92 183 236 93 110 191 5 178 215 101 24 57 114 155 135 39 129 142 158 83 8 117 233 1 183 89 233 44 121 134 16 212 71 53 145 178 207 184 116 40 162 240 177 175 178 93 37 249 134 140 2 64 19 170 101 173 52 56 142 225 2 206 79 224 243 128 29 181 241 190 56 184 245 145 148 106 229 91 231 21 154 46 4 125 3 118 24 206 69 160 152 12 159 104 106 123 238 127 232 199 136 34 98 196 247 198 96 133 150 225 41 0 206 166 32 163)
      #t
      ())
    #(326
      "special case hash"
      #vu8(49 57 53 53 51 48 51 55 55)
      #vu8(48 129 132 2 64 45 222 141 174 136 59 95 91 130 34 178 97 255 25 139 13 70 21 178 35 115 83 128 3 30 55 96 61 151 102 195 166 96 204 186 227 80 212 9 148 235 180 154 9 216 201 2 190 172 248 240 222 28 162 176 164 163 29 0 181 107 216 69 164 2 64 102 4 253 231 10 199 97 66 1 51 98 77 239 92 68 181 213 165 121 93 68 18 221 115 152 58 239 98 144 128 174 71 99 100 151 1 140 213 211 28 139 133 178 176 61 114 23 20 136 66 158 175 75 130 71 170 107 1 4 76 10 228 97 249)
      #t
      ())
    #(327
      "special case hash"
      #vu8(49 50 54 55 56 49 48 57 48 51)
      #vu8(48 129 133 2 64 36 93 191 108 83 162 215 136 27 141 21 122 98 0 217 186 50 67 228 217 193 45 62 222 189 143 249 225 3 198 21 143 137 110 213 188 171 67 56 60 246 190 205 188 240 129 96 74 89 85 8 23 43 191 67 241 82 182 105 196 244 29 33 229 2 65 0 161 223 175 23 166 229 81 254 11 192 204 36 202 197 168 33 77 189 117 8 96 166 3 0 33 10 233 220 74 161 96 247 136 221 88 184 47 150 136 64 117 81 176 162 14 54 112 131 161 160 249 156 53 113 82 40 194 37 47 15 13 219 37 133)
      #t
      ())
    #(328
      "special case hash"
      #vu8(49 49 49 56 48 55 50 48 56 49 53)
      #vu8(48 129 132 2 64 69 80 185 134 251 4 204 127 222 13 200 90 149 161 88 23 148 178 82 16 32 83 45 192 15 181 237 75 14 189 104 52 241 131 243 198 42 87 86 191 91 208 185 165 22 188 61 108 126 129 239 229 81 22 75 157 224 193 82 147 130 149 226 251 2 64 72 89 118 37 61 88 3 45 39 237 97 86 236 21 207 133 52 64 221 236 223 99 189 179 4 225 231 77 19 156 19 25 103 70 100 197 170 237 155 179 4 58 110 138 171 28 162 225 90 253 180 93 51 32 4 39 80 249 234 130 150 252 213 228)
      #t
      ())
    #(329
      "special case hash"
      #vu8(56 51 56 49 56 54 57 50 57 48)
      #vu8(48 129 132 2 64 83 145 131 218 222 166 99 11 212 65 106 73 168 214 231 121 35 3 225 228 77 32 40 114 111 132 105 124 73 108 38 218 204 172 95 196 164 173 52 134 110 113 142 144 103 196 175 27 201 226 44 112 185 78 116 242 130 47 239 146 158 123 173 86 2 64 74 187 117 81 146 161 142 251 46 114 162 251 78 229 30 71 219 109 59 178 27 226 221 239 184 252 255 94 8 74 45 140 140 122 31 68 208 76 84 182 188 187 149 124 20 166 45 117 71 254 204 181 211 242 14 210 0 147 19 109 151 220 182 137)
      #t
      ())
    #(330
      "special case hash"
      #vu8(51 49 51 49 50 56 55 50 55 55)
      #vu8(48 129 132 2 64 32 130 80 162 166 98 248 83 107 92 220 255 161 55 184 60 82 85 18 217 227 205 254 208 32 118 12 27 5 181 95 201 246 108 109 122 140 37 191 164 117 177 7 131 17 83 115 141 85 164 221 7 167 129 146 208 65 105 43 245 53 225 172 4 2 64 61 133 125 221 140 178 70 172 110 210 30 29 197 54 129 144 218 169 155 248 195 100 73 237 211 24 178 120 39 162 76 154 176 49 76 89 38 23 36 154 29 169 253 225 53 188 133 228 196 128 93 5 23 155 64 200 207 78 219 192 173 241 159 70)
      #t
      ())
    #(331
      "special case hash"
      #vu8(49 52 51 51 49 57 50 54 53 51 56)
      #vu8(48 129 132 2 64 101 198 57 170 6 134 129 83 183 118 63 246 139 206 151 199 217 254 47 2 141 155 234 98 50 133 33 78 197 87 47 100 18 116 228 25 168 51 93 236 67 255 242 35 77 237 0 187 1 35 65 29 234 132 62 151 11 251 143 237 74 81 78 228 2 64 63 212 234 181 55 19 35 30 145 145 144 110 240 203 169 196 203 80 252 36 98 140 143 45 177 145 77 108 206 196 145 199 128 201 108 219 27 155 230 166 60 211 121 168 70 57 57 170 138 110 202 99 87 35 127 168 232 41 250 74 56 68 143 127)
      #t
      ())
    #(332
      "special case hash"
      #vu8(51 52 52 57 48 56 50 51 54)
      #vu8(48 129 132 2 64 74 17 12 198 171 161 41 96 58 97 127 15 131 200 215 233 166 97 223 139 87 31 237 132 152 50 45 94 68 139 70 111 121 66 227 154 86 160 133 48 61 219 146 45 181 156 125 202 238 68 222 9 74 120 83 231 23 163 233 40 23 159 188 118 2 64 46 84 132 134 126 112 207 158 59 252 255 48 158 137 238 29 144 153 4 244 185 64 34 174 145 23 117 84 112 97 34 229 196 95 154 114 174 231 100 16 187 132 79 9 248 230 110 14 237 226 135 214 195 101 36 78 118 50 244 120 167 83 10 17)
      #t
      ())
    #(333
      "special case hash"
      #vu8(54 56 50 57 56 51 53 57 50 57)
      #vu8(48 129 133 2 64 57 200 150 192 64 153 103 249 190 17 253 255 249 232 247 176 139 127 44 244 75 228 113 212 234 30 37 105 50 52 68 54 102 58 77 168 254 40 255 231 157 39 116 88 233 234 47 89 122 125 184 71 65 75 178 173 36 56 3 124 182 196 166 205 2 65 0 145 13 83 171 44 92 86 191 5 131 116 41 229 227 208 138 2 208 230 2 39 40 48 41 121 34 188 145 226 159 79 152 130 113 253 214 15 7 14 176 170 30 87 215 66 202 117 150 86 56 39 79 60 251 43 123 40 209 161 70 42 56 79 163)
      #t
      ())
    #(334
      "special case hash"
      #vu8(51 52 52 53 49 53 56 48 50 51)
      #vu8(48 129 133 2 64 67 23 1 254 154 65 193 205 160 162 59 108 79 255 183 18 139 83 107 201 192 250 20 85 215 38 58 240 74 26 29 64 154 150 162 224 74 86 225 145 40 56 212 173 69 174 157 102 219 125 147 71 225 96 73 91 75 231 113 34 133 42 40 29 2 65 0 130 76 177 56 162 159 34 67 93 64 24 128 85 110 22 197 133 147 73 189 25 245 60 92 32 81 106 206 77 132 197 198 0 191 97 17 78 5 105 124 222 18 22 134 146 27 151 116 184 59 132 208 12 44 214 183 140 197 146 12 99 33 135 142)
      #t
      ())
    #(335
      "special case hash"
      #vu8(49 50 54 57 55 57 56 55 54 52 52)
      #vu8(48 129 132 2 64 104 78 110 65 226 88 133 6 182 236 41 180 88 48 26 121 129 193 9 51 0 103 90 156 254 192 241 149 105 109 53 161 96 104 196 226 84 36 252 155 39 109 132 247 175 235 57 175 9 110 255 236 255 9 166 172 103 50 112 149 226 226 92 42 2 64 28 48 128 183 247 12 235 209 147 10 43 139 246 7 49 232 56 15 174 138 8 240 49 26 39 171 193 93 17 5 228 170 98 98 96 206 232 101 210 207 34 74 199 169 37 196 235 91 171 206 47 236 181 226 13 97 247 165 219 187 227 58 1 147)
      #t
      ())
    #(336
      "special case hash"
      #vu8(51 57 57 50 52 50 53 53 51)
      #vu8(48 129 132 2 64 76 86 177 58 129 163 156 183 242 118 123 17 95 180 9 185 203 153 136 170 197 136 91 99 39 18 177 51 242 59 236 84 198 253 83 49 142 38 95 188 177 132 118 113 115 57 234 144 18 89 254 98 154 57 98 103 116 30 244 78 68 117 167 187 2 64 36 252 166 128 100 187 248 190 225 85 28 45 0 181 74 22 181 11 72 33 194 153 226 170 26 115 223 226 248 28 115 196 9 147 22 106 184 237 155 216 72 156 254 82 62 65 207 110 53 239 122 122 51 27 216 210 164 219 119 223 244 13 17 59)
      #t
      ())
    #(337
      "special case hash"
      #vu8(49 54 48 49 57 55 55 57 55 55)
      #vu8(48 129 132 2 64 104 42 252 59 146 89 219 201 22 1 25 1 70 25 55 90 125 73 22 189 8 169 49 207 120 119 135 95 199 119 209 138 60 170 242 83 198 5 193 25 115 153 239 147 114 185 245 133 165 132 20 152 86 95 181 119 1 129 96 246 47 159 59 107 2 64 86 167 226 220 8 246 251 86 27 98 15 9 232 48 206 111 213 43 73 218 129 95 156 62 137 149 155 13 47 204 121 173 251 109 217 249 221 240 237 158 41 91 114 140 48 94 255 203 77 151 239 222 64 217 61 194 182 55 126 157 79 114 190 21)
      #t
      ())
    #(338
      "special case hash"
      #vu8(49 48 56 55 56 55 53 53 49 52 53)
      #vu8(48 129 133 2 65 0 138 104 84 172 244 200 3 39 222 248 227 236 16 70 222 79 53 73 141 247 152 169 22 237 200 68 49 103 77 78 180 93 32 85 156 205 184 193 161 71 84 222 110 244 4 181 232 166 108 54 40 171 172 208 126 140 164 6 221 192 217 117 96 230 2 64 30 90 7 248 43 243 32 183 116 164 96 243 235 245 52 150 239 99 47 122 51 213 31 162 132 127 99 147 31 239 19 17 181 60 33 56 64 234 60 110 112 210 132 106 87 101 153 2 106 193 102 144 37 142 79 200 237 187 18 17 129 111 193 27)
      #t
      ())
    #(339
      "special case hash"
      #vu8(55 48 48 52 50 53 50 57 57 57)
      #vu8(48 129 132 2 64 27 6 5 190 32 228 55 75 23 228 234 194 107 210 187 149 112 32 225 224 81 8 39 155 210 105 96 222 100 211 158 242 209 156 200 204 190 143 215 46 18 36 18 194 198 32 205 44 70 64 38 139 56 223 147 25 59 138 199 224 216 56 44 165 2 64 40 153 39 237 8 239 78 14 90 65 114 135 117 161 13 222 140 108 198 224 143 158 171 165 16 119 200 128 197 170 214 71 188 47 53 222 245 146 208 221 209 211 225 64 182 231 86 196 107 227 96 19 204 90 110 91 185 135 11 92 77 202 242 172)
      #t
      ())
    #(340
      "special case hash"
      #vu8(49 53 54 53 51 50 53 50 56 51)
      #vu8(48 129 133 2 64 55 56 68 6 51 35 190 180 230 164 210 130 25 53 146 223 57 220 87 103 81 154 128 49 182 45 138 171 213 222 214 149 64 123 196 104 122 192 157 233 63 163 138 137 65 44 254 106 203 92 9 151 87 121 169 228 23 2 225 129 87 184 68 87 2 65 0 146 98 1 76 202 203 144 164 184 51 59 151 67 242 91 137 130 95 63 125 33 113 230 243 175 216 44 4 138 152 5 116 91 120 18 180 108 44 84 71 254 16 14 59 238 160 236 59 180 253 237 55 68 83 30 176 12 77 241 224 93 57 197 115)
      #t
      ())
    #(341
      "special case hash"
      #vu8(50 51 56 50 54 51 52 50 51 53 48)
      #vu8(48 129 132 2 64 121 143 48 8 166 40 173 101 199 248 58 181 31 46 123 158 29 27 116 202 216 100 51 76 222 51 155 163 210 215 63 19 84 154 24 198 188 143 130 114 213 160 54 87 15 69 161 207 242 5 28 188 72 232 169 144 195 48 59 214 223 136 126 217 2 64 96 161 160 239 146 213 194 139 109 106 254 178 113 141 236 181 118 97 37 58 197 253 46 19 99 155 4 254 109 65 126 235 64 215 83 20 111 219 128 73 55 172 107 169 44 143 139 249 106 158 12 129 83 46 240 57 16 191 76 224 72 59 243 157)
      #t
      ())
    #(342
      "special case hash"
      #vu8(49 52 52 55 56 52 55 48 54 53)
      #vu8(48 129 134 2 65 0 149 130 191 168 162 18 186 141 8 82 164 105 11 255 124 147 123 175 221 210 248 68 125 133 10 229 24 56 159 32 24 43 248 59 0 5 44 59 61 198 91 26 112 207 33 108 223 166 45 205 23 165 173 243 49 162 167 50 186 174 238 192 173 157 2 65 0 164 161 228 31 95 219 185 0 13 15 59 190 49 25 149 162 138 248 107 155 3 52 222 84 152 130 150 76 83 17 170 82 216 125 233 98 103 6 187 37 20 193 207 64 158 153 7 244 233 30 154 73 214 85 36 180 223 203 165 32 146 2 85 6)
      #t
      ())
    #(343
      "special case hash"
      #vu8(49 52 50 54 48 50 48 53 53 52 52)
      #vu8(48 129 132 2 64 77 103 144 196 156 130 167 172 6 206 132 33 83 148 200 108 112 17 177 181 247 20 115 139 26 212 215 176 16 216 84 103 99 246 2 201 175 30 103 72 162 125 41 123 237 4 235 234 212 191 98 144 67 228 222 179 152 162 125 79 134 243 215 149 2 64 106 109 207 156 137 140 7 210 79 19 231 99 102 253 251 118 237 221 65 87 239 43 239 169 16 82 73 52 168 212 16 156 18 224 30 196 93 159 212 151 143 178 145 6 129 229 70 3 113 187 252 118 82 135 3 232 184 168 188 190 138 108 138 57)
      #t
      ())
    #(344
      "special case hash"
      #vu8(49 57 57 51 56 51 53 50 56 53)
      #vu8(48 129 133 2 64 101 180 158 191 81 152 218 57 90 161 130 186 49 212 115 18 154 204 47 214 95 220 13 242 205 89 161 198 138 82 120 130 201 34 247 57 147 57 99 85 189 108 223 78 79 233 196 46 23 22 246 110 175 62 14 115 37 61 95 97 140 48 6 57 2 65 0 141 235 3 204 70 64 25 76 226 48 218 29 119 170 203 0 116 39 85 127 112 212 160 238 129 72 18 197 96 134 95 20 242 74 143 121 57 60 239 26 21 157 40 52 217 253 238 10 22 168 91 205 92 213 14 15 124 38 50 48 54 51 95 253)
      #t
      ())
    #(345
      "special case hash"
      #vu8(52 50 57 50 49 53 51 53 50 51)
      #vu8(48 129 133 2 65 0 135 62 57 231 246 183 221 229 228 12 167 253 75 142 133 243 205 238 174 70 113 214 50 24 185 247 25 84 69 102 29 160 209 245 70 7 89 154 231 83 18 2 235 186 233 181 161 165 141 55 196 161 253 63 255 142 150 84 127 221 63 118 248 131 2 64 116 191 109 176 147 38 14 255 108 172 159 6 219 22 70 192 131 228 188 9 200 241 117 90 163 2 236 247 145 105 121 1 156 173 139 237 115 144 7 151 12 44 238 135 208 37 44 198 143 5 111 113 3 48 198 95 197 101 81 41 115 18 178 32)
      #t
      ())
    #(346
      "special case hash"
      #vu8(52 52 53 57 57 48 49 52 57 54)
      #vu8(48 129 132 2 64 1 39 173 163 63 244 198 68 30 121 246 1 70 81 223 130 212 209 12 244 96 26 197 103 212 65 66 176 220 252 147 63 124 138 46 35 29 13 41 12 191 4 45 246 17 45 111 225 109 221 44 30 150 247 152 32 92 191 89 82 104 169 65 87 2 64 34 53 65 28 144 204 154 193 135 45 35 142 124 125 141 235 7 85 179 102 44 217 242 73 191 60 132 78 117 12 245 143 144 254 144 143 40 177 56 103 110 249 203 36 239 187 175 171 141 59 235 193 119 165 179 42 50 209 123 145 252 73 176 221)
      #t
      ())
    #(347
      "special case hash"
      #vu8(49 51 57 51 57 55 49 49 55 49)
      #vu8(48 129 133 2 65 0 130 68 199 51 23 181 62 55 71 61 123 238 249 248 229 189 49 237 128 31 155 189 185 99 155 127 15 36 224 50 156 121 20 149 155 240 205 32 6 152 111 168 31 127 75 64 2 80 51 67 174 192 70 93 143 30 209 124 151 116 110 214 202 237 2 64 20 188 108 196 209 85 55 113 117 234 149 195 89 198 150 36 175 225 133 121 1 68 33 182 106 20 14 135 193 67 159 125 120 245 100 93 75 216 192 39 84 149 38 134 88 85 255 240 252 82 127 73 54 35 195 100 123 92 144 29 141 228 184 41)
      #t
      ())
    #(348
      "special case hash"
      #vu8(50 51 57 48 54 57 54 52 57 53)
      #vu8(48 129 131 2 63 17 221 204 105 221 165 103 100 175 219 234 205 97 91 60 41 80 88 121 67 113 110 214 218 199 101 134 121 162 27 43 76 219 232 90 94 64 148 222 242 83 237 229 127 49 239 117 136 238 49 36 216 5 171 193 46 203 247 245 90 124 181 93 2 64 17 157 114 43 195 114 164 230 197 180 227 159 223 37 129 111 35 135 208 14 240 64 208 173 117 189 162 121 112 0 28 229 205 245 162 212 221 139 200 4 33 159 232 233 113 82 150 173 181 51 3 185 15 44 92 31 63 148 179 245 242 253 168 194)
      #t
      ())
    #(349
      "special case hash"
      #vu8(49 49 52 52 54 48 53 54 50 54 52)
      #vu8(48 129 132 2 64 18 229 156 212 132 173 186 125 15 194 228 2 214 202 240 228 74 14 210 82 168 145 98 61 38 135 144 43 81 131 118 239 215 52 167 183 83 61 121 124 232 241 69 2 139 66 140 24 245 242 4 67 197 63 4 230 4 170 49 19 21 233 38 109 2 64 71 115 110 96 52 95 28 185 191 123 209 23 216 203 130 201 65 23 159 8 147 164 183 216 118 47 123 201 50 32 37 165 100 172 189 123 59 180 125 227 132 164 88 47 51 123 128 158 132 196 139 8 97 10 61 253 12 135 93 254 155 136 133 243)
      #t
      ())
    #(350
      "special case hash"
      #vu8(54 56 53 48 48 52 55 53 48)
      #vu8(48 129 133 2 64 0 154 95 100 12 218 175 38 241 193 92 252 92 39 73 138 130 49 87 31 34 5 49 84 204 47 82 135 124 190 92 242 137 197 83 215 189 248 107 25 115 38 54 4 213 148 229 41 171 45 29 241 6 109 136 95 213 160 97 246 56 231 163 70 2 65 0 145 254 51 224 80 116 139 215 215 104 131 160 61 95 41 118 72 122 3 38 163 163 197 239 39 108 56 169 202 9 150 37 112 236 200 184 159 147 26 20 84 151 183 122 72 42 115 18 137 194 247 156 74 123 135 25 40 179 158 148 161 72 140 131)
      #t
      ())
    #(351
      "special case hash"
      #vu8(50 50 50 48 53 51 54 48 54 49 57)
      #vu8(48 129 133 2 64 104 192 1 172 140 136 4 192 169 195 143 24 16 158 38 180 232 161 186 24 208 251 168 84 127 112 227 152 159 60 81 8 113 232 15 138 123 49 79 197 33 183 199 156 59 179 182 145 86 10 185 214 153 162 73 21 252 104 47 218 193 240 28 111 2 65 0 140 47 160 164 217 96 210 104 132 66 219 214 99 232 95 70 216 88 250 170 255 145 183 186 154 233 107 166 97 150 99 120 15 5 149 13 10 216 155 121 205 105 93 20 222 229 127 39 188 169 159 1 101 241 212 187 18 61 23 177 164 107 218 50)
      #t
      ())
    #(352
      "special case hash"
      #vu8(54 50 49 53 54 54 53 49 50 52)
      #vu8(48 129 133 2 64 75 30 97 57 78 108 38 43 30 74 99 234 124 244 30 102 0 32 178 71 53 141 27 21 170 236 149 51 213 135 216 36 37 168 96 220 159 122 142 43 23 97 57 61 63 194 169 209 172 67 58 6 98 161 226 238 37 85 252 156 56 73 173 75 2 65 0 134 218 235 25 97 239 66 42 9 245 59 250 14 95 252 127 82 163 181 94 118 240 194 235 183 248 176 52 179 207 175 240 140 82 122 21 169 249 126 141 9 218 129 46 57 93 92 97 22 128 183 246 81 212 22 148 240 181 143 233 235 49 11 107)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 107 103 99 161 134 170 81 89 4 159 46 165 200 162 50 220 190 99 55 176 217 46 150 157 165 42 243 37 36 246 29 163 9 127 163 20 172 121 34 52 229 152 103 175 50 4 120 119 75 212 199 133 160 51 6 36 192 180 186 190 37 127 101 151 46 64 99 228 94 19 213 5 225 77 182 245 254 243 83 141 177 129 204 26 110 10 147 129 250 63 3 33 190 71 244 13 192 90 184 14 156 170 59 117 89 198 117 53 232 61 152 79 59 149 87 17 141 222 41 197 231 165 164 161 141 12 157 67)
  :der-encode
  #t
  :tests
  '(#(353
      "k*G has a large x-coordinate"
      #vu8(49 50 51 52 48 48)
      #vu8(48 102 2 33 1 40 15 62 191 79 29 66 41 109 71 64 17 102 247 112 159 10 208 43 174 37 36 235 167 115 34 201 211 187 145 72 137 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 102)
      #t
      ())
    #(354
      "r too large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 113 125 77 155 0 155 198 104 66 174 205 161 42 230 163 128 230 40 129 255 47 45 130 198 133 40 170 96 86 88 58 72 242 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 102)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 143 103 105 89 191 218 2 211 115 151 122 128 82 139 97 212 20 143 142 171 194 2 127 181 181 219 88 39 103 125 20 122 114 134 97 253 92 84 107 106 213 240 168 154 52 116 73 170 47 50 17 46 59 189 168 3 80 137 84 121 41 181 106 85 120 196 92 224 166 136 174 163 144 212 228 219 77 72 210 205 178 24 101 188 140 239 209 95 43 186 228 39 10 183 101 167 111 4 148 73 241 124 225 172 127 81 57 119 206 10 82 55 229 189 99 180 175 146 166 207 73 24 217 27 204 208 242 121)
  :der-encode
  #t
  :tests
  '(#(355
      "r,s are large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 101 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 100)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 20 243 138 251 200 214 190 89 238 112 117 189 253 38 22 164 75 134 83 86 135 208 92 35 71 85 49 115 205 20 223 138 189 10 76 16 44 98 232 20 17 39 220 102 210 220 170 227 140 147 36 152 14 222 32 70 136 187 159 145 107 169 241 168 35 243 88 19 147 22 202 39 184 135 78 104 185 51 136 249 120 13 155 167 226 59 132 33 191 173 56 161 158 209 97 71 126 10 5 56 11 235 215 161 21 109 195 47 105 4 118 121 250 43 151 127 173 192 194 158 188 30 188 234 108 193 137 76)
  :der-encode
  #t
  :tests
  '(#(356
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 2 64 67 56 237 149 172 13 9 197 29 112 68 213 159 27 194 111 143 63 17 252 123 242 248 27 223 11 33 181 192 185 200 155 234 60 198 221 139 54 146 200 49 11 152 17 123 80 141 19 0 115 231 75 2 179 186 72 47 176 165 239 16 54 163 253)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 61 249 229 134 65 11 166 51 185 241 101 210 155 7 59 103 161 103 41 124 180 8 104 137 229 43 146 90 156 178 90 204 76 133 229 184 17 34 33 186 73 236 201 154 12 183 251 51 133 53 42 113 64 7 47 121 194 244 67 150 238 139 103 134 34 199 182 24 94 75 102 122 92 196 39 201 156 165 63 229 79 3 223 238 202 146 186 44 26 225 242 179 254 235 237 234 186 98 238 59 160 101 172 83 3 194 213 105 105 240 179 65 72 111 41 243 178 160 109 243 40 48 242 89 153 196 47 136)
  :der-encode
  #t
  :tests
  '(#(357
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 2 64 57 201 130 226 164 245 96 197 9 5 88 136 246 3 23 230 181 187 97 213 148 215 189 79 88 151 57 107 243 232 26 9 207 112 61 49 159 155 74 9 45 70 213 242 2 255 93 219 119 108 87 232 237 232 69 77 239 112 55 181 65 201 116 54)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 10 214 106 189 186 159 190 225 253 209 185 224 219 154 116 96 244 96 222 57 22 239 209 109 125 156 108 199 166 204 159 165 204 3 2 13 159 140 144 148 192 203 82 254 27 171 214 60 105 171 32 240 74 17 110 206 227 160 9 213 172 181 114 157 91 71 101 133 143 105 107 97 191 107 58 24 18 208 87 190 233 59 20 56 54 167 100 146 121 113 251 116 97 65 181 66 47 192 119 247 60 170 0 15 98 206 0 16 53 2 209 236 176 149 79 44 173 96 178 36 236 111 225 3 48 9 214 76)
  :der-encode
  #t
  :tests
  '(#(358
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 3 2 1 1)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 151 65 194 99 78 66 241 134 86 37 169 217 126 188 84 154 200 198 126 182 208 60 210 167 197 152 127 15 81 100 201 190 151 117 227 44 93 89 211 23 93 228 104 226 67 89 16 33 171 98 63 107 9 179 26 64 40 99 155 4 22 132 243 89 71 13 223 241 115 198 124 113 5 95 95 113 91 123 116 153 56 0 48 89 56 187 218 137 210 75 24 127 72 25 195 5 117 213 226 39 95 8 203 243 186 134 177 161 31 18 103 29 46 176 9 208 37 22 243 209 218 10 175 205 29 129 160 193)
  :der-encode
  #t
  :tests
  '(#(359
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 3 2 1 3)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 139 6 167 118 22 234 33 241 64 147 211 163 115 168 245 113 6 167 25 57 242 84 21 246 169 170 0 22 64 181 237 10 223 57 252 47 94 88 212 35 60 46 239 228 241 112 73 157 165 126 157 206 183 248 205 95 56 196 24 31 167 210 247 104 7 74 145 233 158 171 206 209 189 163 88 101 62 9 181 30 184 177 169 82 111 90 27 50 199 237 211 183 1 245 175 65 3 49 73 113 213 192 130 197 242 0 83 195 182 109 57 161 203 108 77 49 13 190 137 85 70 137 45 66 150 217 110 255)
  :der-encode
  #t
  :tests
  '(#(360
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 3 2 1 4)
      #t
      ())
    #(361
      "r is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 169 0 108 2 1 4)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 121 47 236 238 179 22 99 86 209 10 235 9 64 18 66 148 52 24 2 146 76 121 242 57 27 119 135 86 87 193 127 85 149 91 40 104 92 194 32 63 24 194 32 4 186 177 218 81 104 150 240 27 5 41 200 4 36 91 170 58 105 48 179 85 38 222 183 62 55 33 118 204 115 88 192 66 71 146 58 121 17 129 206 114 193 131 80 96 70 230 157 228 151 109 79 38 55 241 30 112 95 31 154 90 15 153 238 161 132 30 84 12 106 164 61 79 178 0 48 215 13 74 84 251 106 110 133 89)
  :der-encode
  #t
  :tests
  '(#(362
      "s is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 1 3 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 187 214 240)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 129 180 42 218 172 2 165 253 135 160 74 22 221 194 51 48 117 119 143 19 62 160 175 102 4 156 114 160 103 33 227 146 73 121 36 158 4 41 30 75 153 212 236 244 72 179 253 197 229 110 162 51 129 214 208 110 35 1 25 101 209 101 56 22 36 67 39 249 213 156 166 120 117 117 187 119 7 239 38 114 241 19 186 122 48 45 105 194 159 234 111 246 111 68 157 205 59 39 59 51 152 72 23 118 194 242 166 133 203 109 222 49 225 118 190 143 43 120 95 237 49 59 229 115 12 102 36 237)
  :der-encode
  #t
  :tests
  '(#(363
      "small r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 2 1 0 2 64 18 213 233 18 92 199 31 190 184 108 33 126 9 189 146 182 70 198 221 58 27 225 214 166 237 77 128 38 113 39 228 181 180 188 74 172 125 93 58 160 3 49 20 200 90 172 42 27 255 61 239 0 29 36 141 10 84 131 220 46 166 111 90 193)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 1 160 224 11 180 166 105 241 15 89 68 137 164 47 27 171 211 160 40 181 234 117 117 122 152 108 85 246 21 148 105 117 43 136 187 233 245 47 36 34 213 3 164 217 168 73 195 218 212 16 166 220 78 78 50 185 84 105 224 147 134 6 52 1 87 76 80 17 40 144 100 89 162 58 249 59 152 48 226 151 243 231 61 49 115 223 120 7 103 155 113 60 230 179 79 100 177 238 117 71 185 39 228 49 5 17 140 73 107 154 60 30 2 100 232 75 91 15 180 89 88 42 249 142 223 12 17 127)
  :der-encode
  #t
  :tests
  '(#(364
      "smallish r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 75 2 7 45 155 77 52 121 82 204 2 64 118 117 44 226 137 195 143 34 222 127 117 208 250 109 160 86 244 115 199 113 148 222 147 29 151 239 214 84 33 255 62 200 44 87 166 57 58 66 112 46 20 162 216 49 118 136 101 171 147 50 129 171 241 188 245 42 126 246 183 63 35 115 201 238)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 13 196 197 99 155 118 144 21 124 33 11 117 231 160 6 217 207 223 128 249 208 178 187 214 67 3 104 144 168 22 138 136 148 123 25 122 169 166 0 71 205 143 110 119 192 119 123 185 224 157 167 55 219 190 87 169 119 166 174 7 7 152 53 100 96 176 164 157 79 149 120 39 63 110 90 179 135 49 148 41 46 137 62 6 197 163 155 177 248 160 85 31 78 1 202 70 10 3 167 124 53 207 248 215 214 224 243 59 138 136 172 220 54 234 229 168 58 18 155 254 236 194 166 137 54 136 61 145)
  :der-encode
  #t
  :tests
  '(#(365
      "100-bit r and small s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 82 2 13 16 51 230 126 55 179 43 68 85 128 191 78 253 2 65 0 156 231 102 0 106 81 48 0 94 121 202 221 186 4 48 39 8 72 122 39 130 59 209 211 217 202 10 128 31 79 188 11 131 18 106 161 145 26 212 74 253 106 119 12 117 61 97 159 239 112 126 124 119 63 70 125 229 115 139 53 51 56 147 205)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 134 125 253 215 38 206 233 49 37 109 217 170 224 193 166 96 161 43 29 253 107 175 24 11 53 227 156 15 147 203 249 128 12 92 241 27 41 241 134 120 211 37 18 31 178 134 84 90 81 45 216 246 194 203 129 229 152 208 95 196 12 252 249 220 145 212 210 21 63 102 117 147 226 95 238 66 227 157 175 209 129 25 116 148 62 135 93 252 198 186 220 14 162 45 180 33 38 55 190 113 198 183 67 117 196 60 251 247 25 8 134 145 174 199 14 105 30 70 237 254 140 205 180 206 252 177 53 30)
  :der-encode
  #t
  :tests
  '(#(366
      "small r and 100 bit s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 2 1 0 2 64 2 156 13 226 33 107 171 114 175 158 200 35 65 30 126 228 68 72 43 194 104 174 27 169 6 78 4 1 150 9 117 125 149 178 224 197 163 253 227 119 168 127 205 56 179 47 128 97 189 61 200 28 187 219 150 202 98 110 101 130 186 97 220 49)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 52 48 140 125 110 170 27 215 216 237 192 47 198 39 124 82 113 202 132 116 40 255 33 13 96 120 236 150 141 244 232 115 14 33 188 119 21 167 238 133 167 53 40 2 70 108 10 178 53 96 146 155 171 73 41 101 9 147 127 231 205 110 220 2 54 73 26 41 184 110 160 230 18 79 75 114 16 31 72 35 11 220 31 91 54 210 230 80 12 63 253 75 169 129 139 67 80 70 51 90 45 161 90 137 188 81 17 114 4 211 48 131 42 188 15 123 9 165 157 130 187 176 29 113 118 45 141 245)
  :der-encode
  #t
  :tests
  '(#(367
      "100-bit r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 81 2 13 6 37 34 187 211 236 190 124 57 233 62 124 37 2 64 2 156 13 226 33 107 171 114 175 158 200 35 65 30 126 228 68 72 43 194 104 174 27 169 6 78 4 1 150 9 117 125 149 178 224 197 163 253 227 119 168 127 205 56 179 47 128 97 189 61 200 28 187 219 150 202 98 110 101 130 186 97 220 49)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 120 211 90 28 138 131 153 115 0 160 46 180 119 145 110 112 149 176 1 191 196 115 65 82 143 117 198 206 190 253 45 89 197 213 239 174 174 156 91 216 173 75 219 173 118 218 28 188 211 84 122 149 211 146 223 245 60 232 91 196 228 178 63 249 75 179 66 126 96 116 19 143 192 228 56 50 10 49 78 32 54 113 55 19 59 79 238 99 216 14 207 181 147 22 102 176 135 61 205 69 106 54 153 78 223 218 117 176 243 234 129 115 34 119 231 122 220 67 164 129 255 15 14 212 210 243 127 240)
  :der-encode
  #t
  :tests
  '(#(368
      "r and s^-1 are close to n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 65 0 170 221 157 184 219 233 196 139 63 212 230 174 51 201 252 7 203 48 141 179 179 201 210 14 214 99 156 202 112 51 8 112 85 62 92 65 76 169 38 25 65 134 97 25 127 172 16 71 29 177 211 129 8 93 218 221 181 135 150 130 156 168 255 233 2 64 56 244 137 232 73 77 236 46 106 156 76 228 187 237 254 173 67 186 217 230 145 67 70 4 242 33 52 67 122 187 173 122 199 20 201 107 25 141 183 93 192 130 32 93 213 57 90 194 95 59 70 128 88 31 72 244 145 215 220 214 52 56 85 120)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 144 25 190 32 246 64 236 178 183 195 49 27 205 168 112 149 73 56 167 128 104 108 6 63 224 171 38 245 123 166 5 17 255 60 238 50 134 216 217 4 135 235 128 20 120 138 31 19 78 213 154 119 79 219 139 13 36 119 11 242 48 27 45 24 8 254 147 77 201 17 209 92 68 229 155 144 38 129 30 124 216 253 216 116 65 13 81 165 111 90 234 19 123 252 74 142 133 183 235 167 82 137 73 205 171 196 211 58 239 22 21 125 20 227 245 246 139 222 93 225 197 25 105 23 165 109 171 41)
  :der-encode
  #t
  :tests
  '(#(369
      "s == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 64 56 244 137 232 73 77 236 46 106 156 76 228 187 237 254 173 67 186 217 230 145 67 70 4 242 33 52 67 122 187 173 122 199 20 201 107 25 141 183 93 192 130 32 93 213 57 90 194 95 59 70 128 88 31 72 244 145 215 220 214 52 56 85 120 2 1 1)
      #t
      ())
    #(370
      "s == 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 64 56 244 137 232 73 77 236 46 106 156 76 228 187 237 254 173 67 186 217 230 145 67 70 4 242 33 52 67 122 187 173 122 199 20 201 107 25 141 183 93 192 130 32 93 213 57 90 194 95 59 70 128 88 31 72 244 145 215 220 214 52 56 85 120 2 1 0)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 65 125 184 233 95 137 19 20 87 152 62 117 55 144 9 144 93 45 128 8 183 144 81 157 101 230 80 211 182 10 50 86 60 24 197 175 208 108 163 20 188 58 23 116 96 135 165 120 206 120 203 182 12 181 153 207 13 217 207 242 42 203 132 207 11 134 242 229 124 226 152 200 91 194 143 61 2 116 207 49 64 234 95 198 1 95 75 99 111 178 113 218 9 68 94 21 173 203 96 174 31 109 0 26 212 226 94 109 105 118 114 54 204 22 231 37 245 215 178 175 68 153 57 1 122 140 140 133)
  :der-encode
  #t
  :tests
  '(#(371
      "point at infinity during verify"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 85 110 206 220 109 244 226 69 159 234 115 87 25 228 254 3 229 152 70 217 217 228 233 7 107 49 206 101 56 25 132 56 42 159 46 32 166 84 147 12 160 195 48 140 191 214 8 35 142 216 233 192 132 46 237 110 218 195 203 65 78 84 128 52 2 64 56 244 137 232 73 77 236 46 106 156 76 228 187 237 254 173 67 186 217 230 145 67 70 4 242 33 52 67 122 187 173 122 199 20 201 107 25 141 183 93 192 130 32 93 213 57 90 194 95 59 70 128 88 31 72 244 145 215 220 214 52 56 85 120)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 154 142 12 42 164 149 82 3 223 134 109 68 234 50 13 98 250 67 241 186 234 188 205 52 236 8 73 179 250 25 190 41 0 202 16 103 124 3 109 169 219 181 28 166 3 129 205 88 223 171 155 42 31 111 119 107 113 42 34 214 87 87 133 213 27 237 101 44 247 117 217 27 255 17 249 136 101 74 222 141 210 132 21 183 192 222 125 44 116 36 37 108 63 215 30 156 79 171 241 239 243 128 253 230 248 168 254 13 21 96 209 33 186 101 97 132 81 239 96 249 53 210 146 172 42 38 114 156)
  :der-encode
  #t
  :tests
  '(#(372
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 85 110 206 220 109 244 226 69 159 234 115 87 25 228 254 3 229 152 70 217 217 228 233 7 107 49 206 101 56 25 132 56 42 159 46 32 166 84 147 12 160 195 48 140 191 214 8 35 142 216 233 192 132 46 237 110 218 195 203 65 78 84 128 52 2 64 85 110 206 220 109 244 226 69 159 234 115 87 25 228 254 3 229 152 70 217 217 228 233 7 107 49 206 101 56 25 132 56 42 159 46 32 166 84 147 12 160 195 48 140 191 214 8 35 142 216 233 192 132 46 237 110 218 195 203 65 78 84 128 52)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 35 250 206 98 6 44 237 149 199 136 143 207 125 76 90 243 210 162 161 203 240 134 147 38 73 105 98 24 130 115 138 215 152 71 111 172 112 54 27 191 44 199 156 36 159 197 2 113 193 191 220 63 91 202 32 235 204 234 140 54 88 248 212 227 7 60 26 116 179 196 106 32 93 151 7 120 51 220 161 243 99 247 111 103 182 142 225 118 67 133 40 170 118 171 188 54 182 240 169 136 251 34 95 231 163 62 232 133 31 242 78 55 19 130 67 226 178 29 168 82 163 52 219 208 54 207 16 57)
  :der-encode
  #t
  :tests
  '(#(373
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 85 110 206 220 109 244 226 69 159 234 115 87 25 228 254 3 229 152 70 217 217 228 233 7 107 49 206 101 56 25 132 56 42 159 46 32 166 84 147 12 160 195 48 140 191 214 8 35 142 216 233 192 132 46 237 110 218 195 203 65 78 84 128 52 2 64 85 110 206 220 109 244 226 69 159 234 115 87 25 228 254 3 229 152 70 217 217 228 233 7 107 49 206 101 56 25 132 56 42 159 46 32 166 84 147 12 160 195 48 140 191 214 8 35 142 216 233 192 132 46 237 110 218 195 203 65 78 84 128 53)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 56 89 124 104 234 191 190 100 139 202 11 62 141 35 95 144 130 207 21 214 148 225 78 104 107 30 10 137 183 62 61 188 52 110 187 222 56 218 44 96 47 233 117 194 26 31 188 143 54 59 89 41 3 208 45 68 52 250 229 46 232 204 59 58 87 43 130 8 71 71 234 90 240 99 57 54 181 112 53 67 101 238 45 127 186 76 64 75 214 148 88 235 130 80 7 237 137 6 126 255 236 107 46 103 195 45 25 126 140 40 236 254 250 126 231 156 234 9 215 235 36 137 37 197 67 195 11 165)
  :der-encode
  #t
  :tests
  '(#(374
      "u1 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 56 244 137 232 73 77 236 46 106 156 76 228 187 237 254 173 67 186 217 230 145 67 70 4 242 33 52 67 122 187 173 122 199 20 201 107 25 141 183 93 192 130 32 93 213 57 90 194 95 59 70 128 88 31 72 244 145 215 220 214 52 56 85 120 2 64 67 248 0 251 234 249 35 140 88 175 121 91 205 173 4 188 73 205 133 12 57 77 51 130 149 51 86 176 35 33 2 129 117 123 48 225 146 24 163 124 189 97 32 134 251 193 88 202 168 180 225 172 178 236 0 131 126 93 148 31 52 47 179 204)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 157 96 236 145 151 106 143 199 248 66 40 118 204 178 40 112 236 168 211 155 140 223 195 1 147 227 187 34 161 14 55 197 55 160 146 219 176 18 76 140 75 38 101 90 217 97 39 211 20 11 193 249 85 110 186 191 71 127 217 89 81 180 176 221 43 193 252 215 214 132 15 216 58 94 152 35 97 195 4 163 78 209 14 135 58 164 99 126 202 194 159 85 92 5 38 181 25 194 56 206 11 0 45 126 47 152 34 93 236 136 76 149 215 66 232 111 166 140 230 232 31 101 66 254 129 115 12 251)
  :der-encode
  #t
  :tests
  '(#(375
      "u1 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 56 244 137 232 73 77 236 46 106 156 76 228 187 237 254 173 67 186 217 230 145 67 70 4 242 33 52 67 122 187 173 122 199 20 201 107 25 141 183 93 192 130 32 93 213 57 90 194 95 59 70 128 88 31 72 244 145 215 220 214 52 56 85 120 2 64 102 229 156 188 240 240 160 254 231 37 109 82 102 28 247 75 129 99 8 167 122 124 158 140 65 48 70 26 77 18 5 238 223 195 43 95 186 144 130 156 132 37 64 146 131 234 183 124 116 252 241 212 85 113 218 90 55 42 2 99 104 121 76 157)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 169 17 223 53 14 149 192 218 77 86 195 196 74 132 170 216 142 232 94 98 140 204 68 197 225 49 223 173 138 63 198 158 237 156 98 14 216 200 33 200 77 226 194 17 60 29 108 16 170 234 85 68 144 59 29 89 103 141 57 176 82 224 241 179 162 193 109 30 116 174 111 217 147 185 134 35 70 101 237 161 79 246 120 229 140 65 74 229 93 232 170 30 218 38 36 45 97 107 38 126 111 219 116 145 239 181 163 193 121 184 73 3 18 112 112 229 226 89 125 47 11 42 243 51 182 52 152 87)
  :der-encode
  #t
  :tests
  '(#(376
      "u2 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 56 244 137 232 73 77 236 46 106 156 76 228 187 237 254 173 67 186 217 230 145 67 70 4 242 33 52 67 122 187 173 122 199 20 201 107 25 141 183 93 192 130 32 93 213 57 90 194 95 59 70 128 88 31 72 244 145 215 220 214 52 56 85 120 2 64 56 244 137 232 73 77 236 46 106 156 76 228 187 237 254 173 67 186 217 230 145 67 70 4 242 33 52 67 122 187 173 122 199 20 201 107 25 141 183 93 192 130 32 93 213 57 90 194 95 59 70 128 88 31 72 244 145 215 220 214 52 56 85 120)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 1 130 61 184 253 43 164 163 75 172 196 246 66 131 144 159 77 1 208 43 141 182 111 156 185 189 119 128 107 137 11 163 26 105 21 185 61 203 221 114 200 51 56 235 96 41 242 44 49 121 87 18 177 172 122 31 184 26 48 78 60 88 216 213 78 194 103 186 211 152 74 62 47 216 125 239 190 134 61 115 136 88 114 72 139 221 169 214 227 218 142 207 142 171 253 70 116 210 1 39 143 252 99 203 193 255 160 249 158 181 232 92 155 32 174 16 162 38 225 229 89 76 167 143 192 213 49 216)
  :der-encode
  #t
  :tests
  '(#(377
      "u2 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 56 244 137 232 73 77 236 46 106 156 76 228 187 237 254 173 67 186 217 230 145 67 70 4 242 33 52 67 122 187 173 122 199 20 201 107 25 141 183 93 192 130 32 93 213 57 90 194 95 59 70 128 88 31 72 244 145 215 220 214 52 56 85 120 2 64 113 233 19 208 146 155 216 92 213 56 153 201 119 219 253 90 135 117 179 205 34 134 140 9 228 66 104 134 245 119 90 245 142 41 146 214 51 27 110 187 129 4 64 187 170 114 181 132 190 118 141 0 176 62 145 233 35 175 185 172 104 112 170 241)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 159 164 68 1 219 9 142 159 40 87 154 175 2 173 255 97 250 241 230 247 3 156 241 179 19 75 131 223 186 150 43 19 164 57 125 205 214 254 239 75 100 252 50 235 61 251 163 245 150 245 247 91 234 189 61 173 228 132 8 147 16 182 88 34 139 177 137 124 117 218 81 229 109 177 157 141 241 54 35 117 74 13 185 214 218 80 2 255 200 167 59 226 27 128 238 236 202 53 236 84 30 129 131 27 63 236 76 195 25 61 197 146 159 18 196 196 99 164 16 121 17 187 176 241 90 227 144 239)
  :der-encode
  #t
  :tests
  '(#(378
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 79 156 138 60 66 75 162 178 136 44 32 3 85 210 85 150 177 170 6 63 249 178 87 48 121 50 81 40 219 198 174 80 152 232 132 96 244 235 67 49 255 162 128 138 211 207 35 5 236 204 231 15 62 109 243 203 17 76 99 139 69 157 145 103)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 15 231 247 202 68 69 53 96 225 186 56 179 78 200 223 188 116 94 222 252 88 135 130 85 69 47 97 79 238 86 26 138 98 11 77 134 36 225 89 189 72 61 176 140 154 98 16 15 210 234 105 239 115 129 245 32 171 230 81 178 234 34 110 234 21 110 117 175 70 91 34 210 38 64 131 20 83 109 66 56 167 57 253 47 64 3 186 197 82 174 52 191 162 126 155 228 96 254 64 165 70 140 237 211 34 16 72 205 27 141 121 107 194 116 148 86 95 136 170 247 252 204 76 15 195 107 120 177)
  :der-encode
  #t
  :tests
  '(#(379
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 40 32 198 3 83 79 67 13 184 228 151 39 36 74 49 106 205 110 163 7 51 7 13 196 253 210 78 34 17 221 237 128 89 122 156 182 189 134 111 55 178 85 5 122 183 113 146 94 180 57 41 51 25 169 162 193 45 192 183 203 29 191 79 167)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 153 229 195 173 30 245 58 215 128 195 196 217 12 39 204 25 134 73 106 33 91 37 130 154 136 222 32 10 156 33 70 174 200 241 130 220 109 236 102 17 199 255 218 26 85 176 204 178 4 91 30 213 201 35 27 158 179 203 35 36 23 226 252 250 53 232 179 246 4 245 215 147 209 53 206 6 226 63 198 172 130 192 153 125 233 227 244 210 220 54 54 186 11 82 28 120 87 118 219 200 212 141 165 213 154 134 251 62 144 251 0 188 203 1 125 37 16 11 232 227 93 177 223 181 180 73 103 239)
  :der-encode
  #t
  :tests
  '(#(380
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 110 93 45 209 227 210 120 235 198 247 52 9 101 30 188 70 182 92 108 62 254 17 101 183 75 81 100 53 103 131 37 30 59 182 102 128 79 170 123 243 137 181 255 40 91 102 185 18 197 28 71 140 88 205 45 190 82 147 217 87 53 171 148 54)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 66 63 199 170 141 109 119 250 230 11 235 206 119 87 225 86 137 66 108 186 189 44 63 166 255 113 218 119 101 171 136 122 147 201 60 184 225 0 136 146 192 216 241 224 62 72 85 92 129 223 196 51 212 47 72 144 183 17 119 184 72 170 185 204 31 246 171 215 199 249 83 222 121 116 128 226 146 185 135 221 244 117 112 216 141 197 229 28 122 71 195 87 215 25 120 25 9 49 151 111 85 204 132 195 164 205 70 53 237 91 164 146 14 250 130 25 199 170 22 133 191 26 155 199 18 159 162 203)
  :der-encode
  #t
  :tests
  '(#(381
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 43 208 234 34 223 23 226 240 133 64 148 0 45 245 106 99 218 128 113 50 116 181 25 35 39 177 216 108 37 100 55 189 16 247 162 30 28 116 128 131 109 234 64 245 110 233 181 129 12 104 242 160 110 114 138 128 45 1 181 165 20 219 105 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 65 94 157 80 175 93 167 17 137 96 120 17 104 13 193 109 61 169 160 227 57 165 61 22 107 155 34 104 6 166 255 218 224 30 180 2 149 207 94 0 244 125 223 11 74 250 103 41 168 247 209 138 67 125 21 125 244 217 156 25 24 30 245 36 144 126 253 193 91 51 134 100 233 17 182 47 154 192 21 217 227 107 183 190 12 204 223 51 5 23 213 41 112 218 177 136 72 188 224 191 223 192 189 57 198 117 117 54 102 3 110 76 76 94 176 198 35 33 178 43 209 203 31 163 82 103 15 188)
  :der-encode
  #t
  :tests
  '(#(382
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 61 169 69 187 129 94 229 48 58 5 220 94 236 50 133 176 161 237 244 59 231 202 161 159 200 245 172 6 18 43 52 81 216 91 125 242 218 65 243 71 226 229 20 88 243 157 77 22 195 204 135 170 215 180 81 117 141 58 253 151 41 101 145 86)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 44 101 182 31 161 244 211 200 108 130 157 21 212 222 91 71 197 183 137 245 58 67 85 102 31 9 238 243 185 123 33 163 185 63 174 15 3 91 243 71 163 21 89 71 133 5 155 55 204 248 6 42 57 26 206 48 230 154 152 77 132 23 202 44 52 26 128 25 101 58 214 23 218 87 201 153 124 45 235 250 243 64 166 120 11 216 55 26 238 44 102 139 125 204 112 254 6 120 155 143 54 248 241 63 64 130 47 4 1 16 46 3 116 44 143 250 161 220 240 186 249 129 199 236 193 167 226 120)
  :der-encode
  #t
  :tests
  '(#(383
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 123 82 139 119 2 189 202 96 116 11 184 189 216 101 11 97 67 219 232 119 207 149 67 63 145 235 88 12 36 86 104 163 176 182 251 229 180 131 230 143 197 202 40 177 231 58 154 45 135 153 15 85 175 104 162 235 26 117 251 46 82 203 34 172)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 106 130 34 218 99 37 80 248 90 13 89 250 142 143 50 126 22 39 75 99 151 213 164 42 161 191 111 26 27 92 237 211 161 24 45 208 242 47 202 105 12 94 245 162 97 230 229 216 186 227 79 46 26 226 148 181 10 40 124 136 37 116 238 124 130 216 98 24 120 35 56 117 123 155 171 53 158 99 81 108 227 219 245 231 253 189 91 170 74 233 151 19 254 93 216 91 182 30 161 42 23 140 251 80 162 94 239 65 160 133 220 213 229 184 143 20 139 173 244 200 244 3 30 3 212 154 236 107)
  :der-encode
  #t
  :tests
  '(#(384
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 45 23 4 142 229 126 69 182 96 87 172 250 185 195 178 164 147 158 129 177 235 15 137 114 168 194 181 170 107 4 193 85 132 137 78 22 142 21 220 92 248 137 250 9 247 147 77 16 132 222 243 81 4 44 43 151 205 227 193 0 184 148 186 211)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 170 23 181 189 43 191 206 26 225 51 226 71 159 225 248 126 100 230 22 88 151 238 69 115 145 188 45 174 233 253 118 134 184 212 190 200 236 250 138 86 147 243 155 78 249 180 22 60 219 197 196 84 111 173 186 12 254 62 21 50 234 42 173 212 115 250 147 3 151 23 249 223 212 154 156 40 132 220 45 16 18 215 29 96 84 234 15 57 22 133 189 229 232 192 213 214 17 180 11 209 251 227 93 197 189 126 145 109 220 154 102 186 84 174 137 73 119 111 47 33 212 207 84 178 246 199 87 197)
  :der-encode
  #t
  :tests
  '(#(385
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 43 24 152 109 135 189 33 205 203 240 241 49 3 121 71 53 151 147 84 41 12 67 170 140 41 141 189 71 61 229 163 137 203 85 240 12 33 132 162 53 246 183 52 115 5 146 108 14 37 120 94 202 109 152 235 43 217 33 86 33 100 243 101 240)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 167 45 232 212 210 137 111 155 198 215 42 104 248 178 88 143 162 236 180 153 46 142 54 22 253 88 161 161 47 3 39 219 31 195 116 14 211 132 2 32 120 21 111 230 103 18 191 9 44 171 188 67 101 156 221 201 207 61 191 128 123 207 54 53 136 25 49 154 239 14 35 177 66 231 93 156 76 19 152 18 229 94 28 65 157 150 8 74 104 185 80 53 108 70 235 35 87 81 47 32 139 177 219 233 112 209 144 12 141 253 167 125 47 71 119 96 219 99 210 40 219 248 179 66 38 91 203 222)
  :der-encode
  #t
  :tests
  '(#(386
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 68 95 140 170 242 9 63 104 130 188 108 122 245 55 235 172 191 134 32 240 182 172 104 161 154 93 225 147 82 37 204 148 156 36 54 85 4 34 41 56 197 105 130 184 36 187 238 89 37 63 74 134 100 133 20 158 196 197 181 236 154 215 78 195)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 55 216 81 159 12 116 146 255 68 59 173 52 203 213 78 238 155 161 32 228 31 187 159 214 4 205 214 212 27 118 43 242 187 163 146 212 244 100 105 120 115 15 101 86 102 43 153 118 141 203 39 84 193 128 192 251 216 173 112 118 54 216 248 177 67 177 125 114 143 254 172 69 64 25 83 13 43 176 246 154 88 83 90 46 142 96 159 246 149 150 213 61 17 160 14 111 101 13 73 217 165 242 17 32 75 78 90 66 28 117 127 142 23 56 149 93 249 107 173 91 253 215 30 21 90 147 45 31)
  :der-encode
  #t
  :tests
  '(#(387
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 45 160 137 190 76 207 16 236 91 212 99 85 110 251 211 56 140 195 67 185 221 11 189 111 46 152 165 208 202 54 45 15 222 42 235 240 43 222 241 115 160 241 240 71 85 238 118 160 152 114 118 56 228 247 243 137 82 29 153 123 171 133 183 129)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 42 251 120 109 36 107 67 165 61 246 132 29 4 212 199 112 83 87 147 150 151 113 78 212 104 29 197 149 24 129 145 135 122 70 243 198 187 198 49 112 64 110 12 109 183 221 103 137 166 68 115 143 125 10 203 124 158 89 89 192 30 57 233 117 32 50 126 110 92 146 81 152 183 74 240 190 181 26 131 234 102 46 251 195 248 91 186 137 36 4 107 151 218 203 7 23 214 183 244 34 216 66 102 37 234 127 107 76 232 101 223 171 38 75 165 36 123 77 173 62 44 165 97 75 255 76 13 95)
  :der-encode
  #t
  :tests
  '(#(388
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 91 65 19 124 153 158 33 216 183 168 198 170 221 247 166 113 25 134 135 115 186 23 122 222 93 49 75 161 148 108 90 31 188 85 215 224 87 189 226 231 65 227 224 142 171 220 237 65 48 228 236 113 201 239 231 18 164 59 50 247 87 11 111 2)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 27 65 154 163 157 62 49 37 174 112 95 119 136 92 59 17 56 123 196 34 250 219 186 126 176 166 106 193 74 226 108 15 151 131 51 220 230 78 79 224 211 189 188 109 82 173 206 227 181 20 147 162 109 33 55 107 239 118 78 6 40 223 187 18 115 238 62 242 234 224 74 39 231 152 50 61 80 224 244 254 251 196 63 196 97 54 119 49 29 168 88 248 62 93 155 59 158 65 175 108 85 130 144 138 62 242 148 142 75 93 200 197 184 165 144 179 206 218 24 228 196 204 5 221 194 104 220 254)
  :der-encode
  #t
  :tests
  '(#(389
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 65 0 136 225 157 58 230 109 50 197 19 125 42 0 76 243 121 169 166 73 203 45 151 35 56 77 139 201 241 114 94 162 135 47 154 128 195 208 131 156 212 90 226 213 208 214 1 203 99 225 201 87 98 170 174 231 218 155 246 88 204 115 2 145 38 131)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 50 122 110 94 78 242 190 192 99 30 19 53 64 148 204 164 223 91 196 1 138 5 114 192 8 115 84 61 152 16 10 192 157 118 210 123 214 224 188 45 201 107 216 203 190 25 174 192 193 65 50 15 253 100 174 219 165 193 122 27 228 189 41 96 120 220 204 69 60 42 167 233 42 119 52 130 51 6 198 193 174 62 82 19 30 219 250 95 221 183 25 200 213 208 11 163 211 139 170 143 183 39 187 148 30 33 186 255 55 85 3 194 126 237 112 70 250 109 0 199 14 241 54 224 29 54 239 213)
  :der-encode
  #t
  :tests
  '(#(390
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 55 46 150 232 241 233 60 117 227 123 154 4 178 143 94 35 91 46 54 31 127 8 178 219 165 168 178 26 179 193 146 143 29 219 51 64 39 213 61 249 196 218 255 148 45 179 92 137 98 142 35 198 44 102 150 223 41 73 236 171 154 213 202 27)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 154 161 137 181 177 229 182 102 65 199 236 63 167 208 219 182 167 45 135 77 24 199 146 124 172 132 112 167 9 105 243 87 5 188 115 24 42 188 16 181 161 105 85 136 150 25 188 186 111 243 16 32 148 115 195 18 14 68 162 225 191 159 201 199 46 93 231 71 73 160 82 39 80 154 43 61 3 34 168 249 2 7 9 203 142 93 166 125 254 226 142 150 224 171 138 28 50 8 5 93 31 8 243 143 161 204 121 193 25 255 112 69 146 168 238 245 139 246 98 4 184 26 208 176 171 221 3 144)
  :der-encode
  #t
  :tests
  '(#(391
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 42 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 169)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 67 154 133 157 122 175 153 245 114 5 242 16 201 58 184 156 49 123 210 250 33 94 121 3 166 121 118 211 54 216 59 27 249 113 144 103 7 116 32 7 143 131 117 20 214 7 174 57 129 24 93 199 176 38 39 176 90 198 110 73 26 43 148 197 76 63 164 122 146 109 189 105 69 172 166 212 4 248 95 70 224 112 208 78 125 171 246 250 156 184 140 52 40 221 2 253 1 169 177 144 187 97 223 183 178 67 158 66 208 182 137 174 249 104 53 107 1 28 243 5 74 185 41 200 87 119 230 82)
  :der-encode
  #t
  :tests
  '(#(392
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 72 215 133 27 7 159 98 2 9 232 186 5 235 36 238 81 89 100 211 117 119 199 195 174 48 154 178 189 221 126 238 113 1 137 157 12 108 120 1 17 190 222 97 237 18 21 236 66 57 148 9 214 5 236 204 154 172 76 149 72 248 119 112 223)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 102 250 21 140 81 211 169 66 28 187 19 55 153 171 144 161 35 135 236 120 117 162 179 84 184 72 118 115 73 91 177 135 158 241 103 47 73 40 162 3 64 149 160 44 125 8 63 39 224 234 192 164 11 135 216 55 245 46 118 72 32 12 86 102 39 128 55 205 126 94 139 198 130 16 39 178 26 44 167 174 156 105 74 232 9 150 107 121 212 65 220 220 157 59 68 79 135 147 18 47 48 149 106 224 167 170 223 190 67 26 52 45 205 133 112 149 189 5 138 116 43 165 138 241 139 26 81 155)
  :der-encode
  #t
  :tests
  '(#(393
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 14 108 246 141 91 229 19 130 83 222 41 14 196 27 222 125 207 150 6 92 40 13 10 9 217 164 136 141 93 224 77 190 167 80 56 252 6 27 101 51 64 105 108 98 186 174 169 45 87 71 229 2 73 3 76 66 127 47 129 62 43 152 194 75)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 41 189 242 254 183 103 64 118 63 80 152 207 213 239 172 165 250 43 25 101 75 212 232 213 215 89 120 185 5 32 231 72 56 117 191 190 42 192 229 122 223 144 204 20 10 245 152 33 120 103 36 229 234 185 17 20 69 162 222 75 55 104 119 76 50 174 57 121 179 82 220 251 12 114 232 246 121 154 183 100 21 66 138 153 86 202 93 43 20 215 75 154 27 225 137 188 211 3 47 116 46 201 71 68 195 58 60 220 161 13 255 77 91 7 146 150 96 214 231 135 41 173 166 229 190 154 225 1)
  :der-encode
  #t
  :tests
  '(#(394
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 65 178 175 120 41 65 101 216 111 117 28 184 42 128 50 122 14 180 192 84 74 6 212 165 113 154 234 74 9 143 17 89 115 175 244 193 168 206 194 220 240 245 240 250 36 25 11 71 74 37 185 171 59 174 247 119 15 104 186 156 126 247 247 202)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 128 175 27 185 223 206 0 150 55 153 224 26 236 191 139 245 166 89 182 187 250 70 137 240 103 74 97 21 188 223 153 109 21 93 154 117 197 41 81 65 226 204 62 97 27 50 197 137 230 174 118 174 241 144 220 138 54 59 169 249 195 204 87 39 3 140 217 91 205 52 66 14 99 174 67 90 254 208 159 112 228 235 195 80 27 66 243 94 187 236 216 176 161 101 198 22 22 9 11 17 142 240 90 67 195 31 59 113 9 7 199 69 38 75 31 83 124 40 89 106 64 60 37 25 94 135 84 94)
  :der-encode
  #t
  :tests
  '(#(395
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 65 0 156 95 195 251 247 15 22 204 218 201 47 149 151 68 8 255 255 126 5 189 2 104 207 223 134 46 155 235 23 79 180 142 225 224 225 15 148 45 143 198 126 214 159 122 148 200 95 97 200 64 72 97 126 103 193 204 108 2 96 224 72 100 26 106)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 110 235 71 53 40 108 44 9 77 218 41 113 10 119 78 204 219 108 165 250 137 145 249 173 188 118 155 68 141 56 153 148 60 134 14 63 181 12 255 52 130 90 218 238 130 170 181 165 51 173 175 116 251 254 126 139 3 46 38 66 250 95 200 111 94 247 74 166 26 38 130 59 194 237 112 240 139 100 166 144 109 185 129 86 77 94 12 21 160 118 165 130 218 143 238 32 183 115 239 89 31 144 84 218 52 217 10 31 19 23 41 70 16 168 29 62 15 26 220 228 246 210 253 107 164 185 53 1)
  :der-encode
  #t
  :tests
  '(#(396
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 65 0 141 225 234 63 18 52 105 14 117 189 120 124 250 190 21 248 51 203 125 198 81 7 205 176 53 249 155 11 190 108 96 173 110 131 101 221 219 177 249 115 188 38 221 219 169 228 174 124 114 206 189 65 244 113 168 187 34 125 43 61 244 31 52 107)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 147 136 65 147 117 80 19 76 90 75 173 225 154 80 33 199 60 255 199 116 253 202 135 84 19 167 213 65 230 81 69 251 119 218 212 167 199 235 58 150 108 24 77 115 205 207 63 27 234 152 74 210 93 212 251 127 71 35 159 170 91 83 159 109 50 117 205 229 60 24 243 187 83 122 127 6 199 234 27 79 53 80 37 145 144 2 186 233 163 163 193 220 241 80 193 181 59 200 223 229 63 96 204 120 94 68 5 28 149 183 53 85 43 166 34 137 125 91 247 85 111 215 185 227 139 101 49 190)
  :der-encode
  #t
  :tests
  '(#(397
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 50 106 126 89 196 188 249 186 82 35 90 142 6 210 68 85 122 207 102 136 91 100 249 35 140 221 179 190 50 123 98 5 117 139 96 243 32 52 24 203 229 179 48 226 138 157 122 54 14 223 184 221 243 157 70 52 13 92 39 146 130 75 124 109)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 120 251 209 231 98 1 150 2 255 113 135 207 6 168 134 210 237 44 181 208 100 129 176 108 60 75 228 247 243 116 108 208 21 29 87 244 214 174 189 96 72 137 92 171 254 149 0 173 243 218 236 89 255 166 238 150 33 200 181 132 237 109 173 26 111 60 32 112 224 20 33 161 235 185 105 96 125 68 247 103 120 116 139 203 85 154 139 94 237 131 176 71 96 171 83 85 107 0 57 232 118 90 184 90 146 149 12 16 202 107 189 204 157 110 47 3 216 139 109 123 189 205 83 200 177 255 134 204)
  :der-encode
  #t
  :tests
  '(#(398
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 60 93 8 51 159 47 111 151 162 184 107 131 41 102 120 247 191 246 30 27 116 135 205 161 79 59 18 252 230 174 175 163 242 251 56 90 234 62 130 243 18 166 136 14 253 24 161 215 127 215 250 175 175 157 30 204 94 233 194 192 247 29 16 217)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 76 154 218 47 162 172 248 208 31 186 43 1 95 123 173 195 34 120 92 133 242 25 155 108 74 196 144 218 142 30 201 115 56 127 74 190 38 213 38 160 86 220 113 149 251 28 156 12 167 97 44 182 95 21 241 6 56 13 140 93 236 229 41 243 33 114 200 185 179 182 251 11 190 159 34 115 217 162 24 189 81 36 121 221 39 96 91 42 110 139 68 245 141 23 97 120 57 12 43 221 28 207 96 193 232 35 162 62 139 15 206 125 171 47 25 121 19 177 254 48 246 153 227 191 54 107 241 191)
  :der-encode
  #t
  :tests
  '(#(399
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 65 0 149 132 164 189 240 198 200 202 114 33 31 88 157 205 215 190 24 26 204 185 38 242 67 13 199 19 90 187 250 120 135 214 6 3 12 133 199 47 90 60 5 252 199 224 209 251 51 175 192 37 31 211 62 160 75 59 150 71 11 194 108 230 18 171)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 133 76 249 96 16 16 190 32 99 63 93 23 33 76 171 104 125 171 58 165 74 56 160 44 85 237 0 54 21 236 142 250 218 42 192 214 45 146 61 14 29 249 170 56 45 81 39 6 202 223 85 57 133 138 98 165 236 98 253 130 72 230 50 119 106 120 51 3 40 82 6 1 140 187 159 193 233 140 223 148 172 111 47 236 189 199 216 66 143 244 133 229 155 0 178 191 164 90 6 170 169 62 107 81 183 173 27 138 192 219 225 53 69 93 141 40 117 35 19 87 6 9 144 171 205 229 99 222)
  :der-encode
  #t
  :tests
  '(#(400
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 64 25 121 135 24 159 140 240 74 149 30 1 196 143 168 174 144 66 241 132 132 143 147 178 21 220 121 15 226 196 46 226 213 73 216 203 80 255 61 183 75 109 219 55 106 128 178 206 57 131 148 107 46 217 152 25 133 110 117 235 248 255 42 224)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 94 61 229 9 247 88 92 15 109 5 195 135 166 208 122 6 28 159 152 198 173 200 179 195 110 251 222 252 191 242 230 173 70 120 150 5 36 209 22 21 79 91 23 51 34 4 227 161 134 112 130 210 229 24 80 79 67 62 39 38 173 88 233 215 160 179 46 157 60 82 59 172 60 28 205 215 95 130 185 9 168 48 108 116 190 137 159 19 34 138 191 135 219 118 185 17 92 11 41 61 125 48 243 200 98 48 70 27 40 164 90 108 200 139 143 224 121 20 49 3 197 176 16 22 186 149 188 213)
  :der-encode
  #t
  :tests
  '(#(401
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 65 0 128 50 243 14 49 63 25 224 149 42 60 3 137 31 81 93 32 133 227 9 9 31 39 100 43 184 242 31 197 136 93 197 170 147 177 150 161 254 123 110 150 219 182 110 213 1 101 156 115 7 40 214 93 179 48 51 10 220 235 215 241 254 85 192)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 21 210 255 205 70 23 235 27 64 6 16 203 168 215 56 199 108 142 21 173 114 179 78 87 103 114 174 25 205 131 69 41 70 68 209 58 198 42 41 55 136 222 42 146 221 84 124 42 195 169 138 186 114 149 45 62 162 212 145 215 238 165 185 203 163 236 44 121 162 207 123 160 8 57 51 178 197 52 253 75 81 88 124 78 188 60 186 170 40 217 43 149 227 200 233 1 66 239 250 194 123 186 178 21 172 11 57 209 197 243 50 254 183 121 53 26 102 194 148 228 237 98 245 205 50 41 169 35)
  :der-encode
  #t
  :tests
  '(#(402
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 21 110 206 220 109 244 226 69 159 234 115 87 25 228 254 3 229 152 70 217 217 228 233 7 107 49 206 101 56 25 132 56 42 159 46 32 166 84 147 12 160 195 48 140 191 214 8 35 142 216 233 192 132 46 237 110 218 195 203 65 78 84 128 55)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 151 77 243 231 166 18 131 131 14 84 75 169 2 52 121 203 141 117 89 82 77 247 111 179 141 35 197 93 41 146 62 114 236 92 180 135 23 250 184 89 242 243 17 21 133 187 238 0 69 149 197 254 214 68 17 251 191 159 99 81 191 95 105 232 78 31 221 105 27 48 176 180 194 89 10 136 28 228 88 5 51 73 53 109 167 71 205 147 186 147 30 238 106 232 140 174 130 112 7 16 92 59 22 51 164 142 28 157 181 39 42 192 17 69 174 230 19 43 167 58 248 61 110 108 65 6 178 144)
  :der-encode
  #t
  :tests
  '(#(403
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 251 2 64 92 165 74 35 27 231 108 6 201 217 135 222 123 242 237 66 205 99 74 7 237 235 110 12 88 4 18 171 231 9 171 23 126 71 74 158 169 98 69 166 64 247 230 190 29 45 92 186 58 124 220 65 168 176 147 144 26 91 139 224 100 32 225 90)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 44 183 54 76 206 201 20 138 50 66 238 225 124 224 29 130 165 109 3 124 176 23 70 253 210 75 137 63 53 224 114 130 124 228 99 173 175 202 98 130 217 60 246 102 167 64 238 136 173 190 242 65 241 121 85 210 191 95 159 149 149 138 56 166 150 218 86 67 229 254 5 127 28 59 147 30 54 211 63 14 47 95 186 104 9 50 163 89 135 183 152 85 182 193 240 234 214 76 190 156 114 149 158 206 33 132 238 101 167 104 65 13 241 218 216 28 77 186 133 51 64 162 57 106 191 130 227 106)
  :der-encode
  #t
  :tests
  '(#(404
      "point duplication during verification"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 27 142 132 64 189 148 117 45 198 3 21 151 40 163 70 135 44 173 72 223 255 129 159 24 31 157 83 83 122 128 134 139 255 18 128 172 253 35 151 168 70 211 37 144 73 53 43 193 31 95 183 57 65 12 118 109 19 68 203 203 192 59 247 97 2 64 33 97 7 64 121 154 131 161 59 73 170 69 221 133 77 133 176 88 189 149 90 65 5 215 73 203 167 75 143 42 56 207 124 51 237 86 146 29 2 158 116 147 137 74 211 216 242 143 68 49 220 235 137 205 86 49 109 233 61 192 151 119 202 16)
      #t
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 44 183 54 76 206 201 20 138 50 66 238 225 124 224 29 130 165 109 3 124 176 23 70 253 210 75 137 63 53 224 114 130 124 228 99 173 175 202 98 130 217 60 246 102 167 64 238 136 173 190 242 65 241 121 85 210 191 95 159 149 149 138 56 166 20 3 71 116 245 235 191 12 35 153 83 143 252 246 188 249 155 208 211 75 170 151 46 181 78 172 4 116 185 113 23 134 167 0 220 100 41 48 201 116 141 72 178 197 63 59 63 216 54 167 39 18 223 200 65 81 232 8 38 235 152 183 101 137)
  :der-encode
  #t
  :tests
  '(#(405
      "duplication bug"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 27 142 132 64 189 148 117 45 198 3 21 151 40 163 70 135 44 173 72 223 255 129 159 24 31 157 83 83 122 128 134 139 255 18 128 172 253 35 151 168 70 211 37 144 73 53 43 193 31 95 183 57 65 12 118 109 19 68 203 203 192 59 247 97 2 64 33 97 7 64 121 154 131 161 59 73 170 69 221 133 77 133 176 88 189 149 90 65 5 215 73 203 167 75 143 42 56 207 124 51 237 86 146 29 2 158 116 147 137 74 211 216 242 143 68 49 220 235 137 205 86 49 109 233 61 192 151 119 202 16)
      #f
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 6 61 86 111 169 62 226 25 72 46 201 71 231 190 70 148 249 192 115 178 187 120 109 184 73 225 243 151 60 81 34 57 76 246 142 221 153 71 181 142 97 254 66 201 141 54 64 132 78 210 119 91 12 54 181 244 192 201 96 93 2 139 192 197 7 82 27 41 136 150 50 187 7 86 254 201 142 142 149 108 183 172 81 90 63 201 8 43 135 24 97 84 142 151 2 120 111 89 30 154 34 35 145 1 71 37 22 122 108 34 170 248 194 196 190 148 37 36 139 77 95 148 243 28 189 139 211 82)
  :der-encode
  #t
  :tests
  '(#(406
      "comparison with point at infinity "
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 56 244 137 232 73 77 236 46 106 156 76 228 187 237 254 173 67 186 217 230 145 67 70 4 242 33 52 67 122 187 173 122 199 20 201 107 25 141 183 93 192 130 32 93 213 57 90 194 95 59 70 128 88 31 72 244 145 215 220 214 52 56 85 120 2 64 34 44 82 190 146 97 244 27 217 144 250 239 163 245 50 103 245 112 28 87 35 245 42 2 247 173 133 194 22 112 155 73 170 166 18 115 117 187 110 5 13 26 224 56 76 188 3 65 108 86 195 230 155 69 248 146 189 231 234 230 236 33 204 225)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 19 185 160 39 59 59 40 60 200 162 90 170 242 168 80 138 116 93 176 34 231 244 221 192 106 205 240 110 183 119 15 217 91 166 139 4 123 3 4 25 174 195 102 189 24 126 184 64 164 61 247 217 67 148 25 226 99 150 20 213 180 235 34 210 59 169 165 192 48 23 8 220 80 171 158 74 212 237 72 173 15 112 28 243 135 242 16 229 123 109 6 251 105 205 88 223 176 104 95 137 217 237 26 49 159 0 21 29 144 130 102 48 70 204 39 16 27 105 44 162 42 107 62 8 61 208 255 127)
  :der-encode
  #t
  :tests
  '(#(407
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 65 0 159 73 69 246 128 237 249 128 10 99 40 87 88 243 153 179 209 141 129 65 184 161 128 100 163 13 48 53 244 203 101 129 149 120 119 243 168 240 247 37 151 17 110 112 41 21 164 244 246 152 244 4 8 154 76 197 8 4 71 222 240 47 72 80 2 64 56 244 137 232 73 77 236 46 106 156 76 228 187 237 254 173 67 186 217 230 145 67 70 4 242 33 52 67 122 187 173 122 199 20 201 107 25 141 183 93 192 130 32 93 213 57 90 194 95 59 70 128 88 31 72 244 145 215 220 214 52 56 85 120)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 69 212 212 173 107 58 175 148 182 215 57 160 114 243 27 30 116 79 19 135 99 4 234 17 17 63 232 18 58 21 94 26 146 27 228 108 222 47 36 18 224 42 15 165 193 134 93 184 166 219 212 78 234 193 101 176 247 250 115 192 71 131 128 45 28 185 81 204 101 201 5 100 128 105 91 196 103 220 165 119 150 76 238 4 138 20 200 23 22 206 149 88 180 80 152 28 243 160 240 5 157 88 27 7 106 251 105 239 224 165 5 53 123 128 96 224 45 107 159 19 160 49 161 218 229 241 206 60)
  :der-encode
  #t
  :tests
  '(#(408
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 65 0 159 73 69 246 128 237 249 128 10 99 40 87 88 243 153 179 209 141 129 65 184 161 128 100 163 13 48 53 244 203 101 129 149 120 119 243 168 240 247 37 151 17 110 112 41 21 164 244 246 152 244 4 8 154 76 197 8 4 71 222 240 47 72 80 2 64 122 12 2 241 193 166 250 26 82 42 91 161 0 107 180 5 145 34 174 91 201 144 40 83 189 180 221 181 43 146 42 153 97 117 175 156 91 84 63 200 229 169 32 201 18 13 48 50 204 17 77 238 115 176 192 231 129 169 253 203 2 47 146 148)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 144 96 67 12 68 57 195 82 203 192 140 208 144 111 145 70 76 227 122 121 116 222 153 101 37 117 134 40 185 211 88 5 64 175 233 190 116 186 16 80 208 58 203 176 172 41 230 10 202 155 150 41 90 107 94 73 112 116 16 37 127 183 99 157 89 248 136 173 138 98 190 205 224 102 29 239 238 228 129 53 211 97 103 249 232 88 15 39 20 188 213 182 126 199 10 227 222 174 93 128 177 233 209 12 19 242 28 231 197 156 121 172 44 247 5 174 232 144 173 244 52 242 154 168 65 160 91 15)
  :der-encode
  #t
  :tests
  '(#(409
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 159 73 69 246 128 237 249 128 10 99 40 87 88 243 153 179 209 141 129 65 184 161 128 100 163 13 48 53 244 203 101 129 149 120 119 243 168 240 247 37 151 17 110 112 41 21 164 244 246 152 244 4 8 154 76 197 8 4 71 222 240 47 72 80 2 65 0 136 177 74 250 73 135 208 111 102 67 235 190 143 212 201 159 213 192 113 92 143 212 168 11 222 182 23 8 89 194 109 38 170 152 73 205 214 237 184 20 52 107 128 225 50 240 13 5 177 91 15 154 109 23 226 74 247 159 171 155 176 135 51 135)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 115 38 19 124 105 158 107 29 43 243 19 192 76 52 184 110 99 41 61 126 32 84 228 113 135 239 132 63 180 38 116 246 91 126 1 54 236 218 248 228 17 198 226 219 191 90 197 0 116 1 116 62 199 36 78 125 172 3 121 81 107 185 47 57 146 229 70 208 28 22 85 207 104 84 147 145 216 88 32 53 238 71 30 88 244 51 234 137 243 143 140 193 237 193 146 130 37 179 245 163 118 224 21 206 230 174 158 30 170 230 9 190 46 105 83 126 89 107 6 183 126 75 107 116 130 250 182 11)
  :der-encode
  #t
  :tests
  '(#(410
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 65 0 159 73 69 246 128 237 249 128 10 99 40 87 88 243 153 179 209 141 129 65 184 161 128 100 163 13 48 53 244 203 101 129 149 120 119 243 168 240 247 37 151 17 110 112 41 21 164 244 246 152 244 4 8 154 76 197 8 4 71 222 240 47 72 80 2 64 34 44 82 190 146 97 244 27 217 144 250 239 163 245 50 103 245 112 28 87 35 245 42 2 247 173 133 194 22 112 155 73 170 166 18 115 117 187 110 5 13 26 224 56 76 188 3 65 108 86 195 230 155 69 248 146 189 231 234 230 236 33 204 226)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 86 189 78 60 163 34 246 92 41 182 17 247 159 63 149 15 33 99 142 2 111 204 246 115 176 140 255 199 60 195 148 149 206 213 184 142 38 65 158 189 231 92 133 253 255 20 96 148 126 247 175 233 154 202 88 120 177 175 121 104 129 129 227 35 105 230 70 187 157 1 161 12 196 147 18 89 220 143 89 125 149 232 94 189 86 114 144 152 207 171 20 67 22 94 85 143 5 54 152 176 187 79 68 34 46 162 69 172 76 33 113 126 178 42 175 246 80 163 41 238 226 66 3 132 28 89 209 63)
  :der-encode
  #t
  :tests
  '(#(411
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 65 0 159 73 69 246 128 237 249 128 10 99 40 87 88 243 153 179 209 141 129 65 184 161 128 100 163 13 48 53 244 203 101 129 149 120 119 243 168 240 247 37 151 17 110 112 41 21 164 244 246 152 244 4 8 154 76 197 8 4 71 222 240 47 72 80 2 64 48 209 154 199 26 66 202 112 237 170 139 13 51 94 72 2 58 13 223 87 234 57 169 187 24 174 191 21 68 160 221 214 243 200 172 164 241 84 230 80 91 221 64 80 109 158 224 20 81 160 133 146 148 173 25 246 51 221 152 183 154 121 109 213)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 104 141 15 57 74 203 22 17 158 11 41 181 110 120 15 41 90 36 220 186 22 21 162 62 89 230 123 29 201 84 155 255 135 145 166 33 48 212 176 216 215 87 57 240 109 252 8 207 107 92 177 227 26 99 188 114 177 250 214 240 88 177 205 89 159 148 70 174 138 127 65 189 251 172 29 219 205 214 230 73 1 147 38 13 205 173 160 114 7 156 191 19 155 102 108 245 147 79 17 171 245 114 163 62 127 18 53 205 247 8 32 165 71 93 20 236 237 103 173 106 74 133 120 249 182 228 9 60)
  :der-encode
  #t
  :tests
  '(#(412
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 65 0 159 73 69 246 128 237 249 128 10 99 40 87 88 243 153 179 209 141 129 65 184 161 128 100 163 13 48 53 244 203 101 129 149 120 119 243 168 240 247 37 151 17 110 112 41 21 164 244 246 152 244 4 8 154 76 197 8 4 71 222 240 47 72 80 2 64 16 185 137 0 40 85 255 175 189 140 35 166 97 243 185 60 207 255 79 190 132 162 61 26 108 74 255 68 5 189 185 76 63 134 2 36 226 5 3 47 220 154 29 200 12 125 107 33 64 159 150 50 224 251 84 0 33 204 196 33 97 183 15 28)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 131 103 45 155 97 247 63 26 11 46 6 107 195 208 9 116 157 40 212 229 132 161 175 234 40 220 255 215 139 107 45 101 157 187 12 92 247 190 214 31 59 3 195 193 41 227 29 75 73 202 141 163 129 60 242 91 111 2 93 132 238 130 213 97 55 155 231 245 200 55 253 35 224 172 215 73 22 117 73 232 112 61 186 211 188 122 221 157 58 159 240 26 189 52 181 83 66 245 50 66 141 149 204 31 12 155 174 127 69 141 148 17 145 154 40 22 0 150 88 34 66 24 133 27 15 141 87 32)
  :der-encode
  #t
  :tests
  '(#(413
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 65 0 129 174 228 189 216 46 217 100 90 33 50 46 156 76 106 147 133 237 159 112 181 217 22 193 180 59 98 238 244 208 9 142 255 59 31 120 226 208 212 141 80 209 104 123 147 185 125 95 124 109 80 71 64 106 94 104 139 53 34 9 188 185 248 34 2 64 56 244 137 232 73 77 236 46 106 156 76 228 187 237 254 173 67 186 217 230 145 67 70 4 242 33 52 67 122 187 173 122 199 20 201 107 25 141 183 93 192 130 32 93 213 57 90 194 95 59 70 128 88 31 72 244 145 215 220 214 52 56 85 120)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 115 134 161 9 145 193 71 92 108 83 240 88 103 230 154 53 33 155 197 202 212 64 92 150 3 34 132 58 86 187 7 187 170 49 125 32 160 188 152 120 106 183 180 192 207 109 234 223 9 59 176 125 91 213 99 192 213 107 56 15 136 14 122 209 152 25 233 232 151 199 100 5 218 251 225 215 133 179 191 242 230 228 135 112 173 161 244 82 236 43 74 52 123 218 186 123 109 113 34 0 45 95 110 196 202 188 88 91 78 248 48 229 44 98 70 65 254 3 130 151 128 94 240 183 232 232 43 221)
  :der-encode
  #t
  :tests
  '(#(414
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 65 0 129 174 228 189 216 46 217 100 90 33 50 46 156 76 106 147 133 237 159 112 181 217 22 193 180 59 98 238 244 208 9 142 255 59 31 120 226 208 212 141 80 209 104 123 147 185 125 95 124 109 80 71 64 106 94 104 139 53 34 9 188 185 248 34 2 64 122 12 2 241 193 166 250 26 82 42 91 161 0 107 180 5 145 34 174 91 201 144 40 83 189 180 221 181 43 146 42 153 97 117 175 156 91 84 63 200 229 169 32 201 18 13 48 50 204 17 77 238 115 176 192 231 129 169 253 203 2 47 146 148)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 125 118 240 157 181 252 126 215 103 223 173 42 249 175 84 112 164 62 6 47 33 73 36 153 175 95 199 25 246 190 23 136 25 87 239 71 102 136 250 48 73 177 61 72 197 31 37 158 93 96 67 68 101 216 68 69 211 89 184 159 102 200 139 172 66 6 97 105 146 115 178 56 56 130 124 105 144 137 120 6 75 124 152 244 25 90 213 226 236 112 154 3 110 173 86 227 74 62 153 158 140 55 221 234 91 0 73 10 1 29 157 17 102 118 233 2 44 18 75 60 8 24 188 195 72 143 120 211)
  :der-encode
  #t
  :tests
  '(#(415
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 134 2 65 0 129 174 228 189 216 46 217 100 90 33 50 46 156 76 106 147 133 237 159 112 181 217 22 193 180 59 98 238 244 208 9 142 255 59 31 120 226 208 212 141 80 209 104 123 147 185 125 95 124 109 80 71 64 106 94 104 139 53 34 9 188 185 248 34 2 65 0 136 177 74 250 73 135 208 111 102 67 235 190 143 212 201 159 213 192 113 92 143 212 168 11 222 182 23 8 89 194 109 38 170 152 73 205 214 237 184 20 52 107 128 225 50 240 13 5 177 91 15 154 109 23 226 74 247 159 171 155 176 135 51 135)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 42 58 127 136 21 152 60 146 81 223 146 32 203 95 66 79 77 142 185 207 206 61 150 222 114 91 190 166 219 254 254 34 109 120 159 239 133 51 25 71 135 102 139 102 248 251 100 13 19 90 37 163 15 90 37 17 29 220 252 92 156 126 178 45 155 163 95 48 84 172 67 158 15 85 142 173 141 9 121 160 250 176 70 164 122 160 51 158 241 108 14 29 55 228 209 214 242 159 183 246 116 221 81 237 87 35 52 9 172 158 80 94 41 212 3 120 137 113 148 207 95 188 146 89 95 215 116 190)
  :der-encode
  #t
  :tests
  '(#(416
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 65 0 129 174 228 189 216 46 217 100 90 33 50 46 156 76 106 147 133 237 159 112 181 217 22 193 180 59 98 238 244 208 9 142 255 59 31 120 226 208 212 141 80 209 104 123 147 185 125 95 124 109 80 71 64 106 94 104 139 53 34 9 188 185 248 34 2 64 34 44 82 190 146 97 244 27 217 144 250 239 163 245 50 103 245 112 28 87 35 245 42 2 247 173 133 194 22 112 155 73 170 166 18 115 117 187 110 5 13 26 224 56 76 188 3 65 108 86 195 230 155 69 248 146 189 231 234 230 236 33 204 226)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 3 244 152 242 234 110 54 180 152 172 102 70 58 6 112 143 185 49 172 89 162 161 223 166 235 180 151 60 240 26 6 206 239 88 179 68 184 94 137 252 120 53 18 17 247 31 209 241 24 24 247 239 150 226 150 70 107 13 59 112 194 218 105 32 100 170 120 40 84 57 241 125 105 169 140 174 138 19 121 189 172 5 206 217 48 161 143 68 147 155 217 31 134 105 163 127 232 251 30 154 177 234 212 219 11 51 122 197 148 253 33 217 224 212 50 90 183 238 7 32 143 28 7 96 27 185 19 32)
  :der-encode
  #t
  :tests
  '(#(417
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 65 0 129 174 228 189 216 46 217 100 90 33 50 46 156 76 106 147 133 237 159 112 181 217 22 193 180 59 98 238 244 208 9 142 255 59 31 120 226 208 212 141 80 209 104 123 147 185 125 95 124 109 80 71 64 106 94 104 139 53 34 9 188 185 248 34 2 64 48 209 154 199 26 66 202 112 237 170 139 13 51 94 72 2 58 13 223 87 234 57 169 187 24 174 191 21 68 160 221 214 243 200 172 164 241 84 230 80 91 221 64 80 109 158 224 20 81 160 133 146 148 173 25 246 51 221 152 183 154 121 109 213)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 123 181 249 239 188 194 96 176 129 32 199 196 25 53 102 19 51 34 206 71 230 102 4 126 223 180 98 251 195 16 187 6 80 62 141 98 208 207 96 85 226 113 168 24 123 226 45 197 161 214 176 151 4 163 185 144 101 237 184 123 70 194 174 50 64 31 0 64 4 143 148 127 160 32 23 188 166 26 182 214 53 63 197 136 7 187 162 240 164 101 33 226 15 32 102 130 78 200 75 174 27 84 90 65 74 41 106 222 226 35 21 253 72 87 58 124 91 59 212 197 57 139 39 215 242 130 79 44)
  :der-encode
  #t
  :tests
  '(#(418
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 133 2 65 0 129 174 228 189 216 46 217 100 90 33 50 46 156 76 106 147 133 237 159 112 181 217 22 193 180 59 98 238 244 208 9 142 255 59 31 120 226 208 212 141 80 209 104 123 147 185 125 95 124 109 80 71 64 106 94 104 139 53 34 9 188 185 248 34 2 64 16 185 137 0 40 85 255 175 189 140 35 166 97 243 185 60 207 255 79 190 132 162 61 26 108 74 255 68 5 189 185 76 63 134 2 36 226 5 3 47 220 154 29 200 12 125 107 33 64 159 150 50 224 251 84 0 33 204 196 33 97 183 15 28)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 129 174 228 189 216 46 217 100 90 33 50 46 156 76 106 147 133 237 159 112 181 217 22 193 180 59 98 238 244 208 9 142 255 59 31 120 226 208 212 141 80 209 104 123 147 185 125 95 124 109 80 71 64 106 94 104 139 53 34 9 188 185 248 34 125 222 56 93 86 99 50 236 192 234 191 169 207 120 34 253 242 9 247 0 36 165 123 26 160 0 197 91 136 31 129 17 178 220 222 73 74 95 72 94 91 202 75 216 138 39 99 174 209 202 43 47 168 240 84 6 120 205 30 15 58 216 8 146)
  :der-encode
  #t
  :tests
  '(#(419
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 67 248 0 251 234 249 35 140 88 175 121 91 205 173 4 188 73 205 133 12 57 77 51 130 149 51 86 176 35 33 2 129 117 123 48 225 146 24 163 124 189 97 32 134 251 193 88 202 168 180 225 172 178 236 0 131 126 93 148 31 52 47 179 204 2 64 24 104 205 99 141 33 101 56 118 213 69 134 153 175 36 1 29 6 239 171 245 28 212 221 140 87 95 138 162 80 110 235 121 228 86 82 120 170 115 40 45 238 160 40 54 207 112 10 40 208 66 201 74 86 140 251 25 238 204 91 205 60 182 234)
      #f
      ())
    #(420
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 102 229 156 188 240 240 160 254 231 37 109 82 102 28 247 75 129 99 8 167 122 124 158 140 65 48 70 26 77 18 5 238 223 195 43 95 186 144 130 156 132 37 64 146 131 234 183 124 116 252 241 212 85 113 218 90 55 42 2 99 104 121 76 157 2 64 24 104 205 99 141 33 101 56 118 213 69 134 153 175 36 1 29 6 239 171 245 28 212 221 140 87 95 138 162 80 110 235 121 228 86 82 120 170 115 40 45 238 160 40 54 207 112 10 40 208 66 201 74 86 140 251 25 238 204 91 205 60 182 234)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 129 174 228 189 216 46 217 100 90 33 50 46 156 76 106 147 133 237 159 112 181 217 22 193 180 59 98 238 244 208 9 142 255 59 31 120 226 208 212 141 80 209 104 123 147 185 125 95 124 109 80 71 64 106 94 104 139 53 34 9 188 185 248 34 44 255 101 91 133 134 145 158 126 234 39 4 100 81 217 9 217 38 150 179 143 36 86 244 54 98 215 110 232 19 135 95 202 112 188 183 81 103 31 228 83 3 85 82 92 124 29 55 86 183 211 255 132 146 114 126 175 221 66 71 29 98 64 97)
  :der-encode
  #t
  :tests
  '(#(421
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 67 248 0 251 234 249 35 140 88 175 121 91 205 173 4 188 73 205 133 12 57 77 51 130 149 51 86 176 35 33 2 129 117 123 48 225 146 24 163 124 189 97 32 134 251 193 88 202 168 180 225 172 178 236 0 131 126 93 148 31 52 47 179 204 2 64 24 104 205 99 141 33 101 56 118 213 69 134 153 175 36 1 29 6 239 171 245 28 212 221 140 87 95 138 162 80 110 235 121 228 86 82 120 170 115 40 45 238 160 40 54 207 112 10 40 208 66 201 74 86 140 251 25 238 204 91 205 60 182 234)
      #f
      ())
    #(422
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 102 229 156 188 240 240 160 254 231 37 109 82 102 28 247 75 129 99 8 167 122 124 158 140 65 48 70 26 77 18 5 238 223 195 43 95 186 144 130 156 132 37 64 146 131 234 183 124 116 252 241 212 85 113 218 90 55 42 2 99 104 121 76 157 2 64 24 104 205 99 141 33 101 56 118 213 69 134 153 175 36 1 29 6 239 171 245 28 212 221 140 87 95 138 162 80 110 235 121 228 86 82 120 170 115 40 45 238 160 40 54 207 112 10 40 208 66 201 74 86 140 251 25 238 204 91 205 60 182 234)
      #f
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 30 199 254 34 117 134 12 59 192 228 230 228 89 175 126 22 152 93 55 173 186 115 81 172 53 122 124 57 126 7 82 46 164 27 204 168 232 151 119 254 5 184 240 217 220 140 97 64 4 252 175 48 169 112 1 165 1 26 21 159 70 252 213 68 60 188 29 223 199 172 137 161 162 248 238 247 123 249 187 168 173 231 61 162 16 12 182 163 113 84 107 73 95 181 234 136 94 182 49 100 94 121 89 29 182 89 196 146 102 210 99 213 203 211 64 48 129 203 64 117 54 239 233 165 190 198 153 85)
  :der-encode
  #t
  :tests
  '(#(423
      "pseudorandom signature"
      #vu8()
      #vu8(48 129 133 2 65 0 137 237 247 94 110 152 99 5 216 24 19 134 193 109 180 75 160 215 255 64 244 51 85 105 117 74 72 31 92 212 140 98 17 166 61 231 189 170 72 94 159 167 152 88 164 234 191 17 31 237 41 89 240 49 222 42 19 43 167 9 65 38 131 169 2 64 122 140 8 86 79 81 83 65 40 187 82 254 54 223 250 174 137 7 144 17 37 110 248 6 158 100 214 76 86 16 211 230 17 192 186 139 25 2 115 136 252 204 33 37 35 178 44 68 232 90 120 158 22 203 27 189 50 64 200 107 67 72 15 222)
      #t
      ())
    #(424
      "pseudorandom signature"
      #vu8(77 115 103)
      #vu8(48 129 132 2 64 34 93 194 49 1 119 206 98 103 239 222 153 55 239 248 152 251 11 173 18 176 219 235 79 169 198 190 110 32 248 133 99 230 210 153 29 71 166 72 176 186 90 112 57 132 45 191 136 59 189 115 93 247 147 204 224 209 54 2 63 191 201 190 149 2 64 0 213 151 131 216 189 5 12 247 40 179 80 108 22 238 74 120 172 38 193 47 211 61 173 182 238 129 70 55 46 79 178 168 128 239 119 235 32 172 144 243 164 39 92 23 24 160 51 167 192 178 223 83 142 179 88 39 51 1 84 25 17 83 203)
      #t
      ())
    #(425
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 132 2 64 97 72 60 114 147 105 65 49 68 166 190 13 208 92 26 194 155 196 64 187 218 248 126 87 42 169 135 233 202 66 54 57 243 57 188 170 173 153 203 31 168 11 124 53 65 106 24 52 236 4 188 240 254 120 18 199 18 235 31 6 161 109 172 163 2 64 65 187 149 108 51 158 188 245 228 228 3 199 216 146 141 94 180 253 247 211 245 58 44 6 214 201 250 195 71 246 3 172 50 9 162 175 55 81 111 128 123 80 54 59 83 40 188 152 185 67 84 175 125 89 150 109 22 15 104 232 12 107 45 192)
      #t
      ())
    #(426
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(48 129 133 2 65 0 166 32 136 11 183 250 177 24 14 61 143 57 62 75 51 67 221 78 177 195 116 249 214 18 82 248 162 1 217 9 107 168 54 114 31 142 45 139 86 203 244 6 150 10 174 14 80 50 90 223 202 107 27 82 159 6 168 18 96 189 139 21 255 104 2 64 118 83 127 235 188 14 36 171 73 146 181 118 171 248 188 2 1 202 207 92 207 103 74 211 195 177 85 44 152 202 100 100 46 255 84 1 175 236 171 22 126 192 190 25 95 229 255 161 120 241 69 103 239 23 27 72 39 150 74 85 157 7 155 122)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 48 166 125 234 175 12 238 68 170 235 144 61 140 219 36 173 157 193 145 211 117 215 214 166 13 37 32 225 147 6 207 196 125 222 157 203 128 170 224 176 64 85 75 185 141 96 30 1 159 147 54 232 49 204 203 153 242 217 44 244 185 22 4 177 0 0 0 0 26 75 0 199 74 90 97 172 25 111 175 77 195 154 205 65 191 53 77 239 10 39 82 153 100 53 145 50 167 111 40 101 66 72 209 172 0 77 17 216 17 171 160 172 185 194 109 47 74 84 1 44 93 138 154 30 124 139 74 82)
  :der-encode
  #t
  :tests
  '(#(427
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 133 2 64 71 156 232 69 139 4 178 220 18 123 70 151 30 108 121 131 27 247 136 246 93 220 119 6 32 218 170 21 88 63 141 80 111 42 102 82 216 43 56 86 14 193 151 117 134 225 25 41 182 102 246 215 1 45 129 111 211 86 212 30 147 4 214 15 2 65 0 167 80 247 60 202 239 245 217 148 6 126 102 228 92 32 8 146 198 7 179 41 190 94 100 219 92 56 60 123 231 17 201 123 93 212 37 165 34 80 188 134 36 119 226 139 58 250 78 243 216 49 6 106 123 20 52 50 165 209 84 3 2 20 87)
      #t
      ())
    #(428
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 104 91 139 41 41 201 160 169 176 222 182 186 239 208 14 38 245 13 76 31 195 254 212 125 126 248 18 197 43 102 236 111 109 9 245 78 155 219 114 2 1 101 112 247 91 185 145 42 171 58 87 43 251 151 234 88 154 206 41 79 240 254 102 98 2 64 76 40 98 103 203 135 166 190 86 244 205 0 128 57 140 35 229 105 242 235 218 113 210 205 22 130 8 2 144 222 180 20 59 220 97 231 91 66 171 239 188 187 221 244 199 148 84 90 5 55 134 86 161 133 134 88 224 164 89 88 51 252 64 246)
      #t
      ())
    #(429
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 134 2 65 0 129 17 18 210 124 161 228 52 176 12 2 147 50 2 132 177 197 54 159 208 7 249 14 122 153 212 76 156 2 1 54 136 209 110 94 10 47 195 160 119 6 74 153 92 66 68 25 92 4 240 3 35 227 58 222 166 179 119 1 173 92 179 98 22 2 65 0 130 221 92 62 54 66 252 67 229 196 198 82 227 178 208 15 109 19 114 7 190 140 155 33 37 86 28 8 112 62 74 132 210 168 39 133 247 117 171 209 138 171 36 229 47 18 197 248 203 86 178 139 145 95 156 11 17 16 197 66 186 146 179 19)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 48 166 125 234 175 12 238 68 170 235 144 61 140 219 36 173 157 193 145 211 117 215 214 166 13 37 32 225 147 6 207 196 125 222 157 203 128 170 224 176 64 85 75 185 141 96 30 1 159 147 54 232 49 204 203 153 242 217 44 244 185 22 4 177 170 221 157 184 193 158 195 195 245 122 133 2 26 90 76 186 7 149 192 113 244 148 132 31 204 60 74 49 11 253 119 62 213 222 114 155 89 125 150 150 174 128 143 82 212 247 224 57 110 191 145 255 227 46 197 88 203 31 198 55 219 174 254 161)
  :der-encode
  #t
  :tests
  '(#(430
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 57 208 197 196 228 140 161 64 100 178 233 179 96 13 235 14 194 251 62 12 101 179 190 92 227 242 6 22 109 118 223 197 165 246 234 135 2 218 58 236 177 62 123 85 168 123 18 99 196 136 70 17 229 222 68 15 108 137 237 18 248 138 229 15 2 64 106 231 131 152 231 249 66 179 94 125 135 239 39 206 131 6 144 247 50 122 210 168 61 245 110 157 2 136 181 25 153 69 75 217 15 137 94 120 73 243 91 42 101 42 58 249 123 245 87 149 180 105 142 11 1 78 166 255 2 26 0 135 143 60)
      #t
      ())
    #(431
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 124 58 178 227 222 175 184 35 238 89 29 197 60 151 179 137 198 209 138 140 169 166 174 32 199 67 40 96 109 178 215 199 210 187 60 226 104 148 227 243 7 133 35 123 158 135 67 80 214 21 120 99 129 176 200 196 32 34 77 47 94 53 148 104 2 64 52 231 3 221 147 155 43 26 32 8 114 51 78 47 134 77 191 38 104 143 132 117 201 227 138 56 65 2 224 138 24 194 125 78 48 216 2 9 95 255 62 221 166 220 30 3 170 129 174 217 103 25 203 73 97 36 113 250 17 136 117 161 92 24)
      #t
      ())
    #(432
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 133 2 64 76 216 165 241 151 122 60 248 232 71 161 55 115 89 204 167 4 108 121 58 218 6 101 242 192 105 8 253 206 194 78 108 213 90 23 80 202 87 100 33 184 166 90 169 154 237 134 60 218 170 119 215 247 207 132 68 142 165 142 149 197 122 19 60 2 65 0 163 64 87 45 93 150 131 231 46 21 126 104 58 177 109 14 42 53 3 15 243 225 100 29 27 79 128 29 128 115 44 50 185 251 181 63 220 174 169 51 241 49 19 111 138 178 83 17 1 139 135 31 83 117 55 130 152 154 135 239 35 26 56 172)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 170 221 157 184 187 65 137 166 210 171 123 90 174 85 15 232 220 0 190 46 0 244 179 91 87 109 111 134 44 9 134 146 16 252 130 251 209 90 84 222 241 68 41 121 250 13 161 198 68 8 253 132 55 166 0 70 147 8 32 116 142 205 252 102 74 89 168 126 174 51 141 34 208 131 85 35 21 111 143 125 147 71 16 167 71 207 25 45 62 49 123 196 95 4 137 214 151 152 135 198 94 193 122 183 181 227 218 159 76 177 16 17 110 240 115 152 73 172 197 109 36 229 163 54 95 207 178 137)
  :der-encode
  #t
  :tests
  '(#(433
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 83 25 44 40 130 14 194 102 99 159 238 9 226 20 165 92 192 239 176 123 34 220 13 63 41 59 218 32 114 252 249 180 98 218 147 236 158 113 105 174 31 17 72 112 81 137 247 241 93 44 190 196 109 34 65 151 163 167 169 36 176 192 10 50 2 64 27 102 69 54 174 219 220 151 190 212 222 226 62 185 74 73 242 61 227 189 132 167 143 41 158 129 237 254 1 122 125 60 163 167 200 170 206 141 19 182 178 235 71 123 146 44 67 152 57 234 205 255 39 131 7 7 87 117 72 99 88 47 113 93)
      #t
      ())
    #(434
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 133 2 65 0 150 144 88 193 93 103 91 27 38 33 82 164 82 15 126 128 58 180 101 169 225 238 239 123 138 93 15 179 232 128 50 184 232 241 190 159 55 200 15 156 123 149 15 77 169 80 186 174 155 33 110 205 108 121 61 219 20 89 207 223 73 119 107 174 2 64 32 224 208 120 165 161 19 233 47 172 223 229 203 57 36 50 71 37 74 160 166 86 184 62 123 170 52 61 54 247 177 75 134 241 94 84 183 27 167 80 109 81 25 255 82 196 126 14 229 73 146 122 0 140 191 43 191 225 145 109 28 194 116 178)
      #t
      ())
    #(435
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 29 229 223 98 19 100 67 107 237 92 172 248 219 228 32 228 228 229 209 176 67 79 207 157 195 53 100 93 208 170 7 204 29 30 163 10 140 175 226 83 28 212 3 93 217 114 192 214 195 114 15 22 14 36 38 79 214 196 21 33 228 78 176 203 2 64 114 233 171 213 69 97 186 200 155 35 75 249 229 26 63 96 3 89 10 241 119 9 142 37 240 5 58 58 225 138 108 116 179 137 103 74 110 184 3 120 255 210 85 207 229 35 35 100 92 223 233 161 10 150 83 65 180 228 127 192 221 8 46 30)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 36 193 4 64 227 122 21 215 236 154 58 72 150 90 156 233 56 2 33 252 81 21 95 30 153 39 22 205 153 51 208 156 224 165 66 68 113 135 126 137 148 73 74 76 42 222 10 129 239 82 149 46 57 86 85 21 127 11 116 59 59 33 158 45 98 143 213 186 81 15 97 14 230 147 161 224 211 158 243 157 145 166 36 131 121 198 34 161 117 162 58 83 48 168 139 45 90 96 219 246 210 73 112 44 209 80 69 97 83 94 161 126 27 225 183 10 65 220 70 62 142 26 26 240 0 0 0 0)
  :der-encode
  #t
  :tests
  '(#(436
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 66 47 177 140 222 201 102 147 113 69 176 241 96 184 206 34 43 11 161 111 171 7 94 22 241 218 200 57 184 215 119 47 238 39 162 131 173 114 34 37 190 190 131 219 45 90 139 37 203 44 190 69 36 139 58 168 118 85 76 106 55 248 19 117 2 64 122 56 137 213 59 180 42 109 65 243 147 235 0 196 54 35 147 112 41 212 204 29 54 116 105 246 234 78 193 102 88 97 157 41 53 222 10 101 90 218 228 203 182 36 242 255 227 206 65 240 36 38 157 145 73 219 216 60 177 201 122 237 65 184)
      #t
      ())
    #(437
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 133 2 65 0 152 54 238 122 224 68 126 192 122 106 33 102 51 224 169 125 232 49 250 4 252 215 96 171 227 158 143 69 119 150 253 252 233 198 158 209 60 130 125 224 202 107 96 216 73 237 105 118 172 9 27 125 144 206 62 152 211 201 20 74 254 99 141 66 2 64 28 157 142 20 43 174 232 87 214 173 236 142 255 132 234 29 35 176 95 84 130 204 41 80 69 21 134 207 93 224 203 249 227 167 39 164 164 233 62 21 182 204 1 37 229 252 209 145 6 54 137 128 100 166 56 19 160 199 95 238 40 4 27 136)
      #t
      ())
    #(438
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 8 119 215 163 255 172 244 239 54 203 237 253 68 228 204 2 55 189 238 222 140 224 189 251 51 11 183 59 49 123 125 22 28 69 189 20 150 225 35 60 237 143 125 207 208 94 14 28 198 101 251 29 201 43 84 252 190 155 14 85 217 186 27 228 2 64 15 122 184 113 116 46 191 34 224 183 103 70 20 215 21 105 213 8 76 204 12 152 194 228 13 8 138 232 142 171 55 130 10 137 162 219 228 158 27 103 236 85 174 26 52 254 72 34 214 145 187 245 73 15 204 44 71 231 193 186 77 197 110 122)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 11 161 140 192 85 114 66 74 122 57 31 75 72 37 138 135 26 15 109 130 22 197 207 130 68 108 45 21 109 85 134 180 193 150 218 11 47 58 35 81 27 137 239 243 29 212 240 200 141 187 26 118 197 228 178 124 66 118 248 251 199 74 27 157 162 140 200 195 65 234 46 57 8 174 106 182 130 95 149 96 50 197 62 98 86 151 248 11 123 78 231 45 204 159 60 255 115 3 73 224 211 13 228 16 145 127 61 13 28 137 136 86 44 29 85 88 59 71 240 222 194 52 253 162 255 255 255 255)
  :der-encode
  #t
  :tests
  '(#(439
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 134 2 65 0 167 50 32 70 186 116 115 113 109 53 116 45 150 26 197 242 254 46 29 213 116 236 231 189 21 218 140 102 162 98 178 231 155 13 29 242 118 25 253 235 187 65 218 27 39 186 124 154 3 112 239 150 46 232 164 81 5 244 65 109 22 235 241 62 2 65 0 132 24 228 69 219 69 207 189 200 69 128 85 56 109 101 233 188 7 180 151 184 212 190 245 245 21 231 148 112 80 217 171 151 153 251 82 15 50 43 240 15 174 79 174 3 193 38 149 16 235 179 225 220 140 202 89 41 142 38 148 88 98 233 230)
      #t
      ())
    #(440
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 27 180 96 172 66 187 54 64 191 199 57 160 24 110 243 54 46 210 123 37 79 84 140 7 57 53 202 162 17 161 170 48 46 121 169 70 109 127 236 231 116 210 80 193 174 174 249 100 27 154 47 37 230 28 163 127 173 168 238 7 244 159 213 30 2 64 61 145 138 7 163 111 87 141 168 176 212 45 48 186 214 14 207 189 96 58 69 208 193 167 27 176 20 71 234 216 26 83 19 38 92 201 181 134 10 186 3 241 201 58 156 185 243 189 217 168 95 39 13 211 105 20 101 148 29 43 128 152 249 60)
      #t
      ())
    #(441
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 91 68 228 253 73 150 242 122 125 207 48 107 201 255 244 169 195 110 63 224 144 38 250 114 18 43 100 164 255 101 248 97 165 149 76 232 164 31 105 163 145 92 132 166 61 176 197 124 109 254 203 172 79 222 153 234 95 203 16 77 105 103 214 19 2 64 8 142 123 132 109 108 94 9 58 123 161 116 39 188 186 14 146 90 203 130 110 78 155 151 43 45 138 109 35 47 99 92 190 150 191 111 22 49 116 219 100 108 47 102 35 200 157 198 228 168 40 212 226 226 252 243 196 39 196 43 219 114 239 183)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 127 51 39 227 70 98 39 74 161 71 149 58 0 127 48 194 238 27 6 215 187 5 62 140 225 201 182 131 240 244 101 99 221 56 219 7 29 135 67 59 48 56 4 52 201 46 140 183 109 96 61 25 54 251 161 233 49 122 6 226 0 0 0 0 82 202 71 143 3 103 171 36 133 126 120 133 118 241 123 252 208 94 98 210 13 15 190 253 27 45 149 75 153 110 171 166 120 25 2 54 53 227 20 131 245 176 37 127 137 180 106 29 43 156 178 66 14 28 219 148 12 234 255 84 41 221 128 19)
  :der-encode
  #t
  :tests
  '(#(442
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 115 150 126 178 78 32 240 212 186 88 137 90 73 248 18 194 141 36 229 240 253 94 53 241 7 88 16 164 120 217 55 23 200 170 38 5 172 132 34 109 211 213 60 57 192 216 197 46 234 200 233 152 186 217 49 245 239 221 102 75 87 206 229 85 2 64 5 176 3 31 177 13 252 124 54 237 137 170 254 102 68 72 53 205 156 83 225 200 80 175 95 5 94 43 38 61 62 115 122 78 106 131 202 219 157 118 221 229 53 232 9 244 71 69 83 36 212 174 230 240 54 72 93 65 103 166 230 14 237 165)
      #t
      ())
    #(443
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 133 2 64 99 63 69 105 20 112 121 35 244 176 8 110 163 24 184 206 189 186 95 161 67 82 227 217 198 6 189 141 171 240 50 131 91 189 167 106 165 20 193 166 221 225 179 33 128 61 39 242 83 223 225 202 229 50 165 189 205 158 147 229 249 69 150 209 2 65 0 155 156 139 160 116 222 235 3 116 93 138 227 124 115 224 34 115 7 26 53 220 254 15 101 228 99 226 8 189 17 198 204 179 173 237 107 231 49 61 122 101 109 94 135 27 142 164 209 213 27 119 132 103 182 221 230 87 142 16 93 86 182 23 212)
      #t
      ())
    #(444
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 64 137 26 87 185 184 240 188 106 135 97 210 66 76 182 11 63 57 222 78 96 27 200 218 241 90 179 33 108 44 86 235 204 118 13 227 9 7 232 146 148 175 88 24 245 167 42 45 244 9 187 105 24 243 214 229 6 206 83 20 96 46 80 193 2 64 104 98 7 86 238 42 96 10 20 103 242 150 8 234 208 25 208 213 22 183 156 138 117 111 197 55 169 252 115 70 22 191 236 19 56 57 190 180 119 143 223 253 63 180 34 110 81 206 75 192 150 39 51 28 141 174 241 247 17 100 138 48 251 6)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 18 72 47 21 142 98 232 52 103 41 123 78 218 217 48 173 49 144 72 40 63 9 73 48 6 5 164 162 209 159 114 249 36 212 30 28 195 173 44 36 101 116 244 160 235 99 124 221 56 108 30 191 74 0 112 123 113 166 70 220 255 255 255 255 24 216 81 239 146 131 95 123 233 42 37 185 136 174 141 95 126 212 47 49 47 124 137 104 80 165 137 247 187 117 0 51 13 19 140 194 13 197 99 10 125 82 89 38 232 247 23 99 94 231 41 55 3 87 54 172 232 143 12 73 31 49 147 13)
  :der-encode
  #t
  :tests
  '(#(445
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 77 235 208 104 48 40 242 51 91 35 60 73 83 27 96 150 231 197 82 31 117 252 180 181 245 227 34 65 190 8 31 60 43 133 73 181 127 49 33 123 233 183 170 26 70 135 167 46 201 165 211 118 48 114 82 202 124 27 155 97 13 37 180 208 2 64 4 209 48 63 107 145 172 1 201 20 17 169 131 243 171 176 79 54 152 177 105 248 163 159 253 25 49 192 97 230 111 67 72 47 236 121 93 253 13 10 190 135 159 168 219 136 91 97 138 202 42 224 19 230 147 241 84 187 157 10 119 173 239 79)
      #t
      ())
    #(446
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 52 172 154 78 111 177 113 244 36 187 89 45 27 132 91 238 85 23 59 66 66 47 213 181 19 47 133 154 39 221 205 165 83 47 211 129 22 230 39 125 147 117 99 159 178 91 15 102 241 232 161 172 202 167 128 12 145 200 126 116 57 152 125 88 2 64 117 137 43 232 225 29 155 243 232 30 131 112 175 2 216 139 218 131 206 10 233 194 26 235 72 126 239 76 76 84 88 229 26 153 228 215 136 219 132 6 76 251 196 130 64 245 102 18 7 135 105 253 224 227 183 6 18 95 70 226 242 106 53 8)
      #t
      ())
    #(447
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 54 182 139 92 173 116 40 128 63 96 102 21 80 88 87 170 124 251 104 61 30 156 232 86 212 153 250 110 19 238 106 79 35 94 221 0 64 52 41 255 20 188 87 141 209 33 253 37 96 4 121 74 221 79 184 25 91 67 169 225 238 251 211 161 2 64 69 198 175 253 96 127 84 36 160 228 156 15 26 114 235 247 148 138 128 180 130 239 23 30 225 97 220 54 81 86 121 227 47 169 237 170 146 197 116 3 230 225 2 100 59 119 57 26 237 238 194 176 84 150 67 21 222 221 76 195 105 242 63 3)
      #t
      ())))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 114 126 117 214 61 206 177 168 74 113 6 216 2 232 235 52 162 4 188 5 53 53 103 162 59 168 182 245 78 80 210 216 34 28 135 253 142 82 56 163 55 77 249 88 179 207 62 63 56 198 24 193 204 140 91 149 116 181 14 64 93 105 18 24 55 247 137 24 80 110 169 204 20 241 73 46 182 108 158 28 78 39 243 203 0 187 81 29 93 253 190 166 248 23 168 123 253 129 222 41 85 250 3 47 82 135 63 121 145 105 204 68 92 176 57 30 70 229 113 121 239 132 213 12 133 219 92 151)
  :der-encode
  #t
  :tests
  '(#(448
      "y-coordinate of the public key is small on brainpoolP512t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 94 27 244 177 222 186 203 164 114 95 195 204 130 20 83 77 229 246 229 146 100 91 96 244 196 161 221 34 96 211 53 125 143 178 173 167 247 42 72 52 106 126 52 57 90 106 24 28 105 64 72 174 130 88 241 203 59 111 99 244 147 40 41 235 2 64 94 61 240 190 238 34 250 150 212 101 88 51 134 47 115 181 47 18 228 196 199 216 24 178 24 70 239 251 57 214 240 159 195 91 45 15 172 143 92 179 196 5 31 244 95 83 5 233 59 36 19 138 15 149 250 210 254 241 193 12 209 220 242 203)
      #t
      ("GroupIsomorphism"))
    #(449
      "y-coordinate of the public key is small on brainpoolP512t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 133 2 65 0 128 64 11 238 154 52 47 58 251 162 219 176 41 35 90 213 17 174 219 48 150 12 83 186 214 112 70 11 56 48 77 124 189 112 111 249 143 18 150 203 126 116 111 140 163 164 57 55 165 205 3 90 0 198 56 104 0 31 164 41 180 145 189 142 2 64 92 102 148 30 220 218 86 34 142 220 231 115 115 167 185 220 221 70 78 209 128 117 231 218 20 39 145 23 120 120 79 128 23 190 246 241 135 81 203 161 35 85 189 144 186 99 184 211 30 163 115 56 127 54 73 78 54 66 0 128 130 211 73 209)
      #t
      ("GroupIsomorphism"))
    #(450
      "y-coordinate of the public key is small on brainpoolP512t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 71 104 223 221 174 76 184 53 102 242 195 169 52 0 145 194 96 142 14 39 10 75 63 72 222 215 199 91 74 161 90 182 92 176 80 207 219 49 44 50 191 170 119 89 134 156 156 12 226 127 108 223 31 181 132 55 159 99 152 201 94 191 134 68 2 64 126 26 58 172 216 214 3 250 236 248 121 2 20 123 103 67 93 153 46 233 229 67 249 52 221 76 64 216 161 44 209 225 3 102 208 116 61 120 98 185 200 186 139 104 22 99 156 53 9 181 202 162 169 21 51 192 175 80 236 226 253 44 83 12)
      #t
      ("GroupIsomorphism"))))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 114 126 117 214 61 206 177 168 74 113 6 216 2 232 235 52 162 4 188 5 53 53 103 162 59 168 182 245 78 80 210 216 34 28 135 253 142 82 56 163 55 77 249 88 179 207 62 63 56 198 24 193 204 140 91 149 116 181 14 64 93 105 18 24 114 230 20 160 139 123 26 191 42 227 157 127 125 93 93 235 125 8 153 232 179 14 128 241 120 101 222 35 120 27 95 245 127 203 188 215 69 204 101 19 92 70 97 177 85 57 180 161 203 209 198 16 230 157 85 11 57 37 139 73 210 94 236 92)
  :der-encode
  #t
  :tests
  '(#(451
      "y-coordinate of the public key is large on brainpoolP512t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 39 217 198 196 219 49 175 242 136 250 78 64 21 157 110 225 140 152 19 148 39 72 71 150 241 248 116 92 152 39 223 192 141 57 58 190 20 77 246 183 193 45 72 151 31 221 40 75 129 230 225 8 96 53 158 247 20 115 185 230 187 132 203 30 2 64 7 160 66 12 138 155 38 145 27 99 98 101 64 168 95 96 170 39 122 253 239 153 144 252 141 193 211 241 242 197 169 39 225 228 162 157 129 167 1 180 139 54 111 0 15 150 38 20 137 156 191 25 56 38 202 141 228 164 37 83 141 229 172 98)
      #t
      ("GroupIsomorphism"))
    #(452
      "y-coordinate of the public key is large on brainpoolP512t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 73 84 46 236 59 150 196 118 181 155 43 148 213 252 126 224 143 210 161 177 231 50 230 96 144 152 171 42 127 37 4 82 251 193 5 122 109 63 236 203 202 235 0 70 139 38 34 46 180 128 101 252 170 215 100 118 129 130 56 96 69 30 30 145 2 64 55 219 51 109 238 30 69 217 172 229 80 5 53 17 201 195 117 86 87 231 142 202 16 141 61 253 30 104 254 131 218 98 107 141 172 187 25 240 238 35 43 15 139 254 141 219 231 213 233 139 122 46 204 208 63 55 93 22 76 232 40 99 24 150)
      #t
      ("GroupIsomorphism"))
    #(453
      "y-coordinate of the public key is large on brainpoolP512t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 79 144 206 183 107 199 47 12 202 16 112 93 59 173 171 108 170 96 25 239 107 254 125 225 183 89 81 213 23 210 177 97 104 81 91 243 5 240 0 98 146 228 144 5 152 37 97 65 228 92 25 7 127 164 71 221 95 50 218 166 44 37 8 21 2 64 103 18 167 132 16 40 2 130 30 151 8 227 73 208 58 136 41 123 55 78 248 26 78 220 53 1 101 36 205 42 34 175 234 123 139 49 113 222 96 172 27 56 130 83 54 80 88 109 202 211 56 234 72 35 20 134 225 14 49 32 206 61 42 89)
      #t
      ("GroupIsomorphism"))))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 5 24 255 20 186 5 24 138 190 208 168 200 141 176 240 151 181 102 10 172 87 233 163 205 187 156 131 62 42 127 159 97 62 73 149 107 83 166 53 149 46 41 129 142 74 128 21 203 106 21 12 237 230 54 194 85 143 45 54 2 72 57 99 185 158 217 254 132 47 62 212 24 70 44 99 226 102 148 76 162 116 126 21 189 143 82 132 77 106 28 233 129 82 16 66 18 6 128 92 110 215 146 53 110 197 125 121 250 62 54 255 242 62 47 198 55 12 103 188 81 211 248 181 85 201 4 141 109)
  :der-encode
  #t
  :tests
  '(#(454
      "x-coordinate of the public key has many trailing 1's on brainpoolP512t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 133 2 64 69 158 62 110 103 26 108 52 45 88 93 182 137 4 61 50 164 148 206 0 57 238 113 172 103 237 110 192 134 25 8 235 174 107 45 110 74 103 202 167 168 240 87 106 73 136 154 74 99 212 176 184 170 136 69 201 207 120 91 73 65 42 112 113 2 65 0 165 237 215 171 252 233 212 65 59 34 40 147 151 120 91 61 132 178 192 211 113 148 9 37 91 183 18 130 104 224 188 211 125 146 139 234 84 134 191 86 255 226 89 199 236 159 80 184 120 224 21 93 115 227 189 229 207 254 85 230 18 248 215 184)
      #t
      ("GroupIsomorphism"))
    #(455
      "x-coordinate of the public key has many trailing 1's on brainpoolP512t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 27 47 126 164 9 96 227 126 40 181 86 183 228 70 196 100 30 47 61 138 130 157 204 74 52 149 83 228 44 249 206 98 114 220 156 220 218 1 62 57 129 203 115 177 13 70 50 28 128 80 29 106 52 173 127 217 89 160 199 143 137 31 51 240 2 64 127 25 91 118 150 237 252 118 135 255 1 38 234 186 19 218 209 225 149 99 232 211 149 175 50 219 61 106 123 78 130 242 128 4 80 29 146 183 83 125 163 151 132 91 122 163 152 161 16 81 5 46 82 38 75 216 203 203 169 152 126 198 116 43)
      #t
      ("GroupIsomorphism"))
    #(456
      "x-coordinate of the public key has many trailing 1's on brainpoolP512t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 27 92 29 43 43 6 89 26 31 165 22 207 250 156 138 87 207 31 255 194 44 236 183 36 146 129 103 11 194 56 131 166 133 83 224 202 241 237 217 241 112 58 37 183 78 0 0 163 126 50 230 204 53 118 147 159 69 140 61 213 196 219 204 156 2 64 75 35 215 237 127 138 107 123 167 210 42 239 168 253 224 48 236 179 242 254 212 165 242 111 18 213 154 41 214 60 221 14 192 63 174 85 125 20 28 123 14 135 18 195 6 176 238 187 208 202 178 118 150 1 32 98 98 43 177 128 4 48 52 186)
      #t
      ("GroupIsomorphism"))))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 63 137 231 135 180 213 210 89 150 36 81 53 48 231 80 171 60 89 87 220 154 160 231 176 138 62 37 53 104 24 226 3 125 6 47 51 109 78 237 65 124 145 188 177 27 84 181 125 84 164 240 42 114 251 116 38 47 116 44 198 243 64 68 1 58 68 139 142 45 13 90 124 91 79 27 159 91 112 26 157 33 255 85 227 103 140 161 25 182 215 197 17 186 10 239 137 243 26 235 25 93 176 15 36 131 89 174 233 36 231 200 96 183 104 69 246 81 42 42 74 173 193 40 122 21 9 82 32)
  :der-encode
  #t
  :tests
  '(#(457
      "y-coordinate of the public key has many trailing 0's on brainpoolP512t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 134 2 65 0 169 82 132 122 207 33 60 134 226 49 49 109 143 145 48 247 203 223 127 57 82 48 122 87 112 118 52 45 19 147 155 74 181 161 49 59 52 171 184 146 4 211 253 31 135 56 133 255 250 104 60 90 73 62 84 97 199 241 64 10 248 106 231 254 2 65 0 154 101 168 164 21 13 229 147 178 150 66 185 136 178 236 46 35 225 94 21 110 207 10 245 253 226 251 215 50 8 246 159 37 6 209 65 224 180 124 14 31 47 160 158 242 107 56 154 107 210 176 35 9 48 161 111 209 25 118 126 56 39 36 181)
      #t
      ("GroupIsomorphism"))
    #(458
      "y-coordinate of the public key has many trailing 0's on brainpoolP512t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 133 2 64 81 191 184 10 174 48 38 42 103 191 7 113 166 184 209 149 229 154 160 78 135 189 6 15 229 169 189 86 211 83 133 165 252 61 165 223 195 174 140 103 219 212 8 24 68 130 133 94 53 99 222 222 231 42 33 182 15 175 215 56 25 170 131 124 2 65 0 128 127 13 105 56 84 103 173 108 216 164 77 72 44 163 182 225 143 123 53 46 241 154 43 201 128 80 11 109 89 4 95 13 111 122 183 228 20 197 13 43 104 215 246 230 192 29 62 131 83 205 253 71 95 36 155 49 132 47 229 153 85 244 20)
      #t
      ("GroupIsomorphism"))
    #(459
      "y-coordinate of the public key has many trailing 0's on brainpoolP512t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 78 135 17 176 13 227 85 241 76 142 185 25 89 193 60 119 249 21 87 84 118 95 16 242 170 168 253 173 106 20 198 164 230 44 94 212 138 157 140 164 3 201 2 219 12 44 7 53 66 107 51 230 120 40 172 50 174 25 184 78 101 152 104 25 2 64 125 16 74 229 229 208 218 38 203 66 125 121 81 212 13 244 41 180 32 80 134 230 51 184 0 215 215 184 189 228 138 155 236 78 67 221 235 66 38 25 43 92 155 48 255 163 239 167 210 56 90 178 138 25 12 22 95 178 162 197 133 114 194 162)
      #t
      ("GroupIsomorphism"))))
(test-signature/testvector
  "ecdsa_brainpoolP512r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 129 155 48 20 6 7 42 134 72 206 61 2 1 6 9 43 36 3 3 2 8 1 1 13 3 129 130 0 4 120 96 164 116 59 180 142 119 147 199 241 65 111 186 198 202 11 83 130 16 215 67 242 73 118 175 62 253 169 127 40 188 149 145 52 1 236 76 165 231 68 162 61 26 85 38 83 255 17 14 200 66 27 61 229 49 243 186 205 160 123 251 9 214 3 102 47 47 36 117 187 245 226 13 164 139 80 22 157 40 156 137 197 78 208 249 123 187 199 243 128 22 241 169 85 203 116 197 39 39 239 128 32 85 234 9 15 225 164 155 229 141 220 96 131 188 163 247 192 47 246 68 119 92 208 2 127 6)
  :der-encode
  #t
  :tests
  '(#(460
      "y-coordinate of the public key has many trailing 1's on brainpoolP512t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 132 2 64 76 214 23 84 33 29 34 35 113 229 82 87 143 247 5 204 129 154 47 159 178 114 159 5 216 72 202 171 244 74 49 253 161 189 3 143 27 135 239 210 138 140 229 50 34 253 254 193 141 89 41 223 146 109 242 124 44 126 115 96 188 92 12 112 2 64 92 233 76 133 29 177 128 125 199 157 204 8 124 8 48 215 10 0 105 207 82 186 255 175 52 122 239 161 221 186 119 246 247 112 193 72 63 221 227 143 93 116 189 179 35 114 225 47 238 132 62 255 240 242 220 147 68 202 30 59 38 185 176 81)
      #t
      ("GroupIsomorphism"))
    #(461
      "y-coordinate of the public key has many trailing 1's on brainpoolP512t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 133 2 64 72 180 189 231 190 251 27 28 173 80 206 230 35 60 191 50 129 40 96 200 29 122 213 176 233 214 55 114 2 188 211 72 39 197 52 218 10 201 100 106 224 21 70 137 227 140 96 136 148 187 49 38 225 2 95 105 200 36 198 154 184 33 39 74 2 65 0 131 105 245 132 15 119 102 104 235 180 53 179 59 224 93 206 74 223 171 184 134 12 204 144 13 7 219 0 106 80 25 95 212 222 152 99 33 146 251 231 49 156 237 255 38 170 134 130 207 123 245 241 192 46 88 185 193 99 35 97 3 217 179 20)
      #t
      ("GroupIsomorphism"))
    #(462
      "y-coordinate of the public key has many trailing 1's on brainpoolP512t1"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 129 133 2 64 25 82 75 21 207 78 203 64 11 147 142 245 247 82 184 110 200 240 124 89 3 218 93 186 156 145 171 121 101 177 34 58 142 38 43 239 140 202 137 115 237 152 121 127 55 163 94 28 89 153 207 32 62 97 14 247 115 198 170 39 134 187 160 100 2 65 0 152 207 117 38 245 162 74 14 47 34 249 9 248 25 11 19 19 4 81 177 93 214 119 75 222 169 217 41 52 45 146 75 199 235 161 223 137 145 156 27 154 238 141 9 32 54 6 209 12 235 255 137 144 76 183 231 26 130 216 151 45 117 83 6)
      #t
      ("GroupIsomorphism"))))
