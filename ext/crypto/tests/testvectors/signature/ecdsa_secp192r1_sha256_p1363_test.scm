(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 205 53 160 177 142 235 143 205 135 255 1 151 128 1 40 40 116 95 4 110 120 93 235 162 129 80 222 27 230 203 67 118 82 48 6 190 255 48 255 9 180 4 145 37 206 210 151 35)
  :der-encode
  #f
  :tests
  '(#(1
      "signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(24 74 189 252 109 242 237 45 12 156 112 103 175 85 82 192 35 140 164 170 127 143 138 3 80 132 35 224 66 181 41 69 226 25 138 232 180 169 125 56 16 150 29 136 108 108 225 228)
      #t
      ())
    #(2
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(1 24 74 189 252 109 242 237 45 12 156 112 103 73 52 74 246 55 248 110 92 52 97 178 52 0 175 123 220 31 189 74 214 186 29 230 117 22 229 53 122 254 3 213 172 41 72 101 70 77)
      #f
      ())
    #(3
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(231 181 66 3 146 13 18 210 243 99 143 151 234 137 165 117 240 223 37 7 53 66 158 46 175 123 220 31 189 74 214 186 29 230 117 22 229 53 122 254 3 213 172 41 72 101 70 77)
      #f
      ())
    #(4
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(1 24 74 189 252 109 242 237 45 12 156 112 103 175 85 82 192 35 140 164 170 127 143 138 3 0 175 123 220 31 189 74 214 186 29 230 117 22 229 53 122 254 3 213 172 41 72 101 70 77)
      #f
      ())
    #(5
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(231 181 66 3 146 13 18 210 243 99 143 152 80 170 173 63 220 115 91 85 128 112 117 253 175 123 220 31 189 74 214 186 29 230 117 22 229 53 122 254 3 213 172 41 72 101 70 77)
      #f
      ())
    #(6
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(0 24 74 189 252 109 242 237 45 12 156 112 103 175 85 82 192 35 140 164 170 127 143 138 3 1 175 123 220 31 189 74 214 186 29 230 117 22 127 20 115 52 24 65 117 218 253 55 110 126)
      #f
      ())
    #(7
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(0 24 74 189 252 109 242 237 45 12 156 112 103 175 85 82 192 35 140 164 170 127 143 138 3 1 175 123 220 31 189 74 214 186 29 230 117 22 229 53 122 254 3 213 172 41 72 101 70 77)
      #f
      ())
    #(8
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(24 74 189 252 109 242 237 45 12 156 112 103 175 85 82 192 35 140 164 170 127 143 138 3 80 132 35 224 66 181 41 69 226 25 138 233 26 202 133 1 252 42 83 214 183 154 185 179)
      #f
      ())
    #(9
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(10
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(11
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 49)
      #f
      ("EdgeCase"))
    #(12
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 48)
      #f
      ("EdgeCase"))
    #(13
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 50)
      #f
      ("EdgeCase"))
    #(14
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(15
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(16
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(17
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(18
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 49)
      #f
      ("EdgeCase"))
    #(19
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 48)
      #f
      ("EdgeCase"))
    #(20
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 50)
      #f
      ("EdgeCase"))
    #(21
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(22
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(23
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 49 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(24
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 49 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(25
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 49 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 49)
      #f
      ("EdgeCase"))
    #(26
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 49 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 48)
      #f
      ("EdgeCase"))
    #(27
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 49 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 50)
      #f
      ("EdgeCase"))
    #(28
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 49 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(29
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 49 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(30
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 48 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(31
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 48 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(32
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 48 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 49)
      #f
      ("EdgeCase"))
    #(33
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 48 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 48)
      #f
      ("EdgeCase"))
    #(34
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 48 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 50)
      #f
      ("EdgeCase"))
    #(35
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 48 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(36
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 48 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(37
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(38
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(39
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 50 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 49)
      #f
      ("EdgeCase"))
    #(40
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 50 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 48)
      #f
      ("EdgeCase"))
    #(41
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 50 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 50)
      #f
      ("EdgeCase"))
    #(42
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 50 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(43
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 50 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(44
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(45
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(46
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 49)
      #f
      ("EdgeCase"))
    #(47
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 48)
      #f
      ("EdgeCase"))
    #(48
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 50)
      #f
      ("EdgeCase"))
    #(49
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(50
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(51
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(52
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(53
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 49)
      #f
      ("EdgeCase"))
    #(54
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 48)
      #f
      ("EdgeCase"))
    #(55
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 50)
      #f
      ("EdgeCase"))
    #(56
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(57
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(58
      "Edge case for Shamir multiplication"
      #vu8(53 54 55 56 48)
      #vu8(202 60 89 158 153 222 217 33 19 15 58 26 253 52 218 214 176 240 46 253 19 168 223 23 18 201 203 36 5 235 113 23 133 163 173 209 67 176 84 243 205 116 73 154 43 249 22 211)
      #t
      ())
    #(59
      "special case hash"
      #vu8(52 50 54 52 55 57 55 50 52)
      #vu8(111 32 103 108 13 4 252 64 234 85 213 112 47 121 131 85 120 115 99 169 30 151 167 229 157 28 140 23 27 43 2 231 215 145 194 4 193 124 234 76 245 86 162 3 66 136 136 91)
      #t
      ())
    #(60
      "special case hash"
      #vu8(55 49 51 56 54 56 52 56 57 49)
      #vu8(92 102 131 207 11 8 103 186 31 128 163 200 58 116 12 107 37 208 103 161 85 36 33 10 201 236 132 216 144 253 132 87 89 141 6 190 114 152 79 99 132 41 27 43 217 138 159 204)
      #t
      ())
    #(61
      "special case hash"
      #vu8(49 48 51 53 57 51 51 49 54 54 56)
      #vu8(28 26 244 28 70 31 210 231 172 144 207 3 119 84 48 134 62 6 37 96 147 146 214 137 86 98 19 22 195 251 15 193 125 30 20 12 135 168 210 81 65 234 209 51 182 111 181 67)
      #t
      ())
    #(62
      "special case hash"
      #vu8(51 57 52 57 52 48 49 50 49 53)
      #vu8(131 127 130 211 227 140 194 14 164 232 253 55 207 34 179 254 24 111 93 183 136 127 201 221 201 31 43 173 88 56 92 197 114 207 76 94 235 110 205 87 192 124 85 174 84 234 219 248)
      #t
      ())
    #(63
      "special case hash"
      #vu8(49 51 52 52 50 57 51 48 55 57)
      #vu8(201 5 155 113 216 250 159 216 138 9 143 204 138 243 59 159 128 40 90 123 207 253 160 35 200 178 77 214 124 139 187 0 208 91 169 165 213 215 136 59 31 194 109 209 203 107 195 133)
      #t
      ())
    #(64
      "special case hash"
      #vu8(51 55 48 54 50 49 49 55 49 50)
      #vu8(30 186 56 53 240 20 225 192 23 60 214 10 5 63 173 201 252 14 119 9 145 148 150 161 100 199 216 35 205 115 66 59 44 121 102 192 178 72 166 94 83 170 248 10 240 171 43 80)
      #t
      ())
    #(65
      "special case hash"
      #vu8(51 52 51 54 56 56 55 49 50)
      #vu8(199 136 232 49 189 28 251 112 0 52 231 47 101 208 186 225 159 148 102 98 101 21 227 2 124 155 245 117 95 44 3 108 63 95 119 23 150 196 28 120 82 243 10 196 225 213 131 7)
      #t
      ())
    #(66
      "special case hash"
      #vu8(49 51 53 49 53 51 48 51 55 48)
      #vu8(181 14 229 2 255 162 187 7 221 0 81 9 73 24 232 13 171 162 2 26 207 234 165 54 72 252 57 79 5 167 66 0 42 196 116 171 39 215 24 186 187 147 31 208 49 187 26 251)
      #t
      ())
    #(67
      "special case hash"
      #vu8(54 53 53 51 50 48 51 49 50 54)
      #vu8(192 230 163 38 15 113 196 121 20 165 47 162 169 130 128 88 55 162 102 253 87 223 90 72 92 124 184 14 76 119 36 222 140 53 183 84 180 159 249 138 248 61 198 162 249 250 189 0)
      #t
      ())
    #(68
      "special case hash"
      #vu8(49 53 54 52 51 52 54 54 48 51)
      #vu8(129 166 117 162 83 79 40 67 59 223 156 147 68 6 183 13 56 217 95 191 41 42 250 194 150 90 104 31 4 107 103 110 121 131 204 247 149 172 29 72 55 58 118 229 48 157 230 248)
      #t
      ())
    #(69
      "special case hash"
      #vu8(52 52 50 57 53 51 57 49 49 55)
      #vu8(84 165 80 143 93 130 68 211 76 204 95 224 217 100 237 44 206 97 42 166 2 186 139 185 251 158 130 83 36 22 119 152 156 108 245 30 223 22 177 212 131 117 82 13 247 4 62 162)
      #t
      ())
    #(70
      "special case hash"
      #vu8(49 48 57 53 51 50 54 49 51 53 49)
      #vu8(35 11 77 247 21 235 254 131 156 237 73 1 48 200 144 55 117 124 137 162 113 92 25 239 136 200 114 111 122 48 63 80 123 162 215 103 172 114 123 107 103 60 238 21 136 200 120 24)
      #t
      ())
    #(71
      "special case hash"
      #vu8(53 57 56 55 51 53 48 48 52 49)
      #vu8(140 141 186 43 76 39 113 104 198 90 169 57 142 99 242 9 142 75 213 43 7 245 123 163 98 152 24 193 224 196 201 154 35 20 139 44 66 254 86 142 240 165 226 176 91 195 117 234)
      #t
      ())
    #(72
      "special case hash"
      #vu8(51 52 54 51 48 48 54 56 55 56)
      #vu8(197 137 64 24 125 163 190 132 98 223 157 183 188 179 216 219 224 65 95 110 220 27 95 147 77 146 247 55 118 86 185 98 50 117 100 226 38 18 33 178 112 197 130 73 239 18 174 84)
      #t
      ())
    #(73
      "special case hash"
      #vu8(57 56 49 55 51 50 48 50 56 55)
      #vu8(205 89 250 183 28 114 176 207 142 34 163 179 17 113 85 5 197 91 201 236 11 98 154 52 150 216 119 186 12 222 203 69 238 244 189 173 150 7 76 224 147 73 214 246 250 9 208 73)
      #t
      ())
    #(74
      "special case hash"
      #vu8(51 50 50 50 48 52 49 48 52 54)
      #vu8(18 91 57 85 136 35 241 152 116 24 63 198 25 60 80 228 245 253 127 135 86 31 67 179 27 22 77 101 97 87 238 111 213 198 237 32 39 111 47 158 142 120 244 0 86 244 201 23)
      #t
      ())
    #(75
      "special case hash"
      #vu8(54 54 54 54 51 48 55 49 48 52)
      #vu8(13 126 220 205 173 51 121 220 197 5 19 57 123 41 136 206 79 32 15 8 54 58 33 251 155 206 22 53 200 165 155 183 155 110 117 182 249 12 225 84 212 55 91 248 234 84 194 237)
      #t
      ())
    #(76
      "special case hash"
      #vu8(49 48 51 53 57 53 49 56 57 56)
      #vu8(141 4 63 51 83 21 244 146 0 91 85 208 185 206 123 98 45 74 87 206 84 109 65 186 113 142 188 173 200 10 118 90 223 174 102 12 45 193 70 39 218 64 70 229 176 117 116 147)
      #t
      ())
    #(77
      "special case hash"
      #vu8(49 56 52 54 53 57 55 49 57 53)
      #vu8(249 195 27 88 131 41 191 56 109 48 238 196 225 142 218 74 111 168 3 49 205 171 127 211 131 144 21 177 196 105 208 119 121 17 56 2 122 24 249 207 149 193 246 194 96 56 253 159)
      #t
      ())
    #(78
      "special case hash"
      #vu8(51 49 51 54 48 52 54 49 56 57)
      #vu8(77 35 191 183 112 216 182 11 183 171 26 164 94 31 107 29 164 20 148 95 213 34 21 187 45 44 87 238 63 197 23 121 52 112 246 31 56 225 172 93 201 205 136 97 141 127 39 130)
      #t
      ())
    #(79
      "special case hash"
      #vu8(50 54 54 51 55 56 52 50 53 52)
      #vu8(63 94 200 49 188 193 134 42 16 106 69 92 99 66 202 14 90 22 221 135 113 111 52 163 159 88 107 140 213 89 238 10 164 194 174 226 234 112 133 232 111 169 74 162 205 67 155 152)
      #t
      ())
    #(80
      "special case hash"
      #vu8(49 54 53 50 49 48 48 53 50 52)
      #vu8(66 77 80 80 102 175 196 18 56 123 20 127 12 249 110 30 186 227 161 111 12 13 105 239 68 105 117 160 159 141 156 32 210 112 65 150 241 68 111 53 78 121 255 61 48 140 126 72)
      #t
      ())
    #(81
      "special case hash"
      #vu8(53 55 52 56 48 56 49 54 57 54)
      #vu8(255 49 15 80 169 136 6 42 66 194 20 144 106 246 187 232 241 100 1 230 213 242 254 178 182 212 138 234 128 139 137 8 46 248 35 101 84 183 208 128 1 202 158 158 117 243 164 110)
      #t
      ())
    #(82
      "special case hash"
      #vu8(54 51 52 51 57 49 51 52 54 56)
      #vu8(201 47 167 10 248 34 219 197 68 70 219 58 20 153 31 27 26 37 148 49 64 78 116 249 57 67 213 162 168 70 101 81 236 113 193 52 200 171 56 152 190 238 232 235 204 81 94 87)
      #t
      ())
    #(83
      "special case hash"
      #vu8(49 53 52 49 49 48 51 53 57 56)
      #vu8(211 155 162 134 178 73 40 109 244 134 149 2 49 80 178 1 243 64 232 233 178 248 216 65 209 221 188 218 1 229 154 19 184 46 96 29 143 12 55 126 110 22 194 62 100 214 199 208)
      #t
      ())
    #(84
      "special case hash"
      #vu8(49 48 52 55 56 53 56 48 49 50 56)
      #vu8(49 205 240 191 75 119 193 15 95 17 187 42 178 163 199 120 5 158 7 104 36 20 101 35 5 140 59 227 231 208 27 225 127 29 19 87 69 213 129 204 252 240 58 224 171 98 38 249)
      #t
      ())
    #(85
      "special case hash"
      #vu8(49 48 53 51 54 50 56 53 53 54 56)
      #vu8(203 94 40 180 112 78 103 141 188 23 109 41 230 157 106 192 250 172 0 125 197 189 30 255 245 174 179 203 149 243 88 4 225 77 244 94 101 96 209 88 131 199 3 205 107 109 50 62)
      #t
      ())
    #(86
      "special case hash"
      #vu8(57 53 51 57 48 52 49 48 53)
      #vu8(136 205 134 95 137 212 197 24 139 142 49 52 6 72 236 202 80 144 2 152 21 243 23 165 84 66 199 1 110 178 205 175 194 93 144 146 62 243 200 162 215 197 168 188 86 182 220 97)
      #t
      ())
    #(87
      "special case hash"
      #vu8(57 55 56 56 52 56 48 51 57)
      #vu8(10 102 107 189 80 211 41 34 236 235 7 253 99 151 29 107 68 192 110 57 246 174 55 206 19 223 121 129 153 65 166 65 58 79 62 246 241 182 40 130 236 200 139 48 176 65 227 234)
      #t
      ())
    #(88
      "special case hash"
      #vu8(51 54 49 48 54 55 50 52 52 50)
      #vu8(101 76 85 135 119 164 250 41 252 34 2 97 86 34 2 88 152 106 38 42 198 93 216 238 96 142 141 201 14 86 155 61 24 42 102 62 147 247 64 235 201 252 123 156 213 17 40 121)
      #t
      ())
    #(89
      "special case hash"
      #vu8(49 48 53 52 50 52 48 55 48 53)
      #vu8(50 71 178 185 248 245 157 249 62 254 168 130 103 96 157 138 143 124 69 162 22 162 238 32 66 18 238 66 130 79 48 250 252 228 254 130 134 182 156 186 192 33 146 252 238 19 227 45)
      #t
      ())
    #(90
      "special case hash"
      #vu8(53 49 55 52 52 52 56 49 57 55)
      #vu8(55 71 152 118 225 233 108 122 209 73 236 119 37 224 126 193 108 227 15 74 132 157 36 113 29 194 227 100 43 113 123 141 27 115 185 207 148 216 255 7 12 11 126 237 65 65 240 255)
      #t
      ())
    #(91
      "special case hash"
      #vu8(49 57 54 55 53 54 49 50 53 49)
      #vu8(220 18 133 110 133 69 161 185 158 48 120 196 19 17 167 106 77 33 83 178 119 178 165 246 165 86 33 41 215 123 96 238 32 205 217 99 128 209 105 235 34 126 71 214 44 232 167 146)
      #t
      ())
    #(92
      "special case hash"
      #vu8(51 52 52 55 50 53 51 51 52 51)
      #vu8(252 68 21 129 243 62 96 107 30 202 34 67 230 119 54 159 185 172 148 130 93 153 154 244 114 213 5 2 116 72 185 55 165 250 223 255 111 162 23 120 69 157 122 9 14 104 65 11)
      #t
      ())
    #(93
      "special case hash"
      #vu8(51 54 56 50 54 52 51 49 56)
      #vu8(89 104 87 149 20 102 136 131 56 110 5 214 213 129 63 142 58 213 74 181 149 251 81 166 53 0 110 146 76 128 161 69 102 107 176 151 185 204 246 191 161 101 13 123 0 88 105 232)
      #t
      ())
    #(94
      "special case hash"
      #vu8(51 50 54 49 49 57 56 54 48 56)
      #vu8(134 209 19 246 203 252 186 79 77 88 221 158 1 102 255 111 108 49 127 36 213 125 83 185 108 10 88 13 71 84 76 181 143 234 227 93 172 36 55 23 27 2 164 238 203 48 104 1)
      #t
      ())
    #(95
      "special case hash"
      #vu8(57 54 55 56 55 56 49 48 57 52)
      #vu8(166 68 190 223 120 255 174 37 53 54 243 230 210 204 234 200 135 143 127 192 55 184 49 106 182 134 159 204 233 146 245 6 16 157 221 154 201 18 78 145 27 39 213 111 43 179 14 39)
      #t
      ())
    #(96
      "special case hash"
      #vu8(52 57 53 56 56 50 51 56 50 51)
      #vu8(25 63 86 128 203 101 108 50 19 7 240 207 1 108 54 71 217 218 186 47 223 132 127 121 22 115 4 231 214 119 209 57 16 62 219 246 208 154 66 145 174 203 110 5 113 145 88 185)
      #t
      ())
    #(97
      "special case hash"
      #vu8(56 50 52 54 51 55 56 51 55)
      #vu8(143 191 214 150 197 1 230 247 254 170 151 30 128 105 20 102 144 124 254 252 193 169 110 240 198 250 42 53 188 140 235 220 77 253 112 38 43 240 192 168 187 74 221 180 243 193 123 200)
      #t
      ())
    #(98
      "special case hash"
      #vu8(49 49 48 50 48 56 51 51 55 55 54)
      #vu8(139 59 202 186 36 88 14 202 168 231 48 162 144 8 248 37 162 246 131 188 59 49 77 16 72 14 9 43 225 97 180 135 75 96 91 105 162 61 107 151 27 114 5 193 218 118 197 111)
      #t
      ())
    #(99
      "special case hash"
      #vu8(49 51 51 56 55 49 54 52 56)
      #vu8(129 156 81 193 195 233 214 91 126 178 103 24 245 13 54 115 161 120 52 146 175 108 100 3 179 235 211 41 34 27 144 34 196 84 139 27 115 245 144 190 54 89 216 248 159 203 99 212)
      #t
      ())
    #(100
      "special case hash"
      #vu8(51 50 50 49 52 52 49 54 50)
      #vu8(219 10 149 187 124 63 205 97 147 215 18 166 251 144 2 200 100 155 57 127 174 164 163 162 58 1 68 170 99 27 178 50 235 147 117 2 184 245 231 195 81 212 73 214 128 122 213 11)
      #t
      ())
    #(101
      "special case hash"
      #vu8(49 48 54 56 54 54 53 53 53 52 54)
      #vu8(21 207 84 244 54 46 252 189 206 58 85 154 255 126 46 19 7 97 74 122 235 162 91 77 252 242 190 165 211 134 120 230 11 13 13 245 81 22 33 47 185 180 187 16 19 197 180 245)
      #t
      ())
    #(102
      "special case hash"
      #vu8(54 50 49 53 53 50 52 54)
      #vu8(157 64 105 57 157 77 138 173 25 179 31 51 203 186 255 106 97 76 221 227 177 20 150 169 190 209 238 199 151 114 182 75 128 20 247 42 102 245 21 43 160 222 94 174 199 34 73 164)
      #t
      ())
    #(103
      "special case hash"
      #vu8(55 48 51 48 56 49 56 55 55 52)
      #vu8(79 114 8 66 202 70 119 177 195 245 79 88 0 243 40 179 123 66 15 218 217 123 76 130 190 251 92 86 26 202 205 153 200 142 133 31 7 73 151 101 255 128 185 56 75 151 28 162)
      #t
      ())
    #(104
      "special case hash"
      #vu8(53 57 50 52 53 50 51 55 52 52)
      #vu8(11 204 62 84 172 27 20 193 150 45 134 32 74 155 234 159 184 210 228 179 182 205 116 114 207 224 176 148 182 105 193 85 227 46 220 3 222 21 52 130 213 189 166 66 135 18 210 67)
      #t
      ())
    #(105
      "special case hash"
      #vu8(49 52 57 53 53 56 54 54 50 49)
      #vu8(230 192 35 96 213 60 27 135 10 248 35 104 84 50 160 201 217 47 126 244 245 131 28 130 35 3 153 97 102 119 133 97 101 247 236 36 217 138 125 26 113 251 84 108 115 94 188 101)
      #t
      ())
    #(106
      "special case hash"
      #vu8(52 48 48 53 51 49 52 52 48 54)
      #vu8(163 1 112 214 193 81 140 118 109 145 184 190 47 161 201 82 122 219 7 84 23 72 2 4 64 17 170 63 181 179 237 34 245 86 127 165 33 3 191 153 45 244 150 44 16 208 135 44)
      #t
      ())
    #(107
      "special case hash"
      #vu8(51 48 57 54 52 53 55 53 49 50)
      #vu8(140 196 103 14 197 124 213 66 212 211 85 161 41 73 208 114 207 176 220 56 66 108 98 198 3 62 56 158 132 231 98 17 219 131 218 230 251 119 45 221 245 14 191 84 72 50 224 66)
      #t
      ())
    #(108
      "special case hash"
      #vu8(50 55 56 52 48 50 53 54 50 48)
      #vu8(99 77 188 80 167 67 56 254 77 14 24 113 17 235 119 111 136 162 183 3 75 135 157 171 66 1 226 44 74 133 179 35 47 33 237 52 106 195 53 224 105 182 16 22 63 223 242 66)
      #t
      ())
    #(109
      "special case hash"
      #vu8(50 54 49 56 55 56 55 52 49 56)
      #vu8(51 89 97 16 232 212 161 182 196 157 61 97 157 194 76 21 59 238 99 174 211 195 87 120 185 145 193 191 211 70 234 128 19 105 106 162 151 17 166 187 124 234 165 5 13 7 69 33)
      #t
      ())
    #(110
      "special case hash"
      #vu8(49 54 52 50 54 50 53 50 54 50)
      #vu8(245 96 254 50 240 94 55 195 156 27 150 193 206 102 41 236 141 151 116 172 186 10 45 236 212 192 8 227 41 145 88 200 59 217 37 213 64 168 19 118 151 247 145 83 45 91 229 215)
      #t
      ())
    #(111
      "special case hash"
      #vu8(54 56 50 52 49 56 57 52 51 54)
      #vu8(49 77 161 155 117 229 248 17 106 183 198 166 113 231 218 219 55 154 142 134 199 69 44 125 108 212 141 25 200 102 125 179 131 56 87 66 237 224 0 7 228 132 130 95 33 64 101 170)
      #t
      ())
    #(112
      "special case hash"
      #vu8(52 56 52 50 52 53 52 50 53)
      #vu8(241 187 227 1 221 10 30 118 107 88 191 129 47 181 56 8 186 201 30 111 132 173 158 33 104 115 82 210 111 241 75 47 193 253 95 24 255 204 249 2 8 152 182 254 4 25 219 162)
      #t
      ())
    #(113
      "Signature generated without truncating the hash"
      #vu8(49 50 51 52 48 48)
      #vu8(107 236 129 155 178 5 197 85 117 221 180 179 0 34 160 72 134 214 213 98 227 143 252 34 169 207 115 80 149 111 168 111 201 252 119 3 56 132 83 223 59 36 188 14 76 95 11 227)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 176 46 191 166 216 54 95 123 240 209 241 154 15 164 7 235 79 234 170 125 255 248 103 91 52 27 136 201 59 11 225 23 63 173 231 190 252 120 174 253 8 71 232 98 177 63 50 220)
  :der-encode
  #f
  :tests
  '(#(114
      "k*G has a large x-coordinate"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 102 33 7 200 235 148 54 78 75 45 215 205 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 46)
      #t
      ())
    #(115
      "r too large"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 46)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 28 43 180 37 66 86 163 41 236 151 63 255 121 149 28 137 90 83 68 31 43 115 228 226 93 175 11 211 108 46 100 228 77 14 81 123 73 70 76 236 52 218 239 150 153 130 157 34)
  :der-encode
  #f
  :tests
  '(#(116
      "r,s are large"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 48 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 47)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 196 34 116 44 181 215 249 144 220 149 121 232 90 3 57 218 126 202 189 161 29 125 24 235 245 71 218 94 195 118 129 206 134 145 111 199 239 78 145 183 106 162 7 63 23 83 28 201)
  :der-encode
  #f
  :tests
  '(#(117
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 115 229 249 234 249 108 140 132 201 59 211 27 246 93 175 78 210 14 160 239 103 174 11 210)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 231 15 6 218 14 96 54 187 14 228 127 228 120 54 160 244 56 46 51 73 255 146 113 18 111 238 181 10 176 246 24 165 85 126 72 139 172 232 250 41 50 251 3 0 158 214 34 160)
  :der-encode
  #f
  :tests
  '(#(118
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 65 169 45 229 41 134 54 214 147 232 109 181 155 62 210 98 21 231 14 207 228 54 32 217)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 148 233 54 164 20 154 186 186 226 99 0 236 76 145 84 9 246 187 203 188 233 70 17 211 95 50 96 52 153 15 121 147 85 157 151 144 30 126 209 128 133 135 55 140 219 35 108 7)
  :der-encode
  #f
  :tests
  '(#(119
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #t
      ())
    #(120
      "incorrect size of signature"
      #vu8(49 50 51 52 48 48)
      #vu8(2 1)
      #t
      ("SigSize"))))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 187 65 80 117 86 182 115 104 254 185 151 142 120 121 48 94 79 168 27 235 44 149 173 149 93 127 14 92 57 102 173 95 238 43 89 1 204 61 236 65 144 23 82 70 147 92 169 147)
  :der-encode
  #f
  :tests
  '(#(121
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2)
      #t
      ())
    #(122
      "incorrect size of signature"
      #vu8(49 50 51 52 48 48)
      #vu8(2 2)
      #t
      ("SigSize"))))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 126 24 7 58 185 90 38 3 142 95 53 168 5 199 108 139 136 15 157 23 87 147 0 94 139 227 153 237 223 220 231 110 26 66 186 22 208 101 188 113 134 192 139 50 252 175 223 234)
  :der-encode
  #f
  :tests
  '(#(123
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3)
      #t
      ())
    #(124
      "incorrect size of signature"
      #vu8(49 50 51 52 48 48)
      #vu8(2 3)
      #t
      ("SigSize"))
    #(125
      "r is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 40 51 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 41 223 215 50 211 193 49 97 54 77 41 135 211 18 201 48 139 138 29 200 180 240 93 210 229 177 57 225 18 183 128 251 52 186 3 144 58 108 35 231 105 22 39 198 214 240 126 130)
  :der-encode
  #f
  :tests
  '(#(126
      "s is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 228 254 184)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 144 23 212 173 98 147 62 114 51 111 234 204 27 234 217 80 168 48 137 222 130 80 167 148 0 129 43 176 123 153 145 203 155 81 67 254 218 0 101 35 248 87 12 240 29 241 56 244)
  :der-encode
  #f
  :tests
  '(#(127
      "small r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 197 139 22 44 88 177 98 197 139 22 44 88 98 147 221 196 241 133 145 143 44 202 123 189)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 149 226 155 128 214 148 61 166 224 83 220 30 107 178 145 128 163 38 13 14 5 90 237 211 46 248 249 244 50 215 115 192 172 124 229 31 81 134 142 205 78 211 116 93 155 171 164 71)
  :der-encode
  #f
  :tests
  '(#(128
      "smallish r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 45 155 77 52 121 82 205 151 118 194 96 189 106 120 211 111 94 33 219 235 113 200 77 157 29 211 72 213 194 152 67)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 158 137 238 249 11 108 113 52 117 19 68 92 62 221 18 185 33 245 234 162 73 133 18 19 107 233 249 96 62 49 38 222 131 62 214 247 96 208 125 90 135 234 219 32 149 19 80 40)
  :der-encode
  #f
  :tests
  '(#(129
      "100-bit r and small s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 16 51 230 126 55 179 43 68 85 128 191 78 252 189 66 189 66 189 66 189 66 189 66 189 66 113 193 186 125 165 130 125 52 175 132 117 95)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 232 228 168 8 127 187 149 108 183 132 210 207 187 212 251 16 252 91 130 220 82 153 33 50 191 207 219 157 106 64 121 183 2 18 169 165 71 241 101 103 52 65 207 234 6 139 134 247)
  :der-encode
  #f
  :tests
  '(#(130
      "small r and 100 bit s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 158 161 70 55 169 142 99 211 195 54 134 65 225 35 16 184 250 233 145 180 43 137 74 112)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 165 224 7 151 120 223 204 21 70 244 243 183 7 16 50 219 134 104 30 50 170 17 6 152 9 76 51 62 167 247 150 237 220 21 118 7 130 128 25 65 79 6 65 179 33 195 210 136)
  :der-encode
  #f
  :tests
  '(#(131
      "100-bit r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 6 37 34 187 211 236 190 124 57 233 62 124 36 158 161 70 55 169 142 99 211 195 54 134 65 225 35 16 184 250 233 145 180 43 137 74 112)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 19 142 16 54 24 94 50 226 111 36 237 110 116 124 146 188 87 80 211 177 24 29 32 191 26 188 151 204 63 159 100 139 207 78 209 11 108 138 116 16 11 201 193 132 96 222 126 90)
  :der-encode
  #f
  :tests
  '(#(132
      "r and s^-1 are close to n"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 153 222 248 54 20 107 201 177 180 210 39 177 170 170 170 170 170 170 170 170 170 170 170 170 102 148 165 121 98 242 134 118 120 140 26 203)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 235 184 50 142 12 139 172 65 234 245 2 223 185 229 245 213 112 20 199 234 132 43 102 23 199 182 251 16 67 67 89 218 122 41 174 69 139 242 176 59 124 146 144 247 156 65 150 252)
  :der-encode
  #f
  :tests
  '(#(133
      "s == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 51 74 82 188 177 121 67 59 60 70 13 104 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #t
      ())
    #(134
      "s == 0"
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 51 74 82 188 177 121 67 59 60 70 13 104 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 115 118 27 140 138 166 109 71 195 2 161 175 86 206 110 100 193 57 222 86 90 45 225 236 165 38 114 109 117 82 225 98 223 44 66 167 225 82 48 131 225 80 190 131 22 124 51 79)
  :der-encode
  #f
  :tests
  '(#(135
      "point at infinity during verify"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 204 239 124 27 10 53 228 216 218 105 20 24 85 85 85 85 85 85 85 85 85 85 85 85 51 74 82 188 177 121 67 59 60 70 13 101)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 215 188 155 80 232 191 244 187 44 108 129 22 162 90 151 62 149 113 127 216 87 250 213 115 62 176 137 176 2 55 102 10 164 133 1 109 162 246 195 189 236 136 204 28 219 40 235 86)
  :der-encode
  #f
  :tests
  '(#(136
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 204 239 124 27 10 53 228 216 218 105 20 25 127 255 255 255 255 255 255 255 255 255 255 255 204 239 124 27 10 53 228 216 218 105 20 24)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 208 42 228 151 35 142 45 239 19 6 7 185 142 237 118 147 162 248 173 79 146 148 227 205 93 143 237 149 81 255 115 255 224 211 135 124 211 100 255 177 4 105 0 82 203 208 247 226)
  :der-encode
  #f
  :tests
  '(#(137
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 204 239 124 27 10 53 228 216 218 105 20 25 127 255 255 255 255 255 255 255 255 255 255 255 204 239 124 27 10 53 228 216 218 105 20 25)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 213 231 236 155 71 36 173 148 80 118 102 233 177 228 118 58 209 115 114 83 121 102 9 15 132 6 51 205 171 52 151 152 78 95 93 54 235 142 42 12 4 138 115 161 14 8 147 234)
  :der-encode
  #f
  :tests
  '(#(138
      "u1 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 51 74 82 188 177 121 67 59 60 70 13 100 187 90 82 244 47 156 146 97 237 67 97 245 148 34 161 227 0 54 231 195 43 39 12 136)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 79 154 43 148 142 78 169 80 162 236 157 253 165 173 27 155 97 159 158 182 120 178 124 209 175 240 142 170 27 149 105 99 230 175 61 97 242 197 129 44 229 1 69 253 254 116 194 163)
  :der-encode
  #f
  :tests
  '(#(139
      "u1 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 51 74 82 188 177 121 67 59 60 70 13 100 68 165 173 11 208 99 109 158 18 188 158 10 5 188 86 83 20 52 225 238 137 171 27 169)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 77 194 123 103 71 41 234 39 109 31 156 155 3 31 45 184 65 73 125 183 206 80 132 95 113 131 139 91 33 191 176 178 56 234 158 32 159 248 156 136 248 208 112 147 61 127 85 49)
  :der-encode
  #f
  :tests
  '(#(140
      "u2 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 51 74 82 188 177 121 67 59 60 70 13 100 85 85 85 85 85 85 85 85 85 85 85 85 51 74 82 188 177 121 67 59 60 70 13 100)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 195 179 70 212 6 106 37 40 174 213 134 169 153 70 42 237 130 207 179 97 174 247 90 8 117 120 215 54 98 38 11 201 108 165 192 155 142 226 121 249 112 26 25 106 69 192 2 212)
  :der-encode
  #f
  :tests
  '(#(141
      "u2 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 51 74 82 188 177 121 67 59 60 70 13 100 170 170 170 170 170 170 170 170 170 170 170 170 102 148 165 121 98 242 134 118 120 140 26 205)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 175 124 238 39 61 87 168 57 60 180 104 229 97 162 95 139 160 134 153 206 207 10 201 50 166 73 4 33 212 149 202 173 55 115 70 98 73 213 229 71 146 43 207 24 50 44 232 156)
  :der-encode
  #f
  :tests
  '(#(142
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 233 30 27 166 186 137 134 32 164 107 203 81 151 245 134 26 99 4 211 183 134 238 116 78)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 240 93 38 13 36 112 72 128 198 15 235 253 163 226 135 62 62 69 164 18 210 100 170 229 90 76 94 170 238 163 162 200 240 59 47 235 166 163 213 176 168 79 155 133 56 222 159 57)
  :der-encode
  #f
  :tests
  '(#(143
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 148 206 223 248 113 94 56 69 193 40 202 236 233 131 44 130 106 199 51 129 123 101 96 213)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 90 98 137 196 251 24 195 68 164 237 207 216 145 5 198 47 250 32 203 166 129 78 116 185 253 17 219 45 48 235 59 158 218 170 234 208 73 229 120 104 190 71 82 8 5 42 13 166)
  :der-encode
  #f
  :tests
  '(#(144
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 104 230 134 240 236 203 132 11 184 11 240 142 46 231 13 100 38 79 213 22 47 226 21 156)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 217 22 230 119 246 142 145 124 83 86 90 103 97 202 101 94 106 49 237 34 112 49 66 7 148 89 111 249 102 114 3 212 241 103 170 92 2 45 117 139 46 226 219 83 133 145 208 197)
  :der-encode
  #f
  :tests
  '(#(145
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 181 135 213 131 224 90 187 7 68 165 173 11 135 247 226 131 27 206 130 27 210 142 33 185)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 232 149 88 80 226 45 92 8 195 25 182 107 154 191 116 56 127 230 210 9 53 107 103 30 60 242 110 74 106 109 243 204 242 174 177 90 61 148 157 56 42 126 248 124 187 196 25 202)
  :der-encode
  #f
  :tests
  '(#(146
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 125 88 62 5 171 176 116 74 90 208 189 6 4 216 140 69 65 105 197 77 178 35 164 40)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 59 195 12 61 134 118 123 152 150 161 176 207 100 75 55 92 84 138 101 1 173 197 216 55 74 39 244 142 104 248 198 84 107 157 2 133 251 170 3 167 44 14 14 50 236 85 189 81)
  :der-encode
  #f
  :tests
  '(#(147
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 250 176 124 11 87 96 232 148 181 161 122 12 9 177 24 138 130 211 138 155 100 71 72 80)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 248 131 226 39 77 37 151 76 70 139 253 93 66 171 40 129 31 174 50 195 154 182 154 205 138 73 40 41 204 110 56 81 249 189 67 58 46 39 217 54 42 247 24 236 92 28 45 34)
  :der-encode
  #f
  :tests
  '(#(148
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 224 90 187 7 68 165 173 11 208 99 109 157 185 59 132 255 175 6 31 24 198 45 169 237)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 172 59 97 156 3 195 120 230 1 130 129 231 1 56 251 101 109 158 121 193 66 135 194 35 215 54 140 83 1 91 135 224 61 216 132 153 85 106 184 148 6 229 146 143 144 9 67 149)
  :der-encode
  #f
  :tests
  '(#(149
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 79 22 150 213 186 37 114 150 85 245 56 119 174 90 60 70 49 119 110 180 186 213 209 63)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 95 77 147 131 175 139 2 219 149 230 62 74 198 242 232 157 7 54 175 58 142 91 35 88 67 75 75 86 130 185 68 209 23 7 192 18 148 91 238 207 133 181 131 161 94 85 78 83)
  :der-encode
  #f
  :tests
  '(#(150
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 132 231 67 55 179 116 208 249 1 86 157 146 205 88 93 179 66 130 208 105 228 62 113 128)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 74 169 141 19 225 157 181 118 58 55 8 90 144 93 176 193 43 246 73 253 78 216 9 114 2 28 217 173 205 42 209 17 181 167 31 32 236 52 63 26 230 16 166 173 157 157 19 251)
  :der-encode
  #f
  :tests
  '(#(151
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 139 112 242 44 162 187 60 239 173 202 26 86 205 228 53 40 226 233 95 213 241 90 238 10)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 202 247 79 171 39 251 175 76 74 29 160 55 88 61 124 58 198 81 223 152 99 212 196 251 33 213 79 252 219 92 44 192 121 12 113 45 228 216 137 254 188 219 73 254 137 3 21 211)
  :der-encode
  #f
  :tests
  '(#(152
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 22 225 228 89 69 118 121 223 91 148 52 174 1 233 114 27 177 102 245 250 45 227 179 227)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 225 226 136 155 75 254 209 197 100 57 31 155 21 150 241 126 7 39 117 71 8 124 85 113 63 9 55 48 222 224 163 52 205 99 223 109 49 171 221 14 231 9 128 92 160 218 87 49)
  :der-encode
  #f
  :tests
  '(#(153
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 162 82 214 133 232 49 182 207 9 94 79 4 207 205 167 68 148 80 85 208 31 62 161 237)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 63 6 53 210 209 220 99 211 122 145 27 176 181 196 175 234 159 226 166 248 36 58 178 125 97 120 205 168 249 93 134 226 248 146 124 233 3 235 173 136 233 68 160 126 216 171 52 23)
  :der-encode
  #f
  :tests
  '(#(154
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 52 115 67 120 118 101 194 5 220 5 248 71 23 115 134 178 19 39 234 139 23 241 10 206)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 187 147 21 220 215 23 92 173 130 5 254 133 53 36 242 193 220 90 148 67 125 92 36 142 128 157 6 228 253 77 148 5 90 42 14 56 12 9 112 96 161 158 168 170 124 12 106 252)
  :der-encode
  #f
  :tests
  '(#(155
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 213 85 85 85 85 85 85 85 85 85 85 85 17 63 80 36 13 157 49 33 35 54 197 117)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 109 183 231 207 214 70 147 179 130 110 30 5 90 241 214 74 221 82 40 173 57 64 48 223 39 90 161 87 196 134 182 240 70 10 54 236 0 156 44 57 95 129 219 254 59 203 171 193)
  :der-encode
  #f
  :tests
  '(#(156
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 253 79 138 220 201 247 201 58 218 42 212 248 129 167 48 141 35 197 142 7 157 252 203 90)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 193 6 36 158 57 16 87 99 120 77 118 43 141 170 187 132 67 3 93 183 28 32 138 147 168 178 18 67 91 106 79 24 239 193 3 109 195 26 52 79 196 138 90 185 189 74 128 152)
  :der-encode
  #f
  :tests
  '(#(157
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 163 169 78 117 54 51 104 50 72 75 96 83 113 3 241 152 70 181 225 143 134 162 139 31)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 3 182 67 166 228 248 248 239 5 88 36 129 28 150 37 228 231 252 193 60 195 118 222 48 221 75 25 71 150 134 139 220 164 125 124 124 9 106 131 118 21 120 222 64 6 81 148 71)
  :der-encode
  #f
  :tests
  '(#(158
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 152 115 86 21 41 147 109 140 127 255 255 255 195 46 96 50 18 129 152 141 224 154 250 69)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 195 110 111 169 0 218 203 188 182 170 202 58 166 239 196 155 69 59 27 212 176 76 225 88 46 53 31 35 91 47 47 102 169 56 53 151 193 15 179 17 87 47 1 31 82 188 9 2)
  :der-encode
  #f
  :tests
  '(#(159
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 53 97 82 153 54 216 199 255 255 255 255 255 234 180 85 235 138 154 65 247 241 103 101 41)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 45 224 16 239 69 8 205 128 107 20 80 97 245 190 41 134 193 47 217 132 49 244 3 234 113 3 123 197 210 211 211 230 134 81 140 252 113 155 210 192 11 25 2 126 127 56 128 245)
  :der-encode
  #f
  :tests
  '(#(160
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 106 194 165 50 109 177 143 255 255 255 255 255 213 104 171 215 21 52 131 239 226 206 202 82)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 128 237 50 159 205 243 111 127 138 51 202 43 182 90 113 245 40 100 215 84 53 176 231 207 121 12 40 245 164 232 44 158 211 163 132 87 153 238 77 198 66 108 202 19 34 219 125 60)
  :der-encode
  #f
  :tests
  '(#(161
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 41 147 109 140 127 255 255 255 255 255 255 255 239 105 229 20 223 208 185 173 107 63 61 251)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 59 50 136 61 224 50 49 97 218 48 65 74 215 197 224 167 113 227 61 113 191 143 2 137 103 153 11 206 55 97 139 179 147 142 233 203 156 20 44 252 133 203 20 139 127 114 102 141)
  :der-encode
  #f
  :tests
  '(#(162
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 209 17 17 17 17 17 17 17 17 17 17 16 187 245 138 147 119 106 227 207 210 106 221 58)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 243 13 106 116 244 20 141 66 248 243 237 54 74 87 131 3 34 6 246 187 112 43 241 112 53 249 103 8 0 228 182 74 45 53 202 22 182 115 157 128 247 202 29 23 194 86 154 148)
  :der-encode
  #f
  :tests
  '(#(163
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 191 255 255 255 255 255 255 255 255 255 255 255 175 193 121 225 89 48 30 121 87 55 104 185)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 158 116 3 55 99 166 83 238 30 182 149 132 38 141 231 1 41 5 240 3 134 154 82 174 244 122 252 79 178 250 106 63 21 114 241 101 255 233 152 228 14 213 18 91 131 245 26 92)
  :der-encode
  #f
  :tests
  '(#(164
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 21 85 85 85 85 85 85 85 85 85 85 85 68 79 212 9 3 103 76 72 72 205 177 94)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 49 212 155 97 123 189 112 198 23 123 189 247 189 125 72 196 176 77 48 51 238 36 40 200 249 3 37 56 239 130 28 3 246 203 104 145 116 46 235 250 215 45 69 252 229 95 213 232)
  :der-encode
  #f
  :tests
  '(#(165
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 42 170 170 170 170 170 170 170 170 170 170 170 136 159 168 18 6 206 152 144 145 155 98 188)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 193 249 62 34 124 227 238 141 213 106 112 232 130 91 36 148 194 68 225 199 197 135 110 16 24 86 132 203 175 150 227 164 115 2 49 153 113 221 177 207 82 7 61 192 162 50 69 101)
  :der-encode
  #f
  :tests
  '(#(166
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 63 255 255 255 255 255 255 255 255 255 255 255 204 239 124 27 10 53 228 216 218 105 20 26)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 198 137 135 214 146 115 155 40 102 212 24 35 117 210 5 230 210 232 178 203 212 56 180 250 109 249 93 145 155 20 33 239 157 45 116 163 55 33 31 159 23 185 81 100 56 67 46 176)
  :der-encode
  #f
  :tests
  '(#(167
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 209 212 167 58 155 25 180 25 36 37 176 41 133 113 116 231 45 144 213 160 157 186 89 168)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 2 69 238 18 179 93 33 212 133 223 34 10 218 107 145 24 13 146 70 200 190 90 208 72 88 6 34 80 161 211 170 234 89 36 67 46 57 10 93 228 255 198 63 201 233 100 18 105)
  :der-encode
  #f
  :tests
  '(#(168
      "point duplication during verification"
      #vu8(49 50 51 52 48 48)
      #vu8(135 56 214 238 226 21 75 100 244 73 236 238 254 82 100 68 243 145 141 58 1 40 30 57 71 88 171 102 126 46 163 223 52 85 174 252 100 125 167 204 80 54 156 239 8 129 114 76)
      #t
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 2 69 238 18 179 93 33 212 133 223 34 10 218 107 145 24 13 146 70 200 190 90 208 72 167 249 221 175 94 44 85 21 166 219 188 209 198 245 162 26 0 57 192 54 22 155 237 150)
  :der-encode
  #f
  :tests
  '(#(169
      "duplication bug"
      #vu8(49 50 51 52 48 48)
      #vu8(135 56 214 238 226 21 75 100 244 73 236 238 254 82 100 68 243 145 141 58 1 40 30 57 71 88 171 102 126 46 163 223 52 85 174 252 100 125 167 204 80 54 156 239 8 129 114 76)
      #f
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 152 118 74 18 130 211 161 239 214 228 18 226 5 162 38 165 44 145 32 15 246 114 143 118 113 47 139 117 239 35 217 69 40 139 228 182 175 22 209 226 47 212 43 184 168 255 100 166)
  :der-encode
  #f
  :tests
  '(#(170
      "point with x-coordinate 0"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 85 85 85 85 85 85 85 85 85 85 85 85 51 74 82 188 177 121 67 59 60 70 13 101)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 183 133 135 63 153 148 195 50 184 96 132 200 107 194 43 163 104 90 110 97 253 68 152 135 249 154 126 33 103 235 164 66 175 158 16 128 210 154 155 243 177 219 154 55 250 203 170 123)
  :der-encode
  #f
  :tests
  '(#(171
      "point with x-coordinate 0"
      #vu8(49 50 51 52 48 48)
      #vu8(1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 51 51 51 51 51 51 51 51 51 51 51 51 30 198 49 164 106 123 245 35 138 144 110 112)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 152 38 190 7 162 251 17 86 22 233 110 41 163 95 102 60 69 170 106 164 74 204 13 45 186 104 64 136 41 195 14 85 176 53 113 145 23 86 93 64 227 234 141 221 101 111 170 1)
  :der-encode
  #f
  :tests
  '(#(172
      "comparison with point at infinity "
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 51 74 82 188 177 121 67 59 60 70 13 101 51 51 51 51 51 51 51 51 51 51 51 51 30 198 49 164 106 123 245 35 138 144 110 112)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 147 80 91 118 252 40 126 126 127 4 113 221 17 189 113 19 5 67 67 40 54 157 93 168 112 126 102 104 57 244 67 110 228 73 218 3 120 68 105 11 188 8 101 67 131 66 122 225)
  :der-encode
  #f
  :tests
  '(#(173
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(218 254 191 88 40 120 63 42 211 85 52 99 21 136 163 246 41 167 15 177 105 130 168 136 85 85 85 85 85 85 85 85 85 85 85 85 51 74 82 188 177 121 67 59 60 70 13 101)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 91 237 194 191 75 213 7 135 176 142 214 188 209 114 82 3 230 109 6 17 59 134 151 140 189 104 57 231 4 184 28 41 222 174 227 164 63 132 229 133 186 66 103 36 85 144 120 93)
  :der-encode
  #f
  :tests
  '(#(174
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(218 254 191 88 40 120 63 42 211 85 52 99 21 136 163 246 41 167 15 177 105 130 168 136 146 73 36 146 73 36 146 73 36 146 73 36 87 237 32 30 231 25 5 138 30 46 242 101)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 78 149 207 130 134 20 221 81 146 131 47 210 178 220 211 167 52 160 42 37 16 27 195 74 32 85 17 122 220 109 229 32 60 68 246 221 233 39 51 32 166 183 109 109 214 159 184 188)
  :der-encode
  #f
  :tests
  '(#(175
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(218 254 191 88 40 120 63 42 211 85 52 99 21 136 163 246 41 167 15 177 105 130 168 136 51 51 51 51 51 51 51 51 51 51 51 51 30 198 49 164 106 123 245 35 138 144 110 112)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 195 200 10 23 215 129 124 153 119 199 147 8 95 48 121 164 117 238 191 97 151 194 20 250 144 136 18 130 252 0 4 177 94 172 80 206 188 251 24 154 45 205 128 25 134 90 245 99)
  :der-encode
  #f
  :tests
  '(#(176
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(218 254 191 88 40 120 63 42 211 85 52 99 21 136 163 246 41 167 15 177 105 130 168 136 204 204 204 204 204 204 204 204 204 204 204 204 123 24 198 145 169 239 212 142 42 65 185 193)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 64 35 39 33 7 209 109 238 250 67 102 107 221 236 200 172 113 59 102 202 36 28 39 255 175 149 60 175 227 65 223 142 17 50 247 144 254 61 206 204 180 108 204 169 241 218 138 240)
  :der-encode
  #f
  :tests
  '(#(177
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(218 254 191 88 40 120 63 42 211 85 52 99 21 136 163 246 41 167 15 177 105 130 168 136 109 182 219 109 182 219 109 182 219 109 182 219 65 241 216 23 45 82 196 39 150 163 53 204)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 246 225 179 204 30 144 35 94 68 61 232 42 75 165 77 61 83 5 37 239 171 112 118 2 132 118 67 7 198 196 13 5 109 254 83 34 82 18 3 119 14 110 115 191 84 66 3 201)
  :der-encode
  #f
  :tests
  '(#(178
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(218 254 191 88 40 120 63 42 211 85 52 99 21 136 163 246 41 167 15 177 105 130 168 136 14 177 14 90 240 100 59 98 184 109 197 69 21 67 233 3 94 0 165 39 108 31 122 62)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 236 237 129 192 196 86 252 50 56 208 143 146 35 137 98 119 139 133 187 89 107 39 118 138 20 176 105 33 187 70 86 183 232 0 212 207 152 208 111 91 56 27 138 160 215 250 122 212)
  :der-encode
  #f
  :tests
  '(#(179
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(24 141 168 14 176 48 144 246 124 191 32 235 67 161 136 0 244 255 10 253 130 255 16 18 85 85 85 85 85 85 85 85 85 85 85 85 51 74 82 188 177 121 67 59 60 70 13 101)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 3 127 224 181 211 123 119 178 131 220 50 10 246 111 123 106 86 54 33 28 207 61 183 197 9 187 238 35 51 186 124 60 137 131 241 219 241 204 214 220 134 22 69 156 97 144 186 56)
  :der-encode
  #f
  :tests
  '(#(180
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(24 141 168 14 176 48 144 246 124 191 32 235 67 161 136 0 244 255 10 253 130 255 16 18 146 73 36 146 73 36 146 73 36 146 73 36 87 237 32 30 231 25 5 138 30 46 242 101)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 55 105 115 136 191 226 218 250 68 176 49 17 253 63 157 233 118 100 225 9 237 210 95 118 89 68 90 79 110 3 140 243 245 65 37 12 164 10 137 206 125 54 146 201 252 14 9 117)
  :der-encode
  #f
  :tests
  '(#(181
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(24 141 168 14 176 48 144 246 124 191 32 235 67 161 136 0 244 255 10 253 130 255 16 18 51 51 51 51 51 51 51 51 51 51 51 51 30 198 49 164 106 123 245 35 138 144 110 112)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 113 77 171 247 176 235 179 74 89 20 84 37 92 141 52 53 248 80 195 89 114 181 28 149 40 206 14 24 110 18 250 115 165 133 114 243 9 137 20 33 28 172 74 34 45 161 250 171)
  :der-encode
  #f
  :tests
  '(#(182
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(24 141 168 14 176 48 144 246 124 191 32 235 67 161 136 0 244 255 10 253 130 255 16 18 204 204 204 204 204 204 204 204 204 204 204 204 123 24 198 145 169 239 212 142 42 65 185 193)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 223 169 48 48 12 220 158 226 137 239 253 204 6 194 111 51 43 106 14 245 152 66 132 149 76 46 86 38 112 57 4 245 100 61 198 147 6 44 113 153 94 120 159 156 150 99 232 182)
  :der-encode
  #f
  :tests
  '(#(183
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(24 141 168 14 176 48 144 246 124 191 32 235 67 161 136 0 244 255 10 253 130 255 16 18 109 182 219 109 182 219 109 182 219 109 182 219 65 241 216 23 45 82 196 39 150 163 53 204)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 123 255 57 48 111 252 92 193 15 52 96 148 53 236 33 234 183 163 180 153 103 247 243 179 108 11 147 70 178 201 129 213 159 119 7 156 143 83 146 60 73 108 115 247 173 125 7 177)
  :der-encode
  #f
  :tests
  '(#(184
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(24 141 168 14 176 48 144 246 124 191 32 235 67 161 136 0 244 255 10 253 130 255 16 18 14 177 14 90 240 100 59 98 184 109 197 69 21 67 233 3 94 0 165 39 108 31 122 62)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 24 141 168 14 176 48 144 246 124 191 32 235 67 161 136 0 244 255 10 253 130 255 16 18 7 25 43 149 255 200 218 120 99 16 17 237 107 36 205 213 115 249 119 161 30 121 72 17)
  :der-encode
  #f
  :tests
  '(#(185
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(187 90 82 244 47 156 146 97 237 67 97 245 148 34 161 227 0 54 231 195 43 39 12 136 36 146 73 36 146 73 36 146 73 36 146 73 21 251 72 7 185 198 65 98 135 139 188 153)
      #f
      ())
    #(186
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(68 165 173 11 208 99 109 158 18 188 158 10 5 188 86 83 20 52 225 238 137 171 27 169 36 146 73 36 146 73 36 146 73 36 146 73 21 251 72 7 185 198 65 98 135 139 188 153)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 24 141 168 14 176 48 144 246 124 191 32 235 67 161 136 0 244 255 10 253 130 255 16 18 248 230 212 106 0 55 37 135 156 239 238 18 148 219 50 41 140 6 136 94 225 134 183 238)
  :der-encode
  #f
  :tests
  '(#(187
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(187 90 82 244 47 156 146 97 237 67 97 245 148 34 161 227 0 54 231 195 43 39 12 136 36 146 73 36 146 73 36 146 73 36 146 73 21 251 72 7 185 198 65 98 135 139 188 153)
      #f
      ())
    #(188
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(68 165 173 11 208 99 109 158 18 188 158 10 5 188 86 83 20 52 225 238 137 171 27 169 36 146 73 36 146 73 36 146 73 36 146 73 21 251 72 7 185 198 65 98 135 139 188 153)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp192r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 73 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 1 3 50 0 4 42 85 27 90 57 119 30 67 109 230 54 214 37 155 166 175 177 175 165 212 216 151 204 248 188 169 166 234 93 146 214 86 196 186 79 45 216 92 157 134 208 226 68 95 213 219 134 146)
  :der-encode
  #f
  :tests
  '(#(189
      "pseudorandom signature"
      #vu8()
      #vu8(231 26 18 157 100 72 214 41 152 239 227 151 143 201 136 33 62 202 19 181 86 103 23 164 61 18 100 38 121 78 65 137 20 229 103 12 117 161 151 251 217 59 145 213 92 22 171 222)
      #t
      ())
    #(190
      "pseudorandom signature"
      #vu8(77 115 103)
      #vu8(28 82 152 67 125 228 19 72 60 119 126 17 51 230 45 91 129 132 135 71 184 148 128 187 3 181 97 82 227 35 33 107 217 217 228 3 200 205 34 154 104 1 79 110 43 105 1 93)
      #t
      ())
    #(191
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(73 123 11 89 138 163 85 157 109 65 95 212 108 108 63 32 252 251 131 128 23 226 252 51 200 186 115 156 214 58 201 27 77 213 24 182 181 32 32 239 61 247 43 92 54 110 169 253)
      #t
      ())
    #(192
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(145 205 85 187 25 132 233 215 147 249 161 123 213 22 170 122 165 151 86 157 41 98 34 80 57 150 170 29 88 223 102 189 221 74 175 112 150 71 117 25 129 55 200 25 201 230 184 142)
      #t
      ())))
