(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 234 218 147 190 16 178 68 158 30 139 181 131 5 213 32 8 1 60 87 16 124 26 32 163 23 166 203 167 236 166 114 52 12 3 209 210 224 150 99 40 102 145 223 85 6 159 162 84 144 201 221 159 156 11 178 181)
  :der-encode
  #t
  :tests
  '(#(1
      "signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 28 86 200 9 112 217 163 8 169 246 57 237 25 154 192 136 249 59 169 175 208 76 83 244 142 79 168 141 58)
      #t
      ())
    #(2
      "Legacy:ASN encoding of r misses leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #t
      ("MissingZero"))
    #(3
      "Legacy:ASN encoding of s misses leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 28 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #t
      ("MissingZero"))
    #(4
      "valid"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #t
      ())
    #(5
      "long form encoding of length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ("BER"))
    #(6
      "length of sequence contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 130 0 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ("BER"))
    #(7
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(8
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(9
      "uint32 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 1 0 0 0 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(10
      "uint64 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 137 1 0 0 0 0 0 0 0 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(11
      "length of sequence = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 127 255 255 255 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(12
      "length of sequence = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 255 255 255 255 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(13
      "length of sequence = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 255 255 255 255 255 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(14
      "length of sequence = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 136 255 255 255 255 255 255 255 255 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(15
      "incorrect length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 255 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(16
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(17
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 128 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(18
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 128 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(19
      "removing sequence"
      #vu8(49 50 51 52 48 48)
      #vu8()
      #f
      ())
    #(20
      "lonely sequence tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48)
      #f
      ())
    #(21
      "appending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 0 0)
      #f
      ())
    #(22
      "prepending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 0 0 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(23
      "appending unused 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 0 0)
      #f
      ())
    #(24
      "appending null value to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 5 0)
      #f
      ())
    #(25
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 73 129 119 48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(26
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 37 0 48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(27
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 0 4 222 173 190 239)
      #f
      ())
    #(28
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 34 34 73 129 119 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(29
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 34 33 37 0 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(30
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 34 31 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 0 4 222 173 190 239 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(31
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 34 34 73 129 119 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(32
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 34 33 37 0 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(33
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 34 31 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 0 4 222 173 190 239)
      #f
      ())
    #(34
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 170 0 187 0 205 0 48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(35
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 170 2 170 187 48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(36
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 34 37 170 0 187 0 205 0 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(37
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 34 35 170 2 170 187 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(38
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 34 37 170 0 187 0 205 0 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(39
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 34 35 170 2 170 187 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(40
      "truncated length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129)
      #f
      ())
    #(41
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 0 0)
      #f
      ())
    #(42
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 34 128 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 0 0 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(43
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 34 128 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 0 0)
      #f
      ())
    #(44
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 49 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 0 0)
      #f
      ())
    #(45
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 34 128 3 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 0 0 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(46
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 34 128 3 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 0 0)
      #f
      ())
    #(47
      "Replacing sequence with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(5 0)
      #f
      ())
    #(48
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(46 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(49
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(47 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(50
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(49 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(51
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(50 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(52
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(255 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(53
      "dropping value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 0)
      #f
      ())
    #(54
      "using composition for sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 48 1 2 48 61 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(55
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157)
      #f
      ())
    #(56
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(57
      "indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 0 0)
      #f
      ("BER"))
    #(58
      "indefinite length with truncated delimiter"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 0)
      #f
      ())
    #(59
      "indefinite length with additional element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 5 0 0 0)
      #f
      ())
    #(60
      "indefinite length with truncated element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 6 8 17 34 0 0)
      #f
      ())
    #(61
      "indefinite length with garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 0 0 254 2 190 239)
      #f
      ())
    #(62
      "indefinite length with nonempty EOC"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 0 2 190 239)
      #f
      ())
    #(63
      "prepend empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 48 0 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(64
      "append empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 48 0)
      #f
      ())
    #(65
      "append garbage with high tag number"
      #vu8(49 50 51 52 48 48)
      #vu8(48 65 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 191 127 0)
      #f
      ())
    #(66
      "sequence of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(67
      "truncated sequence: removed last 1 elements"
      #vu8(49 50 51 52 48 48)
      #vu8(48 31 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118)
      #f
      ())
    #(68
      "repeating element in sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 93 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(69
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 129 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ("BER"))
    #(70
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 129 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ("BER"))
    #(71
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 130 0 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ("BER"))
    #(72
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 130 0 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ("BER"))
    #(73
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 30 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(74
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 28 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(75
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 30 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(76
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 28 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(77
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 2 133 1 0 0 0 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(78
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 133 1 0 0 0 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(79
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 137 1 0 0 0 0 0 0 0 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(80
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 137 1 0 0 0 0 0 0 0 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(81
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 132 127 255 255 255 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(82
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 132 127 255 255 255 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(83
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 132 255 255 255 255 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(84
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 132 255 255 255 255 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(85
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 2 133 255 255 255 255 255 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(86
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 133 255 255 255 255 255 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(87
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 136 255 255 255 255 255 255 255 255 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(88
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 136 255 255 255 255 255 255 255 255 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(89
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 255 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(90
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 255 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(91
      "removing integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 31 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(92
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 32 2 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(93
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 32 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2)
      #f
      ())
    #(94
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 31 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 0 0 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(95
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 31 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 0 0)
      #f
      ())
    #(96
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 31 0 0 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ("BER"))
    #(97
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 31 0 0 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ("BER"))
    #(98
      "appending unused 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 0 0 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(99
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 31 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 5 0 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(100
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 31 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3 5 0)
      #f
      ())
    #(101
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 129 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(102
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 129)
      #f
      ())
    #(103
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 5 0 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(104
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 5 0)
      #f
      ())
    #(105
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 0 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(106
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 1 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(107
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 3 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(108
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 4 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(109
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 255 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(110
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 0 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(111
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 1 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(112
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 3 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(113
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 4 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(114
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 255 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(115
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 0 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(116
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 0)
      #f
      ())
    #(117
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 34 33 2 1 0 2 28 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(118
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 34 33 2 1 0 2 28 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(119
      "modify first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 2 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(120
      "modify first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 2 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(121
      "modify last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 246 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(122
      "modify last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 131)
      #f
      ())
    #(123
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(124
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 28 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157)
      #f
      ())
    #(125
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 30 255 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(126
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 30 255 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(127
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 9 1 128 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(128
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 9 1 128)
      #f
      ())
    #(129
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 0 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(130
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 1 0)
      #f
      ())
    #(131
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 1 189 235 142 219 203 48 136 92 101 188 181 141 110 161 235 161 84 198 26 2 213 226 255 241 113 224 125 179 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(132
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 189 235 142 219 203 48 136 92 101 188 181 141 110 163 190 91 147 84 57 134 174 40 173 102 185 40 41 57 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(133
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 255 66 20 113 36 52 207 119 163 154 67 74 114 145 93 43 1 139 242 214 59 61 250 41 83 234 123 172 138 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(134
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 66 20 113 36 52 207 119 163 154 67 74 114 145 92 65 164 108 171 198 121 81 215 82 153 70 215 214 199 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(135
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 254 66 20 113 36 52 207 119 163 154 67 74 114 145 94 20 94 171 57 229 253 42 29 0 14 142 31 130 77 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(136
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 1 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(137
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 66 20 113 36 52 207 119 163 154 67 74 114 145 93 43 1 139 242 214 59 61 250 41 83 234 123 172 138 2 29 0 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(138
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 1 169 55 246 143 38 92 247 86 9 198 18 230 101 61 164 76 133 200 48 171 219 102 93 252 105 15 199 64)
      #f
      ())
    #(139
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 28 169 55 246 143 38 92 247 86 9 198 18 230 101 63 119 6 196 86 80 47 179 172 11 113 176 87 114 198)
      #f
      ())
    #(140
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 255 86 200 9 112 217 163 8 169 246 57 237 25 154 193 114 86 90 240 191 146 56 118 203 72 243 76 98 253)
      #f
      ())
    #(141
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 254 86 200 9 112 217 163 8 169 246 57 237 25 154 194 91 179 122 55 207 84 36 153 162 3 150 240 56 192)
      #f
      ())
    #(142
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 29 1 169 55 246 143 38 92 247 86 9 198 18 230 101 62 141 169 165 15 64 109 199 137 52 183 12 179 157 3)
      #f
      ())
    #(143
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 189 235 142 219 203 48 136 92 101 188 181 141 110 162 212 254 116 13 41 196 194 5 214 172 21 132 83 118 2 28 86 200 9 112 217 163 8 169 246 57 237 25 154 193 114 86 90 240 191 146 56 118 203 72 243 76 98 253)
      #f
      ())
    #(144
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 0)
      #f
      ("EdgeCase"))
    #(145
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 1)
      #f
      ("EdgeCase"))
    #(146
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 255)
      #f
      ("EdgeCase"))
    #(147
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 0 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(148
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 0 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(149
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 0 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(150
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 0 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(151
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 0 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(152
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 0 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(153
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 9 1 66)
      #f
      ("EdgeCase"))
    #(154
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 0)
      #f
      ("EdgeCase"))
    #(155
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 1)
      #f
      ("EdgeCase"))
    #(156
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 255)
      #f
      ("EdgeCase"))
    #(157
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(158
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(159
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(160
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(161
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(162
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(163
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 9 1 66)
      #f
      ("EdgeCase"))
    #(164
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 0)
      #f
      ("EdgeCase"))
    #(165
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 1)
      #f
      ("EdgeCase"))
    #(166
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 255)
      #f
      ("EdgeCase"))
    #(167
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 255 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(168
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 255 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(169
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 255 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(170
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 255 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(171
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 255 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(172
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 255 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(173
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 9 1 66)
      #f
      ("EdgeCase"))
    #(174
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 1 0)
      #f
      ("EdgeCase"))
    #(175
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 1 1)
      #f
      ("EdgeCase"))
    #(176
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 1 255)
      #f
      ("EdgeCase"))
    #(177
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(178
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(179
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(180
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(181
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(182
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(183
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 9 1 66)
      #f
      ("EdgeCase"))
    #(184
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 1 0)
      #f
      ("EdgeCase"))
    #(185
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 1 1)
      #f
      ("EdgeCase"))
    #(186
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 1 255)
      #f
      ("EdgeCase"))
    #(187
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(188
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(189
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(190
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(191
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(192
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(193
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 9 1 66)
      #f
      ("EdgeCase"))
    #(194
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 1 0)
      #f
      ("EdgeCase"))
    #(195
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 1 1)
      #f
      ("EdgeCase"))
    #(196
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 1 255)
      #f
      ("EdgeCase"))
    #(197
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(198
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(199
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(200
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(201
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(202
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(203
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 9 1 66)
      #f
      ("EdgeCase"))
    #(204
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 1 0)
      #f
      ("EdgeCase"))
    #(205
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 1 1)
      #f
      ("EdgeCase"))
    #(206
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 1 255)
      #f
      ("EdgeCase"))
    #(207
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(208
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(209
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(210
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(211
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(212
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(213
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 9 1 66)
      #f
      ("EdgeCase"))
    #(214
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 1 0)
      #f
      ("EdgeCase"))
    #(215
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 1 1)
      #f
      ("EdgeCase"))
    #(216
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 1 255)
      #f
      ("EdgeCase"))
    #(217
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(218
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(219
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(220
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(221
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(222
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(223
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 9 1 66)
      #f
      ("EdgeCase"))
    #(224
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 12 1 48)
      #f
      ())
    #(225
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 5 2 1 1 12 0)
      #f
      ())
    #(226
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 9 12 2 37 115 12 3 115 37 115)
      #f
      ())
    #(227
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 48 3 2 1 0)
      #f
      ())
    #(228
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 3 2 1 1)
      #f
      ())
    #(229
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 1 1 0)
      #f
      ())
    #(230
      "Edge case for Shamir multiplication"
      #vu8(52 55 55 49)
      #vu8(48 61 2 28 50 107 192 99 83 247 249 201 247 123 143 75 85 70 78 134 25 148 78 120 121 64 44 202 87 46 4 26 2 29 0 189 107 29 122 185 122 193 182 7 194 46 4 47 252 192 6 44 116 65 96 201 88 173 11 25 67 169 68)
      #t
      ())
    #(231
      "special case hash"
      #vu8(56 54 49 56 54 53 54 56 51 54)
      #vu8(48 61 2 28 71 107 171 122 50 225 246 105 88 73 45 235 104 16 51 220 19 82 118 246 45 146 101 199 199 253 223 244 2 29 0 188 206 120 173 128 23 187 73 148 144 235 27 240 13 217 243 91 35 181 232 189 3 254 91 176 158 63 95)
      #t
      ())
    #(232
      "special case hash"
      #vu8(52 50 49 54 53 57 57 55 54 52)
      #vu8(48 62 2 29 0 131 85 39 10 174 78 248 221 163 60 219 63 173 102 77 251 1 36 246 220 192 231 154 154 123 107 177 159 2 29 0 236 141 62 67 151 126 38 146 236 39 199 2 166 243 73 212 83 109 0 204 1 123 85 243 37 34 125 167)
      #t
      ())
    #(233
      "special case hash"
      #vu8(51 53 48 53 49 52 53 55 53 52)
      #vu8(48 60 2 28 98 34 145 93 223 110 105 234 239 206 62 189 165 106 197 1 66 139 61 105 183 185 76 14 156 207 0 16 2 28 90 203 209 209 48 181 12 8 119 129 117 23 42 157 13 14 14 54 182 166 140 128 175 154 234 228 27 111)
      #t
      ())
    #(234
      "special case hash"
      #vu8(52 50 56 51 50 51 52 48 54 48)
      #vu8(48 60 2 28 107 142 62 218 246 170 158 99 34 233 22 186 28 210 188 230 206 105 76 168 232 249 249 153 239 233 204 7 2 28 121 59 141 85 123 152 229 4 191 5 178 165 123 31 209 234 255 179 142 218 48 219 124 94 138 85 156 147)
      #t
      ())
    #(235
      "special case hash"
      #vu8(49 52 50 56 53 57 57 51 56 54)
      #vu8(48 61 2 29 0 168 183 130 134 244 180 173 226 13 122 143 124 28 227 194 157 102 22 67 46 185 155 52 207 138 70 212 33 2 28 102 176 94 134 200 167 228 31 236 181 16 71 167 184 215 196 166 186 248 6 233 211 96 240 198 113 92 106)
      #t
      ())
    #(236
      "special case hash"
      #vu8(49 48 53 50 54 54 52 53 53 48)
      #vu8(48 60 2 28 51 82 159 202 252 209 7 89 111 132 101 99 96 95 13 156 71 159 90 201 73 142 50 94 3 79 208 1 2 28 117 226 49 231 96 188 16 235 151 144 28 43 140 207 144 128 153 206 127 197 68 114 252 180 25 120 77 54)
      #t
      ())
    #(237
      "special case hash"
      #vu8(53 52 56 48 57 55 56 55 49 57 49)
      #vu8(48 62 2 29 0 212 81 74 164 218 16 87 123 242 151 79 247 246 228 16 232 47 146 103 135 123 115 99 30 11 51 110 203 2 29 0 147 110 61 220 120 70 206 235 180 249 232 194 98 208 20 248 236 90 233 12 235 237 35 89 180 154 165 89)
      #t
      ())
    #(238
      "special case hash"
      #vu8(54 50 51 57 55 54 57 49 49 57)
      #vu8(48 61 2 28 101 211 94 151 249 69 91 188 19 200 236 40 248 184 209 58 183 50 127 231 124 56 180 15 91 133 92 55 2 29 0 162 28 173 3 61 4 101 155 210 83 158 120 56 232 55 123 91 17 241 77 12 1 102 22 119 85 134 241)
      #t
      ())
    #(239
      "special case hash"
      #vu8(56 53 52 56 57 56 51 52 53 53 53)
      #vu8(48 62 2 29 0 212 68 239 150 100 157 1 210 164 122 157 214 33 11 69 255 254 192 237 26 76 183 67 142 140 204 240 72 2 29 0 168 40 52 27 234 92 40 181 80 151 231 115 50 221 126 48 61 247 137 162 166 121 70 222 35 221 52 115)
      #t
      ())
    #(240
      "special case hash"
      #vu8(55 51 50 55 51 55 51 54 53 57)
      #vu8(48 60 2 28 9 70 59 170 28 118 48 73 74 158 213 214 79 162 250 193 154 196 82 179 20 47 139 241 159 88 85 116 2 28 56 151 213 139 138 255 148 42 7 74 88 54 4 177 116 221 234 242 48 215 206 173 88 231 72 53 216 157)
      #t
      ())
    #(241
      "special case hash"
      #vu8(53 51 51 53 49 49 55 48 48 50)
      #vu8(48 60 2 28 76 43 164 74 219 180 79 107 15 87 222 33 131 8 112 213 172 252 104 224 60 143 53 225 221 161 76 236 2 28 106 255 0 205 100 23 172 67 193 234 126 16 127 207 173 164 4 184 143 74 121 160 209 45 249 106 176 40)
      #t
      ())
    #(242
      "special case hash"
      #vu8(49 54 54 48 49 56 55 55 55 51)
      #vu8(48 61 2 29 0 219 188 65 238 167 197 194 4 56 139 121 65 205 25 172 199 162 235 56 184 232 72 132 91 205 180 36 77 2 28 124 78 65 27 147 15 38 255 170 73 77 37 34 56 26 200 111 56 179 117 145 214 151 209 34 146 83 205)
      #t
      ())
    #(243
      "special case hash"
      #vu8(50 55 54 55 57 51 52 51 48 48)
      #vu8(48 61 2 28 89 91 105 0 246 235 68 148 54 98 25 195 91 64 57 127 253 179 20 27 255 178 216 210 22 249 121 115 2 29 0 245 50 97 121 93 223 179 110 212 168 63 120 55 16 241 90 143 96 108 249 251 63 156 161 152 31 38 5)
      #t
      ())
    #(244
      "special case hash"
      #vu8(52 54 54 50 52 51 56 54 51 57)
      #vu8(48 61 2 28 106 120 90 91 193 184 87 247 193 1 32 216 95 54 217 212 68 165 187 110 208 153 30 172 74 90 38 168 2 29 0 238 250 125 103 116 238 88 81 221 127 28 69 210 4 255 244 56 126 225 38 172 189 86 69 45 52 36 57)
      #t
      ())
    #(245
      "special case hash"
      #vu8(49 49 51 49 50 49 52 54 57 57 54)
      #vu8(48 60 2 28 78 15 103 176 129 205 107 135 227 244 215 146 241 204 221 102 231 128 216 2 142 174 181 196 0 71 182 21 2 28 20 196 46 165 12 113 44 63 183 160 225 143 224 107 35 130 46 144 99 241 91 242 117 157 252 112 56 62)
      #t
      ())
    #(246
      "special case hash"
      #vu8(57 55 53 51 55 51 57 50 56 51)
      #vu8(48 61 2 29 0 177 110 49 169 160 123 237 125 42 218 185 191 191 159 184 162 121 246 56 119 145 210 41 231 159 244 53 199 2 28 12 172 69 199 3 81 167 124 242 208 55 118 1 190 79 123 191 90 205 223 3 16 249 225 11 28 112 34)
      #t
      ())
    #(247
      "special case hash"
      #vu8(50 53 48 49 49 57 51 55 49 52)
      #vu8(48 62 2 29 0 135 83 160 78 76 227 74 184 153 125 245 243 105 52 205 22 54 140 176 243 232 73 137 13 116 36 42 204 2 29 0 208 53 210 215 143 234 185 206 214 194 87 53 179 116 10 35 9 217 108 181 213 127 234 114 154 150 57 209)
      #t
      ())
    #(248
      "special case hash"
      #vu8(49 54 48 51 57 53 51 56 54 51 48)
      #vu8(48 60 2 28 17 151 79 88 201 95 140 68 82 47 131 89 174 94 148 37 119 184 251 87 90 43 161 143 243 131 223 113 2 28 108 20 19 39 249 228 5 114 156 48 15 22 179 1 222 20 12 141 249 44 5 99 125 185 82 33 110 76)
      #t
      ())
    #(249
      "special case hash"
      #vu8(53 56 55 57 48 54 52 57 54 56)
      #vu8(48 61 2 29 0 157 93 81 75 136 75 77 137 46 146 227 115 102 62 57 73 1 228 131 236 168 201 188 215 128 145 12 130 2 28 125 161 205 18 197 117 116 79 247 12 251 53 19 197 234 188 14 54 50 207 44 229 14 207 15 85 200 34)
      #t
      ())
    #(250
      "special case hash"
      #vu8(51 48 57 53 57 55 55 50 49 49)
      #vu8(48 61 2 29 0 246 140 27 100 42 53 161 152 143 108 47 167 122 85 51 162 246 53 171 240 44 103 72 245 162 185 209 222 2 28 99 238 82 20 159 236 151 229 43 45 164 85 111 226 138 207 143 89 134 54 69 95 50 44 201 244 113 117)
      #t
      ())
    #(251
      "special case hash"
      #vu8(55 53 55 53 48 54 52 53 54 54)
      #vu8(48 61 2 28 72 148 139 141 215 230 39 96 175 54 143 220 60 34 90 253 191 182 185 138 17 37 216 174 182 36 25 223 2 29 0 191 136 157 216 236 161 69 108 36 216 138 188 22 165 220 2 23 211 172 114 176 229 121 53 187 128 53 80)
      #t
      ())
    #(252
      "special case hash"
      #vu8(51 51 51 51 57 57 54 53 51)
      #vu8(48 61 2 28 13 0 39 80 204 128 192 245 166 178 177 230 224 138 250 251 72 64 203 222 246 227 43 114 106 76 25 89 2 29 0 238 64 149 227 27 89 77 21 150 145 119 127 241 246 22 152 154 101 196 87 43 38 66 21 128 111 146 104)
      #t
      ())
    #(253
      "special case hash"
      #vu8(49 53 50 54 53 53 50 54 53 52)
      #vu8(48 61 2 28 9 119 182 202 186 25 29 124 190 11 83 25 145 127 39 72 48 78 102 87 114 2 51 88 66 224 9 207 2 29 0 176 104 11 93 96 110 249 186 162 146 246 191 253 200 76 17 197 146 153 133 75 70 36 83 156 46 252 116)
      #t
      ())
    #(254
      "special case hash"
      #vu8(57 56 57 49 49 55 57 49)
      #vu8(48 60 2 28 2 58 29 42 142 73 222 172 53 42 203 58 106 117 128 112 181 200 164 231 95 203 175 253 159 50 232 98 2 28 93 45 81 30 211 124 247 208 35 165 51 92 72 252 47 99 207 7 51 161 167 134 196 154 233 41 206 91)
      #t
      ())
    #(255
      "special case hash"
      #vu8(52 57 51 56 51 57 49 56 53 48)
      #vu8(48 62 2 29 0 199 203 173 56 225 199 102 3 37 77 194 233 253 105 51 45 14 248 241 165 135 158 219 91 225 187 87 139 2 29 0 221 220 241 170 134 63 41 28 10 40 127 161 208 21 157 171 250 125 152 230 70 89 110 138 196 31 27 102)
      #t
      ())
    #(256
      "special case hash"
      #vu8(51 51 51 52 57 53 51 56 51)
      #vu8(48 60 2 28 92 132 90 39 85 33 100 155 222 158 59 250 7 214 202 82 143 110 20 61 25 233 123 30 158 48 94 113 2 28 96 180 189 82 44 68 180 195 46 135 177 27 107 128 178 6 29 169 139 76 245 197 109 191 95 6 81 220)
      #t
      ())
    #(257
      "special case hash"
      #vu8(49 53 52 53 55 57 50 52 54 51)
      #vu8(48 60 2 28 38 4 24 24 44 129 157 229 189 184 133 28 90 201 55 171 141 131 171 112 100 0 16 247 238 174 19 244 2 28 3 76 47 95 250 162 180 241 241 17 244 117 142 90 223 186 181 183 207 236 250 72 200 216 143 91 104 22)
      #t
      ())
    #(258
      "special case hash"
      #vu8(51 49 51 49 52 48 54 52 52 48)
      #vu8(48 60 2 28 3 70 214 82 28 116 191 179 67 66 196 176 60 6 125 60 223 227 93 62 161 33 88 6 104 48 20 49 2 28 87 29 200 76 192 113 226 91 152 212 124 135 237 211 246 219 115 249 149 229 164 250 3 135 96 196 60 195)
      #t
      ())
    #(259
      "special case hash"
      #vu8(54 51 48 52 52 55 49 50 56 49)
      #vu8(48 61 2 29 0 246 213 4 158 47 3 119 242 79 211 237 216 236 20 148 114 81 201 214 135 164 236 16 79 54 185 35 143 2 28 113 58 7 176 221 154 162 176 140 48 217 22 123 3 115 184 82 89 85 121 167 223 196 129 153 5 97 120)
      #t
      ())
    #(260
      "special case hash"
      #vu8(56 57 48 55 48 50 48 55 49 52)
      #vu8(48 62 2 29 0 167 153 69 83 241 167 147 235 206 45 253 205 53 125 62 74 1 208 247 193 202 170 144 153 251 180 176 122 2 29 0 216 247 113 8 77 54 46 242 160 222 229 4 150 228 80 182 232 18 228 12 46 109 52 36 149 87 21 8)
      #t
      ())
    #(261
      "special case hash"
      #vu8(54 57 53 54 55 53 52 50 53 53)
      #vu8(48 60 2 28 67 35 106 34 186 104 27 215 31 153 168 238 43 66 91 120 75 166 255 85 202 225 84 191 27 142 244 84 2 28 9 207 251 119 48 106 94 167 103 85 120 188 250 45 33 66 201 219 216 68 1 224 159 120 236 41 250 116)
      #t
      ())
    #(262
      "special case hash"
      #vu8(52 53 53 51 48 49 50 49 56 54)
      #vu8(48 61 2 29 0 140 99 218 225 241 157 151 19 93 241 143 140 241 160 158 82 139 17 237 46 172 159 75 52 6 33 199 61 2 28 48 149 190 34 50 254 87 211 114 121 108 192 200 70 68 88 54 255 53 242 90 56 206 19 88 88 88 178)
      #t
      ())
    #(263
      "special case hash"
      #vu8(57 55 56 55 57 54 50 50 57 57)
      #vu8(48 62 2 29 0 128 5 188 182 185 85 248 11 42 43 110 69 216 97 84 197 97 181 67 8 58 176 101 181 11 255 180 153 2 29 0 230 81 90 158 179 253 129 56 202 17 117 21 208 249 166 84 159 34 106 114 204 205 73 116 26 223 254 193)
      #t
      ())
    #(264
      "special case hash"
      #vu8(52 53 52 51 54 50 52 49 50 56)
      #vu8(48 61 2 29 0 190 102 204 142 176 217 229 221 126 246 199 84 1 133 2 231 55 28 11 13 185 124 206 55 139 154 163 85 2 28 86 43 119 28 81 4 56 88 120 195 185 24 55 155 16 26 200 136 177 241 95 15 82 209 94 10 146 186)
      #t
      ())
    #(265
      "special case hash"
      #vu8(50 49 49 56 49 55 51 48 49 51 57)
      #vu8(48 62 2 29 0 244 41 64 237 114 135 178 129 240 12 121 90 189 103 31 239 253 237 84 47 198 60 78 207 199 51 100 39 2 29 0 144 73 230 44 70 71 35 245 12 38 95 219 207 124 103 148 181 41 74 88 179 16 14 130 173 156 215 36)
      #t
      ())
    #(266
      "special case hash"
      #vu8(52 48 52 57 54 52 57 55 52 52)
      #vu8(48 61 2 29 0 208 176 146 134 120 8 199 211 179 79 236 7 196 235 232 50 74 26 79 242 191 194 226 10 175 251 210 72 2 28 78 185 34 179 222 59 210 68 147 138 219 32 226 28 221 86 0 48 209 60 192 25 28 55 204 211 142 40)
      #t
      ())
    #(267
      "special case hash"
      #vu8(54 50 53 51 51 50 52 53 48 52)
      #vu8(48 62 2 29 0 167 52 114 225 243 3 191 229 1 40 119 12 145 52 189 147 175 155 6 79 155 120 42 69 221 133 195 60 2 29 0 218 75 139 214 226 186 92 99 93 202 249 167 210 191 119 75 16 194 176 155 160 116 205 197 141 156 141 162)
      #t
      ())
    #(268
      "special case hash"
      #vu8(51 55 57 53 50 53 51 54 57 56)
      #vu8(48 61 2 29 0 152 50 174 130 8 14 192 40 51 227 234 233 19 247 169 142 185 226 208 81 51 229 242 199 250 32 71 157 2 28 14 144 198 118 223 119 55 173 184 78 84 205 164 122 249 245 214 171 47 52 234 236 131 123 98 143 100 110)
      #t
      ())
    #(269
      "special case hash"
      #vu8(56 51 52 57 48 52 50 52 48 53 51)
      #vu8(48 61 2 28 62 172 5 167 71 244 57 136 218 185 135 244 135 251 202 128 3 229 199 233 187 88 6 52 175 239 110 3 2 29 0 221 101 102 121 225 193 128 15 138 37 135 129 244 84 137 230 99 10 109 147 75 62 42 5 212 26 12 79)
      #t
      ())
    #(270
      "special case hash"
      #vu8(52 55 54 55 48 54 54 57 56)
      #vu8(48 61 2 28 95 58 99 156 22 61 170 243 226 192 215 209 163 202 130 235 228 41 81 73 17 20 182 226 87 226 143 105 2 29 0 234 14 18 226 61 72 90 147 47 26 238 151 71 97 176 224 201 195 213 186 24 34 171 100 104 25 136 106)
      #t
      ())
    #(271
      "special case hash"
      #vu8(57 50 56 53 54 51 55 54 51)
      #vu8(48 61 2 29 0 192 173 6 236 24 196 237 68 105 197 244 244 190 75 251 65 182 252 2 68 86 178 238 209 216 9 106 117 2 28 69 224 138 147 174 78 51 189 243 83 121 22 24 67 38 110 205 47 32 12 226 146 172 153 137 71 72 239)
      #t
      ())
    #(272
      "special case hash"
      #vu8(49 52 57 54 51 51 49 49 53 57)
      #vu8(48 61 2 28 15 90 27 185 197 114 166 221 254 80 114 222 106 7 123 20 144 9 106 136 203 43 233 175 141 151 100 131 2 29 0 146 231 37 132 89 223 132 143 251 204 127 191 169 159 223 77 177 107 115 77 197 185 112 20 39 3 79 128)
      #t
      ())
    #(273
      "special case hash"
      #vu8(55 50 52 55 48 57 51 48 55 52)
      #vu8(48 62 2 29 0 160 151 184 66 36 82 220 178 169 58 227 47 248 214 190 252 49 215 96 81 112 75 16 35 172 92 118 69 2 29 0 244 250 175 95 13 199 128 35 136 88 35 197 84 122 89 50 11 237 46 178 235 59 148 141 7 206 73 169)
      #t
      ())
    #(274
      "special case hash"
      #vu8(49 55 54 52 53 57 57 51 57 48)
      #vu8(48 61 2 28 123 77 73 131 139 255 169 121 208 217 119 47 138 243 147 64 2 58 107 17 160 226 23 60 233 45 27 142 2 29 0 248 120 175 63 81 98 136 171 243 36 176 197 45 188 45 113 6 210 220 57 120 113 55 75 209 68 194 114)
      #t
      ())
    #(275
      "special case hash"
      #vu8(53 57 56 51 55 54 52 51 49 57)
      #vu8(48 61 2 29 0 254 218 108 28 64 196 131 248 127 69 134 210 51 129 167 26 107 5 28 226 137 22 241 153 41 94 174 211 2 28 117 190 87 209 180 111 240 54 67 8 219 39 37 177 155 204 28 232 32 207 87 227 127 130 93 48 225 153)
      #t
      ())
    #(276
      "special case hash"
      #vu8(49 57 50 54 54 55 57 54 48 49)
      #vu8(48 61 2 29 0 153 105 184 208 62 209 49 62 207 209 115 158 76 146 52 192 231 40 127 21 131 158 161 230 254 237 80 177 2 28 69 246 168 32 172 69 216 53 236 221 82 200 54 241 87 171 43 146 121 165 96 210 254 150 110 226 58 78)
      #t
      ())
    #(277
      "special case hash"
      #vu8(51 51 53 56 57 57 54 56)
      #vu8(48 62 2 29 0 166 46 149 33 146 211 169 219 252 42 178 12 87 199 25 191 82 238 248 89 217 148 200 96 169 86 79 18 2 29 0 190 16 7 181 46 147 8 189 232 103 243 128 240 189 48 2 85 77 138 200 84 249 219 61 74 125 104 152)
      #t
      ())
    #(278
      "special case hash"
      #vu8(51 49 55 49 57 55 52 50 50 56)
      #vu8(48 61 2 29 0 245 38 185 40 142 37 170 234 141 101 126 199 164 235 222 70 216 173 196 198 217 9 252 253 126 45 205 176 2 28 93 16 8 125 18 99 219 82 89 87 158 153 135 180 16 0 27 119 79 129 195 228 137 223 133 178 113 94)
      #t
      ())
    #(279
      "special case hash"
      #vu8(50 53 55 54 56 55 49 49 48 51)
      #vu8(48 62 2 29 0 197 255 122 182 56 182 112 37 53 234 113 158 124 47 119 83 197 60 22 17 197 145 152 104 251 112 139 0 2 29 0 171 41 170 192 67 211 88 71 40 10 61 119 89 10 233 58 75 38 219 24 35 138 83 198 124 189 22 43)
      #t
      ())
    #(280
      "special case hash"
      #vu8(54 48 52 50 53 56 49 56 49 48)
      #vu8(48 61 2 29 0 230 155 67 166 143 69 45 38 81 110 19 22 213 76 213 20 22 160 71 212 41 69 53 12 220 80 101 24 2 28 102 209 171 213 170 88 236 207 158 190 147 145 204 232 206 250 177 98 169 19 4 57 35 95 5 31 196 55)
      #t
      ())
    #(281
      "special case hash"
      #vu8(56 54 53 49 48 48 50 48 53 48)
      #vu8(48 60 2 28 12 104 34 226 86 208 25 11 73 98 197 180 191 218 188 225 13 39 124 211 71 202 240 133 8 146 40 143 2 28 63 89 114 126 77 158 59 146 244 176 206 113 12 81 18 202 161 142 64 81 204 113 69 15 105 137 203 154)
      #t
      ())
    #(282
      "special case hash"
      #vu8(52 48 55 49 50 56 48 49 53)
      #vu8(48 61 2 29 0 133 11 67 70 30 16 113 116 167 122 79 154 48 17 224 56 84 214 181 180 160 166 37 14 47 196 114 162 2 28 14 125 169 162 26 35 115 208 148 64 49 253 18 29 206 5 148 170 135 33 218 18 105 248 70 116 127 89)
      #t
      ())
    #(283
      "special case hash"
      #vu8(52 56 56 51 49 55 52 53 55 56)
      #vu8(48 61 2 29 0 166 225 66 6 147 102 190 140 72 167 182 81 236 69 176 226 221 157 121 112 17 8 195 89 151 202 26 75 2 28 32 181 118 4 11 159 62 115 174 127 243 175 34 62 52 223 130 220 232 83 59 241 144 20 134 168 179 210)
      #t
      ())
    #(284
      "special case hash"
      #vu8(52 51 54 49 51 56 52 53 48 53)
      #vu8(48 61 2 28 88 228 197 85 143 45 77 43 174 227 97 218 14 144 126 6 139 188 105 123 58 189 186 226 148 116 8 78 2 29 0 149 29 233 2 199 175 113 181 215 163 198 17 125 37 130 66 160 74 134 97 191 221 77 4 118 148 247 250)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 211 127 180 171 232 197 4 80 79 1 5 57 235 118 76 16 193 66 80 100 94 132 110 175 65 185 153 83 196 226 193 194 119 5 105 130 197 184 19 5 237 49 16 160 100 255 106 232 224 84 95 12 53 255 136 113)
  :der-encode
  #t
  :tests
  '(#(285
      "k*G has a large x-coordinate"
      #vu8(49 50 51 52 48 48)
      #vu8(48 48 2 15 0 233 92 31 71 15 193 236 34 214 186 163 163 213 193 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 58)
      #t
      ())
    #(286
      "r too large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255 255 255 255 254 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 58)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 217 170 193 29 2 119 164 178 53 20 196 208 42 72 62 146 45 196 12 146 167 116 184 198 33 121 105 11 156 254 12 155 6 11 26 73 89 131 24 99 22 104 8 62 76 243 78 75 171 41 209 77 129 194 176 73)
  :der-encode
  #t
  :tests
  '(#(287
      "r,s are large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 59)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 195 89 179 27 62 225 12 192 186 183 210 31 12 197 206 203 99 33 134 232 202 96 138 116 249 33 152 111 39 120 124 194 4 197 237 86 24 151 193 73 97 247 130 123 95 151 57 89 150 222 108 255 135 134 39 113)
  :der-encode
  #t
  :tests
  '(#(288
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 2 28 61 80 82 105 27 141 200 157 235 173 54 4 102 242 163 158 130 232 174 42 239 183 124 60 146 173 124 209)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 178 31 222 78 57 157 140 191 140 187 142 168 172 119 14 185 127 248 91 1 134 131 67 57 130 202 43 53 62 123 67 37 180 49 155 189 113 254 156 62 73 196 218 236 137 85 1 175 206 170 85 64 64 18 155 113)
  :der-encode
  #t
  :tests
  '(#(289
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 2 29 0 191 25 171 77 62 191 90 26 73 215 101 144 147 8 218 168 140 43 123 227 150 157 181 82 234 48 86 43)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 252 3 65 189 187 206 59 238 225 190 159 2 228 97 72 175 157 165 49 40 224 227 196 90 241 171 228 199 146 172 253 113 131 82 231 16 127 224 142 166 163 93 139 173 207 84 245 112 101 220 78 140 159 39 5 210)
  :der-encode
  #t
  :tests
  '(#(290
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 3 2 1 1)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 80 177 66 86 246 234 80 217 132 59 217 226 180 194 217 218 247 95 118 172 78 78 117 124 113 43 48 83 89 77 104 225 104 62 201 119 178 239 204 138 123 166 196 106 14 106 102 138 3 244 245 10 62 33 228 206)
  :der-encode
  #t
  :tests
  '(#(291
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 3 2 1 3)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 120 1 228 128 17 252 226 104 90 47 86 63 170 179 79 255 114 142 187 110 146 235 2 159 239 18 78 181 169 190 44 27 134 233 158 68 239 96 230 192 42 4 161 108 189 150 132 130 237 46 196 193 70 62 254 239)
  :der-encode
  #t
  :tests
  '(#(292
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 3 2 1 4)
      #t
      ())
    #(293
      "r is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 64 2 1 4)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 108 206 0 74 187 205 204 219 63 218 105 30 112 167 26 77 138 146 2 25 175 42 32 136 15 89 197 61 134 2 62 168 92 170 43 235 255 203 159 54 0 130 230 38 68 102 234 6 90 251 7 130 13 251 26 154)
  :der-encode
  #t
  :tests
  '(#(294
      "s is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 3 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 111 0 196)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 93 27 39 221 71 113 29 127 169 11 38 81 226 2 194 64 202 210 129 237 128 62 26 50 54 199 137 250 14 165 66 6 100 226 168 189 156 234 55 64 33 142 35 115 94 226 113 95 129 48 190 180 55 65 149 57)
  :der-encode
  #t
  :tests
  '(#(295
      "small r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 35 2 2 1 0 2 29 0 201 147 38 76 153 50 100 201 147 38 76 153 50 100 17 210 229 91 50 20 168 214 117 40 129 42 85 171)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 221 245 60 236 141 156 96 98 144 77 42 4 247 144 244 89 108 103 105 109 212 245 66 42 60 184 76 156 175 16 242 209 235 14 15 242 143 168 228 10 145 216 212 173 219 32 192 133 214 53 21 141 225 166 123 221)
  :der-encode
  #t
  :tests
  '(#(296
      "smallish r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 39 2 7 45 155 77 52 121 82 204 2 28 62 133 213 100 116 181 197 95 190 134 96 132 66 168 75 43 240 147 183 215 95 83 164 114 80 225 199 12)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 244 59 74 135 220 18 198 91 242 127 75 134 16 72 100 2 50 122 220 1 51 193 219 138 223 78 63 155 166 26 173 180 197 138 192 181 81 141 28 41 41 6 142 170 13 106 93 95 132 218 207 102 229 178 118 255)
  :der-encode
  #t
  :tests
  '(#(297
      "100-bit r and small s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 13 16 51 230 126 55 179 43 68 85 128 191 78 251 2 28 2 253 2 253 2 253 2 253 2 253 2 253 2 253 0 67 164 253 45 163 23 36 115 8 199 77 198 184)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 107 208 165 220 152 166 118 26 36 212 229 230 195 17 135 175 140 126 216 116 212 42 248 65 128 101 131 182 2 46 107 249 72 12 35 209 190 52 31 89 176 67 175 218 167 107 173 134 34 32 79 168 78 38 221 62)
  :der-encode
  #t
  :tests
  '(#(298
      "small r and 100 bit s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 35 2 2 1 0 2 29 0 208 84 52 171 172 216 89 237 116 24 94 117 183 81 198 217 246 12 121 33 218 207 187 142 25 205 186 142)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 117 182 92 214 20 73 250 240 212 187 45 35 0 177 52 117 123 113 79 188 78 251 214 99 30 102 76 191 180 136 99 63 66 229 11 17 195 1 191 55 54 164 97 40 110 204 173 36 71 24 8 53 213 8 222 178)
  :der-encode
  #t
  :tests
  '(#(299
      "100-bit r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 13 6 37 34 187 211 236 190 124 57 233 62 124 36 2 29 0 208 84 52 171 172 216 89 237 116 24 94 117 183 81 198 217 246 12 121 33 218 207 187 142 25 205 186 142)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 189 24 199 121 116 73 198 78 159 193 173 44 169 196 145 50 252 52 180 116 24 49 253 188 108 189 135 207 248 48 193 8 253 80 27 249 183 179 184 152 7 35 151 185 166 231 34 22 219 120 76 135 120 130 200 123)
  :der-encode
  #t
  :tests
  '(#(300
      "r and s^-1 are close to n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 41 189 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 175 115 102 103 182 24 207 165 82 111 7 63 112 72 213 230 182 114 160 85 105 205 41 18 188 232 145 77 106 3 10 167 63 215 149 23 238 129 117 128 4 132 242 220 235 240 40 113 130 92 198 124 65 177 168 252)
  :der-encode
  #t
  :tests
  '(#(301
      "s == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 1 1)
      #t
      ())
    #(302
      "s == 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 1 0)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 170 47 152 26 221 84 128 231 242 168 174 80 252 82 37 134 18 173 100 32 161 162 204 44 37 44 22 147 50 193 255 25 195 49 211 229 42 152 173 215 231 244 248 172 18 44 169 97 184 203 228 38 14 216 62 76)
  :der-encode
  #t
  :tests
  '(#(303
      "point at infinity during verify"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 30 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 143 235 75 21 59 125 254 64 129 6 158 199 8 253 177 97 113 110 195 237 23 200 30 251 27 179 227 150 187 201 12 250 226 195 149 127 44 236 117 35 148 69 35 154 28 14 158 10 3 35 133 208 99 241 210 255)
  :der-encode
  #t
  :tests
  '(#(304
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 31 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 30)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 175 42 41 211 86 19 63 77 114 108 100 232 255 125 128 133 22 73 207 62 53 210 185 222 39 37 187 171 109 33 153 217 243 224 240 134 62 103 29 235 152 122 253 178 91 110 107 119 68 188 83 250 161 92 172 83)
  :der-encode
  #t
  :tests
  '(#(305
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 31 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 31)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 123 176 188 149 41 176 106 66 78 142 251 170 253 236 90 163 57 222 85 153 248 46 201 225 149 240 206 222 56 29 201 80 202 168 176 69 79 171 112 197 126 6 161 91 199 113 182 147 235 180 1 59 200 91 86 172)
  :der-encode
  #t
  :tests
  '(#(306
      "u1 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 28 14 119 239 235 218 200 60 1 220 227 248 196 22 46 40 107 56 183 226 61 232 54 55 167 37 49 234 183)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 45 163 234 49 69 161 230 135 114 225 57 241 181 217 184 94 32 29 231 223 71 117 213 196 247 120 37 150 77 58 35 128 9 157 127 60 243 173 24 193 251 19 171 30 5 76 9 118 51 253 81 230 124 26 156 160)
  :der-encode
  #t
  :tests
  '(#(307
      "u1 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 29 0 241 136 16 20 37 55 195 254 35 28 7 59 233 208 238 55 168 1 14 0 43 166 241 158 55 42 63 134)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 255 212 10 25 192 156 224 162 17 36 241 99 199 37 88 225 241 90 17 174 205 233 221 224 140 70 91 206 227 204 84 66 108 120 80 174 23 103 14 28 193 153 49 233 217 52 97 15 66 244 86 184 71 42 128 71)
  :der-encode
  #t
  :tests
  '(#(308
      "u2 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 6 8 30 231 208 106 232 212 184 64 117 229 50 100 18 91 14 250 8 45 198 225 217 25 14 156 216 246 54 16 18 219 87 14 39 147 54 251 200 247 72 215 209 199 121 103 204 10 225 136 174 223 140 180 208 246)
  :der-encode
  #t
  :tests
  '(#(309
      "u2 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 29 0 170 170 170 170 170 170 170 170 170 170 170 170 170 170 15 23 64 123 74 212 13 62 27 131 146 232 28 41)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 244 128 164 116 226 143 152 126 30 118 231 60 122 156 92 18 48 127 91 220 153 217 126 81 94 113 174 66 14 49 10 179 64 62 180 79 143 23 226 23 145 77 19 108 142 35 65 247 17 119 5 45 79 7 220 179)
  :der-encode
  #t
  :tests
  '(#(310
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 4 210 165 78 158 66 190 171 73 161 82 236 7 100 184 35 189 146 160 191 77 103 103 226 97 187 78 61)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 70 85 168 183 212 102 19 211 216 172 229 151 169 211 129 183 210 227 12 87 170 212 144 228 19 72 17 5 74 202 84 99 240 55 125 185 201 99 141 40 1 41 207 20 245 230 12 142 188 239 76 142 189 201 177 93)
  :der-encode
  #t
  :tests
  '(#(311
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 249 249 231 241 1 180 234 70 142 183 143 217 186 137 21 100 84 180 20 252 23 208 40 64 202 129 202 120)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 108 60 16 105 251 118 218 67 229 169 174 26 105 251 103 151 64 23 31 43 69 121 86 177 63 88 41 192 79 11 16 0 212 26 86 217 110 202 24 166 38 208 99 111 32 206 225 132 243 210 245 184 122 182 140 74)
  :der-encode
  #t
  :tests
  '(#(312
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 190 126 215 56 75 200 185 1 19 229 140 168 122 104 160 111 194 254 94 250 150 240 169 86 115 61 198 92)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 154 36 55 91 3 183 140 32 35 8 103 184 66 198 128 189 184 134 4 250 147 247 197 147 23 52 131 16 96 9 15 245 222 199 182 251 109 244 89 190 253 252 94 157 68 1 152 232 97 10 38 125 170 149 72 250)
  :der-encode
  #t
  :tests
  '(#(313
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 121 130 53 21 213 37 220 2 241 136 16 20 37 55 85 58 109 165 96 72 251 153 157 63 223 248 95 112)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 113 240 30 96 112 165 189 105 64 146 65 127 117 177 241 179 84 87 66 30 153 151 250 80 134 223 239 75 43 143 103 81 10 200 32 56 9 7 80 59 59 205 184 159 219 95 38 136 67 77 186 121 211 164 10 17)
  :der-encode
  #t
  :tests
  '(#(314
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 35 81 93 82 93 192 47 24 129 1 66 83 124 63 193 255 217 164 56 82 194 98 151 74 42 22 64 200)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 69 51 85 33 66 120 71 71 53 179 43 29 69 201 162 3 66 21 120 193 10 205 66 110 154 86 157 95 107 86 85 19 131 70 208 190 249 205 224 235 185 123 73 56 227 194 141 198 18 180 234 171 168 98 24 45)
  :der-encode
  #t
  :tests
  '(#(315
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 70 162 186 164 187 128 94 49 2 2 132 166 248 127 131 255 179 72 112 165 132 197 46 148 84 44 129 144)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 250 134 205 208 151 106 207 6 176 167 163 220 174 112 242 135 230 41 80 216 135 75 50 171 205 89 247 85 189 0 129 124 234 60 107 94 141 50 102 190 241 243 223 148 79 196 149 62 122 150 9 2 144 31 243 128)
  :der-encode
  #t
  :tests
  '(#(316
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 213 37 220 2 241 136 16 20 37 55 195 254 35 27 68 238 235 199 111 58 183 104 41 220 15 183 231 255)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 111 198 206 52 140 177 124 245 127 225 142 33 237 19 232 243 62 90 114 75 248 127 21 30 167 87 150 51 189 209 251 83 186 78 201 164 119 166 243 229 25 48 3 170 244 98 200 87 188 74 32 187 98 68 101 82)
  :der-encode
  #t
  :tests
  '(#(317
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 125 150 173 88 176 222 160 170 91 47 86 137 252 77 47 63 145 147 39 191 99 58 224 177 125 80 110 0)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 152 242 245 218 69 73 88 199 176 78 242 34 13 69 237 133 122 21 125 56 116 208 51 162 90 246 219 135 144 199 17 215 87 65 40 251 125 231 243 22 247 137 107 137 134 112 201 119 152 208 90 151 249 234 183 176)
  :der-encode
  #t
  :tests
  '(#(318
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 251 45 90 177 97 189 65 84 182 94 173 19 248 154 94 127 35 38 79 126 198 117 193 98 250 160 220 0)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 60 203 8 33 13 11 34 131 243 204 183 121 7 155 177 96 206 227 206 201 38 61 53 101 101 247 112 179 159 176 237 184 60 174 11 115 15 221 213 192 214 62 16 169 158 82 116 151 165 140 24 184 77 174 142 142)
  :der-encode
  #t
  :tests
  '(#(319
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 120 196 8 10 18 155 225 255 17 142 3 157 244 232 119 27 212 0 135 0 21 211 120 207 27 149 31 195)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 45 211 205 41 219 118 22 166 220 119 187 26 102 232 73 19 59 20 8 197 64 238 46 187 1 224 123 196 211 229 120 100 1 196 83 62 21 105 124 107 248 110 20 222 245 8 133 144 193 154 236 157 150 248 83 138)
  :der-encode
  #t
  :tests
  '(#(320
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 95 63 107 156 37 228 92 128 137 242 198 84 61 52 80 55 225 127 47 125 75 120 84 171 57 158 227 46)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 83 232 157 41 64 102 34 187 170 27 207 124 152 13 82 50 9 100 108 194 10 75 49 4 170 52 66 100 119 129 211 222 67 65 61 250 6 26 169 178 215 194 158 202 156 142 212 43 40 95 188 187 224 22 204 30)
  :der-encode
  #t
  :tests
  '(#(321
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 178 54 74 232 80 20 177 73 184 108 116 30 184 190)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 4 156 77 153 140 15 54 142 191 26 105 39 79 221 248 7 218 226 69 180 211 20 77 105 109 129 62 217 165 211 245 134 49 94 231 245 178 99 239 228 122 27 10 46 148 132 114 66 113 3 112 217 44 235 36 164)
  :der-encode
  #t
  :tests
  '(#(322
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 133 95 91 45 200 228 110 196 40 165 147 247 50 25 207 101 218 231 147 232 52 110 48 204 55 1 48 156)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 75 27 60 73 20 67 209 164 92 190 95 178 246 237 54 172 62 189 226 162 69 106 127 154 254 98 141 215 211 40 219 22 94 225 17 7 101 121 117 105 179 11 4 25 132 121 14 163 170 101 189 11 163 52 24 24)
  :der-encode
  #t
  :tests
  '(#(323
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 45 181 246 26 234 129 114 118 175 32 100 225 4 199 163 14 50 3 76 181 38 221 10 172 250 86 86 111)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 177 158 19 105 172 181 252 145 61 26 198 233 46 227 119 5 144 197 164 92 229 47 223 100 169 246 81 190 47 172 122 1 122 107 108 252 28 56 28 146 84 86 76 27 146 155 60 16 31 137 25 90 109 39 144 126)
  :der-encode
  #t
  :tests
  '(#(324
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 132 166 199 81 62 95 72 192 127 255 255 255 255 255 135 19 243 203 161 41 62 79 62 149 89 127 230 189)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 208 200 13 148 45 163 219 230 98 70 126 27 204 105 206 179 34 220 49 17 82 191 21 85 126 211 247 175 247 182 39 176 186 89 82 65 112 82 124 193 22 26 189 250 74 74 37 223 208 156 89 169 141 183 234 4)
  :der-encode
  #t
  :tests
  '(#(325
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 108 117 19 229 244 140 7 255 255 255 255 255 255 255 157 33 253 27 49 84 76 177 60 168 106 117 178 94)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 167 129 200 134 129 201 138 173 243 30 38 84 27 154 182 239 165 42 73 65 44 247 40 41 68 241 55 32 182 141 222 175 138 9 175 11 55 43 0 126 18 45 64 46 114 79 220 234 28 97 154 128 179 43 254 91)
  :der-encode
  #t
  :tests
  '(#(326
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 216 234 39 203 233 24 15 255 255 255 255 255 255 255 58 67 250 54 98 168 153 98 121 80 212 235 100 188)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 147 22 6 185 241 128 209 100 9 239 235 201 150 187 29 244 66 184 78 25 188 201 190 208 226 54 203 100 80 237 210 22 38 37 169 121 162 91 35 31 186 23 135 139 117 106 119 193 103 34 56 134 97 58 251 3)
  :der-encode
  #t
  :tests
  '(#(327
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 62 95 72 192 127 255 255 255 255 255 255 255 255 255 199 36 150 140 14 207 158 215 131 116 74 115 55 179)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 29 247 152 91 19 222 203 42 161 112 179 37 237 36 33 216 212 36 116 21 43 16 64 114 78 215 242 141 119 171 93 71 162 251 133 117 74 53 21 104 47 32 179 164 125 19 178 107 213 155 114 243 189 168 53 50)
  :der-encode
  #t
  :tests
  '(#(328
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 191 255 255 255 255 255 255 255 255 255 255 255 255 255 61 135 187 68 200 51 187 56 77 15 34 76 205 222)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 138 70 103 10 156 157 60 240 58 158 157 72 82 92 117 229 114 104 10 38 39 138 220 8 136 213 3 15 140 136 229 152 41 213 168 2 192 36 90 168 181 100 23 121 135 124 86 71 173 43 155 42 115 101 53 235)
  :der-encode
  #t
  :tests
  '(#(329
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 100 108 149 208 160 41 98 147 112 216 232 61 113 127)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 22 66 128 151 230 235 101 104 137 5 103 138 174 102 31 61 131 183 229 236 199 120 126 210 47 192 41 232 104 214 44 184 155 229 77 16 202 91 87 90 168 111 156 143 180 117 198 217 15 89 212 71 117 149 192 28)
  :der-encode
  #t
  :tests
  '(#(330
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 63 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 32)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 63 165 99 248 6 190 145 59 87 52 122 223 139 30 134 43 126 2 83 190 167 1 246 178 1 229 125 202 2 49 205 104 162 194 68 147 222 206 208 7 113 225 0 189 0 27 199 153 2 117 109 86 214 255 135 241)
  :der-encode
  #t
  :tests
  '(#(331
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 150 218 251 13 117 64 185 59 87 144 50 112 130 99 92 216 137 94 30 121 157 93 25 249 43 89 64 86)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 254 186 146 48 102 10 195 253 100 174 2 247 48 98 151 170 73 117 67 108 10 209 16 88 84 228 6 107 221 205 186 38 103 148 54 180 225 63 149 216 244 246 89 20 46 123 244 5 199 114 226 23 136 4 123 8)
  :der-encode
  #t
  :tests
  '(#(332
      "point duplication during verification"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 196 69 3 218 232 93 213 33 7 128 240 41 40 179 217 39 23 28 87 143 134 3 209 107 36 6 99 199 2 28 20 26 110 251 143 110 25 1 107 97 199 101 115 201 117 147 9 161 140 22 228 140 19 109 202 85 38 2)
      #t
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 254 186 146 48 102 10 195 253 100 174 2 247 48 98 151 170 73 117 67 108 10 209 16 88 84 228 6 107 34 50 69 217 152 107 201 75 30 192 106 39 11 9 166 234 209 132 11 250 56 141 29 232 119 251 132 249)
  :der-encode
  #t
  :tests
  '(#(333
      "duplication bug"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 196 69 3 218 232 93 213 33 7 128 240 41 40 179 217 39 23 28 87 143 134 3 209 107 36 6 99 199 2 28 20 26 110 251 143 110 25 1 107 97 199 101 115 201 117 147 9 161 140 22 228 140 19 109 202 85 38 2)
      #f
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 0 37 9 78 169 228 206 118 216 196 115 86 228 174 96 78 182 70 150 105 176 22 31 255 128 90 118 95 111 128 116 48 241 134 186 99 255 160 243 21 190 114 30 196 59 174 242 75 143 186 16 176 79 25 24 159)
  :der-encode
  #t
  :tests
  '(#(334
      "comparison with point at infinity "
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 28 51 51 51 51 51 51 51 51 51 51 51 51 51 51 4 134 249 190 150 114 208 197 213 13 223 69 162 12)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 117 66 103 217 240 144 82 77 76 151 187 26 86 34 224 201 248 4 223 215 12 198 141 152 114 240 164 248 112 140 36 164 155 129 48 125 180 88 192 32 252 115 116 119 8 88 250 174 161 214 238 55 191 123 234 227)
  :der-encode
  #t
  :tests
  '(#(335
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 117 160 213 41 31 72 193 123 64 41 186 174 164 213 121 107 218 124 157 88 2 213 52 192 194 101 121 74 201 55 105 220 175 121 101 243 193 40 100 245 12 203 34 241 15 25 61 95 15 124 51 68 145 49 210 196)
  :der-encode
  #t
  :tests
  '(#(336
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 2 29 0 219 109 182 219 109 182 219 109 182 219 109 182 219 108 238 212 192 158 132 199 126 189 145 22 225 115 145 235)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 211 87 103 77 161 102 224 244 160 88 32 61 242 59 143 138 218 130 133 128 52 53 93 35 175 245 168 18 237 246 213 38 94 212 11 109 162 173 190 159 140 182 5 14 191 97 235 192 229 106 16 161 214 207 110 46)
  :der-encode
  #t
  :tests
  '(#(337
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 2 28 51 51 51 51 51 51 51 51 51 51 51 51 51 51 4 134 249 190 150 114 208 197 213 13 223 69 162 12)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 133 103 95 150 0 157 223 116 1 8 245 189 184 37 35 213 148 20 211 155 116 225 21 112 166 208 250 163 19 205 88 65 168 226 163 227 235 208 153 180 50 5 202 70 102 74 110 108 241 148 129 232 85 47 180 216)
  :der-encode
  #t
  :tests
  '(#(338
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 2 29 0 204 204 204 204 204 204 204 204 204 204 204 204 204 204 18 27 230 250 89 203 67 23 84 55 125 22 136 49)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 193 103 139 221 206 95 0 228 244 30 188 171 134 248 1 180 220 5 10 27 45 168 249 116 123 90 191 201 241 207 13 103 217 201 52 86 152 138 0 77 188 184 233 93 23 221 228 7 5 119 229 29 136 29 136 89)
  :der-encode
  #t
  :tests
  '(#(339
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 2 28 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 82)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 9 210 207 213 117 152 107 254 26 116 32 199 218 188 4 118 224 221 19 229 78 1 170 111 151 185 224 39 70 75 165 184 76 77 146 237 159 221 208 187 203 35 130 240 233 185 213 187 32 27 46 168 235 141 58 80)
  :der-encode
  #t
  :tests
  '(#(340
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 2 28 14 177 14 90 185 95 172 222 212 6 16 41 214 58 70 244 111 18 148 116 17 242 234 86 26 89 32 87)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 0 111 204 36 67 82 134 159 235 220 116 37 32 79 123 41 124 168 93 91 13 168 170 111 254 135 25 128 98 254 239 88 216 197 168 120 208 37 92 213 71 175 79 19 41 6 85 80 23 195 48 100 141 91 26 228)
  :der-encode
  #t
  :tests
  '(#(341
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 1 113 224 143 88 251 249 129 42 227 37 112 194 16 46 132 57 104 245 243 92 89 111 248 89 27 3 166 108 7 247 93 158 204 94 57 221 160 144 174 146 21 126 93 134 252 241 168 195 149 73 10 68 109 199 255)
  :der-encode
  #t
  :tests
  '(#(342
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 2 29 0 219 109 182 219 109 182 219 109 182 219 109 182 219 108 238 212 192 158 132 199 126 189 145 22 225 115 145 235)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 51 5 134 35 98 87 179 218 187 143 162 73 252 106 101 254 15 151 228 213 28 22 32 40 229 53 183 77 32 16 27 165 204 153 103 81 31 121 79 167 199 246 17 77 64 225 75 125 197 137 20 139 219 28 39 90)
  :der-encode
  #t
  :tests
  '(#(343
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 2 28 51 51 51 51 51 51 51 51 51 51 51 51 51 51 4 134 249 190 150 114 208 197 213 13 223 69 162 12)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 128 68 183 51 5 233 245 144 33 219 208 206 70 45 13 138 155 34 231 88 135 197 101 5 201 201 76 46 98 145 165 197 54 75 173 19 141 58 195 181 56 247 123 38 105 3 191 113 182 212 204 37 172 11 111 18)
  :der-encode
  #t
  :tests
  '(#(344
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 2 29 0 204 204 204 204 204 204 204 204 204 204 204 204 204 204 18 27 230 250 89 203 67 23 84 55 125 22 136 49)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 111 219 212 77 34 83 42 136 3 86 139 81 47 39 193 7 87 42 79 14 153 201 10 177 93 108 27 199 1 78 89 67 218 81 106 146 207 108 241 255 180 248 89 188 147 229 168 221 159 155 25 6 214 154 205 146)
  :der-encode
  #t
  :tests
  '(#(345
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 2 28 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 82)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 27 154 131 139 136 153 165 199 185 217 130 188 192 128 120 117 33 216 51 79 219 210 187 84 74 177 15 70 118 84 140 33 253 1 40 117 197 54 78 21 82 160 58 30 162 55 162 241 173 175 230 39 148 25 135 125)
  :der-encode
  #t
  :tests
  '(#(346
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 2 28 14 177 14 90 185 95 172 222 212 6 16 41 214 58 70 244 111 18 148 116 17 242 234 86 26 89 32 87)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 189 55 99 136 181 247 35 251 76 34 223 230 205 67 117 160 90 7 71 100 68 213 129 153 133 0 126 52)
  :der-encode
  #t
  :tests
  '(#(347
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 14 119 239 235 218 200 60 1 220 227 248 196 22 46 40 107 56 183 226 61 232 54 55 167 37 49 234 183 2 28 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 81)
      #f
      ())
    #(348
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 241 136 16 20 37 55 195 254 35 28 7 59 233 208 238 55 168 1 14 0 43 166 241 158 55 42 63 134 2 28 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 81)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 66 200 156 119 74 8 220 4 179 221 32 25 50 188 138 94 165 248 184 155 187 42 126 102 122 255 129 205)
  :der-encode
  #t
  :tests
  '(#(349
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 14 119 239 235 218 200 60 1 220 227 248 196 22 46 40 107 56 183 226 61 232 54 55 167 37 49 234 183 2 28 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 81)
      #f
      ())
    #(350
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 241 136 16 20 37 55 195 254 35 28 7 59 233 208 238 55 168 1 14 0 43 166 241 158 55 42 63 134 2 28 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 81)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 76 36 102 112 101 138 29 65 245 215 123 206 36 108 190 56 106 194 40 72 226 105 185 212 205 103 196 102 221 217 71 21 61 57 178 212 37 51 164 96 222 242 104 128 64 140 175 45 211 221 72 254 136 140 209 118)
  :der-encode
  #t
  :tests
  '(#(351
      "pseudorandom signature"
      #vu8()
      #vu8(48 60 2 28 71 75 8 108 244 117 76 39 13 32 248 139 229 105 183 215 182 235 110 85 222 108 226 19 130 22 14 129 2 28 96 105 47 219 53 180 203 130 74 39 41 251 23 95 112 157 6 188 159 78 139 187 75 16 88 197 55 136)
      #t
      ())
    #(352
      "pseudorandom signature"
      #vu8(77 115 103)
      #vu8(48 62 2 29 0 221 227 89 254 81 166 216 202 154 236 65 227 55 107 211 233 255 248 164 26 62 68 166 77 184 29 99 38 2 29 0 161 194 157 87 115 9 247 19 91 104 139 25 144 67 63 180 92 93 193 122 2 21 87 39 44 18 86 252)
      #t
      ())
    #(353
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 12 220 74 84 160 145 230 30 15 118 77 219 18 255 178 67 244 87 173 87 26 138 231 153 156 170 15 6 2 29 0 213 205 213 36 242 9 43 203 226 252 124 50 139 8 118 212 54 217 25 0 88 112 10 243 112 218 176 183)
      #t
      ())
    #(354
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(48 60 2 28 110 250 50 69 126 9 184 171 226 33 104 80 27 196 174 5 29 34 148 103 65 20 169 220 169 76 81 174 2 28 49 115 182 82 199 131 36 184 119 220 91 223 232 3 36 174 176 27 23 31 210 98 97 36 164 79 11 54)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 174 214 252 173 36 0 196 217 78 85 219 182 176 18 206 61 76 43 70 132 63 190 153 212 40 158 110 207 138 36 168 158 113 52 61 125 21 29 37 141 44 182 144 52 156 45 86 179 102 221 16 166 0 0 0 0)
  :der-encode
  #t
  :tests
  '(#(355
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 65 163 224 55 12 248 20 139 204 189 208 58 126 118 61 56 38 149 38 61 161 27 148 112 176 225 3 214 2 29 0 135 166 18 153 13 10 74 159 129 30 32 172 82 10 52 118 217 24 72 68 76 204 196 200 19 138 213 214)
      #t
      ())
    #(356
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 28 111 19 133 18 191 5 173 219 181 54 185 118 185 18 94 18 40 244 63 50 247 102 50 93 28 39 14 22 2 28 85 98 5 70 79 246 92 154 93 77 148 117 22 112 89 134 56 53 100 75 6 134 47 27 73 204 162 12)
      #t
      ())
    #(357
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 132 13 204 206 23 96 244 118 36 11 81 109 92 251 249 161 15 189 68 178 92 104 253 105 169 111 103 163 2 29 0 183 152 132 182 73 90 28 101 240 120 83 252 93 86 172 6 184 67 102 189 219 61 223 86 176 252 147 40)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 191 25 236 254 67 255 226 137 246 153 244 121 49 97 69 185 167 247 55 11 158 206 90 177 33 33 116 241 115 213 40 148 154 233 20 47 129 139 173 231 26 150 4 7 150 59 224 182 72 42 106 96 255 255 255 255)
  :der-encode
  #t
  :tests
  '(#(358
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 148 158 118 224 227 91 229 160 143 203 96 216 248 110 203 12 101 15 201 179 126 205 97 160 89 100 147 21 2 29 0 205 135 9 3 252 20 55 213 158 67 234 222 19 154 168 235 113 112 57 210 232 211 40 47 39 212 132 240)
      #t
      ())
    #(359
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 166 54 78 30 77 212 19 39 180 248 138 153 152 65 43 241 104 85 26 204 86 19 87 210 187 253 42 175 2 29 0 245 228 140 237 118 101 94 183 41 244 55 29 32 245 212 236 83 162 56 68 49 52 35 6 59 184 95 186)
      #t
      ())
    #(360
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 245 114 189 6 159 254 247 38 34 45 176 51 102 66 5 34 11 246 148 243 116 40 44 121 89 89 148 95 2 29 0 202 148 46 244 253 107 236 211 188 76 50 128 202 41 184 76 141 41 85 93 218 64 42 80 175 29 118 101)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 38 229 171 241 53 203 84 234 170 22 182 158 75 11 41 34 117 52 78 136 160 157 246 223 128 0 0 0 234 184 145 222 84 227 242 111 245 10 185 137 243 51 218 197 81 88 61 70 138 230 35 197 150 67 74 240)
  :der-encode
  #t
  :tests
  '(#(361
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 232 178 148 1 178 38 136 119 111 139 36 149 31 35 152 147 225 45 130 40 104 219 190 31 107 200 96 238 2 29 0 191 239 179 100 24 117 170 16 195 232 70 134 101 7 22 88 208 171 49 44 223 143 154 102 155 216 42 122)
      #t
      ())
    #(362
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 41 29 140 200 31 113 95 213 42 116 22 137 70 237 43 242 214 146 218 224 149 82 73 228 205 173 50 9 2 29 0 239 86 166 158 189 120 18 90 76 161 43 218 205 25 62 33 17 163 81 88 213 215 139 93 48 70 10 52)
      #t
      ())
    #(363
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 245 18 58 159 146 18 246 75 140 96 124 253 91 4 24 243 105 76 229 239 77 22 17 134 175 172 125 48 2 28 68 196 181 215 100 125 252 30 209 15 29 141 146 131 212 188 166 150 26 78 167 140 241 202 214 50 249 91)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 236 98 127 52 85 69 208 63 140 109 189 8 229 117 82 113 22 86 127 227 117 249 236 170 255 255 255 255 65 191 112 86 151 213 247 22 188 247 135 24 213 57 59 99 169 134 145 244 161 242 66 70 55 85 56 253)
  :der-encode
  #t
  :tests
  '(#(364
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 97 25 199 45 109 95 231 45 24 22 20 211 212 11 54 238 199 86 202 125 158 79 42 179 9 93 82 164 2 29 0 251 186 245 187 74 151 182 9 103 146 241 127 149 177 22 166 69 254 28 98 250 29 131 233 105 192 232 214)
      #t
      ())
    #(365
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 140 61 103 90 117 157 48 184 175 203 238 63 55 116 108 34 110 185 146 23 127 141 118 241 98 212 9 62 2 28 100 51 34 211 243 123 165 50 231 229 240 240 193 75 105 26 54 120 7 92 3 40 18 3 235 82 151 69)
      #t
      ())
    #(366
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 225 247 172 201 111 211 234 252 41 153 17 101 34 59 11 137 156 43 4 204 35 147 114 238 244 208 96 165 2 28 42 11 111 33 79 161 151 207 190 131 74 79 128 167 77 233 116 142 98 242 168 148 33 79 233 43 222 235)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 21 1 110 82 179 100 114 213 54 71 118 5 251 128 93 211 144 48 130 160 98 209 234 48 175 158 85 90 0 0 0 0 118 45 40 241 253 194 25 24 79 129 104 31 191 245 102 212 101 181 241 243 30 135 45 245)
  :der-encode
  #t
  :tests
  '(#(367
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 171 73 169 38 73 165 185 91 238 26 14 77 216 151 213 245 170 231 88 31 170 65 103 58 212 209 142 182 2 28 93 249 225 166 90 215 42 136 245 139 11 113 30 22 44 109 225 105 173 231 16 108 1 87 20 134 199 223)
      #t
      ())
    #(368
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 179 237 204 49 109 213 203 230 205 0 84 228 139 193 167 126 85 204 76 243 221 219 245 82 255 196 233 41 2 29 0 207 77 230 84 152 14 136 247 144 129 9 197 246 55 17 60 176 59 223 139 165 68 61 218 133 46 99 19)
      #t
      ())
    #(369
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 50 83 139 147 183 30 126 162 179 206 246 2 114 113 224 3 123 132 243 129 138 7 39 172 202 174 166 217 2 29 0 230 34 80 97 167 215 107 147 198 86 45 227 29 80 96 132 68 165 51 187 88 83 184 171 148 22 15 234)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 21 1 110 82 179 100 114 213 54 71 118 5 251 128 93 211 144 48 130 160 98 209 234 48 175 158 85 90 255 255 255 255 137 210 215 14 2 61 230 231 176 126 151 223 64 10 153 43 154 74 14 12 225 120 210 12)
  :der-encode
  #t
  :tests
  '(#(370
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 132 110 107 74 224 89 207 103 58 194 244 36 192 123 230 182 68 86 85 78 255 209 77 74 10 133 213 209 2 29 0 198 115 83 232 95 223 180 33 251 58 187 1 79 29 61 33 168 183 68 186 20 110 71 9 231 34 165 230)
      #t
      ())
    #(371
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 149 7 59 184 36 25 96 22 9 36 19 99 29 212 32 138 87 23 68 208 3 13 213 67 82 97 25 33 2 28 16 14 247 172 150 9 55 231 64 248 104 191 155 55 198 132 83 23 171 24 101 206 19 136 28 229 21 107)
      #t
      ())
    #(372
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 28 49 134 169 42 167 96 150 9 150 174 161 63 49 55 172 240 11 130 178 178 3 110 96 126 201 196 75 103 2 28 24 53 148 78 150 182 202 31 68 92 243 53 15 16 90 151 163 114 82 248 92 246 216 230 40 201 106 2)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 0 0 0 0 247 228 113 61 8 81 18 17 44 55 205 244 96 31 246 136 218 121 96 22 183 26 114 122 222 90 158 193 101 5 76 201 135 249 220 135 233 153 27 146 228 250 100 156 166 85 238 174 159 42 48 225)
  :der-encode
  #t
  :tests
  '(#(373
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 205 180 63 6 62 211 206 32 249 78 69 61 64 233 215 222 57 147 105 6 72 65 20 195 7 7 142 34 2 28 38 210 67 111 47 102 169 84 1 14 88 11 149 226 26 23 74 75 102 122 168 36 159 38 118 254 27 231)
      #t
      ())
    #(374
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 178 154 43 254 159 171 57 75 52 85 4 131 243 204 129 29 155 134 52 95 111 142 53 214 166 187 11 52 2 28 38 18 14 160 107 25 16 196 75 195 112 205 4 121 198 173 220 91 206 137 108 74 96 104 16 25 78 46)
      #t
      ())
    #(375
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 172 36 125 255 38 1 97 9 210 130 0 80 82 112 207 45 44 43 6 6 123 213 211 48 161 194 164 26 2 29 0 145 10 141 105 218 93 106 80 140 136 170 212 240 145 237 91 82 134 208 41 193 9 95 197 122 242 161 6)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 255 255 255 255 234 223 124 238 141 52 208 76 242 44 143 125 227 86 116 251 47 80 29 36 42 118 247 37 134 196 9 48 157 57 142 96 206 30 10 76 158 5 169 211 38 39 87 126 140 226 204 127 58 250 44 62)
  :der-encode
  #t
  :tests
  '(#(376
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 191 219 252 211 190 233 128 60 80 96 219 198 157 103 73 251 94 77 196 10 28 0 0 46 13 35 83 84 2 29 0 168 74 111 244 194 239 128 192 116 200 168 169 48 94 121 224 231 83 33 185 175 171 147 72 192 42 126 41)
      #t
      ())
    #(377
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 32 253 114 235 115 237 218 156 176 172 162 71 60 92 88 44 120 49 139 7 5 169 166 215 24 10 199 103 2 29 0 176 122 62 119 63 162 143 81 50 2 182 153 3 181 204 101 242 180 247 113 75 91 40 200 59 82 190 221)
      #t
      ())
    #(378
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 134 170 30 186 114 161 172 167 221 131 203 44 38 89 36 29 18 253 138 193 124 189 121 140 196 74 250 187 2 28 102 224 166 106 120 198 195 28 233 158 69 22 42 11 71 87 222 255 94 216 11 232 52 130 131 241 183 165)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 176 1 60 111 191 246 240 159 236 218 28 38 62 246 83 153 212 207 152 156 165 252 79 143 255 15 233 225 0 0 0 0 14 42 176 232 73 94 133 158 178 175 176 7 105 214 231 254 98 106 17 145 103 192 182 188)
  :der-encode
  #t
  :tests
  '(#(379
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 1 207 170 124 202 224 82 43 83 99 180 138 177 250 94 14 16 38 102 242 172 82 24 197 179 37 35 211 2 29 0 166 20 145 222 42 74 5 189 160 191 39 105 69 63 170 132 84 81 32 124 77 211 169 90 171 22 155 12)
      #t
      ())
    #(380
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 28 80 12 157 8 160 171 82 211 95 229 207 157 78 221 234 14 184 204 0 232 232 219 10 41 165 18 222 16 2 28 72 45 15 120 242 128 142 131 241 11 238 159 173 97 244 189 186 131 171 154 79 125 113 201 183 8 62 19)
      #t
      ())
    #(381
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 117 191 128 176 96 255 18 60 14 82 92 152 202 116 250 130 215 22 160 156 33 214 122 204 211 74 96 188 2 29 0 237 167 169 100 69 99 163 73 255 58 36 131 182 231 86 63 10 164 196 211 25 85 28 160 195 189 31 228)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha3_224_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-224"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 176 1 60 111 191 246 240 159 236 218 28 38 62 246 83 153 212 207 152 156 165 252 79 143 255 15 233 225 255 255 255 255 241 213 79 23 182 161 122 97 77 80 79 247 150 41 24 1 157 149 238 110 152 63 73 69)
  :der-encode
  #t
  :tests
  '(#(382
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 62 248 50 103 159 98 119 185 1 182 169 134 131 61 3 228 181 116 210 63 215 62 223 217 54 104 151 97 2 29 0 232 42 240 94 186 254 34 204 211 132 51 108 149 48 115 128 54 217 159 23 182 46 243 223 196 224 148 139)
      #t
      ())
    #(383
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 149 4 182 36 177 22 162 194 142 250 3 126 53 88 28 113 178 231 208 31 48 216 246 137 70 193 62 136 2 29 0 128 130 99 147 116 168 213 224 103 166 223 9 214 223 17 169 114 150 122 8 26 83 7 163 183 241 120 91)
      #t
      ())
    #(384
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 46 181 219 138 158 28 130 237 76 230 67 201 83 201 241 28 61 226 100 239 146 215 96 124 145 219 206 118 2 29 0 182 169 124 148 58 167 166 43 87 131 120 99 86 247 183 91 54 184 131 86 235 98 213 163 209 90 112 41)
      #t
      ())))
