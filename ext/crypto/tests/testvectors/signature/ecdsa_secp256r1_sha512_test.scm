(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 41 39 177 5 18 186 227 237 220 254 70 120 40 18 139 173 41 3 38 153 25 247 8 96 105 200 196 223 108 115 40 56 199 120 121 100 234 172 0 229 146 31 177 73 138 96 244 96 103 102 179 217 104 80 1 85 141 26 151 78 115 65 81 62)
  :der-encode
  #t
  :tests
  '(#(1
      "signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 32 95 133 166 58 91 233 119 173 113 76 234 22 177 0 53 240 124 173 247 81 58 232 204 168 111 53 183 105 42 175 214 159)
      #t
      ())
    #(2
      "Legacy:ASN encoding of s misses leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 32 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #t
      ("MissingZero"))
    #(3
      "valid"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #t
      ())
    #(4
      "long form encoding of length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ("BER"))
    #(5
      "length of sequence contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 130 0 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ("BER"))
    #(6
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(7
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(8
      "uint32 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 1 0 0 0 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(9
      "uint64 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 137 1 0 0 0 0 0 0 0 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(10
      "length of sequence = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 127 255 255 255 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(11
      "length of sequence = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 255 255 255 255 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(12
      "length of sequence = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 255 255 255 255 255 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(13
      "length of sequence = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 136 255 255 255 255 255 255 255 255 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(14
      "incorrect length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 255 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(15
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(16
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 128 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(17
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 128 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(18
      "removing sequence"
      #vu8(49 50 51 52 48 48)
      #vu8()
      #f
      ())
    #(19
      "lonely sequence tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48)
      #f
      ())
    #(20
      "appending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 0 0)
      #f
      ())
    #(21
      "prepending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 0 0 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(22
      "appending unused 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 0 0)
      #f
      ())
    #(23
      "appending null value to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 5 0)
      #f
      ())
    #(24
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 73 129 119 48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(25
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 37 0 48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(26
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 0 4 222 173 190 239)
      #f
      ())
    #(27
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 34 37 73 129 119 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(28
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 34 36 37 0 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(29
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 34 34 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 0 4 222 173 190 239 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(30
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 34 38 73 129 119 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(31
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 34 37 37 0 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(32
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 34 35 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 0 4 222 173 190 239)
      #f
      ())
    #(33
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 170 0 187 0 205 0 48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(34
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 75 170 2 170 187 48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(35
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 34 40 170 0 187 0 205 0 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(36
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 75 34 38 170 2 170 187 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(37
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 34 41 170 0 187 0 205 0 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(38
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 75 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 34 39 170 2 170 187 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(39
      "truncated length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129)
      #f
      ())
    #(40
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 0 0)
      #f
      ())
    #(41
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 34 128 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 0 0 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(42
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 34 128 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 0 0)
      #f
      ())
    #(43
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 49 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 0 0)
      #f
      ())
    #(44
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 34 128 3 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 0 0 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(45
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 34 128 3 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 0 0)
      #f
      ())
    #(46
      "Replacing sequence with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(5 0)
      #f
      ())
    #(47
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(46 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(48
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(47 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(49
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(49 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(50
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(50 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(51
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(255 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(52
      "dropping value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 0)
      #f
      ())
    #(53
      "using composition for sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 48 1 2 48 68 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(54
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78)
      #f
      ())
    #(55
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(56
      "indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 0 0)
      #f
      ("BER"))
    #(57
      "indefinite length with truncated delimiter"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 0)
      #f
      ())
    #(58
      "indefinite length with additional element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 5 0 0 0)
      #f
      ())
    #(59
      "indefinite length with truncated element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 6 8 17 34 0 0)
      #f
      ())
    #(60
      "indefinite length with garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 0 0 254 2 190 239)
      #f
      ())
    #(61
      "indefinite length with nonempty EOC"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 0 2 190 239)
      #f
      ())
    #(62
      "prepend empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 48 0 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(63
      "append empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 48 0)
      #f
      ())
    #(64
      "append garbage with high tag number"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 191 127 0)
      #f
      ())
    #(65
      "sequence of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(66
      "truncated sequence: removed last 1 elements"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192)
      #f
      ())
    #(67
      "repeating element in sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 104 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(68
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 129 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ("BER"))
    #(69
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 129 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ("BER"))
    #(70
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 130 0 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ("BER"))
    #(71
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 130 0 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ("BER"))
    #(72
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(73
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 31 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(74
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 34 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(75
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 32 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(76
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 133 1 0 0 0 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(77
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 133 1 0 0 0 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(78
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 78 2 137 1 0 0 0 0 0 0 0 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(79
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 78 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 137 1 0 0 0 0 0 0 0 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(80
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 132 127 255 255 255 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(81
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 132 127 255 255 255 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(82
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 132 255 255 255 255 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(83
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 132 255 255 255 255 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(84
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 133 255 255 255 255 255 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(85
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 133 255 255 255 255 255 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(86
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 2 136 255 255 255 255 255 255 255 255 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(87
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 136 255 255 255 255 255 255 255 255 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(88
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 255 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(89
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 255 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(90
      "removing integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 35 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(91
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(92
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 35 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2)
      #f
      ())
    #(93
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 34 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 0 0 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(94
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 35 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 0 0)
      #f
      ())
    #(95
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 34 0 0 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ("BER"))
    #(96
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 35 0 0 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ("BER"))
    #(97
      "appending unused 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 0 0 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(98
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 34 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 5 0 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(99
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 35 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178 5 0)
      #f
      ())
    #(100
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 129 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(101
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 129)
      #f
      ())
    #(102
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 5 0 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(103
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 5 0)
      #f
      ())
    #(104
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 0 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(105
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 1 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(106
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 3 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(107
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 4 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(108
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 255 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(109
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 0 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(110
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 1 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(111
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 3 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(112
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 4 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(113
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 255 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(114
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 0 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(115
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 0)
      #f
      ())
    #(116
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 34 36 2 1 36 2 31 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(117
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 34 37 2 1 0 2 32 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(118
      "modify first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 38 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(119
      "modify first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 2 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(120
      "modify last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 64 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(121
      "modify last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 50)
      #f
      ())
    #(122
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 31 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(123
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 31 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(124
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 32 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78)
      #f
      ())
    #(125
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 255 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(126
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 34 255 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(127
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 9 1 128 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(128
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 9 1 128)
      #f
      ())
    #(129
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(130
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 1 0)
      #f
      ())
    #(131
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 1 36 120 241 207 73 246 216 88 172 144 10 122 241 119 34 38 97 172 149 226 6 211 46 230 48 32 190 238 149 92 167 17 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(132
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 255 36 120 241 209 73 246 216 86 172 144 10 122 241 119 34 38 231 222 160 134 184 163 241 220 72 173 41 104 156 150 92 111 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(133
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 219 135 14 47 182 9 39 168 83 111 245 133 14 136 221 217 91 58 100 203 160 68 111 158 195 153 11 212 103 6 126 64 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(134
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 219 135 14 46 182 9 39 169 83 111 245 133 14 136 221 217 24 33 95 121 71 92 14 35 183 82 214 151 99 105 163 145 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(135
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 254 219 135 14 48 182 9 39 167 83 111 245 133 14 136 221 217 158 83 106 29 249 44 209 25 207 223 65 17 106 163 88 239 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(136
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 1 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(137
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 219 135 14 47 182 9 39 168 83 111 245 133 14 136 221 217 91 58 100 203 160 68 111 158 195 153 11 212 103 6 126 64 2 33 0 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(138
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 1 160 122 89 195 164 22 136 84 142 179 21 233 78 255 202 14 253 31 254 10 19 70 112 97 120 61 222 28 206 22 116 3)
      #f
      ())
    #(139
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 32 160 122 89 197 164 22 136 82 142 179 21 233 78 255 202 15 131 82 8 174 197 23 51 87 144 202 72 150 213 80 41 97)
      #f
      ())
    #(140
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 255 95 133 166 59 91 233 119 172 113 76 234 22 177 0 53 240 191 198 252 163 147 209 46 35 123 123 236 166 46 76 177 78)
      #f
      ())
    #(141
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 254 95 133 166 60 91 233 119 171 113 76 234 22 177 0 53 241 2 224 1 245 236 185 143 158 135 194 33 227 49 233 139 253)
      #f
      ())
    #(142
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 33 1 160 122 89 196 164 22 136 83 142 179 21 233 78 255 202 15 64 57 3 92 108 46 209 220 132 132 19 89 209 179 78 178)
      #f
      ())
    #(143
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 36 120 241 208 73 246 216 87 172 144 10 122 241 119 34 38 164 197 155 52 95 187 144 97 60 102 244 43 152 249 129 192 2 32 95 133 166 59 91 233 119 172 113 76 234 22 177 0 53 240 191 198 252 163 147 209 46 35 123 123 236 166 46 76 177 78)
      #f
      ())
    #(144
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 0)
      #f
      ("EdgeCase"))
    #(145
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 1)
      #f
      ("EdgeCase"))
    #(146
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 255)
      #f
      ("EdgeCase"))
    #(147
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(148
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(149
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(150
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(151
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(152
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 0 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(153
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 9 1 66)
      #f
      ("EdgeCase"))
    #(154
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 0)
      #f
      ("EdgeCase"))
    #(155
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 1)
      #f
      ("EdgeCase"))
    #(156
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 255)
      #f
      ("EdgeCase"))
    #(157
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(158
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(159
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(160
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(161
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(162
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(163
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 9 1 66)
      #f
      ("EdgeCase"))
    #(164
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 0)
      #f
      ("EdgeCase"))
    #(165
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 1)
      #f
      ("EdgeCase"))
    #(166
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 255)
      #f
      ("EdgeCase"))
    #(167
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(168
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(169
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(170
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(171
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(172
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 255 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(173
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 9 1 66)
      #f
      ("EdgeCase"))
    #(174
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 2 1 0)
      #f
      ("EdgeCase"))
    #(175
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 2 1 1)
      #f
      ("EdgeCase"))
    #(176
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 2 1 255)
      #f
      ("EdgeCase"))
    #(177
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(178
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(179
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(180
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(181
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(182
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(183
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 9 1 66)
      #f
      ("EdgeCase"))
    #(184
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 2 1 0)
      #f
      ("EdgeCase"))
    #(185
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 2 1 1)
      #f
      ("EdgeCase"))
    #(186
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 2 1 255)
      #f
      ("EdgeCase"))
    #(187
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(188
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(189
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(190
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(191
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(192
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(193
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 9 1 66)
      #f
      ("EdgeCase"))
    #(194
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 2 1 0)
      #f
      ("EdgeCase"))
    #(195
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 2 1 1)
      #f
      ("EdgeCase"))
    #(196
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 2 1 255)
      #f
      ("EdgeCase"))
    #(197
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(198
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(199
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(200
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(201
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(202
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(203
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 9 1 66)
      #f
      ("EdgeCase"))
    #(204
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 2 1 0)
      #f
      ("EdgeCase"))
    #(205
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 2 1 1)
      #f
      ("EdgeCase"))
    #(206
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 2 1 255)
      #f
      ("EdgeCase"))
    #(207
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(208
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(209
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(210
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(211
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(212
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(213
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 9 1 66)
      #f
      ("EdgeCase"))
    #(214
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0)
      #f
      ("EdgeCase"))
    #(215
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 1 1)
      #f
      ("EdgeCase"))
    #(216
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 1 255)
      #f
      ("EdgeCase"))
    #(217
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(218
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(219
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(220
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(221
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(222
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(223
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 9 1 66)
      #f
      ("EdgeCase"))
    #(224
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 12 1 48)
      #f
      ())
    #(225
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 5 2 1 1 12 0)
      #f
      ())
    #(226
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 9 12 2 37 115 12 3 115 37 115)
      #f
      ())
    #(227
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 48 3 2 1 0)
      #f
      ())
    #(228
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 3 2 1 1)
      #f
      ())
    #(229
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 1 1 0)
      #f
      ())
    #(230
      "Edge case for Shamir multiplication"
      #vu8(57 50 50 48 56)
      #vu8(48 68 2 32 100 161 170 181 0 13 14 128 79 62 47 192 43 222 233 190 143 243 18 51 78 43 161 109 17 84 124 151 113 28 137 142 2 32 60 98 62 127 117 152 55 104 37 250 139 192 158 114 124 117 121 76 187 78 232 113 106 225 92 49 205 28 190 156 163 238)
      #t
      ())
    #(231
      "special case hash"
      #vu8(51 57 52 57 49 57 52 49 55 50)
      #vu8(48 68 2 32 58 79 97 247 248 196 84 110 53 128 247 132 132 17 120 111 238 18 41 160 122 110 207 95 184 72 112 134 145 136 33 93 2 32 24 197 206 68 53 78 34 116 234 219 143 234 49 159 141 111 96 148 69 50 219 170 232 107 253 129 5 242 83 4 27 203)
      #t
      ())
    #(232
      "special case hash"
      #vu8(53 51 54 55 54 52 49 56 55 55)
      #vu8(48 69 2 32 63 169 151 95 178 176 139 123 110 51 243 132 48 153 218 63 67 241 220 254 155 23 26 96 202 253 84 137 202 156 83 40 2 33 0 152 90 134 130 90 12 199 40 245 217 218 194 165 19 180 145 39 160 97 0 240 252 75 139 31 32 9 3 224 223 158 210)
      #t
      ())
    #(233
      "special case hash"
      #vu8(53 54 55 49 52 56 49 48 57 53)
      #vu8(48 68 2 32 77 102 231 238 94 221 2 171 150 219 37 149 64 80 7 158 248 222 29 15 2 243 77 77 117 17 46 175 63 115 18 64 2 32 98 146 209 86 49 64 1 60 88 155 228 14 89 152 98 189 214 189 162 16 56 9 146 137 40 161 25 180 56 81 162 206)
      #t
      ())
    #(234
      "special case hash"
      #vu8(49 49 50 48 55 49 55 50 57 48 57)
      #vu8(48 70 2 33 0 169 34 131 5 247 180 134 245 104 235 101 212 78 73 186 0 126 63 20 184 242 60 104 156 149 46 76 237 30 108 249 30 2 33 0 183 60 116 210 139 209 38 128 2 190 215 132 166 176 108 64 169 14 229 147 142 166 208 143 39 45 2 126 15 150 167 44)
      #t
      ())
    #(235
      "special case hash"
      #vu8(49 49 50 57 56 48 51 52 50 51 54)
      #vu8(48 68 2 32 63 163 152 66 191 171 108 56 175 167 150 60 96 190 176 148 132 212 87 159 199 94 240 158 255 244 78 145 188 98 202 131 2 32 86 18 173 209 146 79 2 133 172 229 177 88 130 142 43 50 171 43 110 127 16 238 104 220 161 204 84 89 31 238 31 236)
      #t
      ())
    #(236
      "special case hash"
      #vu8(57 56 55 54 48 50 57 54 56 51)
      #vu8(48 69 2 32 6 192 75 2 237 254 236 216 98 15 3 94 164 244 73 189 146 69 147 232 110 82 136 166 242 45 25 35 176 226 232 169 2 33 0 246 102 113 142 111 239 181 21 187 147 57 210 156 192 229 140 251 168 157 96 92 160 6 107 202 135 246 163 240 142 188 250)
      #t
      ())
    #(237
      "special case hash"
      #vu8(50 48 50 48 52 50 57 54 53 49 57)
      #vu8(48 68 2 32 29 221 149 60 50 165 248 65 9 205 77 158 200 195 100 221 49 131 118 255 93 34 130 17 163 103 72 48 119 214 56 128 2 32 86 61 186 72 69 222 118 43 175 4 145 6 24 213 135 224 221 12 151 221 28 151 133 194 79 253 242 248 166 96 171 242)
      #t
      ())
    #(238
      "special case hash"
      #vu8(49 52 53 49 54 54 57 49 56 48)
      #vu8(48 70 2 33 0 159 228 236 72 49 239 73 69 241 0 213 211 90 46 99 18 65 28 165 223 108 144 12 166 6 144 242 152 93 85 52 130 2 33 0 198 116 173 94 27 234 210 247 103 201 36 142 68 68 82 164 168 83 13 212 114 70 203 188 150 141 168 101 189 242 18 182)
      #t
      ())
    #(239
      "special case hash"
      #vu8(49 48 57 51 54 56 53 57 53 49)
      #vu8(48 70 2 33 0 232 112 61 107 22 167 159 194 171 54 83 206 206 41 208 111 101 221 111 44 35 12 176 142 227 12 85 23 64 125 117 219 2 33 0 140 254 184 123 142 149 221 172 214 56 179 125 49 83 147 197 0 95 58 184 187 160 204 28 209 160 80 130 155 119 91 251)
      #t
      ())
    #(240
      "special case hash"
      #vu8(54 50 49 57 53 54 48 50 48 49)
      #vu8(48 70 2 33 0 222 246 8 202 241 242 119 215 20 3 0 159 32 156 29 126 239 17 170 167 146 3 151 251 244 41 184 20 97 129 174 206 2 33 0 243 184 242 170 91 61 249 168 179 115 19 234 102 173 91 116 103 63 62 134 20 255 71 27 30 182 119 50 23 81 31 176)
      #t
      ())
    #(241
      "special case hash"
      #vu8(53 54 56 50 52 55 52 51 48 51)
      #vu8(48 68 2 32 79 93 8 232 217 54 206 131 29 2 214 178 63 184 252 224 224 117 1 1 175 58 185 195 178 134 54 185 90 94 36 173 2 32 111 3 68 128 85 59 206 202 194 33 248 190 130 136 22 60 85 73 46 46 86 168 143 77 3 65 182 20 54 160 166 192)
      #t
      ())
    #(242
      "special case hash"
      #vu8(51 55 51 54 53 51 49 55 56 54)
      #vu8(48 69 2 33 0 189 216 34 191 227 115 61 159 75 136 118 79 224 145 219 46 143 138 243 102 228 196 77 135 107 248 46 98 189 72 199 238 2 32 127 191 119 80 197 220 132 154 44 85 219 221 6 120 6 248 105 101 42 123 58 87 186 164 115 55 129 211 18 143 2 222)
      #t
      ())
    #(243
      "special case hash"
      #vu8(52 55 57 53 57 48 51 55 57 50)
      #vu8(48 68 2 32 28 79 192 41 97 183 244 36 85 102 180 16 191 8 244 71 80 46 164 247 91 21 105 3 68 104 30 250 46 223 123 75 2 32 125 99 238 241 25 220 136 188 74 27 44 67 172 33 205 83 137 36 67 102 31 140 58 151 213 88 191 136 140 41 247 105)
      #t
      ())
    #(244
      "special case hash"
      #vu8(57 51 57 57 54 49 49 48 48 55)
      #vu8(48 68 2 32 100 6 242 210 73 171 18 100 225 117 71 108 163 48 14 253 4 159 202 213 105 223 244 11 146 32 130 180 28 199 183 206 2 32 70 24 114 184 3 56 63 120 80 119 113 74 149 102 196 214 82 232 123 44 173 144 221 79 76 200 75 197 80 4 197 48)
      #t
      ())
    #(245
      "special case hash"
      #vu8(49 48 56 55 52 57 49 49 56 53)
      #vu8(48 69 2 32 65 92 146 75 155 161 144 43 52 0 88 17 125 144 98 54 2 212 139 130 128 88 63 178 49 220 147 130 59 131 161 83 2 33 0 241 139 232 205 194 6 58 38 171 3 5 4 211 57 125 198 233 198 182 197 111 78 58 89 131 44 14 70 67 192 38 60)
      #t
      ())
    #(246
      "special case hash"
      #vu8(51 50 51 54 54 55 56 53 48 48)
      #vu8(48 69 2 33 0 209 46 150 199 210 241 119 183 207 109 138 30 222 6 10 43 23 77 201 147 212 63 95 230 15 117 96 72 36 182 79 239 2 32 12 151 216 112 53 252 202 10 95 71 254 100 97 187 48 203 175 5 179 126 66 17 236 63 205 81 252 113 161 34 57 202)
      #t
      ())
    #(247
      "special case hash"
      #vu8(49 52 52 56 57 57 55 55 48 51)
      #vu8(48 69 2 32 125 247 42 100 199 233 130 200 143 131 179 162 40 2 105 0 152 20 126 14 66 239 67 113 239 6 153 16 133 140 6 70 2 33 0 173 186 167 177 12 106 63 153 94 213 248 61 123 218 75 166 38 179 85 243 74 114 191 146 255 120 131 0 183 14 114 208)
      #t
      ())
    #(248
      "special case hash"
      #vu8(53 55 49 52 54 51 50 56 48 55)
      #vu8(48 68 2 32 4 124 67 6 248 211 14 66 90 231 14 11 238 158 11 148 250 164 239 24 169 198 215 242 201 93 224 254 110 42 50 55 2 32 122 77 13 10 89 107 217 234 63 233 133 14 156 140 119 50 37 148 52 70 35 192 180 106 194 168 201 89 72 174 253 152)
      #t
      ())
    #(249
      "special case hash"
      #vu8(50 50 54 52 56 55 52 57 50)
      #vu8(48 68 2 32 87 214 3 163 103 226 58 243 156 149 221 65 140 1 118 218 139 33 29 80 177 190 130 191 94 246 33 162 100 2 4 247 2 32 93 195 242 133 173 1 92 77 113 21 123 209 30 91 141 246 168 158 75 38 115 147 176 139 90 213 1 59 218 229 68 177)
      #t
      ())
    #(250
      "special case hash"
      #vu8(53 51 53 51 52 52 57 52 55 57)
      #vu8(48 68 2 32 17 223 103 65 2 30 200 204 86 117 132 174 161 104 23 197 64 133 156 78 80 17 85 28 0 176 151 252 252 35 55 229 2 32 102 133 81 145 157 67 32 106 192 87 31 197 173 58 192 239 180 137 190 165 153 231 191 153 254 76 116 104 214 194 197 224)
      #t
      ())
    #(251
      "special case hash"
      #vu8(52 55 56 55 51 48 51 56 56 48)
      #vu8(48 68 2 32 116 81 255 237 228 113 189 55 4 6 83 52 54 252 66 168 157 170 10 244 144 61 8 124 188 6 47 231 229 77 191 112 2 32 89 8 149 57 143 34 180 140 231 44 191 124 61 62 225 221 127 176 238 100 94 219 11 27 29 227 95 55 14 91 245 238)
      #t
      ())
    #(252
      "special case hash"
      #vu8(50 50 51 50 49 57 53 56 50 51)
      #vu8(48 69 2 33 0 252 76 77 129 218 111 104 122 100 38 38 49 147 193 166 128 182 119 52 161 177 128 100 123 140 118 64 124 196 240 169 198 2 32 86 247 117 211 114 201 190 230 133 55 64 133 190 103 108 156 243 28 241 249 120 165 230 204 176 78 74 7 97 21 156 199)
      #t
      ())
    #(253
      "special case hash"
      #vu8(49 48 55 51 57 51 57 49 57 49 55)
      #vu8(48 69 2 33 0 254 185 120 202 51 196 111 251 164 126 182 59 180 13 231 131 62 67 213 101 69 117 181 77 225 254 163 209 222 60 138 213 2 32 16 128 120 186 153 123 250 6 69 33 186 243 66 201 123 12 100 189 37 36 12 143 208 253 117 51 174 45 3 8 27 112)
      #t
      ())
    #(254
      "special case hash"
      #vu8(49 56 56 49 48 50 55 51 49 53)
      #vu8(48 70 2 33 0 204 97 114 150 152 70 123 165 61 161 153 255 72 31 231 67 63 25 79 201 99 103 144 126 141 197 225 217 244 43 30 33 2 33 0 131 221 158 241 86 231 193 249 192 155 59 248 106 79 28 136 229 221 32 205 116 217 151 133 142 96 7 151 219 231 74 210)
      #t
      ())
    #(255
      "special case hash"
      #vu8(54 48 54 49 54 57 51 57 48 55)
      #vu8(48 69 2 33 0 212 127 97 99 3 255 14 184 19 234 195 46 118 11 163 10 212 69 224 175 125 197 126 112 117 97 4 130 63 106 137 95 2 32 4 127 34 23 179 153 196 106 66 107 147 106 18 73 128 166 1 31 8 150 245 29 190 7 99 40 40 167 45 113 115 241)
      #t
      ())
    #(256
      "special case hash"
      #vu8(56 56 57 53 50 50 55 48 57 52)
      #vu8(48 70 2 33 0 207 247 61 250 43 172 103 206 19 64 178 92 136 90 187 62 121 121 239 127 132 15 21 213 241 158 134 100 12 221 64 163 2 33 0 199 209 33 8 2 121 108 79 37 16 73 238 8 162 194 159 92 113 6 64 51 209 112 16 198 91 242 233 68 153 56 30)
      #t
      ())
    #(257
      "special case hash"
      #vu8(49 53 56 48 50 51 52 48 57 52)
      #vu8(48 68 2 32 16 172 175 156 72 90 177 34 3 85 185 91 226 105 241 36 225 46 178 82 242 34 75 15 197 7 133 235 46 227 223 69 2 32 50 68 59 85 126 252 104 150 52 127 167 120 225 252 243 60 187 118 156 154 125 168 150 178 13 147 254 167 194 121 30 164)
      #t
      ())
    #(258
      "special case hash"
      #vu8(51 57 54 53 57 57 49 53 49 50)
      #vu8(48 70 2 33 0 249 25 218 6 81 171 194 191 249 148 168 121 210 119 143 165 25 93 87 64 14 0 62 141 214 173 179 252 122 12 196 204 2 33 0 155 148 93 6 189 17 150 101 178 120 165 155 210 79 221 35 80 129 125 11 232 121 151 190 229 123 112 196 121 214 74 45)
      #t
      ())
    #(259
      "special case hash"
      #vu8(50 50 56 56 55 51 50 49 57 56)
      #vu8(48 69 2 33 0 204 56 231 160 24 246 215 11 45 155 73 18 12 201 180 161 105 242 247 34 56 130 26 134 184 31 85 59 98 37 210 78 2 32 39 110 253 139 240 108 204 224 124 122 174 53 234 172 59 209 195 116 220 240 207 5 136 213 224 228 23 25 54 104 134 54)
      #t
      ())
    #(260
      "special case hash"
      #vu8(50 50 51 48 56 56 55 51 49 57)
      #vu8(48 69 2 33 0 255 133 173 102 98 25 145 195 24 184 92 239 115 197 118 203 42 141 67 197 104 193 170 252 133 180 14 242 169 166 180 28 2 32 115 42 121 230 131 126 191 132 52 254 166 231 254 250 148 143 80 106 228 85 193 163 235 54 160 48 24 90 35 3 125 150)
      #t
      ())
    #(261
      "special case hash"
      #vu8(49 50 57 48 53 54 57 51 55)
      #vu8(48 68 2 32 51 240 22 229 30 239 155 17 54 56 12 184 184 76 107 56 177 7 226 76 103 49 189 7 203 28 127 74 41 243 58 131 2 32 54 177 119 187 139 233 76 139 230 127 243 164 31 204 77 34 181 201 235 55 125 167 19 235 1 74 224 28 100 202 109 215)
      #t
      ())
    #(262
      "special case hash"
      #vu8(50 55 52 56 54 53 54 52 51 56)
      #vu8(48 69 2 33 0 146 148 19 238 145 242 116 84 215 78 145 55 10 16 168 111 201 138 199 48 92 138 180 202 89 117 43 218 58 123 252 55 2 32 72 59 71 162 106 13 125 46 107 211 125 53 29 158 227 124 94 194 164 104 109 136 77 120 182 190 183 246 176 140 80 249)
      #t
      ())
    #(263
      "special case hash"
      #vu8(55 53 56 51 53 48 50 54 48 52)
      #vu8(48 69 2 32 87 130 2 199 208 171 172 147 202 67 221 227 203 68 65 78 86 1 193 235 85 118 4 203 154 219 75 222 10 18 99 59 2 33 0 251 154 116 18 227 7 174 233 94 244 181 53 64 87 26 33 85 148 20 229 48 103 148 171 81 130 207 178 41 218 179 233)
      #t
      ())
    #(264
      "special case hash"
      #vu8(50 51 50 55 55 53 52 50 55 57)
      #vu8(48 69 2 32 70 212 90 208 187 117 184 99 157 14 145 216 69 15 195 24 135 194 17 50 138 87 132 252 131 180 203 127 91 150 44 27 2 33 0 214 117 29 19 237 226 7 155 122 161 216 34 189 179 45 127 60 240 2 115 161 255 3 223 144 192 236 124 98 164 117 104)
      #t
      ())
    #(265
      "special case hash"
      #vu8(55 55 53 53 48 56 53 56 52)
      #vu8(48 70 2 33 0 171 232 76 148 23 131 213 206 210 132 254 165 99 65 236 198 141 107 221 49 150 211 24 251 208 116 100 31 140 136 91 213 2 33 0 189 234 60 68 212 142 1 170 64 147 92 28 151 35 255 115 49 153 86 52 64 242 107 78 207 11 68 75 4 24 217 245)
      #t
      ())
    #(266
      "special case hash"
      #vu8(49 55 57 56 50 54 52 56 51 56 50)
      #vu8(48 69 2 32 5 39 124 219 244 145 227 54 254 129 190 36 227 147 161 97 164 251 137 17 44 159 254 209 238 102 73 196 6 113 52 8 2 33 0 171 105 52 51 46 104 225 8 187 4 132 210 28 69 125 207 56 26 98 12 58 71 18 253 191 235 101 138 63 175 214 12)
      #t
      ())
    #(267
      "special case hash"
      #vu8(50 51 57 54 55 55 55 51 54 53)
      #vu8(48 69 2 32 41 56 37 115 124 140 20 67 14 209 13 186 221 125 163 55 39 95 155 97 209 210 99 119 247 120 255 170 0 193 57 222 2 33 0 205 221 236 38 122 134 120 201 104 41 191 108 29 111 56 50 46 17 153 55 207 210 254 224 30 157 201 82 95 67 237 107)
      #t
      ())
    #(268
      "special case hash"
      #vu8(53 57 57 56 49 48 53 56 48 49)
      #vu8(48 68 2 32 32 65 253 214 17 28 69 223 210 158 117 14 8 45 205 173 201 165 132 168 162 190 70 88 15 176 186 59 61 198 88 98 2 32 66 24 36 254 152 126 65 114 160 248 187 203 123 205 158 27 7 59 119 66 237 159 157 249 143 42 26 55 205 55 76 227)
      #t
      ())
    #(269
      "special case hash"
      #vu8(49 54 54 55 55 56 50 55 48 53 55)
      #vu8(48 69 2 32 38 121 65 219 102 14 4 106 177 78 121 86 105 224 2 184 82 247 120 132 71 197 62 190 244 106 32 86 151 139 85 116 2 33 0 208 1 131 188 175 117 188 17 227 118 83 249 82 246 166 83 113 81 195 170 10 27 158 78 65 176 4 162 145 133 57 91)
      #t
      ())
    #(270
      "special case hash"
      #vu8(50 48 54 50 49 52 51 54 50)
      #vu8(48 68 2 32 93 205 127 104 20 115 157 71 248 10 54 59 148 20 230 203 251 95 8 70 34 56 136 81 10 189 91 57 3 215 174 9 2 32 67 65 143 19 139 179 200 87 192 173 117 12 168 56 158 188 243 113 156 179 137 99 74 197 74 145 222 159 24 253 114 56)
      #t
      ())
    #(271
      "special case hash"
      #vu8(54 56 52 50 52 57 54 48 52 53)
      #vu8(48 69 2 32 94 14 140 192 40 4 9 160 206 37 45 160 43 36 36 210 222 58 82 180 6 195 119 137 50 219 198 12 184 108 53 103 2 33 0 147 210 94 146 156 91 0 233 80 216 149 133 236 108 1 182 88 154 224 236 10 248 167 156 4 223 158 91 39 181 139 197)
      #t
      ())
    #(272
      "special case hash"
      #vu8(51 50 54 57 56 57 55 51 50 49)
      #vu8(48 69 2 32 79 207 156 157 159 251 244 224 185 130 104 192 135 7 27 255 224 103 59 184 220 179 42 166 103 248 166 57 195 100 234 71 2 33 0 130 13 176 115 11 238 130 39 252 131 22 67 252 184 226 239 156 15 112 89 206 66 218 69 207 116 130 142 255 168 215 114)
      #t
      ())
    #(273
      "special case hash"
      #vu8(49 51 56 55 51 50 52 54 57 50)
      #vu8(48 70 2 33 0 198 12 210 224 130 72 213 141 22 57 177 35 99 54 67 198 63 137 175 246 17 249 152 147 124 203 8 201 17 59 205 202 2 33 0 172 75 180 112 206 1 100 97 109 173 167 161 115 54 78 211 249 209 111 211 44 104 97 54 249 4 201 146 102 253 161 126)
      #t
      ())
    #(274
      "special case hash"
      #vu8(52 49 49 56 56 56 55 53 51 54)
      #vu8(48 69 2 32 124 253 175 111 34 193 199 102 141 123 111 86 248 167 190 63 222 235 23 167 134 53 57 85 91 191 168 153 221 112 197 241 2 33 0 206 225 81 173 199 30 104 72 59 149 167 133 122 134 42 224 197 166 238 228 120 217 61 64 204 199 212 10 49 220 189 144)
      #t
      ())
    #(275
      "special case hash"
      #vu8(57 56 56 54 48 54 53 52 53)
      #vu8(48 68 2 32 34 112 190 126 224 51 167 6 181 151 70 234 179 72 22 190 126 21 200 120 64 97 213 40 16 96 112 122 10 190 10 125 2 32 86 161 99 52 30 233 94 126 60 4 41 74 87 245 247 210 75 243 195 198 241 62 242 241 97 7 124 71 189 39 102 93)
      #t
      ())
    #(276
      "special case hash"
      #vu8(50 52 55 57 49 49 53 56 52 53)
      #vu8(48 68 2 32 22 181 210 191 202 186 33 22 122 105 247 67 61 12 71 107 33 222 211 125 132 220 116 202 64 26 62 205 219 39 82 168 2 32 98 133 44 249 125 137 173 251 14 187 230 243 152 238 100 27 254 168 162 39 21 128 170 200 163 216 50 109 140 110 14 249)
      #t
      ())
    #(277
      "special case hash"
      #vu8(53 48 55 54 56 56 55 51 54 55)
      #vu8(48 70 2 33 0 217 7 238 250 102 65 21 132 139 144 195 213 186 160 35 111 8 234 250 248 28 13 82 187 157 15 138 203 87 73 8 71 2 33 0 253 145 188 69 167 110 49 205 197 140 75 251 61 242 127 100 112 210 11 25 240 251 166 167 123 108 136 70 101 14 216 166)
      #t
      ())
    #(278
      "special case hash"
      #vu8(57 56 56 53 48 54 57 54 55)
      #vu8(48 69 2 32 4 131 55 179 79 66 126 135 116 179 191 124 143 244 177 174 101 209 50 172 138 249 72 41 187 45 50 148 69 121 187 49 2 33 0 189 111 142 171 130 33 60 207 128 118 70 68 32 75 182 191 22 198 104 114 156 221 49 221 133 150 40 108 21 104 110 142)
      #t
      ())
    #(279
      "special case hash"
      #vu8(50 55 50 49 51 48 54 49 51 49)
      #vu8(48 70 2 33 0 178 188 70 183 196 66 147 85 122 183 235 235 2 100 146 66 119 25 63 135 162 93 148 201 36 223 21 24 186 124 114 96 2 33 0 171 241 246 35 143 246 150 170 175 175 79 12 187 225 82 195 215 113 197 191 196 63 54 215 229 245 35 88 25 208 44 26)
      #t
      ())
    #(280
      "special case hash"
      #vu8(51 50 48 52 49 48 49 54 53 53)
      #vu8(48 69 2 32 64 212 179 138 97 35 46 101 79 253 8 185 30 24 96 152 81 244 24 159 123 248 164 37 173 89 217 203 177 181 76 153 2 33 0 158 119 90 123 208 217 52 195 237 136 96 55 245 211 179 86 246 14 218 65 25 22 144 86 110 153 103 125 122 175 100 243)
      #t
      ())
    #(281
      "special case hash"
      #vu8(51 49 53 48 54 56 48 57 53 48)
      #vu8(48 70 2 33 0 172 143 100 215 223 141 159 234 0 87 68 227 172 74 247 10 163 163 142 90 15 61 6 157 133 128 106 79 41 113 3 57 2 33 0 192 20 233 109 236 254 243 133 124 193 116 242 196 106 208 136 43 239 12 76 138 23 206 9 68 25 97 228 174 141 45 243)
      #t
      ())
    #(282
      "special case hash"
      #vu8(49 55 50 55 52 54 48 49 48 51)
      #vu8(48 68 2 32 65 179 118 111 65 166 115 160 30 44 12 171 92 238 219 206 200 216 37 48 163 147 248 132 215 42 164 230 104 93 234 10 2 32 7 58 85 220 162 218 87 124 175 180 14 18 221 32 191 133 41 161 58 106 205 249 161 199 212 178 4 141 96 135 108 179)
      #t
      ())
    #(283
      "special case hash"
      #vu8(49 52 53 55 49 52 54 49 50 50 53)
      #vu8(48 69 2 32 25 66 117 90 168 18 131 130 205 142 53 164 53 12 34 204 69 186 87 4 217 158 138 36 9 112 223 17 149 106 216 102 2 33 0 246 76 241 224 129 108 247 172 80 68 247 59 169 56 225 66 239 51 5 203 9 190 203 128 160 165 185 173 123 163 235 7)
      #t
      ())
    #(284
      "special case hash"
      #vu8(52 49 55 57 53 49 54 48 57 48)
      #vu8(48 69 2 32 81 171 164 255 28 125 223 23 224 99 42 183 22 132 216 222 109 199 0 33 158 243 70 203 40 206 157 175 195 86 91 59 2 33 0 182 170 235 225 175 10 208 31 7 166 139 241 207 87 249 214 4 11 67 193 75 126 184 35 133 66 118 14 50 206 59 12)
      #t
      ())
    #(285
      "special case hash"
      #vu8(53 56 57 50 55 49 51 48 53 52)
      #vu8(48 69 2 33 0 145 239 191 204 115 22 80 233 240 4 195 139 113 219 20 108 23 191 135 28 130 196 232 119 22 247 255 47 127 158 81 208 2 32 8 158 166 49 167 197 240 83 17 197 33 210 27 167 152 181 23 72 129 240 253 128 149 251 58 119 81 89 19 239 182 224)
      #t
      ())
    #(286
      "special case hash"
      #vu8(51 56 57 54 49 56 50 50 57 55)
      #vu8(48 69 2 32 74 126 71 189 40 30 160 155 158 58 50 147 76 122 150 158 31 120 143 151 139 65 88 89 137 244 104 158 128 70 99 251 2 33 0 230 95 107 215 2 64 60 187 237 127 138 208 4 95 51 29 74 150 251 248 196 63 113 241 22 21 183 209 185 21 59 127)
      #t
      ())
    #(287
      "special case hash"
      #vu8(56 50 56 51 51 52 54 55 51 50)
      #vu8(48 70 2 33 0 199 149 245 218 134 225 10 96 77 79 148 191 124 172 56 28 115 237 173 20 97 214 105 41 229 58 165 124 162 148 232 159 2 33 0 186 231 132 171 108 123 88 51 46 224 94 125 84 22 158 223 85 206 69 240 48 231 26 232 223 99 150 159 179 39 161 12)
      #t
      ())
    #(288
      "special case hash"
      #vu8(51 51 54 54 57 55 52 56 57 49)
      #vu8(48 70 2 33 0 234 104 178 72 67 178 37 245 5 224 28 14 96 139 32 180 217 62 143 175 107 156 247 12 248 249 19 74 128 231 182 104 2 33 0 163 171 192 68 180 114 143 128 254 65 75 220 102 240 50 178 98 53 103 32 84 123 236 119 41 250 217 65 81 198 173 199)
      #t
      ())
    #(289
      "special case hash"
      #vu8(50 49 57 57 49 53 51 50 50 57)
      #vu8(48 70 2 33 0 191 231 80 33 64 197 122 36 167 126 220 61 155 60 75 193 29 33 189 176 177 150 151 123 127 43 19 172 151 58 214 151 2 33 0 148 122 1 218 151 49 132 157 114 182 126 247 188 64 176 18 72 15 211 137 137 90 173 31 107 28 219 234 179 185 59 141)
      #t
      ())
    #(290
      "special case hash"
      #vu8(53 54 48 48 51 49 54 56 50 50)
      #vu8(48 68 2 32 52 52 238 17 66 116 10 10 184 98 59 151 252 141 194 86 126 218 69 218 223 96 57 180 92 68 136 25 232 64 207 48 2 32 60 15 172 4 135 132 25 151 32 44 41 243 191 45 245 64 177 21 178 157 198 25 22 13 82 32 61 74 31 212 185 247)
      #t
      ())
    #(291
      "special case hash"
      #vu8(56 54 57 54 53 49 54 57 53)
      #vu8(48 69 2 32 83 56 80 14 35 186 150 160 173 198 239 132 147 46 37 251 173 116 53 217 247 14 183 244 118 198 145 45 225 46 51 200 2 33 0 160 2 245 88 62 168 192 215 251 23 19 109 14 224 65 90 207 98 152 121 206 107 1 172 82 227 236 215 119 42 55 4)
      #t
      ())
    #(292
      "special case hash"
      #vu8(54 53 56 51 57 50 54 51 55 50)
      #vu8(48 68 2 32 79 242 212 227 31 65 128 222 105 1 210 210 3 65 209 35 135 201 197 95 76 240 3 167 66 240 73 184 74 246 254 5 2 32 3 18 243 135 113 65 69 85 250 94 210 129 125 204 98 154 140 124 246 157 48 99 0 232 123 193 103 39 142 195 239 55)
      #t
      ())
    #(293
      "special case hash"
      #vu8(49 51 50 48 53 48 49 53 55 50 53)
      #vu8(48 68 2 32 81 214 101 186 213 242 214 48 108 107 191 225 242 117 85 136 118 112 6 29 77 243 110 201 244 206 108 223 175 158 167 172 2 32 41 5 228 63 98 7 238 147 223 53 162 233 251 155 200 9 140 68 138 233 138 20 228 173 30 186 234 93 86 182 228 147)
      #t
      ())
    #(294
      "special case hash"
      #vu8(53 48 56 53 51 51 48 55 57 49)
      #vu8(48 70 2 33 0 184 4 224 35 95 19 90 186 123 117 49 182 131 31 38 204 159 183 125 63 131 133 73 87 67 27 226 7 6 184 19 105 2 33 0 157 49 127 208 142 78 4 103 97 125 184 25 205 225 215 212 215 77 164 137 178 188 228 219 5 94 160 30 204 250 252 242)
      #t
      ())
    #(295
      "special case hash"
      #vu8(55 56 54 54 56 49 51 49 49 57)
      #vu8(48 69 2 33 0 138 181 14 243 102 12 203 106 243 76 120 231 149 222 214 178 86 255 202 92 148 242 73 243 217 7 251 101 35 94 246 128 2 32 73 213 170 234 229 166 208 193 91 40 110 66 139 94 114 12 243 122 130 46 222 68 91 170 20 63 250 230 154 186 145 184)
      #t
      ())
    #(296
      "special case hash"
      #vu8(50 48 56 50 53 51 57 52 50 57)
      #vu8(48 68 2 32 87 27 156 70 164 124 92 197 58 87 76 25 108 63 176 127 53 16 192 244 68 59 159 47 231 129 37 44 36 211 67 222 2 32 104 169 174 189 80 255 22 92 137 181 185 203 108 23 84 25 25 88 243 96 180 210 133 26 72 26 62 17 6 238 120 9)
      #t
      ())
    #(297
      "special case hash"
      #vu8(49 48 48 54 53 57 53 54 54 57 55)
      #vu8(48 69 2 32 76 183 129 123 4 220 115 190 96 211 113 24 3 188 16 104 122 110 63 74 183 156 76 26 78 157 99 167 49 116 212 235 2 33 0 206 57 141 45 102 2 210 175 88 166 64 66 248 48 191 119 74 238 24 32 157 111 181 199 67 182 166 228 55 130 107 152)
      #t
      ())
    #(298
      "special case hash"
      #vu8(51 48 50 52 49 56 49 54 48 52)
      #vu8(48 69 2 32 104 67 153 198 205 110 187 28 93 94 251 13 120 220 228 14 189 72 217 217 68 235 101 72 201 206 104 215 253 200 34 41 2 33 0 207 37 200 228 39 250 227 89 191 230 15 160 41 100 244 201 184 214 219 84 97 46 5 199 140 52 31 10 140 82 208 181)
      #t
      ())
    #(299
      "special case hash"
      #vu8(55 55 54 55 56 53 50 56 55 52)
      #vu8(48 69 2 32 32 183 179 109 91 199 111 161 130 202 39 21 42 153 169 86 230 160 136 0 0 105 66 150 227 26 249 138 115 18 208 75 2 33 0 238 234 188 85 33 249 133 110 146 14 183 210 158 215 228 4 47 23 143 247 6 223 248 238 178 75 66 158 59 99 64 42)
      #t
      ())
    #(300
      "special case hash"
      #vu8(53 52 52 49 57 57 57 55 52)
      #vu8(48 68 2 32 107 101 201 94 142 18 29 46 110 229 6 207 214 44 184 142 11 251 53 137 218 64 135 104 152 239 102 196 57 130 172 169 2 32 9 100 44 5 173 97 155 68 2 253 41 126 181 126 41 204 165 194 235 104 35 147 27 168 45 227 45 124 101 43 167 62)
      #t
      ())
    #(301
      "special case hash"
      #vu8(53 56 52 51 52 56 48 51 57 49)
      #vu8(48 68 2 32 103 199 76 191 94 164 183 119 191 82 26 206 9 159 79 9 77 143 88 144 14 21 230 126 27 75 211 153 5 102 41 237 2 32 61 40 132 101 92 73 184 181 246 78 128 42 5 78 123 240 155 15 200 12 161 142 191 146 123 130 229 139 180 160 4 0)
      #t
      ())
    #(302
      "special case hash"
      #vu8(55 49 56 56 57 50 54 50 57)
      #vu8(48 69 2 32 121 165 228 13 165 207 52 196 195 154 223 125 252 93 69 73 149 162 80 49 78 189 33 43 92 142 63 78 111 135 95 235 2 33 0 178 104 146 14 64 59 161 120 40 255 39 25 56 166 85 138 91 45 208 0 34 159 142 219 74 157 159 155 106 193 180 114)
      #t
      ())
    #(303
      "special case hash"
      #vu8(49 55 52 51 50 50 51 52 52 51)
      #vu8(48 69 2 33 0 200 177 48 6 195 165 26 50 47 255 147 33 118 27 1 222 19 79 82 107 229 130 178 46 25 105 60 68 63 201 254 70 2 32 52 231 246 1 121 198 22 42 185 128 252 213 143 23 59 14 108 48 181 36 211 92 103 146 22 119 82 45 206 248 67 161)
      #t
      ())
    #(304
      "special case hash"
      #vu8(50 52 48 54 48 48 53 57 51 54)
      #vu8(48 69 2 32 53 19 219 116 84 137 164 135 200 138 108 237 248 121 91 100 15 143 113 87 131 151 189 171 214 204 88 108 37 189 102 173 2 33 0 153 167 44 211 240 202 108 121 145 73 40 60 160 175 55 248 107 136 32 13 12 144 91 211 201 241 184 89 229 91 22 89)
      #t
      ())
    #(305
      "special case hash"
      #vu8(49 54 49 52 48 51 54 57 56 56)
      #vu8(48 68 2 32 58 99 134 175 176 143 127 248 20 11 90 39 15 118 78 135 6 239 40 48 251 23 116 70 247 180 238 184 162 90 172 100 2 32 75 112 133 75 56 194 146 69 178 185 128 235 161 14 169 54 198 138 56 193 218 82 85 206 35 134 219 35 175 199 192 106)
      #t
      ())
    #(306
      "special case hash"
      #vu8(50 48 57 53 52 50 53 54 56 53)
      #vu8(48 70 2 33 0 184 252 84 168 166 190 60 85 233 156 6 249 156 205 204 231 175 92 24 163 197 130 151 38 168 112 204 16 104 69 143 100 2 33 0 204 114 55 195 156 142 106 74 28 140 98 245 248 134 54 84 156 116 16 121 139 137 104 76 80 44 58 223 229 251 122 210)
      #t
      ())
    #(307
      "special case hash"
      #vu8(49 48 48 56 48 57 56 57 56 51)
      #vu8(48 69 2 32 71 180 96 133 30 86 7 242 2 22 38 99 92 86 90 99 247 143 85 135 149 225 179 48 208 145 21 151 13 187 184 171 2 33 0 166 169 244 242 19 224 141 60 115 109 62 28 68 163 81 64 203 16 118 25 242 101 165 177 54 8 237 114 159 214 216 148)
      #t
      ())
    #(308
      "special case hash"
      #vu8(49 53 55 52 49 52 55 57 50 55)
      #vu8(48 69 2 33 0 140 253 164 247 166 88 100 235 190 163 20 72 99 218 155 7 92 7 181 180 44 180 86 150 67 221 253 112 221 117 59 25 2 32 89 87 132 177 171 33 120 116 184 43 149 133 82 31 128 144 185 246 50 40 132 171 122 98 4 100 245 28 248 70 197 183)
      #t
      ())
    #(309
      "special case hash"
      #vu8(50 56 54 54 55 55 49 53 50 50)
      #vu8(48 68 2 32 76 214 164 91 215 200 191 14 219 223 7 61 191 31 116 98 52 203 188 163 30 194 11 82 107 7 124 159 72 0 150 231 2 32 124 249 122 224 211 63 80 183 58 93 122 223 138 164 238 235 111 241 15 137 168 121 78 254 29 135 78 35 41 156 27 61)
      #t
      ())
    #(310
      "special case hash"
      #vu8(49 54 57 52 50 56 48 55 56 55)
      #vu8(48 68 2 32 46 35 63 77 248 255 235 234 236 100 132 43 35 204 225 97 200 13 48 59 1 110 202 86 36 41 178 39 174 43 88 236 2 32 70 182 181 106 222 200 47 130 181 77 170 106 95 202 40 103 64 161 112 72 40 5 32 114 165 240 188 140 123 136 66 66)
      #t
      ())
    #(311
      "special case hash"
      #vu8(57 57 50 49 54 57 50 53 54 56)
      #vu8(48 68 2 32 84 159 101 141 74 63 152 35 58 44 147 189 91 26 82 214 74 241 8 21 174 96 190 203 65 57 202 200 34 181 121 195 2 32 39 189 221 240 219 207 55 74 42 236 138 204 196 122 138 200 151 248 209 130 61 218 142 178 5 37 144 151 11 57 206 42)
      #t
      ())
    #(312
      "special case hash"
      #vu8(49 49 54 48 57 52 51 57 55 57 56)
      #vu8(48 69 2 33 0 159 171 204 30 95 217 101 34 105 2 245 148 85 158 35 19 105 229 132 69 57 116 231 79 73 215 215 98 225 52 251 157 2 32 41 60 204 197 16 121 59 172 69 206 93 162 187 108 158 144 100 55 245 148 53 202 32 102 85 247 75 98 93 240 124 124)
      #t
      ())
    #(313
      "special case hash"
      #vu8(55 49 56 54 49 54 50 49 48 48)
      #vu8(48 69 2 32 46 92 20 15 214 245 248 35 173 220 128 136 255 170 233 103 231 244 137 114 116 49 103 105 86 29 251 49 67 88 37 217 2 33 0 237 164 115 39 215 207 174 29 170 52 79 245 88 42 70 123 209 142 185 240 28 174 171 156 109 163 192 204 137 223 103 19)
      #t
      ())
    #(314
      "special case hash"
      #vu8(51 50 57 52 51 52 55 49 55 55)
      #vu8(48 68 2 32 76 17 227 183 239 190 57 8 173 33 24 229 77 125 52 214 198 235 69 112 191 127 219 17 167 103 159 233 58 250 37 76 2 32 113 46 144 244 33 131 110 84 45 172 73 209 11 179 157 180 169 139 39 53 182 51 109 138 60 57 47 59 144 230 11 190)
      #t
      ())
    #(315
      "special case hash"
      #vu8(49 56 53 49 52 52 53 53 49 50 48)
      #vu8(48 69 2 33 0 223 180 97 147 3 244 255 104 149 99 210 39 80 105 250 196 77 99 234 60 59 24 244 251 26 200 5 215 223 61 18 236 2 32 104 227 123 132 101 131 144 29 178 86 50 159 156 246 79 64 196 22 251 165 13 203 155 227 51 163 226 156 118 174 50 219)
      #t
      ())
    #(316
      "special case hash"
      #vu8(52 55 54 48 52 51 57 51 48)
      #vu8(48 69 2 33 0 231 14 142 23 189 117 143 240 196 143 145 203 44 83 210 147 240 245 174 130 235 157 254 118 171 152 249 176 100 39 134 53 2 32 33 221 227 44 176 56 156 173 123 223 103 109 155 155 125 37 187 3 74 210 90 85 234 113 238 126 226 106 24 53 157 210)
      #t
      ())
    #(317
      "special case hash"
      #vu8(50 53 54 55 51 55 56 55 52 49)
      #vu8(48 68 2 32 66 19 151 236 174 48 97 122 90 96 129 173 27 173 246 206 157 157 76 178 175 218 191 31 144 14 127 219 127 176 175 90 2 32 87 202 137 220 34 128 28 117 253 190 253 174 202 101 198 117 98 95 148 222 125 99 80 98 176 142 211 8 223 87 98 204)
      #t
      ())
    #(318
      "special case hash"
      #vu8(53 55 51 57 57 51 52 57 57 53)
      #vu8(48 69 2 32 6 16 192 128 118 144 155 183 34 251 161 5 194 62 172 143 102 180 219 29 88 246 106 136 47 201 13 89 172 222 200 224 2 33 0 175 89 232 213 112 118 28 172 88 157 73 241 28 136 64 7 247 172 30 234 26 68 198 243 253 173 29 84 33 135 210 94)
      #t
      ())
    #(319
      "special case hash"
      #vu8(51 52 55 56 51 54 54 49 51 57)
      #vu8(48 69 2 32 89 161 24 28 171 14 232 206 148 171 43 90 180 244 177 58 66 46 56 239 230 159 99 75 249 71 72 90 91 158 164 156 2 33 0 155 60 145 61 152 164 171 21 246 163 159 24 2 184 242 210 133 89 170 31 141 3 163 168 141 240 12 137 220 41 58 151)
      #t
      ())
    #(320
      "special case hash"
      #vu8(54 52 57 48 53 50 54 48 50)
      #vu8(48 70 2 33 0 140 174 108 77 251 249 1 189 102 171 130 84 16 17 250 21 200 233 14 44 24 192 27 216 129 172 170 43 99 203 88 123 2 33 0 168 106 207 148 63 41 206 249 29 27 102 167 222 85 71 223 108 223 196 93 215 190 248 22 220 184 222 159 90 66 93 45)
      #t
      ())
    #(321
      "special case hash"
      #vu8(52 55 54 51 56 56 55 52 57 54)
      #vu8(48 69 2 33 0 139 0 199 75 134 71 77 120 46 172 153 116 174 166 6 216 247 238 120 199 149 151 225 86 135 2 31 89 145 232 106 205 2 32 48 157 254 54 134 100 142 174 16 78 135 179 233 181 97 106 58 212 121 202 79 11 85 138 228 241 229 171 49 21 52 106)
      #t
      ())
    #(322
      "special case hash"
      #vu8(53 55 57 48 50 48 48 56 48)
      #vu8(48 69 2 32 67 58 145 85 4 201 119 128 150 52 163 111 207 68 128 228 200 6 159 193 39 210 1 211 13 253 177 244 35 201 95 212 2 33 0 188 177 184 154 175 213 10 23 102 176 151 65 252 106 154 150 231 68 174 152 38 216 57 191 133 255 181 10 145 152 23 115)
      #t
      ())
    #(323
      "special case hash"
      #vu8(53 51 52 52 55 56 55 56 52 56)
      #vu8(48 69 2 32 75 105 171 210 179 152 64 165 69 205 212 167 45 56 66 52 88 14 47 217 56 183 9 29 14 205 181 98 120 8 87 219 2 33 0 253 171 153 87 17 158 10 64 146 175 130 246 204 41 243 200 166 146 103 30 200 110 251 10 3 193 17 42 10 30 4 103)
      #t
      ())
    #(324
      "special case hash"
      #vu8(49 57 50 54 54 52 49 48 57 50 48)
      #vu8(48 69 2 33 0 218 185 211 104 108 40 54 58 208 23 180 162 179 109 53 191 46 184 6 51 97 61 68 222 185 80 29 66 163 239 189 56 2 32 19 146 165 98 215 159 154 177 144 20 228 247 226 242 102 130 89 243 114 10 118 193 32 212 163 195 150 78 136 15 118 121)
      #t
      ())
    #(325
      "special case hash"
      #vu8(51 55 48 51 57 49 53 55 48 53)
      #vu8(48 69 2 32 35 249 78 71 180 64 206 55 155 116 201 49 18 50 177 154 100 227 231 201 185 13 163 75 12 28 63 61 122 242 129 5 2 33 0 225 66 89 3 177 71 156 44 225 139 16 138 109 30 200 183 164 240 246 87 222 219 0 222 58 60 238 167 253 238 233 190)
      #t
      ())
    #(326
      "special case hash"
      #vu8(56 49 53 52 53 55 55 48)
      #vu8(48 69 2 33 0 157 112 106 143 168 93 21 189 12 52 146 198 103 45 254 82 159 64 115 178 23 179 148 123 91 44 253 97 248 124 203 113 2 32 106 170 175 54 159 130 160 229 66 247 45 237 125 126 185 12 131 20 255 166 19 160 234 129 218 28 131 147 219 174 43 172)
      #t
      ())
    #(327
      "special case hash"
      #vu8(49 57 53 53 51 48 51 55 55)
      #vu8(48 70 2 33 0 172 119 145 140 64 133 200 167 206 80 32 176 12 49 86 41 174 224 83 164 69 203 70 97 235 80 246 182 42 71 218 41 2 33 0 223 42 234 43 156 17 166 206 57 211 205 158 31 175 74 83 5 126 11 27 46 72 163 36 190 158 119 50 3 254 159 187)
      #t
      ())
    #(328
      "special case hash"
      #vu8(49 50 54 55 56 49 48 57 48 51)
      #vu8(48 70 2 33 0 157 178 219 210 147 95 20 127 174 127 106 149 200 226 48 123 216 83 124 61 150 235 115 42 214 213 235 221 137 188 117 78 2 33 0 147 169 171 153 210 222 157 8 254 10 97 226 108 143 225 235 191 136 114 110 75 105 213 81 181 125 21 240 174 22 223 90)
      #t
      ())
    #(329
      "special case hash"
      #vu8(49 49 49 56 48 55 50 48 56 49 53)
      #vu8(48 68 2 32 118 159 112 9 57 57 175 189 31 161 88 115 222 207 168 3 202 82 58 206 128 64 40 11 167 140 248 51 73 119 34 188 2 32 54 152 117 171 165 225 206 213 164 202 132 68 236 147 153 163 128 56 176 14 21 58 10 227 77 155 60 151 129 68 126 234)
      #t
      ())
    #(330
      "special case hash"
      #vu8(56 51 56 49 56 54 57 50 57 48)
      #vu8(48 69 2 32 38 229 24 43 152 34 85 10 213 47 70 173 128 120 29 107 239 61 17 10 32 77 181 229 138 7 70 247 150 152 34 0 2 33 0 169 65 142 118 2 156 237 12 247 138 87 26 158 89 173 4 8 110 145 247 14 104 19 152 27 179 60 29 238 137 17 101)
      #t
      ())
    #(331
      "special case hash"
      #vu8(51 49 51 49 50 56 55 50 55 55)
      #vu8(48 70 2 33 0 231 189 106 239 207 123 39 225 243 250 219 231 19 249 173 179 210 51 152 232 130 0 205 46 148 152 156 157 18 233 33 119 2 33 0 149 131 224 222 59 118 248 212 177 230 52 168 28 188 52 175 84 226 248 89 159 54 132 206 72 211 114 118 12 130 4 196)
      #t
      ())
    #(332
      "special case hash"
      #vu8(49 52 51 51 49 57 50 54 53 51 56)
      #vu8(48 69 2 33 0 134 56 237 126 170 131 96 154 1 166 175 156 82 236 155 253 221 169 4 66 177 230 3 29 97 207 162 46 72 178 225 226 2 32 32 194 132 213 150 247 28 108 141 247 50 245 165 162 0 99 2 48 30 26 121 46 43 57 102 61 147 169 118 7 98 210)
      #t
      ())
    #(333
      "special case hash"
      #vu8(51 52 52 57 48 56 50 51 54)
      #vu8(48 68 2 32 97 217 36 48 122 150 24 11 6 56 54 8 186 145 103 78 21 195 234 6 255 37 52 65 43 147 165 135 221 230 73 193 2 32 89 184 74 162 17 91 37 71 237 172 136 8 140 166 49 62 159 190 28 166 163 97 199 229 121 56 249 221 227 244 52 156)
      #t
      ())
    #(334
      "special case hash"
      #vu8(54 56 50 57 56 51 53 57 50 57)
      #vu8(48 69 2 32 66 79 207 195 253 99 209 40 194 235 18 94 136 199 254 93 40 59 99 71 10 120 107 130 120 62 219 184 160 183 166 215 2 33 0 177 21 72 194 205 127 206 157 68 231 149 202 81 175 11 47 106 81 128 233 201 190 3 20 0 126 217 231 244 187 229 233)
      #t
      ())
    #(335
      "special case hash"
      #vu8(51 52 52 53 49 53 56 48 50 51)
      #vu8(48 69 2 33 0 165 247 71 174 98 144 250 149 130 198 206 141 86 8 98 29 73 95 6 21 81 188 69 49 186 203 165 134 165 99 177 132 2 32 98 250 248 249 34 145 225 40 18 131 91 63 29 67 201 103 188 235 136 91 17 11 208 110 90 104 226 215 71 129 174 43)
      #t
      ())
    #(336
      "special case hash"
      #vu8(49 50 54 57 55 57 56 55 54 52 52)
      #vu8(48 69 2 33 0 183 49 220 13 146 194 204 122 96 93 120 35 63 120 20 105 155 223 28 171 45 242 151 182 132 78 236 64 21 175 142 160 2 32 57 177 160 204 136 235 133 188 220 53 107 54 32 197 31 18 152 198 10 236 83 6 177 7 233 0 255 219 160 73 221 111)
      #t
      ())
    #(337
      "special case hash"
      #vu8(51 57 57 50 52 50 53 53 51)
      #vu8(48 70 2 33 0 239 115 196 250 50 45 163 159 182 80 59 171 107 102 182 77 36 16 86 175 188 214 144 143 132 182 28 203 190 137 4 51 2 33 0 241 239 133 65 62 87 100 170 88 163 18 140 207 207 56 131 36 254 83 64 229 237 248 208 19 90 231 103 134 206 65 91)
      #t
      ())
    #(338
      "special case hash"
      #vu8(49 54 48 49 57 55 55 57 55 55)
      #vu8(48 69 2 32 105 76 211 14 42 208 24 37 121 51 20 116 178 113 238 45 72 114 59 200 65 93 198 81 56 115 88 108 231 5 183 107 2 33 0 197 172 12 14 213 164 1 125 17 12 180 93 99 170 149 93 199 220 92 226 62 121 101 197 57 124 63 244 106 136 70 54)
      #t
      ())
    #(339
      "special case hash"
      #vu8(49 48 56 55 56 55 53 53 49 52 53)
      #vu8(48 70 2 33 0 243 139 34 54 190 48 36 225 11 137 79 251 28 198 141 11 184 212 207 15 205 44 252 23 121 248 136 55 101 211 205 150 2 33 0 218 105 205 11 116 194 85 102 214 10 72 110 221 85 159 195 157 86 159 178 117 20 69 164 121 141 248 163 104 145 128 44)
      #t
      ())
    #(340
      "special case hash"
      #vu8(55 48 48 52 50 53 50 57 57 57)
      #vu8(48 70 2 33 0 168 129 115 44 32 90 11 75 149 102 156 0 117 111 217 25 115 69 1 9 164 111 23 213 169 217 113 181 233 43 154 164 2 33 0 138 206 253 202 78 6 193 107 71 204 173 28 87 192 89 18 99 126 16 112 150 186 35 12 146 185 113 135 219 121 225 158)
      #t
      ())
    #(341
      "special case hash"
      #vu8(49 53 54 53 51 50 53 50 56 51)
      #vu8(48 68 2 32 4 69 47 85 75 174 129 155 66 239 251 132 239 68 169 241 203 126 45 117 180 186 159 249 185 207 255 173 221 227 253 27 2 32 97 163 251 197 231 60 53 15 46 61 133 167 69 44 210 49 163 243 55 95 193 31 95 225 83 177 133 245 59 9 193 208)
      #t
      ())
    #(342
      "special case hash"
      #vu8(50 51 56 50 54 51 52 50 51 53 48)
      #vu8(48 69 2 32 5 129 79 87 245 142 252 124 180 144 17 158 88 78 99 94 111 10 209 193 159 181 220 46 218 253 160 117 187 85 249 142 2 33 0 157 213 198 227 144 9 214 125 150 89 3 236 255 224 138 133 23 117 204 18 72 204 25 192 183 119 152 40 33 49 184 246)
      #t
      ())
    #(343
      "special case hash"
      #vu8(49 52 52 55 56 52 55 48 54 53)
      #vu8(48 69 2 33 0 220 28 74 70 8 94 25 136 67 177 240 25 128 205 94 74 31 246 248 232 255 112 20 57 127 10 253 91 36 127 176 160 2 32 56 161 61 199 35 237 144 179 2 81 215 66 177 71 51 160 50 146 255 38 83 10 30 188 175 61 16 134 42 110 255 130)
      #t
      ())
    #(344
      "special case hash"
      #vu8(49 52 50 54 48 50 48 53 53 52 52)
      #vu8(48 69 2 32 16 103 102 123 245 37 115 76 167 242 81 14 54 52 143 217 194 201 188 207 3 45 253 87 29 230 212 90 189 73 54 26 2 33 0 250 118 37 104 211 161 158 90 29 142 166 94 0 32 42 91 22 249 175 174 86 115 58 1 248 110 53 55 140 85 141 164)
      #t
      ())
    #(345
      "special case hash"
      #vu8(49 57 57 51 56 51 53 50 56 53)
      #vu8(48 70 2 33 0 229 141 105 220 86 188 16 49 100 72 71 227 224 70 226 234 132 90 81 93 150 157 7 234 26 165 58 234 91 217 47 161 2 33 0 191 229 11 128 247 197 18 245 171 82 31 231 225 161 49 4 95 222 120 212 222 130 108 145 87 59 170 186 30 53 202 151)
      #t
      ())
    #(346
      "special case hash"
      #vu8(52 50 57 50 49 53 51 53 50 51)
      #vu8(48 70 2 33 0 254 121 198 184 193 77 15 35 212 38 227 209 87 241 181 65 246 187 145 191 41 149 126 249 124 85 148 156 155 164 138 53 2 33 0 157 161 18 196 164 207 75 31 244 144 196 38 246 200 255 18 33 131 150 74 13 229 111 115 54 171 56 45 201 209 2 133)
      #t
      ())
    #(347
      "special case hash"
      #vu8(52 52 53 57 57 48 49 52 57 54)
      #vu8(48 69 2 32 69 212 237 126 158 218 203 90 115 9 68 171 0 55 251 160 161 54 237 157 13 38 178 244 212 5 133 84 241 72 250 111 2 33 0 241 54 241 95 211 12 254 94 85 72 179 244 150 92 22 166 106 124 18 144 70 134 171 225 45 167 119 97 146 18 174 140)
      #t
      ())
    #(348
      "special case hash"
      #vu8(49 51 57 51 57 55 49 49 55 49)
      #vu8(48 68 2 32 79 183 193 114 126 64 186 226 114 246 20 58 80 0 27 84 181 54 249 2 51 21 120 150 219 248 69 226 99 242 72 99 2 32 111 234 92 146 77 202 23 81 159 110 80 46 246 126 250 8 211 158 181 204 51 129 38 111 2 22 134 77 43 208 10 98)
      #t
      ())
    #(349
      "special case hash"
      #vu8(50 51 57 48 54 57 54 52 57 53)
      #vu8(48 69 2 32 119 154 172 102 93 217 136 5 75 4 242 233 212 131 202 121 23 155 51 114 181 140 160 15 228 53 32 244 79 203 76 50 2 33 0 180 236 161 24 44 213 31 10 189 62 162 38 141 205 164 154 128 122 212 17 106 88 49 2 4 116 152 170 134 54 83 245)
      #t
      ())
    #(350
      "special case hash"
      #vu8(49 49 52 52 54 48 53 54 50 54 52)
      #vu8(48 70 2 33 0 219 122 198 246 95 177 195 141 128 6 79 209 24 97 99 18 55 160 153 36 180 238 202 78 21 105 250 75 125 128 173 36 2 33 0 163 141 23 141 55 225 62 26 250 7 169 208 61 160 37 213 148 70 25 56 166 42 108 103 68 245 200 247 215 183 187 129)
      #t
      ())
    #(351
      "special case hash"
      #vu8(54 56 53 48 48 52 55 53 48)
      #vu8(48 70 2 33 0 201 0 67 180 170 223 121 93 135 10 194 35 243 58 205 189 25 72 195 26 255 240 89 5 77 201 149 40 198 80 63 166 2 33 0 130 159 103 179 18 187 19 79 105 84 162 60 97 26 127 123 91 42 105 239 206 217 196 141 181 137 172 11 77 61 168 39)
      #t
      ())
    #(352
      "special case hash"
      #vu8(50 50 50 48 53 51 54 48 54 49 57)
      #vu8(48 69 2 33 0 250 22 192 18 91 102 21 185 14 129 247 73 152 4 48 138 144 23 155 243 252 255 106 75 38 149 39 28 104 178 61 237 2 32 13 108 218 92 224 65 220 90 95 49 154 217 192 222 73 39 208 207 94 137 227 123 121 33 97 148 65 61 66 151 109 84)
      #t
      ())
    #(353
      "special case hash"
      #vu8(54 50 49 53 54 54 53 49 50 52)
      #vu8(48 69 2 32 26 75 91 208 248 6 84 159 70 163 231 27 254 65 45 109 137 32 96 23 100 13 237 102 243 208 178 217 178 107 236 69 2 33 0 170 197 247 78 49 48 38 78 1 66 133 112 238 130 238 71 226 69 209 96 237 129 42 226 82 222 223 253 130 225 236 44)
      #t
      ())
    #(354
      "Signature generated without truncating the hash"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 248 226 114 35 75 81 71 94 196 198 243 39 86 42 110 92 144 128 169 98 37 232 139 46 95 114 168 238 203 212 26 180 2 32 81 107 145 97 127 195 158 49 65 179 188 118 159 106 59 46 70 142 104 127 80 189 194 158 25 8 138 246 45 32 63 75)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 182 224 139 27 204 137 231 251 11 132 215 73 126 49 5 83 73 91 228 135 126 204 196 179 214 215 159 124 104 160 87 52 49 118 15 161 188 234 73 114 117 145 116 172 17 3 188 96 17 152 92 206 226 81 145 141 5 115 251 203 120 150 145 22)
  :der-encode
  #t
  :tests
  '(#(355
      "k*G has a large x-coordinate"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 16 67 25 5 83 88 232 97 123 12 70 53 61 3 156 218 171 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 78)
      #t
      ())
    #(356
      "r too large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 78)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 53 144 198 161 3 83 214 105 188 148 216 226 255 158 20 187 238 212 167 244 91 136 114 85 171 126 55 182 118 56 123 182 21 252 111 151 206 57 163 135 76 43 52 204 87 24 137 171 250 10 112 108 44 251 14 90 71 80 204 37 105 6 150 248)
  :der-encode
  #t
  :tests
  '(#(357
      "r,s are large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 79 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 78)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 54 158 150 64 47 44 253 26 55 179 172 189 236 252 86 40 98 219 202 148 74 15 18 215 170 172 184 211 37 215 101 10 167 35 98 25 34 190 43 218 201 24 98 144 253 205 218 2 141 148 67 121 102 80 125 147 242 252 31 92 136 127 222 219)
  :der-encode
  #t
  :tests
  '(#(358
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 144 145 53 189 182 121 146 134 23 15 94 173 45 228 246 81 20 83 254 80 145 79 61 242 222 84 163 99 131 223 141 212)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 39 160 168 14 162 225 170 121 142 169 188 195 174 219 240 26 183 142 73 201 236 42 208 224 138 4 41 160 225 219 77 13 50 168 238 123 238 157 10 64 1 78 72 79 52 169 43 214 243 63 230 54 36 234 149 121 101 116 65 172 121 102 110 127)
  :der-encode
  #t
  :tests
  '(#(359
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 39 180 87 124 160 9 55 111 113 48 63 213 221 34 125 206 245 222 183 115 173 95 90 132 54 6 68 102 156 162 73 165)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 156 255 97 113 45 75 197 179 99 131 65 230 224 165 118 168 9 140 156 109 63 25 141 56 156 70 105 243 152 220 8 103 243 185 224 159 86 127 61 253 156 77 44 17 99 232 43 234 223 22 199 110 143 157 122 100 103 56 0 234 118 250 30 89)
  :der-encode
  #t
  :tests
  '(#(360
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 5 2 1 1)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 217 17 124 174 129 41 94 130 104 47 163 135 153 30 102 142 21 112 224 233 1 0 191 78 99 150 72 34 70 5 97 188 25 249 107 23 135 237 21 118 153 41 151 139 163 221 127 104 201 122 223 92 22 246 113 231 86 205 143 8 196 148 86 202)
  :der-encode
  #t
  :tests
  '(#(361
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 5 2 1 3)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 140 252 186 211 82 76 34 185 146 82 159 148 62 60 224 178 209 38 8 85 1 214 227 237 212 241 219 247 75 220 162 30 175 178 89 177 186 23 156 172 9 232 228 58 136 200 160 158 115 57 145 10 124 148 25 50 228 75 139 229 111 31 204 222)
  :der-encode
  #t
  :tests
  '(#(362
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 5 2 1 5)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 251 181 17 39 225 241 182 163 142 159 233 162 84 70 20 237 184 228 58 215 205 140 86 241 75 50 53 221 163 188 17 23 154 189 151 83 169 230 71 233 52 12 57 95 178 185 19 132 214 211 63 203 100 86 33 67 80 182 243 250 0 244 54 76)
  :der-encode
  #t
  :tests
  '(#(363
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 5 2 1 6)
      #t
      ())
    #(364
      "r is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 86 2 1 6)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 220 128 144 85 0 215 215 78 212 125 229 34 77 135 52 84 95 34 183 118 174 8 108 171 255 254 108 229 141 94 249 148 220 48 103 206 125 44 223 169 244 213 172 226 150 183 82 129 74 204 105 193 154 147 45 139 20 7 121 39 144 29 227 191)
  :der-encode
  #t
  :tests
  '(#(365
      "s is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 5 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 117 251 216)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 27 130 74 17 238 217 79 188 217 183 34 208 102 19 187 207 126 202 0 185 19 111 38 82 100 33 120 243 123 26 146 14 233 0 222 73 93 158 245 111 166 209 159 61 209 224 237 178 61 35 131 90 200 194 211 209 60 2 39 232 82 229 3 235)
  :der-encode
  #t
  :tests
  '(#(366
      "small r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 39 2 2 1 0 2 33 0 143 30 60 120 98 197 139 22 187 118 237 219 183 110 221 187 81 106 244 246 63 45 116 215 110 13 40 201 187 117 234 136)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 41 20 179 12 76 120 70 150 255 195 221 220 236 5 243 108 177 72 139 195 66 185 245 41 213 56 122 203 158 72 203 141 61 189 48 208 213 214 214 163 145 8 134 60 45 106 110 133 113 205 50 97 251 158 185 140 228 97 37 189 143 19 145 54)
  :der-encode
  #t
  :tests
  '(#(367
      "smallish r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 7 45 155 77 52 121 82 214 2 33 0 239 48 67 231 50 149 129 219 179 151 68 151 113 10 177 21 5 238 28 135 255 144 123 238 186 221 25 90 15 254 109 122)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 37 121 245 70 254 47 42 235 95 130 47 235 40 242 248 55 22 24 208 72 21 69 90 126 144 60 16 2 74 23 218 65 85 40 233 81 20 127 118 190 225 49 78 101 164 156 110 199 6 134 230 45 56 251 194 52 114 249 110 61 59 51 253 31)
  :der-encode
  #t
  :tests
  '(#(368
      "100-bit r and small s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 50 2 13 16 51 230 126 55 179 43 68 85 128 191 78 255 2 33 0 139 116 139 116 0 0 0 0 139 116 139 116 139 116 139 116 102 231 105 173 74 22 211 220 216 113 41 184 233 29 27 77)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 177 2 25 107 244 85 238 90 175 198 248 149 80 77 60 59 107 45 55 195 95 134 105 189 15 11 105 71 149 251 217 146 247 119 182 248 41 185 98 138 195 93 176 239 67 246 168 159 10 66 129 38 20 228 193 89 36 216 212 126 190 69 186 229)
  :der-encode
  #t
  :tests
  '(#(369
      "small r and 100 bit s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 39 2 2 1 0 2 33 0 239 159 107 164 217 124 9 208 49 120 250 32 180 170 173 131 190 60 249 203 130 74 135 159 236 50 112 252 75 129 239 91)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 77 5 106 178 255 87 102 47 214 238 187 226 57 48 254 245 205 8 8 62 36 20 97 144 205 1 150 11 31 205 55 73 254 126 197 132 118 81 200 87 137 139 224 240 158 253 110 1 22 165 219 227 39 246 243 8 10 101 252 150 107 246 77 145)
  :der-encode
  #t
  :tests
  '(#(370
      "100-bit r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 50 2 13 6 37 34 187 211 236 190 124 57 233 62 124 37 2 33 0 239 159 107 164 217 124 9 208 49 120 250 32 180 170 173 131 190 60 249 203 130 74 135 159 236 50 112 252 75 129 239 91)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 54 28 74 98 205 134 118 19 19 141 254 36 204 235 196 183 223 27 85 252 116 16 244 153 94 226 182 185 171 34 32 88 79 17 108 108 132 229 61 38 47 209 58 95 93 230 181 126 122 25 129 222 78 205 255 223 51 35 180 233 29 128 100 156)
  :der-encode
  #t
  :tests
  '(#(371
      "r and s^-1 are close to n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 36 213 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 219 157 92 81 19 240 8 34 161 70 201 205 162 231 92 182 99 76 208 223 245 74 255 110 34 135 81 113 245 122 13 173 28 66 76 221 131 235 1 192 47 111 141 54 244 44 109 199 227 157 183 67 88 218 138 201 188 157 197 137 13 70 246 103)
  :der-encode
  #t
  :tests
  '(#(372
      "s == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 2 1 1)
      #t
      ())
    #(373
      "s == 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 2 1 0)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 153 241 159 7 179 62 3 202 244 112 62 4 185 48 213 125 109 155 170 68 70 12 89 106 45 48 100 224 182 62 164 18 134 167 76 70 18 168 18 238 52 141 43 67 248 13 230 39 193 28 117 216 21 17 226 42 25 156 50 17 155 121 44 106)
  :der-encode
  #t
  :tests
  '(#(374
      "point at infinity during verify"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 128 0 0 0 127 255 255 255 255 255 255 255 222 115 125 86 211 139 207 66 121 220 229 97 126 49 146 168 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 49 63 51 9 178 54 72 76 110 180 234 56 30 0 120 84 70 122 97 115 67 162 233 125 132 88 1 192 26 99 44 254 51 242 49 133 75 186 137 168 202 63 128 42 39 100 211 191 108 50 51 200 17 163 30 94 128 40 160 184 98 203 25 119)
  :der-encode
  #t
  :tests
  '(#(375
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 128 0 0 0 127 255 255 255 255 255 255 255 222 115 125 86 211 139 207 66 121 220 229 97 126 49 146 169 2 32 127 255 255 255 128 0 0 0 127 255 255 255 255 255 255 255 222 115 125 86 211 139 207 66 121 220 229 97 126 49 146 168)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 211 170 1 254 89 186 217 44 255 227 219 89 225 56 83 145 250 253 122 244 228 206 70 46 138 172 21 114 116 204 138 5 199 167 230 3 225 133 56 170 193 95 137 97 11 234 204 33 227 152 152 230 197 247 104 10 129 197 189 123 215 68 169 137)
  :der-encode
  #t
  :tests
  '(#(376
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 128 0 0 0 127 255 255 255 255 255 255 255 222 115 125 86 211 139 207 66 121 220 229 97 126 49 146 169 2 32 127 255 255 255 128 0 0 0 127 255 255 255 255 255 255 255 222 115 125 86 211 139 207 66 121 220 229 97 126 49 146 169)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 94 49 236 205 71 4 235 247 164 36 126 165 127 147 81 171 173 255 99 103 159 34 118 226 163 176 80 9 235 193 184 223 100 132 101 169 37 1 13 184 35 178 165 243 166 7 35 67 166 204 153 97 169 196 130 57 157 13 130 5 28 46 50 50)
  :der-encode
  #t
  :tests
  '(#(377
      "u1 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 2 32 67 248 0 251 234 249 35 140 88 175 121 91 205 173 4 188 73 205 133 12 57 77 51 130 149 51 86 176 35 33 2 129)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 206 10 71 248 129 253 115 21 167 51 196 49 120 72 250 51 199 46 56 222 11 143 218 54 182 26 169 161 100 245 128 138 133 176 93 37 17 94 164 9 125 223 99 248 120 200 232 54 87 230 109 225 54 168 249 230 46 216 26 88 191 17 127 249)
  :der-encode
  #t
  :tests
  '(#(378
      "u1 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 2 33 0 188 7 255 3 21 6 220 116 167 80 134 164 50 82 251 67 115 25 117 161 109 202 107 2 94 134 116 18 217 66 34 208)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 205 111 72 123 71 243 108 13 234 143 75 4 196 230 172 99 124 118 183 37 146 156 97 31 72 173 220 243 210 246 89 65 181 14 168 243 164 145 25 14 224 178 12 251 110 253 17 54 8 231 199 193 39 87 117 0 231 245 196 164 228 144 253 96)
  :der-encode
  #t
  :tests
  '(#(379
      "u2 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 69 110 95 128 103 214 138 27 10 46 143 226 178 138 202 213 117 86 135 21 74 15 22 119 52 235 171 189 192 89 7 13 114 13 190 150 101 154 102 239 12 242 122 115 231 179 243 241 69 166 14 10 210 159 30 33 220 194 187 66 240 216 44 30)
  :der-encode
  #t
  :tests
  '(#(380
      "u2 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 2 33 0 170 170 170 170 0 0 0 0 170 170 170 170 170 170 170 170 125 239 81 201 26 15 191 3 77 38 135 44 168 66 24 225)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 66 191 12 10 193 227 133 11 175 85 21 116 138 135 142 52 36 159 113 3 94 32 169 245 78 212 104 236 39 60 176 252 91 49 56 80 2 48 5 92 113 241 45 83 245 199 208 227 216 170 84 169 76 102 140 179 17 226 13 25 95 199 26 187)
  :der-encode
  #t
  :tests
  '(#(381
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 107 253 85 168 248 253 182 132 114 229 40 115 239 57 172 62 172 230 213 61 245 118 240 173 45 164 96 123 181 44 13 70)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 255 221 72 218 99 211 175 103 34 63 22 197 30 183 233 86 0 235 11 14 139 150 79 79 205 140 83 79 172 227 194 194 180 224 9 171 42 118 130 148 128 230 156 158 67 178 241 254 7 108 250 251 63 168 210 125 212 214 186 180 214 195 219 84)
  :der-encode
  #t
  :tests
  '(#(382
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 101 73 55 121 29 176 104 111 113 47 249 180 83 238 173 176 2 108 155 5 139 186 73 25 156 163 232 250 192 60 9 79)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 121 60 191 206 111 51 93 207 237 231 198 137 142 161 197 55 215 102 30 214 168 201 211 8 214 74 37 96 210 28 110 44 72 61 35 165 255 5 218 0 234 249 213 44 245 54 43 233 181 59 149 49 108 106 50 233 235 230 141 154 195 92 47 214)
  :der-encode
  #t
  :tests
  '(#(383
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 197 27 190 226 58 149 67 122 190 92 151 143 143 229 150 163 28 133 138 200 213 91 233 120 106 165 211 106 90 199 78 151)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 169 247 2 63 85 157 75 182 201 244 188 54 67 226 130 74 255 84 81 217 41 71 158 195 234 94 179 11 173 44 54 172 106 124 119 232 221 33 244 173 73 177 3 230 125 169 211 205 166 43 101 61 209 148 250 210 186 141 29 211 123 176 234 155)
  :der-encode
  #t
  :tests
  '(#(384
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 139 164 195 218 113 84 186 86 74 179 68 174 18 0 90 164 130 182 193 99 158 161 145 248 86 138 251 110 71 22 60 69)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 223 121 238 8 43 47 199 126 156 228 99 52 113 245 105 187 203 92 229 56 86 227 6 119 116 243 126 138 100 162 199 255 170 72 138 108 52 212 153 223 118 244 39 222 54 9 191 207 217 254 174 103 255 224 176 222 89 68 99 196 83 176 171 22)
  :der-encode
  #t
  :tests
  '(#(385
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 76 61 175 207 75 165 91 241 52 74 225 32 5 170 74 116 244 110 170 133 245 2 49 49 204 99 122 226 234 144 171 38)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 76 195 191 101 227 46 0 40 74 223 202 0 244 13 247 85 65 92 72 80 145 172 4 137 174 154 51 113 3 165 248 240 18 58 184 109 212 51 185 51 180 242 6 60 0 33 68 223 60 254 186 120 218 208 237 137 192 55 117 65 83 41 8 194)
  :der-encode
  #t
  :tests
  '(#(386
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 152 123 95 158 151 74 183 226 104 149 194 64 11 84 148 233 232 221 85 11 234 4 98 99 152 198 245 197 213 33 86 76)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 38 74 122 212 57 164 130 138 157 201 126 207 131 113 85 53 95 153 174 11 101 151 95 133 27 84 26 211 160 224 50 240 103 38 139 114 152 199 62 88 24 102 251 203 209 97 104 155 22 184 28 242 98 224 7 206 104 226 90 40 200 62 240 65)
  :der-encode
  #t
  :tests
  '(#(387
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 252 249 126 47 191 14 128 212 18 0 90 164 167 80 134 163 240 4 245 157 81 44 180 114 113 121 135 51 171 65 134 6)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 29 127 244 211 164 18 6 200 20 54 53 241 40 118 224 234 8 117 234 94 74 90 36 146 80 208 237 163 61 170 33 31 86 232 156 11 234 249 16 172 147 76 161 35 128 69 86 0 208 253 133 181 106 112 53 203 23 27 63 28 114 161 85 105)
  :der-encode
  #t
  :tests
  '(#(388
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 121 212 130 182 8 100 214 197 203 79 213 219 158 126 40 204 217 165 148 140 49 108 135 64 251 66 156 15 55 22 154 2)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 176 150 133 243 56 220 235 66 23 120 161 69 141 82 190 215 52 194 54 36 45 162 186 162 128 214 246 183 184 110 79 17 127 230 163 65 70 180 34 215 174 189 26 81 178 9 72 215 135 42 81 76 76 253 118 134 220 67 107 112 115 61 100 115)
  :der-encode
  #t
  :tests
  '(#(389
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 142 205 17 8 26 77 7 89 193 79 123 244 104 19 213 44 198 115 129 21 50 27 224 164 218 120 163 53 107 183 21 16)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 221 129 31 44 15 94 157 79 187 46 243 24 24 193 205 128 114 71 188 20 252 209 23 11 239 0 226 199 29 192 55 180 67 161 92 223 143 63 189 200 126 6 37 12 7 32 210 97 210 184 208 135 250 123 249 84 143 98 147 240 206 90 232 153)
  :der-encode
  #t
  :tests
  '(#(390
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 232 219 255 237 19 201 162 9 48 133 192 121 113 79 17 242 78 181 131 215 59 162 180 22 179 22 145 131 231 217 180 194)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 105 214 10 225 243 158 29 169 88 9 212 8 137 71 7 173 33 52 244 148 58 29 176 137 190 191 129 90 57 31 24 219 50 180 1 217 139 248 148 211 182 213 158 110 180 85 115 40 86 66 227 88 173 104 123 125 123 249 96 11 25 135 128 158)
  :der-encode
  #t
  :tests
  '(#(391
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 202 1 85 42 131 129 36 190 198 141 107 198 8 99 41 224 102 115 144 14 172 92 38 46 92 231 154 133 33 205 30 174)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 166 88 85 58 6 32 201 94 152 123 92 49 99 188 254 166 140 82 6 95 83 201 213 83 242 169 36 216 179 237 81 31 121 240 223 236 69 54 182 90 165 251 49 41 126 150 246 180 100 170 102 155 146 104 179 21 108 67 212 97 41 120 165 119)
  :der-encode
  #t
  :tests
  '(#(392
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 148 2 170 86 7 2 73 124 141 26 215 140 16 198 83 193 16 0 37 111 177 160 173 215 198 21 106 71 71 55 24 11)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 188 77 51 84 166 169 115 221 128 136 145 156 193 129 25 78 135 158 215 146 13 179 13 13 18 120 237 247 68 19 183 185 36 80 209 98 178 109 203 37 251 189 83 234 64 68 24 153 129 215 55 5 89 37 189 46 134 191 176 55 75 9 243 202)
  :der-encode
  #t
  :tests
  '(#(393
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 94 3 255 129 138 131 110 58 83 168 67 82 25 41 125 161 185 140 186 208 182 229 53 129 47 67 58 9 108 161 17 104)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 14 182 40 114 79 206 118 76 104 125 135 74 222 123 142 10 164 171 242 14 230 227 97 15 172 159 227 231 47 151 171 90 237 9 244 132 54 96 235 29 175 1 93 57 122 124 16 115 215 174 67 189 160 186 62 17 112 8 120 90 191 255 160 15)
  :der-encode
  #t
  :tests
  '(#(394
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 226 141 223 112 157 74 161 189 223 46 75 199 199 242 203 81 108 182 66 187 62 57 195 254 175 47 207 22 171 149 57 244)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 231 172 92 199 242 150 145 47 112 63 89 254 136 228 155 82 29 162 69 225 46 110 238 22 30 230 179 177 18 118 17 167 123 59 237 210 167 115 207 88 176 98 155 147 109 216 93 173 45 12 57 103 99 6 237 99 225 169 188 208 224 139 204 194)
  :der-encode
  #t
  :tests
  '(#(395
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 127 255 255 255 170 170 170 170 255 255 255 255 255 255 255 255 233 162 83 143 55 178 138 44 81 61 238 64 254 203 183 26)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 36 7 182 10 191 62 229 237 175 146 237 80 90 17 208 221 206 14 163 62 202 88 160 49 187 47 22 44 81 47 64 98 251 129 191 243 107 249 103 232 52 227 213 212 104 115 13 205 112 68 0 34 171 96 6 26 98 250 197 51 80 254 37 159)
  :der-encode
  #t
  :tests
  '(#(396
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 182 47 38 181 242 162 178 111 109 232 109 66 173 138 19 218 58 179 204 205 4 89 178 1 222 0 158 82 106 223 33 242)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 71 178 173 150 223 194 242 63 229 146 104 9 243 128 66 178 200 1 150 43 215 57 76 239 191 74 172 178 85 75 123 11 223 43 147 122 22 167 217 106 42 6 130 205 22 68 40 137 2 8 89 127 44 220 199 52 253 167 54 0 181 207 108 89)
  :der-encode
  #t
  :tests
  '(#(397
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 187 29 154 201 73 221 116 140 208 43 187 231 73 189 53 28 213 123 56 187 97 64 61 112 6 134 170 123 76 144 133 30)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 105 166 91 117 243 26 231 180 147 2 146 249 9 2 70 27 239 206 229 209 96 105 57 194 142 1 182 82 167 251 196 152 207 104 97 158 88 96 18 143 86 206 207 83 235 162 255 232 40 137 169 187 4 165 250 76 139 114 43 201 29 85 151 138)
  :der-encode
  #t
  :tests
  '(#(398
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 102 117 90 0 99 140 218 236 28 115 37 19 202 2 52 236 229 37 69 218 193 31 129 110 129 143 114 91 79 96 170 242)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 178 3 113 118 200 77 176 74 108 119 62 50 249 237 29 107 37 239 76 48 60 103 37 198 147 46 194 204 39 136 188 187 147 97 80 94 107 119 22 145 173 180 21 152 242 146 214 82 23 34 64 75 241 131 36 27 25 87 56 183 122 189 108 254)
  :der-encode
  #t
  :tests
  '(#(399
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 85 160 12 159 205 174 187 96 50 81 60 160 35 78 207 255 233 142 190 73 47 223 2 228 140 164 142 152 43 235 54 105)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 30 239 149 174 247 31 121 58 253 80 187 38 4 6 77 99 232 139 239 116 4 164 208 226 6 68 98 69 174 46 120 52 201 110 134 221 4 15 151 148 182 55 18 217 14 113 149 118 184 185 44 64 106 176 242 136 173 155 50 123 209 36 69 79)
  :der-encode
  #t
  :tests
  '(#(400
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 171 64 25 63 155 93 118 192 100 162 121 64 70 157 159 255 211 29 124 146 95 190 5 201 25 73 29 48 87 214 108 210)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 169 115 72 153 201 84 229 183 173 188 168 247 131 66 139 95 188 189 253 61 40 19 248 210 249 91 49 167 138 177 7 86 118 103 171 248 192 44 228 149 27 197 155 37 100 19 12 39 215 182 76 219 197 202 217 92 164 45 91 187 124 212 231 147)
  :der-encode
  #t
  :tests
  '(#(401
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 202 2 52 235 181 253 203 19 202 2 52 236 255 255 255 255 203 13 173 187 199 245 73 248 162 107 68 8 208 220 134 0)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 26 229 22 98 51 26 29 191 171 7 81 211 13 250 178 39 58 4 162 57 224 85 165 55 177 106 181 149 249 97 35 150 67 79 33 194 191 230 85 92 159 196 168 232 45 171 31 165 99 24 129 176 22 224 131 29 158 27 191 87 153 252 243 46)
  :der-encode
  #t
  :tests
  '(#(402
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 191 255 255 255 62 163 103 126 8 43 147 16 87 38 32 174 25 147 58 158 101 178 133 89 135 17 199 114 152 129 90 211)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 83 201 12 221 139 13 173 210 28 68 173 85 123 50 127 77 191 87 20 74 175 6 89 125 235 63 148 18 82 6 166 193 70 3 71 91 215 155 48 227 99 64 205 9 176 181 158 108 212 108 233 1 80 233 255 229 200 160 23 43 44 152 152 227)
  :der-encode
  #t
  :tests
  '(#(403
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 38 102 102 102 59 187 187 187 230 102 102 102 102 102 102 102 91 55 144 46 2 63 171 124 143 5 93 134 229 204 65 244)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 51 121 117 57 81 92 81 244 41 150 123 142 54 147 13 159 221 161 237 177 58 236 236 151 113 247 205 229 246 242 231 78 186 81 208 182 69 107 185 2 219 161 243 234 67 111 150 173 35 85 218 69 77 201 179 44 80 60 75 198 207 214 212 16)
  :der-encode
  #t
  :tests
  '(#(404
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 191 255 255 255 54 219 109 183 164 146 73 36 146 73 36 146 20 108 87 63 76 109 252 141 8 164 67 226 88 151 11 9)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 10 143 95 29 91 189 39 131 250 127 55 200 104 121 5 127 178 252 242 83 131 170 251 134 208 61 107 175 180 26 23 179 234 246 218 113 95 233 80 52 159 213 115 97 23 176 142 21 227 44 241 210 253 192 3 229 16 0 159 27 75 161 230 72)
  :der-encode
  #t
  :tests
  '(#(405
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 191 255 255 255 42 170 170 171 127 255 255 255 255 255 255 255 200 21 208 230 11 62 89 110 203 26 211 162 124 253 73 196)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 29 188 148 233 108 5 107 157 44 182 119 59 178 75 105 237 71 56 81 186 223 146 122 41 149 90 255 41 14 243 103 90 101 229 135 86 17 34 170 130 38 250 203 149 223 8 48 140 173 240 28 131 81 161 86 145 118 217 23 130 17 19 170 124)
  :der-encode
  #t
  :tests
  '(#(406
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 127 255 255 255 85 85 85 85 255 255 255 255 255 255 255 255 211 68 167 30 111 101 20 88 162 123 220 129 253 151 110 55)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 8 74 184 133 219 255 127 18 230 205 173 181 157 69 110 80 7 151 119 148 37 199 81 140 37 156 131 113 130 137 230 233 145 195 69 211 160 147 232 102 112 96 91 188 47 244 198 157 14 214 148 253 67 62 198 182 186 27 247 213 108 62 107 81)
  :der-encode
  #t
  :tests
  '(#(407
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 63 255 255 255 128 0 0 0 127 255 255 255 255 255 255 255 222 115 125 86 211 139 207 66 121 220 229 97 126 49 146 170)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 0 58 223 164 198 32 162 7 9 108 209 142 232 253 42 144 226 1 6 207 130 74 12 99 214 222 199 39 169 254 127 80 148 48 210 107 221 95 113 232 25 209 43 112 6 153 1 70 26 224 131 204 128 145 34 212 251 134 181 196 117 36 78 90)
  :der-encode
  #t
  :tests
  '(#(408
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 93 142 205 100 164 238 186 70 104 21 221 243 164 222 154 142 106 189 156 93 176 160 30 184 3 67 85 61 166 72 66 143)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 124 152 178 212 126 180 51 192 209 142 83 60 251 200 144 157 102 247 183 157 89 37 204 177 126 204 236 157 16 92 88 132 141 92 169 155 53 11 215 209 10 181 238 111 207 228 102 35 253 192 62 159 130 129 88 244 212 204 8 173 31 248 61 228)
  :der-encode
  #t
  :tests
  '(#(409
      "point duplication during verification"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 111 35 71 202 183 221 118 133 143 224 85 90 195 188 153 4 140 74 172 175 223 182 188 190 5 234 108 66 196 147 69 105 2 33 0 180 207 161 153 110 193 210 76 219 200 250 23 252 171 195 165 212 178 179 108 244 181 10 123 119 90 183 135 133 113 7 70)
      #t
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 124 152 178 212 126 180 51 192 209 142 83 60 251 200 144 157 102 247 183 157 89 37 204 177 126 204 236 157 16 92 88 132 114 163 86 99 202 244 40 47 245 74 17 144 48 27 153 220 2 63 193 97 125 126 167 11 43 51 247 82 224 7 194 27)
  :der-encode
  #t
  :tests
  '(#(410
      "duplication bug"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 111 35 71 202 183 221 118 133 143 224 85 90 195 188 153 4 140 74 172 175 223 182 188 190 5 234 108 66 196 147 69 105 2 33 0 180 207 161 153 110 193 210 76 219 200 250 23 252 171 195 165 212 178 179 108 244 181 10 123 119 90 183 135 133 113 7 70)
      #f
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 183 169 14 33 231 84 125 115 38 121 64 3 60 234 5 4 44 80 247 201 250 94 174 180 113 205 98 96 198 133 242 227 139 183 48 157 12 59 171 36 159 170 243 228 65 121 214 221 83 2 55 92 88 15 208 87 10 120 140 107 227 104 12 103)
  :der-encode
  #t
  :tests
  '(#(411
      "point with x-coordinate 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 1 1 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 21 80 161 115 55 59 45 89 67 116 240 100 44 215 61 224 106 4 92 9 199 164 243 136 199 49 232 205 137 113 173 252 154 58 152 67 88 58 134 192 225 198 44 189 230 113 101 244 10 146 107 16 40 186 56 170 56 149 225 136 235 188 112 102)
  :der-encode
  #t
  :tests
  '(#(412
      "point with x-coordinate 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 32 51 51 51 51 0 0 0 0 51 51 51 51 51 51 51 51 37 199 203 188 84 158 82 231 99 241 245 90 50 122 58 169)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 49 52 71 119 129 149 218 161 121 26 101 48 205 6 151 174 52 191 157 141 34 89 132 57 79 114 238 243 80 89 113 17 9 150 168 251 221 26 112 236 214 76 176 11 89 90 254 22 105 191 239 128 217 23 86 166 45 132 193 216 62 15 34 171)
  :der-encode
  #t
  :tests
  '(#(413
      "comparison with point at infinity "
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 2 32 51 51 51 51 0 0 0 0 51 51 51 51 51 51 51 51 37 199 203 188 84 158 82 231 99 241 245 90 50 122 58 169)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 74 218 99 73 65 71 108 166 60 44 88 3 238 194 243 59 45 23 146 15 121 138 91 230 39 95 90 84 205 46 118 57 177 160 75 234 213 199 49 76 66 116 146 219 33 185 84 77 129 202 168 21 149 135 228 26 160 35 170 150 127 49 170 161)
  :der-encode
  #t
  :tests
  '(#(414
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 124 242 123 24 141 3 79 126 138 82 56 3 4 181 26 195 192 137 105 226 119 242 27 53 166 11 72 252 71 102 153 120 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 170 204 224 147 39 15 165 154 212 18 181 69 154 8 228 144 116 59 151 8 108 120 26 195 200 213 64 48 180 26 49 25 59 236 228 149 97 114 213 107 239 183 1 29 104 78 119 41 5 228 141 33 21 68 74 117 172 122 50 90 63 37 244 177)
  :der-encode
  #t
  :tests
  '(#(415
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 124 242 123 24 141 3 79 126 138 82 56 3 4 181 26 195 192 137 105 226 119 242 27 53 166 11 72 252 71 102 153 120 2 33 0 182 219 109 182 36 146 73 37 73 36 146 73 36 146 73 36 98 91 215 160 155 236 76 168 27 205 217 248 253 107 99 204)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 246 43 141 127 238 255 90 132 122 183 146 18 38 158 85 230 47 168 126 190 147 8 33 116 123 87 165 17 165 234 153 240 67 158 224 87 187 39 137 133 130 166 131 195 253 183 249 84 4 212 29 66 242 118 128 55 81 163 22 235 58 171 126 191)
  :der-encode
  #t
  :tests
  '(#(416
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 124 242 123 24 141 3 79 126 138 82 56 3 4 181 26 195 192 137 105 226 119 242 27 53 166 11 72 252 71 102 153 120 2 33 0 204 204 204 204 0 0 0 0 204 204 204 204 204 204 204 204 151 31 46 241 82 121 75 157 143 199 213 104 201 232 234 167)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 75 170 7 255 110 123 185 170 34 61 28 97 147 32 5 254 152 254 120 183 135 253 171 75 211 97 155 200 131 48 114 162 188 172 214 56 2 197 106 248 38 7 149 62 114 160 245 211 194 59 210 101 84 78 2 9 81 130 78 164 133 85 93 51)
  :der-encode
  #t
  :tests
  '(#(417
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 124 242 123 24 141 3 79 126 138 82 56 3 4 181 26 195 192 137 105 226 119 242 27 53 166 11 72 252 71 102 153 120 2 32 51 51 51 51 0 0 0 0 51 51 51 51 51 51 51 51 37 199 203 188 84 158 82 231 99 241 245 90 50 122 58 170)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 12 117 62 209 186 146 247 102 128 15 221 10 225 192 215 248 244 205 131 5 253 128 61 139 202 136 19 151 181 147 126 45 181 104 80 155 31 175 60 242 81 222 109 185 129 14 139 140 174 210 53 218 16 238 221 190 214 39 117 200 229 201 70 10)
  :der-encode
  #t
  :tests
  '(#(418
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 124 242 123 24 141 3 79 126 138 82 56 3 4 181 26 195 192 137 105 226 119 242 27 53 166 11 72 252 71 102 153 120 2 32 73 36 146 72 219 109 182 219 182 219 109 182 219 109 182 219 90 139 35 13 11 43 81 220 215 235 240 201 254 247 193 133)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 3 15 220 174 101 65 242 44 91 171 37 78 79 26 40 92 80 125 28 239 234 3 191 144 207 25 218 243 203 98 223 105 95 242 201 77 88 143 44 43 43 10 18 190 188 1 27 206 228 250 27 84 80 110 192 125 10 41 210 74 8 145 25 60)
  :der-encode
  #t
  :tests
  '(#(419
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 124 242 123 24 141 3 79 126 138 82 56 3 4 181 26 195 192 137 105 226 119 242 27 53 166 11 72 252 71 102 153 120 2 32 22 164 80 46 39 129 225 26 200 44 188 157 30 221 140 152 21 132 209 62 24 65 30 47 110 4 120 195 68 22 227 187)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 3 252 98 30 175 144 194 61 143 159 161 37 210 197 155 135 40 235 204 179 12 163 227 219 135 154 6 202 144 242 12 220 174 88 211 240 198 174 240 232 5 190 16 234 84 226 60 246 240 57 127 154 221 221 194 176 144 136 133 83 22 176 239 68)
  :der-encode
  #t
  :tests
  '(#(420
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 112 242 206 36 220 98 146 59 176 156 201 45 116 50 155 189 13 46 107 14 53 76 11 226 56 61 36 172 220 203 158 76 212 45 31 151 52 102 245 229 70 42 147 144 132 162 148 235 252 122 69 98 156 112 238 93 239 70 222 149 54 234 123 247)
  :der-encode
  #t
  :tests
  '(#(421
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 2 33 0 182 219 109 182 36 146 73 37 73 36 146 73 36 146 73 36 98 91 215 160 155 236 76 168 27 205 217 248 253 107 99 204)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 115 43 138 192 195 15 228 67 7 67 18 53 39 28 181 214 229 246 119 161 156 227 240 88 185 57 167 191 25 52 157 60 133 140 199 53 175 133 119 70 130 117 132 124 245 236 25 151 46 108 32 115 130 118 226 112 139 35 197 149 191 196 67 61)
  :der-encode
  #t
  :tests
  '(#(422
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 2 33 0 204 204 204 204 0 0 0 0 204 204 204 204 204 204 204 204 151 31 46 241 82 121 75 157 143 199 213 104 201 232 234 167)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 71 175 249 80 24 37 161 102 120 43 181 138 91 69 144 6 234 205 188 229 229 50 58 221 173 52 236 27 100 68 205 206 145 153 195 21 2 173 66 119 199 61 221 12 128 123 114 99 76 69 118 36 4 131 125 152 20 165 212 181 167 195 243 152)
  :der-encode
  #t
  :tests
  '(#(423
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 2 32 51 51 51 51 0 0 0 0 51 51 51 51 51 51 51 51 37 199 203 188 84 158 82 231 99 241 245 90 50 122 58 170)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 174 216 238 255 119 100 75 248 59 146 34 248 245 113 115 250 130 23 236 126 7 99 238 125 113 113 251 96 146 251 165 192 100 134 168 109 148 244 136 52 186 90 219 175 52 150 135 249 206 228 0 56 150 66 184 40 230 130 7 177 71 202 44 70)
  :der-encode
  #t
  :tests
  '(#(424
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 2 32 73 36 146 72 219 109 182 219 182 219 109 182 219 109 182 219 90 139 35 13 11 43 81 220 215 235 240 201 254 247 193 133)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 247 197 74 88 90 144 67 0 208 91 83 239 59 133 78 113 153 154 52 75 137 173 192 202 170 40 226 84 219 155 199 199 193 97 167 159 56 255 68 96 81 48 53 119 228 6 56 251 2 3 41 148 10 99 194 65 187 50 194 32 94 181 123 125)
  :der-encode
  #t
  :tests
  '(#(425
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 2 32 22 164 80 46 39 129 225 26 200 44 188 157 30 221 140 152 21 132 209 62 24 65 30 47 110 4 120 195 68 22 227 187)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 79 227 66 226 254 26 127 155 142 231 235 74 124 15 158 22 43 206 51 87 107 49 94 206 203 182 64 104 55 191 81 245)
  :der-encode
  #t
  :tests
  '(#(426
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 67 248 0 251 234 249 35 140 88 175 121 91 205 173 4 188 73 205 133 12 57 77 51 130 149 51 86 176 35 33 2 129 2 32 36 146 73 36 109 182 219 109 219 109 182 219 109 182 219 109 173 69 145 134 133 149 168 238 107 245 248 100 255 123 224 194)
      #f
      ())
    #(427
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 188 7 255 3 21 6 220 116 167 80 134 164 50 82 251 67 115 25 117 161 109 202 107 2 94 134 116 18 217 66 34 208 2 32 36 146 73 36 109 182 219 109 219 109 182 219 109 182 219 109 173 69 145 134 133 149 168 238 107 245 248 100 255 123 224 194)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 176 28 189 28 1 229 128 101 113 24 20 181 131 240 97 233 212 49 204 169 148 206 161 49 52 73 191 151 200 64 174 10)
  :der-encode
  #t
  :tests
  '(#(428
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 67 248 0 251 234 249 35 140 88 175 121 91 205 173 4 188 73 205 133 12 57 77 51 130 149 51 86 176 35 33 2 129 2 32 36 146 73 36 109 182 219 109 219 109 182 219 109 182 219 109 173 69 145 134 133 149 168 238 107 245 248 100 255 123 224 194)
      #f
      ())
    #(429
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 188 7 255 3 21 6 220 116 167 80 134 164 50 82 251 67 115 25 117 161 109 202 107 2 94 134 116 18 217 66 34 208 2 32 36 146 73 36 109 182 219 109 219 109 182 219 109 182 219 109 173 69 145 134 133 149 168 238 107 245 248 100 255 123 224 194)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 4 170 236 115 99 87 38 242 19 251 138 158 100 218 59 134 50 228 20 149 169 68 208 4 91 82 46 186 114 64 250 213 135 217 49 87 152 170 163 165 186 1 119 87 135 206 208 94 170 247 180 224 159 200 29 109 26 165 70 232 54 93 82 93)
  :der-encode
  #t
  :tests
  '(#(430
      "pseudorandom signature"
      #vu8()
      #vu8(48 68 2 32 9 63 56 37 192 207 130 12 206 216 22 163 166 116 70 200 86 6 166 213 41 228 56 87 100 63 204 193 30 31 112 95 2 32 118 151 130 136 140 99 5 134 48 249 122 88 145 200 112 14 130 151 158 79 35 53 134 191 197 4 47 167 60 183 10 78)
      #t
      ())
    #(431
      "pseudorandom signature"
      #vu8(77 115 103)
      #vu8(48 70 2 33 0 232 86 78 62 81 90 9 249 243 82 88 68 43 153 225 98 210 126 16 151 95 203 121 99 211 194 99 25 220 9 63 132 2 33 0 195 175 1 237 15 208 20 135 73 202 50 51 100 132 108 134 47 198 244 190 182 130 183 234 211 178 216 155 157 168 186 212)
      #t
      ())
    #(432
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 20 18 37 79 140 29 210 116 42 0 221 238 81 146 231 186 162 136 116 16 38 135 31 48 87 173 159 152 59 90 177 20 2 33 0 188 223 135 143 161 86 243 112 64 146 38 152 173 111 182 146 134 1 221 194 108 64 68 142 166 96 230 124 37 237 160 144)
      #t
      ())
    #(433
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(48 69 2 33 0 158 6 118 4 131 129 131 155 176 164 112 58 10 227 143 172 254 30 44 97 189 37 149 12 137 106 169 117 205 110 200 105 2 32 110 160 206 223 150 241 31 255 14 116 105 65 24 52 146 244 209 114 114 201 36 73 175 210 14 52 4 26 104 148 238 130)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 79 51 124 207 214 119 38 168 5 228 241 96 10 226 132 157 243 128 126 202 17 115 128 35 159 189 129 105 0 0 0 0 237 157 234 18 76 200 195 150 65 100 17 233 136 195 15 66 126 181 4 175 67 163 20 108 213 223 126 166 6 102 214 133)
  :der-encode
  #t
  :tests
  '(#(434
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 85 68 130 64 65 115 165 88 40 132 176 209 104 163 46 248 3 61 126 183 128 147 108 57 14 142 237 247 32 199 245 100 2 32 10 21 65 63 158 208 212 84 185 42 185 1 17 158 114 81 164 212 68 186 20 33 186 99 159 165 126 13 140 246 179 19)
      #t
      ())
    #(435
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 32 11 29 131 141 213 74 70 39 69 226 200 213 243 38 55 242 111 177 109 222 32 163 133 228 95 138 32 168 161 248 55 14 2 33 0 174 133 94 10 16 239 8 112 117 253 160 237 132 226 188 87 134 166 129 23 46 169 131 78 83 53 19 22 223 51 43 189)
      #t
      ())
    #(436
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 33 0 175 137 228 242 176 62 93 31 3 82 226 88 239 113 73 48 64 193 125 112 195 108 253 4 65 40 48 45 242 237 94 74 2 32 66 15 4 20 140 62 111 6 86 27 212 72 54 45 108 111 163 249 174 235 126 66 132 59 70 116 231 221 253 11 169 1)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 60 240 61 97 77 137 57 207 212 153 160 120 115 250 194 129 97 143 6 184 255 135 232 1 92 63 73 114 101 0 73 53 132 250 23 77 121 28 114 191 44 227 136 10 137 96 221 42 124 122 19 56 168 47 133 169 229 156 219 222 128 0 0 0)
  :der-encode
  #t
  :tests
  '(#(437
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 108 21 129 241 72 92 204 78 101 118 6 250 26 56 207 34 126 56 112 220 159 65 226 107 132 226 132 131 99 94 50 27 2 32 27 62 60 34 175 35 233 25 179 3 48 248 113 15 110 243 118 12 14 34 55 169 169 245 207 48 161 217 245 187 212 100)
      #t
      ())
    #(438
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 33 0 220 131 191 151 202 40 219 14 4 16 74 22 254 61 230 148 49 26 108 217 242 48 163 0 80 74 231 29 142 199 85 177 2 32 100 168 58 240 171 62 96 55 0 58 31 66 64 223 253 138 52 42 253 238 80 96 78 209 175 164 22 253 0 158 70 104)
      #t
      ())
    #(439
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 32 87 91 112 180 55 86 132 41 27 149 216 30 60 130 14 217 189 233 229 183 52 48 54 228 149 31 60 70 137 74 109 157 2 33 0 241 13 113 110 251 254 186 149 55 1 182 3 252 158 246 255 110 71 237 239 56 201 238 239 45 85 230 72 107 196 214 230)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 60 240 61 97 77 137 57 207 212 153 160 120 115 250 194 129 97 143 6 184 255 135 232 1 92 63 73 114 101 0 73 53 123 5 232 177 134 227 141 65 211 28 119 245 118 159 34 213 131 133 236 200 87 208 122 86 26 99 36 33 127 255 255 255)
  :der-encode
  #t
  :tests
  '(#(440
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 33 0 141 79 17 49 137 223 211 211 35 158 51 31 118 211 252 169 206 248 111 205 93 201 180 171 44 163 138 235 165 108 23 139 2 32 120 56 156 60 241 29 207 246 214 199 245 239 210 119 212 128 6 6 145 20 75 86 138 111 9 12 137 2 85 123 252 97)
      #t
      ())
    #(441
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 131 77 16 236 45 45 80 238 235 254 205 99 40 240 63 175 187 72 143 192 67 195 98 203 198 120 128 236 14 189 4 179 2 33 0 148 192 38 254 175 110 104 117 145 70 254 91 111 213 46 170 60 60 85 82 216 55 25 210 203 144 6 21 226 166 52 219)
      #t
      ())
    #(442
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 32 104 148 222 73 94 123 181 86 104 7 212 117 217 106 13 65 74 148 244 240 44 58 183 194 237 194 145 109 234 252 30 31 2 33 0 166 3 100 44 32 250 188 7 24 40 103 252 198 146 61 53 190 35 173 63 151 165 249 60 110 197 185 204 232 35 149 105)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 40 41 195 31 170 46 64 14 52 78 217 75 202 63 205 5 69 149 110 188 254 138 208 246 223 165 255 142 255 255 255 255 160 26 175 175 0 14 82 88 88 85 175 167 103 106 222 40 65 19 9 144 82 223 87 231 235 59 211 126 190 185 34 46)
  :der-encode
  #t
  :tests
  '(#(443
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 229 0 192 134 254 221 89 224 144 206 123 251 97 87 81 237 154 190 76 9 184 57 238 143 5 50 2 69 185 121 111 62 2 33 0 128 123 29 6 56 200 110 246 17 63 255 13 99 73 120 0 225 184 72 181 163 3 165 76 116 142 69 202 143 53 215 215)
      #t
      ())
    #(444
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 185 34 193 171 225 168 48 156 10 207 144 229 134 198 222 140 51 227 112 87 103 51 144 169 127 240 152 247 22 128 179 43 2 33 0 248 109 146 176 81 183 146 61 130 85 92 32 94 33 181 78 171 134 151 102 199 22 32 150 72 195 230 204 38 41 5 125)
      #t
      ())
    #(445
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 130 60 55 228 108 116 236 132 151 216 146 69 253 227 191 83 221 180 98 192 13 132 14 152 61 203 27 114 187 248 191 39 2 33 0 196 85 47 36 37 209 79 15 15 169 136 119 132 3 214 10 88 150 46 124 84 135 21 175 131 178 237 171 187 36 164 159)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 255 255 255 249 72 8 30 106 4 88 221 143 158 115 143 38 101 255 144 89 173 106 172 7 8 49 140 76 169 167 164 245 90 138 188 186 45 218 132 116 49 30 229 65 73 185 115 202 224 192 251 137 85 122 208 191 120 230 82 154 22 99 189 115)
  :der-encode
  #t
  :tests
  '(#(446
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 32 87 122 8 169 93 182 220 218 153 133 16 153 66 211 120 102 48 246 64 25 15 146 11 149 189 77 93 132 224 241 99 239 2 33 0 215 98 40 110 146 146 89 115 253 56 182 126 249 68 169 156 14 197 180 153 183 23 92 187 67 105 224 83 193 252 187 16)
      #t
      ())
    #(447
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 123 164 88 207 233 82 50 105 34 199 170 40 84 189 198 115 206 61 170 246 93 70 77 251 159 112 7 1 80 48 86 177 2 32 13 248 130 28 146 210 5 70 250 116 31 180 38 191 86 114 138 83 24 38 145 150 66 37 201 179 128 181 107 34 238 109)
      #t
      ())
    #(448
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 92 214 12 59 2 27 75 225 22 240 111 29 68 127 101 228 88 50 154 139 186 225 217 181 151 125 24 207 86 24 72 97 2 32 76 99 92 215 170 154 235 181 113 109 90 224 158 87 248 196 129 167 65 160 41 180 15 113 236 71 52 78 248 131 232 110)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 0 0 0 3 250 21 249 99 148 157 95 3 166 245 199 248 111 158 0 21 238 178 58 235 191 241 23 57 55 186 116 142 16 153 135 32 112 232 232 124 85 95 161 54 89 204 165 215 250 220 252 176 2 62 168 137 84 140 164 138 242 186 126 113)
  :der-encode
  #t
  :tests
  '(#(449
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 75 80 225 232 207 131 14 4 193 126 116 114 202 246 13 168 21 15 250 86 142 44 100 73 140 201 114 163 121 229 66 229 2 32 46 58 218 165 175 171 137 204 169 22 147 96 149 85 244 5 67 87 136 82 205 226 156 33 203 3 124 12 11 120 71 142)
      #t
      ())
    #(450
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 90 234 147 12 125 143 255 205 92 109 242 201 67 14 247 111 139 94 213 138 139 156 149 132 114 136 171 248 240 154 26 194 2 32 125 223 239 118 136 166 5 60 228 238 238 239 214 241 169 215 19 129 183 84 137 37 246 104 42 160 169 208 92 245 163 163)
      #t
      ())
    #(451
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 152 176 146 194 209 75 91 20 162 62 147 104 224 206 27 231 68 223 174 159 154 92 218 186 81 231 135 32 153 223 150 242 2 33 0 144 211 228 248 123 215 188 148 88 159 129 80 182 176 16 69 205 135 89 160 10 247 139 36 215 222 119 24 135 97 13 245)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 188 187 41 20 199 159 4 94 170 110 203 188 97 40 22 179 190 93 45 103 150 112 125 129 37 233 248 81 193 138 240 21 0 0 0 0 19 82 187 74 15 162 234 76 206 185 171 99 221 104 74 222 90 17 39 188 243 0 166 152 167 25 59 194)
  :der-encode
  #t
  :tests
  '(#(452
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 158 149 242 133 106 159 255 154 23 43 7 129 124 140 96 254 24 92 211 206 149 130 103 143 140 196 176 43 196 68 98 26 2 33 0 197 76 165 29 129 23 217 4 240 211 119 57 17 203 39 146 52 143 174 33 194 218 125 173 37 249 144 209 34 55 110 76)
      #t
      ())
    #(453
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 231 125 248 249 120 38 150 52 76 51 222 41 235 220 159 141 63 207 70 61 149 12 219 226 86 253 79 194 253 68 135 126 2 33 0 135 2 136 80 201 98 207 47 180 80 255 230 185 131 152 30 73 157 196 152 251 214 84 250 69 76 158 7 200 203 92 168)
      #t
      ())
    #(454
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 33 0 189 45 214 245 2 109 43 90 215 234 215 75 223 82 184 203 202 188 8 250 206 224 161 200 88 70 88 168 94 208 197 220 2 32 62 133 67 232 25 189 174 71 216 114 226 154 133 186 56 173 223 62 174 170 216 120 109 121 195 251 2 127 111 31 244 191)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 188 187 41 20 199 159 4 94 170 110 203 188 97 40 22 179 190 93 45 103 150 112 125 129 37 233 248 81 193 138 240 21 255 255 255 254 236 173 68 182 240 93 21 179 49 70 84 156 34 151 181 34 165 238 216 67 12 255 89 103 88 230 196 61)
  :der-encode
  #t
  :tests
  '(#(455
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 33 0 189 92 2 148 172 194 140 21 197 209 235 199 39 76 156 162 26 8 28 138 103 218 67 10 52 167 255 241 165 100 250 187 2 32 126 193 3 162 56 91 79 243 139 71 211 6 67 78 144 145 222 36 220 159 26 37 150 126 224 111 138 10 83 172 1 129)
      #t
      ())
    #(456
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 60 125 191 180 61 216 3 121 238 44 35 173 84 114 135 58 34 200 160 23 154 200 243 129 173 158 15 25 50 49 220 31 2 32 124 248 224 117 48 173 229 3 179 212 58 132 183 90 42 118 252 64 118 61 174 212 233 115 78 116 92 88 201 174 114 211)
      #t
      ())
    #(457
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 33 0 179 140 164 218 198 217 73 190 94 95 150 152 96 38 159 14 237 255 46 185 47 69 191 192 36 112 48 12 201 109 213 38 2 32 28 123 34 153 43 177 55 73 204 12 91 194 83 48 161 116 70 228 13 183 52 32 63 144 53 23 39 37 252 112 248 99)
      #t
      ())))
