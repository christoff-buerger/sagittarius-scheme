(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 234 218 147 190 16 178 68 158 30 139 181 131 5 213 32 8 1 60 87 16 124 26 32 163 23 166 203 167 236 166 114 52 12 3 209 210 224 150 99 40 102 145 223 85 6 159 162 84 144 201 221 159 156 11 178 181)
  :der-encode
  #f
  :tests
  '(#(1
      "signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(58 222 92 6 36 165 103 126 215 182 69 13 148 32 187 224 40 212 153 194 59 233 239 157 139 138 138 4 158 130 149 14 190 16 47 55 255 54 69 204 125 60 27 171 136 100 229 224 58 80 17 238 186 129 80 188)
      #t
      ())
    #(2
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(1 58 222 92 6 36 165 103 126 215 182 69 13 148 31 210 131 9 141 138 0 79 199 24 226 231 230 180 65 0 97 125 106 241 65 239 208 200 0 201 186 51 130 194 250 247 88 84 10 93 217 141 23 86 161 218 217 129)
      #f
      ())
    #(3
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(197 33 163 249 219 90 152 129 40 73 186 242 107 222 90 194 183 228 86 123 215 243 57 167 208 209 160 57 97 125 106 241 65 239 208 200 0 201 186 51 130 194 250 247 88 84 10 93 217 141 23 86 161 218 217 129)
      #f
      ())
    #(4
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(1 58 222 92 6 36 165 103 126 215 182 69 13 148 32 187 224 40 212 153 194 59 233 239 157 139 138 138 4 0 97 125 106 241 65 239 208 200 0 201 186 51 130 194 250 247 88 84 10 93 217 141 23 86 161 218 217 129)
      #f
      ())
    #(5
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(197 33 163 249 219 90 152 129 40 73 186 242 107 223 68 31 215 43 102 61 196 22 16 98 116 117 117 252 97 125 106 241 65 239 208 200 0 201 186 51 130 194 250 247 88 84 10 93 217 141 23 86 161 218 217 129)
      #f
      ())
    #(6
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(0 58 222 92 6 36 165 103 126 215 182 69 13 148 32 187 224 40 212 153 194 59 233 239 157 139 138 138 4 1 97 125 106 241 65 239 208 200 0 201 186 51 130 194 17 154 57 12 250 155 237 106 64 155 254 55 3 190)
      #f
      ())
    #(7
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(0 58 222 92 6 36 165 103 126 215 182 69 13 148 32 187 224 40 212 153 194 59 233 239 157 139 138 138 4 1 97 125 106 241 65 239 208 200 0 201 186 51 130 194 250 247 88 84 10 93 217 141 23 86 161 218 217 129)
      #f
      ())
    #(8
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(58 222 92 6 36 165 103 126 215 182 69 13 148 32 187 224 40 212 153 194 59 233 239 157 139 138 138 4 158 130 149 14 190 16 47 55 255 54 69 204 125 61 5 8 167 171 245 162 38 114 232 169 94 37 38 127)
      #f
      ())
    #(9
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(10
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(11
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(12
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(13
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(14
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(15
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(16
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(17
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(18
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(19
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(20
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(21
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(22
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(23
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(24
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(25
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(26
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(27
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(28
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(29
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(30
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(31
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(32
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(33
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(34
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(35
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(36
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(37
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(38
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(39
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(40
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(41
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(42
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(43
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(44
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(45
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(46
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(47
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(48
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(49
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(50
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(51
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(52
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(53
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(54
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(55
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(56
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(57
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(58
      "Edge case for Shamir multiplication"
      #vu8(56 57 49 55 55)
      #vu8(50 107 192 99 83 247 249 201 247 123 143 75 85 70 78 134 25 148 78 120 121 64 44 202 87 46 4 26 150 173 145 240 42 59 196 12 17 138 189 65 110 213 198 32 62 215 206 208 51 8 96 215 184 140 16 171)
      #t
      ())
    #(59
      "special case hash"
      #vu8(52 50 54 52 55 57 55 50 52)
      #vu8(188 202 35 101 206 189 207 124 108 218 30 231 178 124 127 231 158 55 21 55 176 24 105 199 21 234 187 30 58 231 111 155 191 229 25 215 120 129 109 200 254 16 99 94 231 87 107 107 121 22 240 194 29 243 32 192)
      #t
      ())
    #(60
      "special case hash"
      #vu8(55 49 51 56 54 56 52 56 57 49)
      #vu8(89 169 248 50 137 239 105 149 213 213 89 46 128 171 79 106 129 18 63 105 211 133 211 207 177 82 250 242 58 151 213 190 25 13 88 25 36 16 103 226 190 86 55 90 184 65 85 186 171 143 199 174 183 248 203 61)
      #t
      ())
    #(61
      "special case hash"
      #vu8(49 48 51 53 57 51 51 49 54 54 56)
      #vu8(181 75 172 155 226 190 170 160 148 86 163 150 138 31 175 39 201 217 107 213 246 115 143 236 96 102 211 30 215 44 34 18 147 68 169 109 82 253 166 11 38 76 245 230 250 228 95 210 193 177 183 139 203 163 0 112)
      #t
      ())
    #(62
      "special case hash"
      #vu8(51 57 52 57 52 48 49 50 49 53)
      #vu8(50 61 189 236 212 9 16 198 250 122 86 145 132 111 167 118 145 19 209 242 186 100 239 13 201 125 45 219 202 158 115 164 88 122 240 66 248 186 146 75 182 24 41 197 226 64 70 249 128 62 183 106 184 14 243 39)
      #t
      ())
    #(63
      "special case hash"
      #vu8(49 51 52 52 50 57 51 48 55 57)
      #vu8(165 93 204 194 125 40 127 21 150 14 215 153 8 163 237 182 187 49 175 240 124 140 170 14 101 252 7 133 85 156 181 26 165 242 185 6 102 16 25 157 208 18 145 164 119 41 166 24 154 98 42 233 231 175 118 33)
      #t
      ())
    #(64
      "special case hash"
      #vu8(51 55 48 54 50 49 49 55 49 50)
      #vu8(19 126 214 16 81 72 214 245 184 78 135 115 93 87 149 95 129 197 145 74 110 105 245 83 71 173 224 116 223 165 213 107 26 18 86 126 250 203 52 138 19 59 121 212 141 167 170 199 141 120 238 88 156 46 192 39)
      #t
      ())
    #(65
      "special case hash"
      #vu8(51 52 51 54 56 56 55 49 50)
      #vu8(133 111 246 61 119 145 99 231 143 237 140 72 51 11 72 240 139 249 83 169 82 102 179 133 126 238 145 170 244 170 145 124 211 127 85 108 109 249 208 150 12 47 125 170 126 161 24 229 195 12 196 12 161 238 212 24)
      #t
      ())
    #(66
      "special case hash"
      #vu8(49 51 53 49 53 51 48 51 55 48)
      #vu8(169 215 113 111 4 197 206 36 127 107 140 96 139 55 219 85 246 142 47 249 74 88 131 134 62 134 119 8 97 188 9 63 170 111 178 92 210 64 174 164 181 111 237 114 143 123 54 105 180 220 132 196 73 211 140 93)
      #t
      ())
    #(67
      "special case hash"
      #vu8(54 53 53 51 50 48 51 49 50 54)
      #vu8(246 208 136 253 59 156 152 26 196 145 198 32 48 100 59 189 130 212 244 88 142 133 23 222 88 132 231 61 119 62 238 71 121 128 118 59 30 162 122 233 152 189 160 36 76 182 123 7 170 103 121 163 140 210 186 63)
      #t
      ())
    #(68
      "special case hash"
      #vu8(49 53 54 52 51 52 54 54 48 51)
      #vu8(234 203 85 88 142 68 107 191 54 135 8 155 168 186 59 5 207 239 116 88 187 129 180 39 127 144 168 83 128 57 232 148 76 195 223 127 76 229 186 220 52 153 117 212 113 168 29 234 20 233 188 174 48 101 212 16)
      #t
      ())
    #(69
      "special case hash"
      #vu8(52 52 50 57 53 51 57 49 49 55)
      #vu8(89 132 175 140 137 251 157 89 106 31 40 253 61 65 228 111 114 5 254 18 250 99 67 122 199 158 126 129 51 177 107 116 45 69 241 143 136 222 39 19 7 131 132 230 21 15 6 184 185 159 54 171 44 227 221 73)
      #t
      ())
    #(70
      "special case hash"
      #vu8(49 48 57 53 51 50 54 49 51 53 49)
      #vu8(60 218 98 216 71 17 194 98 247 130 213 195 167 155 86 116 133 34 123 52 175 184 33 245 36 27 25 97 182 21 206 243 153 112 111 247 88 240 114 147 24 82 183 23 236 137 142 154 30 99 57 208 238 129 184 218)
      #t
      ())
    #(71
      "special case hash"
      #vu8(53 57 56 55 51 53 48 48 52 49)
      #vu8(225 219 115 4 96 145 145 234 26 201 17 131 255 179 29 245 27 91 63 220 107 26 17 41 216 88 24 214 68 24 134 208 3 174 128 251 231 19 158 29 2 132 92 209 189 149 159 13 241 70 143 88 54 221 110 165)
      #t
      ())
    #(72
      "special case hash"
      #vu8(51 52 54 51 48 48 54 56 55 56)
      #vu8(53 69 220 74 78 248 75 187 58 82 111 249 41 201 26 210 52 81 106 158 149 69 90 200 219 64 18 177 175 73 146 111 105 58 124 241 31 113 225 153 243 130 168 214 64 192 200 94 70 217 78 226 110 56 67 68)
      #t
      ())
    #(73
      "special case hash"
      #vu8(57 56 49 55 51 50 48 50 56 55)
      #vu8(12 202 253 234 228 88 44 157 230 121 91 45 9 167 252 56 72 199 89 4 250 150 9 137 21 108 187 185 175 31 153 77 163 231 216 156 200 170 164 70 22 203 119 227 190 122 131 204 236 201 101 119 81 148 229 2)
      #t
      ())
    #(74
      "special case hash"
      #vu8(51 50 50 50 48 52 49 48 52 54)
      #vu8(163 178 20 93 140 102 144 39 83 37 1 238 161 145 58 187 34 167 138 130 127 221 130 254 157 109 55 87 155 47 26 232 79 86 6 214 134 83 6 95 116 233 208 137 136 102 148 199 57 251 227 253 74 27 43 74)
      #t
      ())
    #(75
      "special case hash"
      #vu8(54 54 54 54 51 48 55 49 48 52)
      #vu8(154 172 58 126 61 20 35 68 153 27 241 119 180 244 219 250 7 65 72 173 158 32 242 117 85 181 71 217 248 48 163 199 253 242 81 215 157 65 151 125 40 230 217 167 42 54 223 17 184 110 23 200 220 58 202 224)
      #t
      ())
    #(76
      "special case hash"
      #vu8(49 48 51 53 57 53 49 56 57 56)
      #vu8(71 105 251 165 84 253 67 96 81 194 133 189 173 250 51 164 67 212 247 8 77 213 152 206 59 152 184 251 12 1 76 135 203 20 17 61 117 134 79 116 144 95 117 179 79 153 112 186 88 181 208 103 96 33 130 109)
      #t
      ())
    #(77
      "special case hash"
      #vu8(49 56 52 54 53 57 55 49 57 53)
      #vu8(139 145 252 80 84 167 92 52 165 8 98 75 133 112 139 61 37 250 116 50 140 104 116 28 58 235 146 217 21 94 62 70 177 32 149 131 19 90 159 239 21 171 227 37 178 91 209 146 133 238 107 91 69 73 98 159)
      #t
      ())
    #(78
      "special case hash"
      #vu8(51 49 51 54 48 52 54 49 56 57)
      #vu8(164 162 168 95 187 139 178 108 77 132 92 250 193 145 248 157 101 176 13 63 27 148 80 209 119 247 136 144 102 5 164 96 230 4 2 104 92 122 90 204 210 97 94 146 50 229 25 55 189 131 223 163 6 94 171 247)
      #t
      ())
    #(79
      "special case hash"
      #vu8(50 54 54 51 55 56 52 50 53 52)
      #vu8(168 157 51 58 227 65 135 133 92 247 250 67 95 243 155 230 183 187 57 178 208 206 104 33 51 173 150 70 72 61 204 137 163 180 59 226 80 245 195 247 143 120 65 142 123 131 65 168 188 251 147 223 213 142 70 216)
      #t
      ())
    #(80
      "special case hash"
      #vu8(49 54 53 50 49 48 48 53 50 52)
      #vu8(45 15 153 199 25 51 200 45 237 84 78 244 250 172 157 102 158 67 125 234 19 181 113 134 244 194 10 14 217 104 43 159 58 5 215 131 41 71 188 69 234 219 199 66 217 110 122 177 18 72 50 221 183 168 198 91)
      #t
      ())
    #(81
      "special case hash"
      #vu8(53 55 52 56 48 56 49 54 57 54)
      #vu8(132 2 8 247 196 27 31 186 220 199 1 251 58 29 15 152 163 226 167 82 53 230 149 191 211 120 248 180 68 200 218 173 78 252 3 225 117 56 3 195 98 180 9 195 202 110 15 33 229 56 254 58 54 76 14 83)
      #t
      ())
    #(82
      "special case hash"
      #vu8(54 51 52 51 57 49 51 52 54 56)
      #vu8(135 204 88 44 177 6 2 17 5 102 252 177 10 35 58 237 233 147 250 229 251 63 129 176 187 255 148 202 201 113 192 91 213 29 150 133 130 91 44 252 10 37 150 199 248 13 159 157 198 140 40 193 89 170 57 90)
      #t
      ())
    #(83
      "special case hash"
      #vu8(49 53 52 49 49 48 51 53 57 56)
      #vu8(80 215 61 148 155 58 220 211 232 250 148 218 254 250 249 210 99 235 199 2 18 141 137 26 250 196 126 167 248 66 60 55 143 1 144 87 73 37 20 46 181 185 124 97 42 191 160 72 250 58 181 55 94 199 149 161)
      #t
      ())
    #(84
      "special case hash"
      #vu8(49 48 52 55 56 53 56 48 49 50 56)
      #vu8(214 8 145 93 252 213 211 198 62 209 13 13 155 97 79 122 134 111 136 88 166 229 157 192 62 176 168 238 142 112 26 160 186 180 145 67 15 110 77 169 34 68 176 187 23 73 87 238 111 73 91 197 209 95 171 177)
      #t
      ())
    #(85
      "special case hash"
      #vu8(49 48 53 51 54 50 56 53 53 54 56)
      #vu8(200 123 10 184 66 196 118 158 217 75 145 11 215 113 150 145 249 153 27 197 163 71 136 150 8 240 112 52 208 131 17 16 72 214 224 25 119 31 194 102 156 85 21 106 61 9 97 90 107 45 156 174 82 221 171 238)
      #t
      ())
    #(86
      "special case hash"
      #vu8(57 53 51 57 48 52 49 48 53)
      #vu8(10 28 44 36 120 226 68 70 66 38 198 96 237 247 36 219 18 19 244 146 62 183 37 214 17 217 118 253 118 78 85 24 106 118 247 52 137 29 5 251 87 175 39 39 250 184 251 234 104 76 164 50 29 93 229 64)
      #t
      ())
    #(87
      "special case hash"
      #vu8(57 55 56 56 52 56 48 51 57)
      #vu8(138 39 71 197 221 158 245 41 139 138 234 189 47 179 162 190 177 97 88 251 44 198 43 233 229 27 33 82 249 98 81 188 4 139 202 216 50 230 203 192 156 156 46 88 90 183 84 61 197 82 234 165 18 91 224 211)
      #t
      ())
    #(88
      "special case hash"
      #vu8(51 54 49 48 54 55 50 52 52 50)
      #vu8(217 234 195 42 115 79 58 62 91 90 41 5 190 216 22 78 244 198 205 36 213 192 252 84 204 131 243 204 167 132 147 13 22 195 183 83 187 62 217 21 29 88 60 80 255 151 188 151 98 116 189 228 130 251 150 68)
      #t
      ())
    #(89
      "special case hash"
      #vu8(49 48 53 52 50 52 48 55 48 53)
      #vu8(108 64 198 177 90 229 115 247 123 103 124 216 120 204 94 77 168 23 28 245 13 121 151 79 222 55 78 0 200 140 152 40 3 123 247 1 58 20 21 83 124 160 116 214 200 165 83 189 180 178 107 20 167 232 141 147)
      #t
      ())
    #(90
      "special case hash"
      #vu8(53 49 55 52 52 52 56 49 57 55)
      #vu8(220 160 170 160 163 149 57 49 66 179 35 237 206 208 147 114 118 3 80 242 171 38 28 227 51 155 17 77 9 131 191 110 81 12 231 240 167 82 15 43 124 96 205 104 164 145 43 120 22 44 122 195 55 137 224 198)
      #t
      ())
    #(91
      "special case hash"
      #vu8(49 57 54 55 53 54 49 50 53 49)
      #vu8(160 82 110 212 126 38 7 230 186 230 220 243 184 245 79 78 6 56 2 54 115 163 140 173 69 105 195 186 97 81 111 85 116 107 55 157 17 203 170 2 206 243 83 17 215 119 26 71 209 225 39 207 244 109 207 214)
      #t
      ())
    #(92
      "special case hash"
      #vu8(51 52 52 55 50 53 51 51 52 51)
      #vu8(92 0 219 96 23 140 131 97 9 43 223 180 127 201 164 123 51 54 61 126 13 118 227 37 32 247 150 87 225 186 247 174 125 129 4 87 147 199 49 115 244 157 96 189 252 135 121 148 39 149 217 208 130 179 202 17)
      #t
      ())
    #(93
      "special case hash"
      #vu8(51 54 56 50 54 52 51 49 56)
      #vu8(70 246 155 106 153 113 121 73 238 231 64 146 160 193 67 138 41 10 44 216 47 225 225 13 143 55 232 139 153 165 245 159 9 189 152 10 6 98 51 82 51 151 132 105 135 168 161 191 221 227 85 6 45 20 10 75)
      #t
      ())
    #(94
      "special case hash"
      #vu8(51 50 54 49 49 57 56 54 48 56)
      #vu8(230 67 216 8 90 34 112 111 160 230 84 15 61 94 22 154 216 204 73 180 191 233 142 50 83 33 199 5 249 91 212 35 249 202 254 12 237 254 198 253 151 135 21 54 215 27 42 197 141 251 47 122 184 149 45 75)
      #t
      ())
    #(95
      "special case hash"
      #vu8(57 54 55 56 55 56 49 48 57 52)
      #vu8(230 95 185 188 221 121 31 20 28 207 242 179 207 191 69 216 79 140 98 114 2 26 104 221 232 195 107 200 223 110 8 199 75 94 54 183 119 38 88 240 37 21 174 14 168 19 182 77 242 79 53 34 234 21 251 21)
      #t
      ())
    #(96
      "special case hash"
      #vu8(52 57 53 56 56 50 51 56 50 51)
      #vu8(164 118 212 104 34 30 245 86 17 232 167 36 201 180 205 121 195 79 105 64 213 246 101 227 51 95 98 49 191 221 193 142 122 0 139 194 6 200 225 202 108 135 131 99 228 19 133 8 224 195 168 74 39 234 190 53)
      #t
      ())
    #(97
      "special case hash"
      #vu8(56 50 52 54 51 55 56 51 55)
      #vu8(27 57 52 119 148 24 121 39 24 115 168 192 67 167 124 170 219 153 87 252 221 38 58 106 201 120 228 186 39 0 96 213 243 86 235 182 209 133 119 43 170 120 184 120 175 104 7 55 142 13 92 83 45 160 164 167)
      #t
      ())
    #(98
      "special case hash"
      #vu8(49 49 48 50 48 56 51 51 55 55 54)
      #vu8(178 237 168 201 105 212 177 189 211 24 103 253 31 146 213 71 180 6 132 12 37 127 47 128 223 189 196 227 230 41 123 5 156 230 78 240 77 233 113 90 143 104 106 159 115 152 8 101 6 106 148 151 91 127 129 23)
      #t
      ())
    #(99
      "special case hash"
      #vu8(49 51 51 56 55 49 54 52 56)
      #vu8(147 129 137 161 138 75 255 87 18 172 153 194 184 233 44 33 138 243 228 212 227 168 75 144 107 15 112 78 123 179 229 56 240 183 6 100 218 212 98 171 20 176 237 65 108 134 172 110 144 96 254 118 13 171 183 21)
      #t
      ())
    #(100
      "special case hash"
      #vu8(51 50 50 49 52 52 49 54 50)
      #vu8(187 124 29 129 32 210 170 119 101 177 110 234 196 66 130 222 96 95 178 161 102 86 87 222 164 73 41 53 224 168 173 179 161 67 136 63 152 30 161 50 63 166 241 211 71 132 91 226 184 220 198 205 92 201 62 229)
      #t
      ())
    #(101
      "special case hash"
      #vu8(49 48 54 56 54 54 53 53 53 52 54)
      #vu8(116 164 197 29 214 12 113 24 70 123 226 150 82 6 15 57 175 148 248 192 235 127 21 198 71 113 1 12 97 2 236 12 146 87 230 7 175 63 63 247 73 11 84 231 129 17 244 34 190 193 27 160 18 119 23 31)
      #t
      ())
    #(102
      "special case hash"
      #vu8(54 50 49 53 53 50 52 54)
      #vu8(98 93 161 141 103 111 2 250 233 219 203 48 146 38 89 9 72 143 185 93 102 37 105 215 116 107 150 135 196 241 236 131 30 54 96 77 96 75 99 15 208 177 153 156 208 153 96 134 34 148 37 29 133 229 135 61)
      #t
      ())
    #(103
      "special case hash"
      #vu8(55 48 51 48 56 49 56 55 55 52)
      #vu8(142 224 212 163 31 209 196 216 84 215 92 20 21 25 38 137 157 222 28 115 50 253 71 105 68 61 33 61 75 130 120 184 155 164 248 251 215 220 198 175 254 76 18 21 111 116 9 144 148 22 152 150 133 221 90 57)
      #t
      ())
    #(104
      "special case hash"
      #vu8(53 57 50 52 53 50 51 55 52 52)
      #vu8(189 222 69 252 158 187 55 73 201 251 44 37 191 2 226 162 23 204 193 18 248 230 84 153 238 255 182 161 190 205 107 136 239 43 238 135 46 188 14 43 128 90 86 6 110 25 23 159 206 159 13 192 223 63 99 120)
      #t
      ())
    #(105
      "special case hash"
      #vu8(49 52 57 53 53 56 54 54 50 49)
      #vu8(80 24 110 2 58 31 80 83 252 180 208 71 48 57 177 178 205 235 165 105 113 154 78 186 189 214 117 200 248 251 137 60 27 107 91 130 123 95 63 75 181 234 183 91 98 18 187 86 165 163 155 179 92 18 122 28)
      #t
      ())
    #(106
      "special case hash"
      #vu8(52 48 48 53 51 49 52 52 48 54)
      #vu8(211 180 84 99 155 15 179 218 147 178 13 85 190 134 9 228 9 2 203 74 96 143 59 144 100 192 222 183 236 122 169 99 127 215 27 84 62 82 67 250 171 76 122 46 220 44 72 233 130 197 172 1 120 7 241 154)
      #t
      ())
    #(107
      "special case hash"
      #vu8(51 48 57 54 52 53 55 53 49 50)
      #vu8(194 2 171 189 152 224 56 9 222 132 43 222 242 104 161 198 22 167 48 109 166 154 135 171 175 3 22 156 126 126 4 130 58 248 237 104 54 253 42 192 17 228 125 232 225 190 249 30 209 218 81 68 137 63 194 89)
      #t
      ())
    #(108
      "special case hash"
      #vu8(50 55 56 52 48 50 53 54 50 48)
      #vu8(46 75 118 99 136 22 204 224 87 164 162 122 73 37 141 203 84 55 174 151 115 159 39 235 192 151 60 11 233 246 192 182 78 118 74 211 157 217 43 87 110 17 194 62 89 148 176 32 149 203 42 71 32 200 102 44)
      #t
      ())
    #(109
      "special case hash"
      #vu8(50 54 49 56 55 56 55 52 49 56)
      #vu8(126 15 72 118 16 137 170 76 126 205 90 122 197 56 8 54 177 229 211 129 211 64 1 116 209 93 249 139 12 61 245 0 96 227 166 113 74 165 101 163 61 120 78 123 22 172 135 190 191 179 194 37 92 253 131 44)
      #t
      ())
    #(110
      "special case hash"
      #vu8(49 54 52 50 54 50 53 50 54 50)
      #vu8(77 111 116 8 80 142 176 129 77 205 72 0 127 14 253 158 43 145 205 172 64 48 84 12 198 120 222 25 30 116 248 220 52 209 54 19 239 66 70 47 232 137 129 203 226 72 155 225 14 76 218 233 117 161 179 142)
      #t
      ())
    #(111
      "special case hash"
      #vu8(54 56 50 52 49 56 57 52 51 54)
      #vu8(150 127 44 93 48 76 121 50 234 170 22 130 25 121 69 230 108 201 18 183 3 130 71 118 239 22 173 122 115 149 112 1 217 3 124 99 214 71 28 128 154 35 136 56 58 214 149 19 124 98 44 213 245 88 68 20)
      #t
      ())
    #(112
      "special case hash"
      #vu8(52 56 52 50 52 53 52 50 53)
      #vu8(73 38 8 4 187 44 234 228 185 206 230 59 2 234 96 23 62 195 244 249 1 103 98 124 11 179 152 136 201 235 2 47 150 219 62 144 254 15 246 23 115 10 98 159 52 46 2 251 32 141 104 54 203 189 199 211)
      #t
      ())
    #(113
      "Signature generated without truncating the hash"
      #vu8(49 50 51 52 48 48)
      #vu8(243 231 18 89 122 75 34 99 44 95 142 185 242 132 88 130 187 3 161 57 115 95 128 175 136 38 252 86 98 134 91 217 28 9 3 81 26 72 29 96 126 182 181 254 40 246 246 200 146 149 104 26 62 141 85 216)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 147 180 194 143 3 45 0 248 14 119 73 30 220 21 131 89 144 158 233 227 10 115 39 183 66 25 229 226 72 44 25 174 53 203 40 175 201 185 92 161 237 122 217 28 129 45 95 204 235 75 237 219 241 161 109 146)
  :der-encode
  #f
  :tests
  '(#(114
      "k*G has a large x-coordinate"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 233 92 31 71 15 193 236 34 214 186 163 163 213 193 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 58)
      #t
      ())
    #(115
      "r too large"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 58)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 218 146 127 75 168 139 99 155 245 51 66 33 210 245 77 142 249 204 193 161 18 95 173 24 199 191 183 137 172 81 174 83 222 109 131 74 157 179 148 123 141 212 198 172 43 8 75 133 73 107 250 114 216 107 105 72)
  :der-encode
  #f
  :tests
  '(#(116
      "r,s are large"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 59)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 32 136 142 28 15 86 148 196 192 54 59 54 72 43 235 110 30 102 73 179 211 178 111 18 127 235 182 252 222 0 194 243 216 228 167 232 160 186 253 65 124 150 211 232 28 151 89 70 162 243 104 106 163 157 53 241)
  :der-encode
  #f
  :tests
  '(#(117
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 61 80 82 105 27 141 200 157 235 173 54 4 102 242 163 158 130 232 174 42 239 183 124 60 146 173 124 209)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 149 69 200 111 3 44 93 242 85 164 73 11 176 184 62 202 32 17 129 121 42 215 66 70 135 77 178 41 64 82 100 194 131 6 51 39 183 15 76 43 229 171 77 46 148 7 184 102 225 33 214 20 93 18 76 4)
  :der-encode
  #f
  :tests
  '(#(118
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 191 25 171 77 62 191 90 26 73 215 101 144 147 8 218 168 140 43 123 227 150 157 181 82 234 48 86 43)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 87 157 83 243 157 81 9 189 68 14 62 62 126 253 96 55 64 150 51 72 255 156 114 192 59 15 230 184 223 2 241 51 236 214 11 7 42 8 18 173 199 82 112 143 43 233 216 201 173 89 83 216 199 191 57 101)
  :der-encode
  #f
  :tests
  '(#(119
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #t
      ())
    #(120
      "incorrect size of signature"
      #vu8(49 50 51 52 48 48)
      #vu8(3 1)
      #t
      ("SigSize"))))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 210 161 76 129 6 216 159 53 54 250 235 218 252 212 104 15 101 171 75 242 36 49 100 202 20 100 182 40 172 175 43 238 82 230 35 29 60 152 15 82 248 225 137 164 28 62 58 5 229 145 25 94 200 100 33 122)
  :der-encode
  #f
  :tests
  '(#(121
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3)
      #t
      ())
    #(122
      "incorrect size of signature"
      #vu8(49 50 51 52 48 48)
      #vu8(3 3)
      #t
      ("SigSize"))))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 232 146 71 145 83 173 19 234 92 164 93 76 50 62 191 31 195 205 12 223 120 124 52 48 106 63 121 164 50 108 169 100 95 43 81 118 8 220 31 8 183 168 76 252 97 230 255 104 209 79 39 210 4 60 126 245)
  :der-encode
  #f
  :tests
  '(#(123
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4)
      #t
      ())
    #(124
      "incorrect size of signature"
      #vu8(49 50 51 52 48 48)
      #vu8(3 4)
      #t
      ("SigSize"))
    #(125
      "r is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 64 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 43 14 172 53 192 178 148 246 212 53 220 175 250 134 51 176 18 48 5 70 92 48 8 10 219 204 16 58 212 101 166 59 251 113 212 174 224 147 40 105 127 225 8 135 83 100 109 131 105 184 220 16 50 23 194 25)
  :der-encode
  #f
  :tests
  '(#(126
      "s is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 111 0 196)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 209 86 224 30 51 190 206 222 143 79 180 174 149 33 215 81 231 248 235 121 92 160 8 87 219 47 215 175 215 58 69 14 198 14 106 146 24 168 67 24 112 104 126 9 104 148 79 109 197 255 235 48 228 105 59 124)
  :der-encode
  #f
  :tests
  '(#(127
      "small r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 201 147 38 76 153 50 100 201 147 38 76 153 50 100 17 210 229 91 50 20 168 214 117 40 129 42 85 171)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 242 147 168 162 180 175 240 190 217 92 102 59 54 74 254 105 119 141 56 221 126 122 48 79 125 60 116 230 23 223 208 158 120 3 196 67 154 108 7 92 181 121 205 230 82 208 63 117 89 255 88 132 99 18 250 76)
  :der-encode
  #f
  :tests
  '(#(128
      "smallish r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 45 155 77 52 121 82 204 62 133 213 100 116 181 197 95 190 134 96 132 66 168 75 43 240 147 183 215 95 83 164 114 80 225 199 12)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 212 221 240 3 178 152 203 170 125 46 220 88 75 40 180 116 167 97 98 237 75 91 15 98 34 197 67 23 212 228 254 3 15 23 143 180 170 74 109 127 97 38 94 205 126 241 60 49 54 6 184 211 65 168 185 84)
  :der-encode
  #f
  :tests
  '(#(129
      "100-bit r and small s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 16 51 230 126 55 179 43 68 85 128 191 78 251 2 253 2 253 2 253 2 253 2 253 2 253 2 253 0 67 164 253 45 163 23 36 115 8 199 77 198 184)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 138 91 240 2 143 30 62 182 132 29 238 123 143 135 63 104 176 197 96 229 146 227 24 32 116 245 28 232 150 104 195 34 36 182 91 104 73 113 61 53 227 172 241 120 104 98 230 91 90 102 75 71 160 152 202 160)
  :der-encode
  #f
  :tests
  '(#(130
      "small r and 100 bit s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 208 84 52 171 172 216 89 237 116 24 94 117 183 81 198 217 246 12 121 33 218 207 187 142 25 205 186 142)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 181 62 86 155 24 233 54 21 103 229 113 62 230 158 203 231 148 153 17 176 37 117 70 162 76 61 209 55 242 154 131 51 76 255 28 68 216 192 195 59 109 173 184 86 140 2 79 161 251 182 148 205 158 112 95 90)
  :der-encode
  #f
  :tests
  '(#(131
      "100-bit r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 37 34 187 211 236 190 124 57 233 62 124 36 208 84 52 171 172 216 89 237 116 24 94 117 183 81 198 217 246 12 121 33 218 207 187 142 25 205 186 142)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 119 243 235 245 39 37 200 9 172 187 25 173 240 147 18 106 42 58 6 92 166 84 194 32 153 201 120 18 159 25 72 210 60 81 88 236 42 223 244 85 235 47 237 241 7 93 78 194 45 102 9 119 66 74 16 247)
  :der-encode
  #f
  :tests
  '(#(132
      "r and s^-1 are close to n"
      #vu8(49 50 51 52 48 48)
      #vu8(255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 41 189 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 167 247 185 158 92 220 111 236 137 40 239 247 115 204 223 59 104 177 157 67 205 180 24 9 225 156 96 243 23 54 183 160 193 42 156 45 112 102 113 145 41 21 20 43 62 5 200 158 243 173 73 123 214 195 70 153)
  :der-encode
  #f
  :tests
  '(#(133
      "s == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1)
      #t
      ())
    #(134
      "s == 0"
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 156 240 0 16 180 173 134 99 111 108 199 15 181 140 59 153 92 13 18 228 111 197 142 36 176 210 143 105 33 200 168 163 32 204 69 12 203 21 235 215 22 23 244 237 37 219 77 52 19 251 223 21 125 49 219 182)
  :der-encode
  #f
  :tests
  '(#(135
      "point at infinity during verify"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 30 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 174 155 54 54 184 84 114 50 223 67 133 89 181 161 9 224 35 138 115 167 106 252 37 208 112 234 39 66 114 16 166 157 228 74 214 69 177 176 56 69 4 15 70 252 226 56 233 44 19 26 113 228 177 132 192 31)
  :der-encode
  #f
  :tests
  '(#(136
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 31 127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 30)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 141 87 212 252 230 39 87 121 24 136 193 147 128 118 253 118 109 174 178 236 159 27 218 138 213 223 72 9 170 222 146 77 126 163 174 90 187 208 113 154 125 72 101 117 157 166 84 207 118 207 126 192 49 39 113 8)
  :der-encode
  #f
  :tests
  '(#(137
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 31 127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 31)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 16 81 142 183 169 38 181 247 182 91 232 1 236 155 42 191 118 173 206 37 198 21 46 69 42 53 18 200 63 50 43 154 181 126 168 53 42 210 155 235 153 239 53 107 113 52 50 252 196 174 243 31 144 48 69 217)
  :der-encode
  #f
  :tests
  '(#(138
      "u1 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 187 90 82 244 47 156 146 97 237 67 97 245 148 34 161 227 0 54 231 195 43 39 12 136 7 164 25 254)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 138 93 254 220 157 209 203 154 67 156 136 179 221 71 43 46 102 23 63 120 102 133 93 182 187 108 18 253 59 173 251 184 164 198 253 128 230 101 16 149 121 39 199 138 42 160 46 206 246 40 22 208 53 107 73 195)
  :der-encode
  #f
  :tests
  '(#(139
      "u1 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 68 165 173 11 208 99 109 158 18 188 158 10 107 220 116 191 224 130 8 122 232 182 28 189 84 184 16 63)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 131 165 159 195 223 41 94 132 194 144 179 45 11 85 10 6 249 148 86 252 34 152 228 166 140 79 43 255 27 52 244 131 219 48 219 58 81 216 40 135 50 193 7 216 177 168 88 205 84 195 147 110 27 92 17 164)
  :der-encode
  #f
  :tests
  '(#(140
      "u2 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 88 186 218 87 138 32 93 110 23 7 34 200 237 108 119 21 1 31 227 61 126 186 134 158 209 212 72 167 91 228 115 12 29 45 46 248 129 224 47 2 138 36 27 125 125 59 13 11 74 156 5 101 252 180 153 119)
  :der-encode
  #f
  :tests
  '(#(141
      "u2 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 170 170 170 170 170 170 170 170 170 170 170 170 170 170 15 23 64 123 74 212 13 62 27 131 146 232 28 41)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 127 204 121 155 145 159 233 120 156 224 29 217 32 39 49 203 125 129 81 88 188 108 184 70 135 96 36 124 15 157 41 87 224 221 94 76 64 18 75 213 224 221 27 228 28 3 143 206 44 209 220 129 78 10 243 125)
  :der-encode
  #f
  :tests
  '(#(142
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 147 200 198 81 101 52 48 203 79 22 117 252 134 181 232 44 160 79 242 171 21 1 103 68 118 170 193 105)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 61 221 104 246 157 11 253 71 173 25 55 15 163 220 114 235 37 130 104 194 181 243 118 136 82 21 22 116 251 224 225 85 217 77 35 115 160 26 94 112 241 161 5 37 158 123 139 29 47 223 77 186 60 244 199 128)
  :der-encode
  #f
  :tests
  '(#(143
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 157 245 10 204 51 179 98 90 45 89 64 221 19 219 185 125 31 125 213 106 255 248 183 222 117 69 18 124)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 28 177 245 100 194 158 191 96 163 66 179 188 51 200 148 92 178 121 198 193 160 18 37 92 135 78 28 55 183 81 145 171 59 43 183 48 145 78 191 161 64 128 65 9 112 183 30 175 79 224 30 45 72 190 152 145)
  :der-encode
  #f
  :tests
  '(#(144
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 220 232 194 35 242 53 105 157 31 93 45 205 228 128 157 1 51 144 181 145 41 247 131 35 149 37 192 143)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 68 227 9 235 104 110 122 247 241 226 204 23 253 86 84 43 56 145 11 59 121 8 234 84 251 3 141 54 71 126 130 157 76 131 50 229 178 159 52 74 210 122 33 193 141 171 36 163 28 231 152 91 99 162 19 4)
  :der-encode
  #f
  :tests
  '(#(145
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 7 74 174 148 78 231 167 213 68 165 173 11 208 99 102 248 114 210 37 11 163 1 138 99 210 167 242 230)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 199 40 6 69 66 203 81 66 245 238 254 99 129 36 220 215 161 173 11 53 85 132 42 71 221 81 8 225 16 18 157 216 120 235 212 115 19 39 108 236 134 245 33 234 149 133 205 16 91 61 196 33 20 25 147 184)
  :der-encode
  #f
  :tests
  '(#(146
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 170 233 68 238 122 125 84 74 90 208 189 6 54 217 69 95 78 131 222 15 24 111 137 188 165 107 60 92)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 196 108 26 211 211 208 223 142 156 15 82 92 33 206 141 129 239 157 102 41 127 68 45 99 9 150 103 34 12 250 34 83 170 49 169 141 137 102 184 89 105 191 156 129 156 1 146 146 239 106 83 172 29 178 161 8)
  :der-encode
  #f
  :tests
  '(#(147
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 85 210 137 220 244 250 168 148 181 161 122 12 109 179 116 27 188 78 203 224 29 1 234 51 238 122 78 123)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 183 178 228 140 30 96 226 9 37 244 217 182 190 96 13 216 55 134 169 54 201 191 171 0 99 156 51 202 169 103 203 198 80 112 115 154 51 121 218 128 213 72 67 161 141 156 17 162 154 50 35 74 11 48 60 18)
  :der-encode
  #f
  :tests
  '(#(148
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 78 231 167 213 68 165 173 11 208 99 109 158 18 188 86 28 224 79 170 241 49 43 186 58 21 96 30 188)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 244 163 212 89 136 117 175 127 39 65 187 214 123 23 51 182 84 27 197 50 91 59 203 77 50 103 194 126 195 11 243 34 245 138 69 198 194 170 44 237 85 241 117 209 203 247 42 124 91 252 70 77 116 246 102 192)
  :der-encode
  #f
  :tests
  '(#(149
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 54 27 156 215 77 101 231 154 88 116 197 1 188 164 151 59 32 52 126 201 127 109 225 0 114 216 180 106)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 86 209 229 193 214 100 246 206 47 193 252 185 55 167 206 35 26 41 72 106 191 54 199 63 119 162 189 17 108 178 130 201 215 198 252 5 243 153 193 131 232 128 234 54 46 223 4 60 210 143 250 201 249 79 33 65)
  :der-encode
  #f
  :tests
  '(#(150
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 108 55 57 174 154 203 207 52 176 233 138 3 121 73 46 118 64 104 253 146 254 219 194 0 229 177 104 212)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 48 188 232 198 183 241 187 186 4 11 141 18 29 133 213 81 103 172 153 178 226 207 28 250 200 176 24 181 241 195 132 195 91 224 174 48 154 92 181 90 186 152 35 67 210 18 95 45 74 85 157 140 84 83 89 205)
  :der-encode
  #f
  :tests
  '(#(151
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 162 82 214 133 232 49 182 207 9 94 79 5 53 237 197 177 96 157 124 92 126 73 163 1 88 138 29 62)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 232 126 83 138 151 140 241 135 144 139 235 39 164 162 71 212 150 168 66 29 171 31 231 159 135 68 210 181 83 155 159 143 232 189 220 247 201 124 68 197 90 79 194 47 77 120 246 169 97 68 122 91 97 59 92 73)
  :der-encode
  #f
  :tests
  '(#(152
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 238 116 97 17 249 26 180 206 143 174 150 230 242 63 217 210 10 36 210 231 158 234 86 52 120 192 245 102)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 17 58 44 197 124 142 231 222 17 188 69 225 69 70 199 42 41 114 91 154 114 24 17 74 195 31 2 129 108 118 91 154 70 176 33 83 18 163 41 47 89 121 201 141 55 179 88 131 186 161 86 40 27 27 174 140)
  :der-encode
  #f
  :tests
  '(#(153
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 127 255 255 255 255 255 255 255 255 255 255 255 255 255 178 54 74 232 80 20 177 73 184 108 116 30 184 190)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 35 221 156 63 26 75 71 139 1 250 44 94 153 125 4 130 7 59 50 145 141 228 75 229 131 220 247 74 214 97 165 237 87 154 47 9 210 255 86 214 184 15 38 86 141 147 162 55 202 100 68 176 202 220 121 81)
  :der-encode
  #f
  :tests
  '(#(154
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 133 95 91 45 200 228 110 196 40 165 147 247 50 25 207 101 218 231 147 232 52 110 48 204 55 1 48 156)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 187 206 75 23 212 93 36 161 200 11 200 236 169 140 53 157 94 30 69 128 88 160 11 149 6 67 37 109 254 9 224 146 49 142 57 48 61 202 3 104 142 78 207 48 3 0 120 67 18 214 23 229 8 140 88 76)
  :der-encode
  #f
  :tests
  '(#(155
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 45 181 246 26 234 129 114 118 175 32 100 225 4 199 163 14 50 3 76 181 38 221 10 172 250 86 86 111)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 3 95 88 68 108 27 219 234 165 102 96 168 151 235 249 101 242 209 136 32 199 205 6 48 240 74 73 83 71 189 250 234 96 9 31 64 94 9 146 156 178 192 226 246 238 213 62 8 113 183 254 12 213 161 93 133)
  :der-encode
  #f
  :tests
  '(#(156
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 132 166 199 81 62 95 72 192 127 255 255 255 255 255 135 19 243 203 161 41 62 79 62 149 89 127 230 189)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 145 28 0 51 234 196 99 50 105 28 183 146 12 73 80 238 213 115 84 118 30 16 129 161 234 159 18 121 80 142 191 124 253 62 171 93 171 222 225 190 20 206 130 150 177 252 32 172 250 172 22 247 130 76 96 2)
  :der-encode
  #f
  :tests
  '(#(157
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 108 117 19 229 244 140 7 255 255 255 255 255 255 255 157 33 253 27 49 84 76 177 60 168 106 117 178 94)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 98 178 171 183 11 185 199 239 223 181 113 129 244 51 182 71 81 241 8 19 13 206 24 13 105 146 231 211 18 75 58 168 165 62 94 237 247 42 166 126 110 220 199 31 25 227 110 106 209 208 153 165 159 253 149 85)
  :der-encode
  #f
  :tests
  '(#(158
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 216 234 39 203 233 24 15 255 255 255 255 255 255 255 58 67 250 54 98 168 153 98 121 80 212 235 100 188)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 15 117 147 48 231 153 39 82 170 230 168 95 123 176 89 151 132 190 165 62 40 143 247 238 141 83 213 230 222 254 97 115 98 56 14 146 249 162 60 79 220 195 78 9 113 58 171 156 196 65 25 65 143 111 47 209)
  :der-encode
  #f
  :tests
  '(#(159
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 62 95 72 192 127 255 255 255 255 255 255 255 255 255 199 36 150 140 14 207 158 215 131 116 74 115 55 179)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 143 46 218 66 116 42 179 31 93 76 246 102 137 45 29 98 62 253 59 38 247 223 154 167 2 150 232 13 59 234 242 53 207 234 65 250 219 152 197 51 168 253 235 88 65 214 158 230 95 110 113 145 71 17 241 56)
  :der-encode
  #f
  :tests
  '(#(160
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 191 255 255 255 255 255 255 255 255 255 255 255 255 255 61 135 187 68 200 51 187 56 77 15 34 76 205 222)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 43 207 67 113 179 25 166 145 237 14 46 12 74 85 168 169 185 135 222 200 107 134 54 33 233 123 156 9 91 134 96 167 76 201 100 166 175 3 17 237 198 177 205 152 15 156 123 243 166 201 183 249 19 42 11 47)
  :der-encode
  #f
  :tests
  '(#(161
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 127 255 255 255 255 255 255 255 255 255 255 255 255 255 100 108 149 208 160 41 98 147 112 216 232 61 113 127)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 166 242 82 86 143 111 189 26 224 69 230 2 52 67 89 192 194 22 145 23 35 116 143 154 62 127 173 236 59 118 239 199 91 160 48 191 231 222 45 237 104 105 145 230 24 61 64 36 26 5 180 121 105 60 112 21)
  :der-encode
  #f
  :tests
  '(#(162
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 63 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 32)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 167 76 28 58 49 199 212 147 171 44 10 248 156 245 230 136 98 28 169 70 109 43 161 216 118 28 63 232 43 160 208 143 76 159 118 133 108 43 113 56 200 241 231 128 182 149 153 146 177 108 205 253 146 95 75 58)
  :der-encode
  #f
  :tests
  '(#(163
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 150 218 251 13 117 64 185 59 87 144 50 112 130 99 92 216 137 94 30 121 157 93 25 249 43 89 64 86)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 3 78 167 39 152 37 127 51 242 79 100 196 148 56 252 67 232 246 125 220 113 112 253 18 126 44 67 242 128 86 42 204 155 73 242 215 252 200 148 33 210 165 219 46 168 221 3 97 251 72 216 151 212 97 38 39)
  :der-encode
  #f
  :tests
  '(#(164
      "point duplication during verification"
      #vu8(49 50 51 52 48 48)
      #vu8(196 69 3 218 232 93 213 33 7 128 240 41 40 179 217 39 23 28 87 143 134 3 209 107 36 6 99 199 63 85 47 28 43 1 101 30 223 89 2 101 15 233 171 4 111 113 153 154 201 40 237 192 8 123 219 19)
      #t
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 3 78 167 39 152 37 127 51 242 79 100 196 148 56 252 67 232 246 125 220 113 112 253 18 126 44 67 242 127 169 213 51 100 182 13 40 3 55 107 222 45 90 36 208 87 34 252 158 4 183 39 104 43 158 217 218)
  :der-encode
  #f
  :tests
  '(#(165
      "duplication bug"
      #vu8(49 50 51 52 48 48)
      #vu8(196 69 3 218 232 93 213 33 7 128 240 41 40 179 217 39 23 28 87 143 134 3 209 107 36 6 99 199 63 85 47 28 43 1 101 30 223 89 2 101 15 233 171 4 111 113 153 154 201 40 237 192 8 123 219 19)
      #f
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 54 114 186 151 24 230 13 0 234 180 41 92 129 158 163 102 167 120 221 111 214 33 250 150 101 37 156 182 122 229 232 71 238 174 166 116 190 235 99 99 121 233 104 247 146 101 80 46 65 74 29 68 79 4 174 121)
  :der-encode
  #f
  :tests
  '(#(166
      "comparison with point at infinity "
      #vu8(49 50 51 52 48 48)
      #vu8(85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 51 51 51 51 51 51 51 51 51 51 51 51 51 51 4 134 249 190 150 114 208 197 213 13 223 69 162 12)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 51 238 239 191 199 114 41 19 110 86 181 117 20 72 99 237 144 180 192 248 169 227 21 129 109 109 230 72 5 23 73 221 17 72 12 20 31 181 161 148 99 19 22 60 1 65 38 91 104 162 98 22 188 185 147 106)
  :der-encode
  #f
  :tests
  '(#(167
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 189 160 59 36 182 34 67 198 30 40 139 110 161 233 154 40 134 247 0 148 78 177 184 240 70 108 255 214 28 113 42 58 170 206 105 51 25 137 183 7 230 158 141 227 157 124 209 174 182 93 151 173 24 0 191 127)
  :der-encode
  #f
  :tests
  '(#(168
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 219 109 182 219 109 182 219 109 182 219 109 182 219 108 238 212 192 158 132 199 126 189 145 22 225 115 145 235)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 122 187 160 203 255 19 77 220 245 77 4 132 111 149 75 136 44 169 250 239 223 232 24 137 139 251 55 139 121 47 16 181 121 112 174 87 187 79 176 28 8 136 104 72 133 90 235 25 132 211 214 252 178 180 18 223)
  :der-encode
  #f
  :tests
  '(#(169
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 51 51 51 51 51 51 51 51 51 51 51 51 51 51 4 134 249 190 150 114 208 197 213 13 223 69 162 12)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 246 141 153 226 134 83 185 186 62 124 237 179 183 129 101 245 165 79 190 144 212 185 248 132 151 151 126 22 35 77 163 234 160 23 138 81 181 176 194 8 239 8 24 223 111 101 120 121 60 26 241 120 112 38 184 218)
  :der-encode
  #f
  :tests
  '(#(170
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 204 204 204 204 204 204 204 204 204 204 204 204 204 204 18 27 230 250 89 203 67 23 84 55 125 22 136 49)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 6 93 158 241 51 206 129 194 214 182 110 146 131 96 249 82 127 143 54 181 186 221 53 181 241 9 52 39 32 4 133 39 85 247 116 64 160 176 139 159 22 84 137 192 105 110 139 73 129 214 208 74 40 91 15 209)
  :der-encode
  #f
  :tests
  '(#(171
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 82)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 214 206 160 148 114 237 229 116 206 30 5 70 201 172 208 225 205 140 186 155 18 29 242 158 137 213 9 46 131 144 78 191 185 2 234 97 201 135 220 5 8 224 201 167 229 99 226 96 159 234 247 145 64 171 145 214)
  :der-encode
  #f
  :tests
  '(#(172
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 14 177 14 90 185 95 172 222 212 6 16 41 214 58 70 244 111 18 148 116 17 242 234 86 26 89 32 87)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 197 32 177 128 3 179 86 9 65 71 238 47 157 241 23 133 114 190 216 55 189 137 68 59 37 235 206 184 14 46 147 169 152 251 186 190 130 25 46 164 200 86 81 207 9 169 90 176 220 46 61 151 94 231 190 152)
  :der-encode
  #f
  :tests
  '(#(173
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 157 208 185 155 183 168 48 188 199 213 90 186 196 41 18 213 37 176 99 197 12 243 119 202 87 113 162 108 161 65 252 207 7 147 194 186 36 105 169 70 194 212 237 38 52 64 82 198 58 109 126 119 151 206 150 195)
  :der-encode
  #f
  :tests
  '(#(174
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 219 109 182 219 109 182 219 109 182 219 109 182 219 108 238 212 192 158 132 199 126 189 145 22 225 115 145 235)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 61 171 159 27 25 231 21 209 116 167 54 9 32 55 93 86 154 24 31 5 94 102 240 19 145 135 27 111 71 166 216 124 35 165 182 161 227 208 169 114 19 2 204 2 204 227 95 53 222 160 142 34 97 155 229 33)
  :der-encode
  #f
  :tests
  '(#(175
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 51 51 51 51 51 51 51 51 51 51 51 51 51 51 4 134 249 190 150 114 208 197 213 13 223 69 162 12)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 86 221 225 186 88 234 49 5 59 37 53 198 102 35 52 76 36 199 45 33 74 245 190 105 130 232 145 0 231 113 8 72 6 20 62 134 242 179 27 218 246 34 128 245 179 17 208 210 189 187 56 91 32 252 108 135)
  :der-encode
  #f
  :tests
  '(#(176
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 204 204 204 204 204 204 204 204 204 204 204 204 204 204 18 27 230 250 89 203 67 23 84 55 125 22 136 49)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 148 239 225 56 127 192 68 125 125 188 181 55 57 160 228 224 221 236 24 29 56 44 174 166 69 177 166 18 68 20 166 177 199 137 8 208 250 32 111 143 45 233 80 173 74 20 209 206 148 217 205 219 227 46 70 1)
  :der-encode
  #f
  :tests
  '(#(177
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 82)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 98 134 128 59 149 41 118 238 24 151 1 54 149 211 239 44 187 111 151 113 66 160 66 178 54 87 37 119 114 42 108 233 173 62 63 210 142 69 24 51 73 108 99 184 171 112 83 136 119 33 95 32 73 66 191 89)
  :der-encode
  #f
  :tests
  '(#(178
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 14 177 14 90 185 95 172 222 212 6 16 41 214 58 70 244 111 18 148 116 17 242 234 86 26 89 32 87)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 189 55 99 136 181 247 35 251 76 34 223 230 205 67 117 160 90 7 71 100 68 213 129 153 133 0 126 52)
  :der-encode
  #f
  :tests
  '(#(179
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(187 90 82 244 47 156 146 97 237 67 97 245 148 34 161 227 0 54 231 195 43 39 12 136 7 164 25 254 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 81)
      #f
      ())
    #(180
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(68 165 173 11 208 99 109 158 18 188 158 10 107 220 116 191 224 130 8 122 232 182 28 189 84 184 16 63 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 81)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 66 200 156 119 74 8 220 4 179 221 32 25 50 188 138 94 165 248 184 155 187 42 126 102 122 255 129 205)
  :der-encode
  #f
  :tests
  '(#(181
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(187 90 82 244 47 156 146 97 237 67 97 245 148 34 161 227 0 54 231 195 43 39 12 136 7 164 25 254 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 81)
      #f
      ())
    #(182
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(68 165 173 11 208 99 109 158 18 188 158 10 107 220 116 191 224 130 8 122 232 182 28 189 84 184 16 63 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 81)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 76 36 102 112 101 138 29 65 245 215 123 206 36 108 190 56 106 194 40 72 226 105 185 212 205 103 196 102 221 217 71 21 61 57 178 212 37 51 164 96 222 242 104 128 64 140 175 45 211 221 72 254 136 140 209 118)
  :der-encode
  #f
  :tests
  '(#(183
      "pseudorandom signature"
      #vu8()
      #vu8(3 100 231 217 104 50 97 74 128 33 110 115 12 53 53 52 212 191 253 44 38 100 156 11 75 14 38 40 143 64 6 75 65 47 227 140 91 169 207 102 78 97 114 237 72 230 231 159 15 229 227 26 84 152 93 252)
      #t
      ())
    #(184
      "pseudorandom signature"
      #vu8(77 115 103)
      #vu8(244 182 141 246 43 146 56 54 60 204 27 190 224 13 235 63 178 105 63 120 148 23 142 20 238 172 89 106 127 81 201 69 26 218 205 43 203 199 33 247 223 6 67 215 205 24 166 181 32 100 181 7 225 145 47 35)
      #t
      ())
    #(185
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(178 151 12 222 194 156 112 41 74 24 187 196 153 133 239 163 58 204 10 245 9 195 38 163 151 122 53 232 12 234 62 216 235 170 246 238 106 239 96 73 162 60 188 57 246 31 207 143 198 190 75 171 19 56 85 121)
      #t
      ())
    #(186
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(126 123 14 183 218 140 104 167 7 43 17 64 78 233 90 92 64 127 191 227 214 150 70 128 46 40 174 119 212 9 162 246 187 170 229 155 182 15 192 160 146 177 47 164 230 125 200 208 136 207 25 168 51 50 47 214)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 174 214 252 173 36 0 196 217 78 85 219 182 176 18 206 61 76 43 70 132 63 190 153 212 40 158 110 207 138 36 168 158 113 52 61 125 21 29 37 141 44 182 144 52 156 45 86 179 102 221 16 166 0 0 0 0)
  :der-encode
  #f
  :tests
  '(#(187
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(81 155 241 133 255 70 53 39 25 97 250 73 27 226 87 35 29 238 234 156 83 166 237 227 180 168 158 209 72 107 218 212 132 166 163 19 78 20 113 207 86 169 223 15 172 80 247 115 179 227 125 111 50 118 23 215)
      #t
      ())
    #(188
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(9 253 100 72 152 183 203 93 1 139 82 35 78 123 78 242 181 71 137 175 208 206 156 67 78 158 85 21 241 147 9 83 33 100 234 32 83 202 229 93 247 189 203 171 83 108 131 234 123 254 111 225 13 96 193 171)
      #t
      ())
    #(189
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(236 145 157 78 40 60 207 31 113 169 227 192 247 129 163 103 88 211 243 139 27 120 168 122 116 40 142 128 76 70 99 4 74 115 199 155 216 143 13 194 69 171 26 50 248 159 6 244 10 112 75 49 233 250 188 81)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 191 25 236 254 67 255 226 137 246 153 244 121 49 97 69 185 167 247 55 11 158 206 90 177 33 33 116 241 115 213 40 148 154 233 20 47 129 139 173 231 26 150 4 7 150 59 224 182 72 42 106 96 255 255 255 255)
  :der-encode
  #f
  :tests
  '(#(190
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(197 23 96 71 132 71 33 117 151 236 198 244 0 27 212 80 136 213 60 144 245 49 3 96 139 248 138 234 162 1 37 58 169 3 249 120 30 137 146 16 29 113 113 210 221 58 93 72 196 77 142 29 84 76 214 215)
      #t
      ())
    #(191
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(118 190 1 18 103 78 194 145 40 130 62 26 247 81 46 97 67 135 47 239 48 166 78 47 23 153 189 86 24 126 80 62 26 72 194 123 84 159 224 164 206 94 88 30 36 44 134 99 252 158 251 2 214 242 177 147)
      #t
      ())
    #(192
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(54 36 94 241 38 181 181 30 69 159 132 234 170 213 164 149 6 31 4 113 220 140 35 241 197 241 98 130 57 227 29 114 160 107 168 225 79 207 149 119 142 7 188 22 162 98 142 57 68 157 168 133 125 80 110 220)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 38 229 171 241 53 203 84 234 170 22 182 158 75 11 41 34 117 52 78 136 160 157 246 223 128 0 0 0 234 184 145 222 84 227 242 111 245 10 185 137 243 51 218 197 81 88 61 70 138 230 35 197 150 67 74 240)
  :der-encode
  #f
  :tests
  '(#(193
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(37 134 130 151 93 248 188 167 242 3 247 113 235 235 71 142 246 55 54 12 134 15 195 134 207 178 23 69 118 99 231 1 136 4 126 65 70 154 42 53 200 195 48 221 144 15 35 64 186 130 170 253 34 150 42 150)
      #t
      ())
    #(194
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(133 201 134 20 243 108 13 102 248 216 120 52 202 233 120 97 27 123 78 235 245 154 70 190 161 184 154 233 209 161 142 55 141 218 132 14 6 182 15 98 121 191 10 34 49 217 250 45 141 44 49 232 139 193 189 215)
      #t
      ())
    #(195
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(202 123 116 50 186 65 255 33 18 225 17 111 255 222 137 187 214 143 92 230 127 229 81 61 22 200 230 247 228 33 183 89 158 1 128 121 138 204 32 6 69 22 3 205 162 219 29 88 39 65 17 110 96 51 206 95)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 236 98 127 52 85 69 208 63 140 109 189 8 229 117 82 113 22 86 127 227 117 249 236 170 255 255 255 255 65 191 112 86 151 213 247 22 188 247 135 24 213 57 59 99 169 134 145 244 161 242 66 70 55 85 56 253)
  :der-encode
  #f
  :tests
  '(#(196
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(25 57 127 229 211 236 171 248 15 198 36 193 191 55 149 100 56 117 23 193 133 8 125 201 125 96 80 105 51 181 119 62 154 175 108 52 203 97 44 252 129 239 211 191 156 34 34 78 140 79 161 191 204 245 197 1)
      #t
      ())
    #(197
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(112 242 79 92 22 65 100 191 187 132 89 170 18 169 129 170 49 45 188 240 2 4 50 110 186 170 189 200 245 206 190 232 202 237 174 134 98 196 53 1 102 80 132 180 93 47 73 79 183 13 96 48 67 84 61 196)
      #t
      ())
    #(198
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(11 242 216 110 202 168 181 106 202 94 143 142 188 180 80 129 208 120 161 69 85 183 95 91 232 233 177 50 154 85 179 206 71 52 132 153 102 181 3 76 205 155 25 247 100 7 238 2 65 195 245 142 123 143 200 154)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 21 1 110 82 179 100 114 213 54 71 118 5 251 128 93 211 144 48 130 160 98 209 234 48 175 158 85 90 0 0 0 0 118 45 40 241 253 194 25 24 79 129 104 31 191 245 102 212 101 181 241 243 30 135 45 245)
  :der-encode
  #f
  :tests
  '(#(199
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(191 197 220 68 52 205 9 54 150 16 104 125 56 210 212 24 182 63 212 117 222 162 70 164 86 178 90 58 177 113 223 166 207 114 47 32 129 99 112 168 104 120 93 168 66 179 123 172 49 215 183 142 103 81 252 80)
      #t
      ())
    #(200
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(143 219 232 218 100 108 86 66 215 103 199 219 235 56 114 177 237 171 110 55 54 88 5 240 233 76 224 169 188 243 90 184 18 34 136 61 211 82 108 176 207 147 19 143 70 135 205 11 16 194 176 161 38 56 81 97)
      #t
      ())
    #(201
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(226 58 17 39 88 72 253 79 139 111 74 196 252 48 94 174 152 29 59 125 196 83 229 169 128 196 100 34 26 135 86 147 242 74 3 234 22 20 196 195 187 208 221 114 33 66 159 34 179 55 234 125 152 52 140 164)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 21 1 110 82 179 100 114 213 54 71 118 5 251 128 93 211 144 48 130 160 98 209 234 48 175 158 85 90 255 255 255 255 137 210 215 14 2 61 230 231 176 126 151 223 64 10 153 43 154 74 14 12 225 120 210 12)
  :der-encode
  #f
  :tests
  '(#(202
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(118 100 81 100 255 154 243 161 169 32 95 218 46 239 50 109 43 255 199 149 220 196 130 149 71 254 1 221 182 91 186 80 55 25 49 75 39 115 77 208 107 19 149 213 64 175 131 150 2 155 120 184 78 1 73 235)
      #t
      ())
    #(203
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(50 250 12 167 224 127 31 134 172 53 7 52 153 78 31 49 182 218 156 130 249 61 206 210 185 131 194 156 123 120 145 40 34 6 164 87 17 189 252 178 161 2 181 210 137 223 132 255 87 120 84 134 3 87 64 4)
      #t
      ())
    #(204
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(45 84 146 71 140 166 78 81 17 223 216 82 24 103 182 71 123 126 120 34 120 73 173 9 11 133 86 148 165 50 245 162 250 53 148 175 129 205 89 40 184 27 64 87 218 113 123 229 251 66 163 168 108 104 25 13)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 0 0 0 0 247 228 113 61 8 81 18 17 44 55 205 244 96 31 246 136 218 121 96 22 183 26 114 122 222 90 158 193 101 5 76 201 135 249 220 135 233 153 27 146 228 250 100 156 166 85 238 174 159 42 48 225)
  :der-encode
  #f
  :tests
  '(#(205
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(25 30 238 93 175 85 205 73 158 133 57 203 44 255 121 124 254 197 213 102 210 2 123 249 248 214 70 147 218 223 234 232 19 31 100 217 107 148 253 52 1 151 202 162 188 4 129 133 84 129 47 238 243 52 48 112)
      #t
      ())
    #(206
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(224 226 192 129 128 184 162 7 238 145 5 167 211 121 250 17 35 104 232 55 15 160 157 253 228 164 92 69 199 23 188 8 96 224 22 231 206 72 248 254 106 41 155 54 144 106 96 85 173 173 147 180 22 206 136 56)
      #t
      ())
    #(207
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(27 145 158 249 53 50 41 39 67 187 46 27 123 72 148 253 132 124 110 93 229 42 8 225 176 242 220 251 194 211 13 107 117 148 216 219 210 97 73 26 225 213 135 121 80 91 7 91 100 229 86 77 201 122 65 139)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 255 255 255 255 234 223 124 238 141 52 208 76 242 44 143 125 227 86 116 251 47 80 29 36 42 118 247 37 134 196 9 48 157 57 142 96 206 30 10 76 158 5 169 211 38 39 87 126 140 226 204 127 58 250 44 62)
  :der-encode
  #f
  :tests
  '(#(208
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(231 93 180 158 211 63 242 136 94 166 16 12 201 91 143 225 185 36 46 164 36 141 176 123 202 194 224 32 121 108 134 97 66 174 142 183 91 176 73 156 102 140 111 228 84 151 105 47 188 198 107 55 194 228 98 79)
      #t
      ())
    #(209
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(31 129 205 146 67 98 236 130 88 144 48 123 155 57 54 224 216 247 40 167 200 75 219 67 197 207 4 51 57 211 228 106 3 4 10 212 26 192 38 177 142 6 41 246 20 94 61 200 209 230 187 226 0 200 72 43)
      #t
      ())
    #(210
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(0 253 166 19 170 103 202 66 103 58 212 48 159 63 15 5 178 86 159 61 238 99 244 170 156 197 76 243 30 90 100 182 138 55 229 178 1 201 24 48 61 199 164 4 57 170 234 207 1 156 88 146 168 246 208 206)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 176 1 60 111 191 246 240 159 236 218 28 38 62 246 83 153 212 207 152 156 165 252 79 143 255 15 233 225 0 0 0 0 14 42 176 232 73 94 133 158 178 175 176 7 105 214 231 254 98 106 17 145 103 192 182 188)
  :der-encode
  #f
  :tests
  '(#(211
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(185 50 179 247 230 70 126 30 199 165 97 243 17 96 36 140 127 34 69 80 168 80 135 136 99 75 83 206 160 197 49 42 207 158 128 26 255 109 111 201 133 80 207 167 18 187 246 89 55 22 90 54 242 195 45 201)
      #t
      ())
    #(212
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(229 9 89 63 176 146 69 238 130 38 206 114 120 107 12 195 82 190 85 90 116 134 190 98 143 79 208 12 11 122 189 224 6 27 30 7 191 19 49 145 80 164 255 106 70 74 186 182 54 171 78 41 123 13 118 51)
      #t
      ())
    #(213
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(110 84 249 65 32 77 70 57 184 99 201 138 101 183 190 227 24 213 26 177 144 10 143 52 94 172 111 7 13 165 5 72 41 33 78 205 229 225 5 121 179 106 47 230 66 108 36 176 100 237 119 195 133 144 242 92)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha256_p1363_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 176 1 60 111 191 246 240 159 236 218 28 38 62 246 83 153 212 207 152 156 165 252 79 143 255 15 233 225 255 255 255 255 241 213 79 23 182 161 122 97 77 80 79 247 150 41 24 1 157 149 238 110 152 63 73 69)
  :der-encode
  #f
  :tests
  '(#(214
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(133 234 74 179 255 220 153 35 48 192 202 129 82 250 249 145 56 107 206 130 135 125 187 35 155 166 84 246 8 6 198 186 240 235 234 76 26 170 25 14 125 67 37 212 109 31 119 137 213 80 99 43 112 181 252 155)
      #t
      ())
    #(215
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(68 213 61 235 182 70 183 52 133 64 46 171 45 9 144 129 185 123 18 67 192 37 182 36 240 221 103 234 229 222 120 154 125 75 119 234 198 215 187 164 22 88 230 228 220 52 125 171 237 47 150 128 192 74 111 85)
      #t
      ())
    #(216
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(21 38 235 47 101 126 190 169 175 76 161 132 185 117 192 35 114 200 142 36 232 53 243 245 119 76 14 18 31 30 204 227 142 229 35 114 203 32 25 7 121 77 225 123 109 108 26 250 19 195 22 197 28 176 123 199)
      #t
      ())))
