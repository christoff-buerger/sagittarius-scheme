(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 41 39 177 5 18 186 227 237 220 254 70 120 40 18 139 173 41 3 38 153 25 247 8 96 105 200 196 223 108 115 40 56 199 120 121 100 234 172 0 229 146 31 177 73 138 96 244 96 103 102 179 217 104 80 1 85 141 26 151 78 115 65 81 62)
  :der-encode
  #t
  :tests
  '(#(1
      "signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 32 18 2 6 155 107 95 250 222 222 47 220 41 13 161 186 220 152 155 169 138 154 73 29 179 57 191 228 120 69 14 249 204)
      #t
      ())
    #(2
      "Legacy:ASN encoding of r misses leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #t
      ("MissingZero"))
    #(3
      "Legacy:ASN encoding of s misses leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 32 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #t
      ("MissingZero"))
    #(4
      "valid"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #t
      ())
    #(5
      "long form encoding of length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ("BER"))
    #(6
      "length of sequence contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 130 0 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ("BER"))
    #(7
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(8
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(9
      "uint32 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 1 0 0 0 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(10
      "uint64 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 137 1 0 0 0 0 0 0 0 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(11
      "length of sequence = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 127 255 255 255 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(12
      "length of sequence = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 255 255 255 255 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(13
      "length of sequence = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 255 255 255 255 255 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(14
      "length of sequence = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 136 255 255 255 255 255 255 255 255 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(15
      "incorrect length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 255 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(16
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(17
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 128 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(18
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 128 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(19
      "removing sequence"
      #vu8(49 50 51 52 48 48)
      #vu8()
      #f
      ())
    #(20
      "lonely sequence tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48)
      #f
      ())
    #(21
      "appending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 0 0)
      #f
      ())
    #(22
      "prepending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 0 0 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(23
      "appending unused 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 0 0)
      #f
      ())
    #(24
      "appending null value to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 5 0)
      #f
      ())
    #(25
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 75 73 129 119 48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(26
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 37 0 48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(27
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 0 4 222 173 190 239)
      #f
      ())
    #(28
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 75 34 38 73 129 119 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(29
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 34 37 37 0 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(30
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 78 34 35 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 0 4 222 173 190 239 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(31
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 75 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 34 38 73 129 119 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(32
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 34 37 37 0 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(33
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 78 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 34 35 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 0 4 222 173 190 239)
      #f
      ())
    #(34
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 78 170 0 187 0 205 0 48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(35
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 76 170 2 170 187 48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(36
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 78 34 41 170 0 187 0 205 0 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(37
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 76 34 39 170 2 170 187 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(38
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 78 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 34 41 170 0 187 0 205 0 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(39
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 76 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 34 39 170 2 170 187 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(40
      "truncated length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129)
      #f
      ())
    #(41
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 0 0)
      #f
      ())
    #(42
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 34 128 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 0 0 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(43
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 34 128 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 0 0)
      #f
      ())
    #(44
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 49 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 0 0)
      #f
      ())
    #(45
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 34 128 3 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 0 0 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(46
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 34 128 3 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 0 0)
      #f
      ())
    #(47
      "Replacing sequence with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(5 0)
      #f
      ())
    #(48
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(46 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(49
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(47 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(50
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(49 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(51
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(50 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(52
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(255 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(53
      "dropping value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 0)
      #f
      ())
    #(54
      "using composition for sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 48 1 2 48 69 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(55
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43)
      #f
      ())
    #(56
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(57
      "indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 0 0)
      #f
      ("BER"))
    #(58
      "indefinite length with truncated delimiter"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 0)
      #f
      ())
    #(59
      "indefinite length with additional element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 5 0 0 0)
      #f
      ())
    #(60
      "indefinite length with truncated element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 6 8 17 34 0 0)
      #f
      ())
    #(61
      "indefinite length with garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 0 0 254 2 190 239)
      #f
      ())
    #(62
      "indefinite length with nonempty EOC"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 0 2 190 239)
      #f
      ())
    #(63
      "prepend empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 48 0 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(64
      "append empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 48 0)
      #f
      ())
    #(65
      "append garbage with high tag number"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 191 127 0)
      #f
      ())
    #(66
      "sequence of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(67
      "truncated sequence: removed last 1 elements"
      #vu8(49 50 51 52 48 48)
      #vu8(48 35 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45)
      #f
      ())
    #(68
      "repeating element in sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 105 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(69
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 129 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ("BER"))
    #(70
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 129 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ("BER"))
    #(71
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 130 0 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ("BER"))
    #(72
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 130 0 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ("BER"))
    #(73
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 34 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(74
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 32 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(75
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 34 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(76
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 32 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(77
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 75 2 133 1 0 0 0 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(78
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 75 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 133 1 0 0 0 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(79
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 79 2 137 1 0 0 0 0 0 0 0 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(80
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 79 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 137 1 0 0 0 0 0 0 0 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(81
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 132 127 255 255 255 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(82
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 132 127 255 255 255 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(83
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 132 255 255 255 255 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(84
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 132 255 255 255 255 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(85
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 75 2 133 255 255 255 255 255 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(86
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 75 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 133 255 255 255 255 255 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(87
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 78 2 136 255 255 255 255 255 255 255 255 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(88
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 78 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 136 255 255 255 255 255 255 255 255 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(89
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 255 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(90
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 255 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(91
      "removing integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 35 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(92
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(93
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2)
      #f
      ())
    #(94
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 35 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 0 0 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(95
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 35 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 0 0)
      #f
      ())
    #(96
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 35 0 0 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ("BER"))
    #(97
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 35 0 0 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ("BER"))
    #(98
      "appending unused 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 0 0 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(99
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 35 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 5 0 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(100
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 35 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133 5 0)
      #f
      ())
    #(101
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 129 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(102
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 129)
      #f
      ())
    #(103
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 5 0 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(104
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 5 0)
      #f
      ())
    #(105
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 0 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(106
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 1 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(107
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 3 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(108
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 4 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(109
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 255 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(110
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 0 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(111
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 1 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(112
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 3 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(113
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 4 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(114
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 255 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(115
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 0 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(116
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 0)
      #f
      ())
    #(117
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 34 37 2 1 0 2 32 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(118
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 34 37 2 1 0 2 32 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(119
      "modify first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 2 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(120
      "modify first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 2 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(121
      "modify last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 173 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(122
      "modify last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 5)
      #f
      ())
    #(123
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(124
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 32 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43)
      #f
      ())
    #(125
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 34 255 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(126
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 34 255 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(127
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 9 1 128 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(128
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 9 1 128)
      #f
      ())
    #(129
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(130
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 1 0)
      #f
      ())
    #(131
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 1 220 190 2 210 128 145 252 204 167 18 23 94 30 255 218 118 13 8 193 102 153 41 91 34 53 94 94 58 233 187 20 126 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(132
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 220 190 2 212 128 145 252 202 167 18 23 94 30 255 218 118 147 58 204 11 74 250 30 24 77 234 200 180 240 244 201 220 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(133
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 255 35 65 253 44 127 110 3 52 88 237 232 161 225 0 37 137 175 222 57 71 13 238 67 98 190 91 108 136 18 168 16 211 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(134
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 35 65 253 43 127 110 3 53 88 237 232 161 225 0 37 137 108 197 51 244 181 5 225 231 178 21 55 75 15 11 54 36 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(135
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 254 35 65 253 45 127 110 3 51 88 237 232 161 225 0 37 137 242 247 62 153 102 214 164 221 202 161 161 197 22 68 235 130 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(136
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 1 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(137
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 35 65 253 44 127 110 3 52 88 237 232 161 225 0 37 137 175 222 57 71 13 238 67 98 190 91 108 136 18 168 16 211 2 33 0 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(138
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 1 237 253 249 98 148 160 5 35 33 208 35 214 242 94 69 34 225 50 75 208 179 230 31 86 173 179 177 13 179 183 80 214)
      #f
      ())
    #(139
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 32 237 253 249 100 148 160 5 33 33 208 35 214 242 94 69 35 103 100 86 117 101 182 226 76 198 64 27 135 186 241 6 52)
      #f
      ())
    #(140
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 255 18 2 6 156 107 95 250 221 222 47 220 41 13 161 186 220 219 180 174 220 243 49 127 46 70 6 25 181 72 171 212 123)
      #f
      ())
    #(141
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 254 18 2 6 157 107 95 250 220 222 47 220 41 13 161 186 221 30 205 180 47 76 25 224 169 82 76 78 242 76 72 175 42)
      #f
      ())
    #(142
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 33 1 237 253 249 99 148 160 5 34 33 208 35 214 242 94 69 35 36 75 81 35 12 206 128 209 185 249 230 74 183 84 43 133)
      #f
      ())
    #(143
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 220 190 2 211 128 145 252 203 167 18 23 94 30 255 218 118 80 33 198 184 242 17 188 157 65 164 147 119 237 87 239 45 2 32 18 2 6 156 107 95 250 221 222 47 220 41 13 161 186 220 219 180 174 220 243 49 127 46 70 6 25 181 72 171 212 123)
      #f
      ())
    #(144
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 0)
      #f
      ("EdgeCase"))
    #(145
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 1)
      #f
      ("EdgeCase"))
    #(146
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 255)
      #f
      ("EdgeCase"))
    #(147
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(148
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(149
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(150
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(151
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(152
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 0 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(153
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 9 1 66)
      #f
      ("EdgeCase"))
    #(154
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 0)
      #f
      ("EdgeCase"))
    #(155
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 1)
      #f
      ("EdgeCase"))
    #(156
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 255)
      #f
      ("EdgeCase"))
    #(157
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(158
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(159
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(160
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(161
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(162
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(163
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 9 1 66)
      #f
      ("EdgeCase"))
    #(164
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 0)
      #f
      ("EdgeCase"))
    #(165
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 1)
      #f
      ("EdgeCase"))
    #(166
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 255)
      #f
      ("EdgeCase"))
    #(167
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(168
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(169
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(170
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(171
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(172
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 255 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(173
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 9 1 66)
      #f
      ("EdgeCase"))
    #(174
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 2 1 0)
      #f
      ("EdgeCase"))
    #(175
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 2 1 1)
      #f
      ("EdgeCase"))
    #(176
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 2 1 255)
      #f
      ("EdgeCase"))
    #(177
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(178
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(179
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(180
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(181
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(182
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(183
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81 9 1 66)
      #f
      ("EdgeCase"))
    #(184
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 2 1 0)
      #f
      ("EdgeCase"))
    #(185
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 2 1 1)
      #f
      ("EdgeCase"))
    #(186
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 2 1 255)
      #f
      ("EdgeCase"))
    #(187
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(188
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(189
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(190
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(191
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(192
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(193
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80 9 1 66)
      #f
      ("EdgeCase"))
    #(194
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 2 1 0)
      #f
      ("EdgeCase"))
    #(195
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 2 1 1)
      #f
      ("EdgeCase"))
    #(196
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 2 1 255)
      #f
      ("EdgeCase"))
    #(197
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(198
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(199
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(200
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(201
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(202
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(203
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82 9 1 66)
      #f
      ("EdgeCase"))
    #(204
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 2 1 0)
      #f
      ("EdgeCase"))
    #(205
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 2 1 1)
      #f
      ("EdgeCase"))
    #(206
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 2 1 255)
      #f
      ("EdgeCase"))
    #(207
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(208
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(209
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(210
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(211
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(212
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(213
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 9 1 66)
      #f
      ("EdgeCase"))
    #(214
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0)
      #f
      ("EdgeCase"))
    #(215
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 1 1)
      #f
      ("EdgeCase"))
    #(216
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 1 255)
      #f
      ("EdgeCase"))
    #(217
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 81)
      #f
      ("EdgeCase"))
    #(218
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 80)
      #f
      ("EdgeCase"))
    #(219
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 82)
      #f
      ("EdgeCase"))
    #(220
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255)
      #f
      ("EdgeCase"))
    #(221
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ("EdgeCase"))
    #(222
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(223
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 9 1 66)
      #f
      ("EdgeCase"))
    #(224
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 12 1 48)
      #f
      ())
    #(225
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 5 2 1 1 12 0)
      #f
      ())
    #(226
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 9 12 2 37 115 12 3 115 37 115)
      #f
      ())
    #(227
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 48 3 2 1 0)
      #f
      ())
    #(228
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 3 2 1 1)
      #f
      ())
    #(229
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 1 1 0)
      #f
      ())
    #(230
      "Edge case for Shamir multiplication"
      #vu8(51 53 52 49 48)
      #vu8(48 68 2 32 100 161 170 181 0 13 14 128 79 62 47 192 43 222 233 190 143 243 18 51 78 43 161 109 17 84 124 151 113 28 137 142 2 32 61 78 108 105 23 107 185 227 14 236 48 74 48 217 130 203 63 96 115 162 39 63 54 182 123 27 40 72 153 176 129 99)
      #t
      ())
    #(231
      "special case hash"
      #vu8(50 55 50 57 55 50 54 52 49 55)
      #vu8(48 70 2 33 0 245 33 128 124 30 50 154 198 223 77 242 66 8 209 231 8 139 78 77 229 168 46 211 125 191 216 212 156 116 6 249 27 2 33 0 196 79 114 48 56 222 234 133 138 37 215 38 77 22 128 180 22 255 192 217 9 185 77 239 159 189 160 36 119 214 158 244)
      #t
      ())
    #(232
      "special case hash"
      #vu8(52 51 49 52 55 55 54 49 55)
      #vu8(48 69 2 32 33 159 132 39 131 2 140 171 102 244 25 36 29 238 57 218 69 158 45 41 93 10 177 229 107 41 179 143 80 168 189 81 2 33 0 246 243 87 7 118 119 226 102 156 30 40 159 101 198 9 76 104 184 225 239 190 76 135 70 131 39 200 29 85 151 155 217)
      #t
      ())
    #(233
      "special case hash"
      #vu8(54 54 48 51 52 51 56 48 51 51)
      #vu8(48 69 2 32 21 118 140 38 35 231 9 60 125 203 70 141 67 0 7 252 115 56 241 207 208 88 254 34 171 9 164 81 182 30 195 76 2 33 0 166 9 104 146 38 240 115 201 104 252 70 51 108 253 17 110 219 146 4 95 35 131 213 55 111 248 130 114 220 68 76 162)
      #t
      ())
    #(234
      "special case hash"
      #vu8(50 56 50 57 54 50 49 52 53 53)
      #vu8(48 69 2 33 0 187 68 154 206 111 59 144 1 3 160 147 87 205 161 110 59 20 233 233 155 235 59 143 25 40 240 166 108 227 11 14 165 2 32 110 107 101 249 121 140 216 195 45 112 104 39 8 0 218 93 152 240 109 54 131 108 203 124 48 85 23 23 250 227 5 47)
      #t
      ())
    #(235
      "special case hash"
      #vu8(52 51 49 49 56 50 49 55 51 54)
      #vu8(48 69 2 32 88 158 16 227 76 63 234 89 71 138 147 1 189 233 118 203 213 106 193 90 250 47 19 241 79 49 14 94 141 107 241 225 2 33 0 173 245 25 129 17 147 155 211 149 189 56 32 116 42 104 174 151 248 89 92 252 139 126 24 146 252 54 13 19 20 33 88)
      #t
      ())
    #(236
      "special case hash"
      #vu8(49 49 55 55 48 55 55 52 49 55 53)
      #vu8(48 70 2 33 0 173 90 29 170 179 2 58 101 27 88 227 161 62 191 174 252 20 251 156 121 173 38 16 190 104 228 155 211 153 46 87 34 2 33 0 207 185 31 161 106 50 200 114 76 239 87 20 231 47 44 145 177 213 0 80 180 235 39 42 130 50 118 4 72 108 187 178)
      #t
      ())
    #(237
      "special case hash"
      #vu8(49 53 57 56 53 49 53 53 54 53)
      #vu8(48 69 2 32 89 208 223 17 118 178 119 225 44 9 126 158 0 134 13 196 173 59 183 242 228 175 34 130 190 177 62 255 157 123 106 252 2 33 0 211 218 79 97 232 173 200 68 152 133 165 43 247 62 218 102 172 27 119 186 5 161 171 131 151 228 46 202 234 255 104 207)
      #t
      ())
    #(238
      "special case hash"
      #vu8(50 56 56 49 49 48 49 54 49 56)
      #vu8(48 69 2 33 0 210 116 186 206 239 199 42 146 31 196 150 44 201 72 114 99 236 105 132 240 248 44 11 153 42 227 200 11 166 133 180 35 2 32 36 189 154 159 57 237 2 119 62 139 165 78 63 15 153 244 232 6 166 152 57 183 137 0 153 190 41 120 205 85 7 111)
      #t
      ())
    #(239
      "special case hash"
      #vu8(50 48 48 52 55 56 51 51 51 50)
      #vu8(48 69 2 32 52 17 219 158 83 175 98 71 44 138 250 58 74 231 208 68 253 187 120 177 227 168 232 253 50 155 199 46 158 29 251 93 2 33 0 130 132 217 59 98 36 47 98 116 162 106 52 25 113 157 192 99 94 6 4 250 109 165 194 219 251 184 85 65 200 133 102)
      #t
      ())
    #(240
      "special case hash"
      #vu8(57 53 48 48 50 52 55 55 56 55)
      #vu8(48 68 2 32 51 178 171 249 32 33 161 79 209 229 41 48 8 200 175 245 81 253 74 12 172 175 142 198 225 71 244 13 15 82 28 176 2 32 77 13 62 208 133 71 122 77 199 253 134 210 66 144 86 55 167 23 0 255 212 194 44 249 98 166 126 154 227 43 136 119)
      #t
      ())
    #(241
      "special case hash"
      #vu8(50 50 48 57 53 48 48 48 54 48)
      #vu8(48 68 2 32 113 127 81 133 36 42 197 114 21 216 113 63 144 44 249 1 47 69 219 167 107 142 126 81 198 123 113 230 222 16 240 216 2 32 40 169 173 118 90 107 18 72 128 123 225 38 185 238 224 30 142 45 101 216 82 140 178 143 13 69 118 63 80 125 151 240)
      #t
      ())
    #(242
      "special case hash"
      #vu8(56 49 57 51 55 56 57 50 50 55)
      #vu8(48 68 2 32 78 87 219 236 225 77 61 39 159 30 131 23 119 178 132 1 210 153 12 74 228 119 238 187 153 123 88 62 130 242 156 84 2 32 62 65 254 9 12 143 20 184 175 127 211 156 38 40 134 146 88 207 5 176 226 137 182 105 38 2 193 12 220 200 221 131)
      #t
      ())
    #(243
      "special case hash"
      #vu8(51 54 53 48 54 48 51 50 57 56)
      #vu8(48 69 2 32 9 235 11 43 246 162 73 30 179 92 58 144 45 163 198 201 9 51 221 55 77 251 31 96 248 239 123 215 73 114 87 85 2 33 0 223 138 14 232 247 87 220 89 147 80 187 14 42 236 81 84 81 21 47 240 91 178 228 57 186 145 69 252 154 8 73 250)
      #t
      ())
    #(244
      "special case hash"
      #vu8(49 54 51 56 51 57 53 51 53 50 51)
      #vu8(48 68 2 32 28 102 163 3 247 245 72 255 76 23 206 108 96 56 135 156 185 212 122 187 183 26 214 154 121 141 13 138 153 81 141 205 2 32 72 94 226 5 198 250 63 254 84 17 148 141 255 35 81 171 155 187 194 12 164 25 214 24 45 167 127 85 121 5 135 73)
      #t
      ())
    #(245
      "special case hash"
      #vu8(50 48 57 49 55 54 56 50 48 53)
      #vu8(48 69 2 33 0 174 31 210 219 173 126 188 43 127 25 209 120 158 31 104 206 52 95 64 86 138 87 106 41 218 220 248 148 197 31 122 63 2 32 105 232 15 128 199 107 87 225 118 116 132 72 89 21 152 11 94 36 147 232 157 136 36 183 146 46 162 203 198 135 210 179)
      #t
      ())
    #(246
      "special case hash"
      #vu8(57 51 54 52 55 48 50 56 50 53)
      #vu8(48 68 2 32 103 175 220 82 123 0 3 200 64 10 222 84 223 86 99 99 95 129 25 80 203 52 234 119 67 92 12 228 0 54 82 73 2 32 122 250 61 57 184 167 229 44 231 104 228 102 219 109 164 26 53 76 18 234 47 103 123 240 90 36 252 104 158 52 115 35)
      #t
      ())
    #(247
      "special case hash"
      #vu8(57 50 54 56 54 56 55 57 49)
      #vu8(48 69 2 33 0 155 26 144 248 17 109 51 214 116 19 117 121 82 143 57 94 209 62 203 194 56 148 10 26 154 133 4 167 37 104 169 215 2 32 7 243 77 148 0 175 0 79 214 87 20 76 233 122 19 183 109 80 159 127 212 201 36 92 229 70 9 247 73 234 211 205)
      #t
      ())
    #(248
      "special case hash"
      #vu8(53 49 55 56 49 51 52 56 50 49)
      #vu8(48 69 2 32 38 48 64 249 186 187 99 174 199 215 63 219 206 152 143 179 202 33 21 171 36 187 160 200 8 50 227 222 52 182 152 185 2 33 0 247 217 155 119 56 172 167 69 185 27 101 198 151 168 58 199 108 225 230 21 104 217 39 22 49 208 106 241 183 122 213 214)
      #t
      ())
    #(249
      "special case hash"
      #vu8(52 55 51 53 48 49 48 55 53 49)
      #vu8(48 69 2 33 0 130 246 118 222 113 236 174 112 65 184 120 142 8 112 165 121 35 199 31 210 29 177 248 134 78 69 25 238 47 101 216 136 2 32 2 15 18 217 139 121 212 83 72 81 54 150 213 180 146 104 86 217 83 231 47 38 125 48 231 188 213 126 232 20 114 16)
      #t
      ())
    #(250
      "special case hash"
      #vu8(49 52 51 53 51 57 49 49 54 56 57)
      #vu8(48 69 2 32 78 60 156 34 165 79 28 235 147 54 182 86 191 112 25 195 117 203 127 145 55 214 146 69 76 109 136 41 39 241 103 149 2 33 0 179 189 232 244 93 95 136 89 72 180 84 2 185 231 167 34 194 146 232 139 250 219 91 178 253 173 254 142 27 63 81 129)
      #t
      ())
    #(251
      "special case hash"
      #vu8(49 51 56 52 53 52 57 50 48 52)
      #vu8(48 70 2 33 0 178 7 33 189 14 140 158 230 235 121 12 238 157 136 72 29 23 213 104 180 201 66 186 67 126 96 116 96 3 28 29 245 2 33 0 159 19 255 106 84 230 160 197 4 28 195 105 12 143 59 73 159 5 227 79 35 92 138 223 143 212 85 223 74 23 206 151)
      #t
      ())
    #(252
      "special case hash"
      #vu8(50 55 54 50 49 57 50 55 56 57)
      #vu8(48 69 2 32 107 29 70 238 172 204 247 6 106 15 239 39 244 152 165 154 147 118 178 84 66 88 81 4 82 120 123 212 163 87 131 181 2 33 0 136 50 138 192 121 56 181 185 207 230 42 56 65 56 44 251 233 214 35 72 12 236 42 63 219 115 238 54 221 74 239 143)
      #t
      ())
    #(253
      "special case hash"
      #vu8(49 56 51 49 54 53 52 51 51 49)
      #vu8(48 68 2 32 37 126 118 10 84 99 115 135 180 67 248 41 241 165 128 44 127 201 43 223 3 48 57 172 246 142 26 206 160 203 205 190 2 32 37 8 127 18 4 103 168 12 192 126 251 123 178 122 230 141 133 105 163 143 226 144 130 130 195 199 163 16 50 39 97 197)
      #t
      ())
    #(254
      "special case hash"
      #vu8(50 52 51 54 56 57 57 48 51 48)
      #vu8(48 68 2 32 24 105 200 33 226 113 131 132 83 200 140 74 134 125 242 48 29 39 102 43 114 217 56 91 172 182 116 10 182 214 181 195 2 32 34 204 201 160 73 49 22 85 109 159 252 117 130 37 60 88 20 82 215 23 167 224 6 24 220 226 31 70 245 182 79 208)
      #t
      ())
    #(255
      "special case hash"
      #vu8(50 48 52 48 52 49 50 50 50)
      #vu8(48 70 2 33 0 148 165 33 251 59 237 52 123 13 203 229 95 46 103 192 215 171 196 170 50 237 46 26 111 209 194 9 222 58 37 202 37 2 33 0 155 118 49 166 82 14 212 177 75 91 42 139 87 165 45 227 31 88 59 141 18 96 235 141 192 97 173 150 93 14 158 182)
      #t
      ())
    #(256
      "special case hash"
      #vu8(51 51 51 55 49 49 57 57 55 53)
      #vu8(48 69 2 33 0 238 73 19 165 248 61 211 49 14 145 89 94 241 151 7 86 0 174 23 120 94 28 11 145 57 203 174 168 222 241 214 208 2 32 40 24 247 132 124 72 169 163 135 57 199 22 83 145 145 4 219 137 32 168 22 0 14 210 30 81 121 152 14 251 107 109)
      #t
      ())
    #(257
      "special case hash"
      #vu8(54 54 57 53 54 50 48 54 55 56)
      #vu8(48 69 2 33 0 233 18 176 229 67 109 178 165 8 23 198 66 66 145 255 221 65 53 41 22 233 86 204 173 144 104 201 81 37 243 161 233 2 32 115 48 154 163 132 197 100 134 182 164 198 153 252 164 70 230 246 122 17 51 137 41 113 190 131 180 226 218 180 154 252 42)
      #t
      ())
    #(258
      "special case hash"
      #vu8(50 48 57 51 48 49 55 55 52 55)
      #vu8(48 70 2 33 0 235 11 113 152 121 178 253 22 118 179 246 249 19 227 83 194 180 221 130 1 250 203 6 126 21 218 29 174 154 221 204 140 2 33 0 167 59 58 112 56 87 170 141 18 38 50 144 54 106 25 214 78 11 62 252 205 6 35 245 58 115 112 9 158 157 206 206)
      #t
      ())
    #(259
      "special case hash"
      #vu8(49 50 51 52 49 55 57 49 54)
      #vu8(48 70 2 33 0 149 97 123 113 220 24 169 158 150 169 90 181 56 67 36 191 247 151 173 112 77 251 30 45 107 60 192 110 118 101 44 237 2 33 0 177 27 196 148 68 162 226 99 93 77 155 27 222 222 182 21 147 181 243 224 225 108 231 141 168 19 255 100 183 40 248 210)
      #t
      ())
    #(260
      "special case hash"
      #vu8(49 55 54 52 51 53 48 54 56 55)
      #vu8(48 69 2 32 40 251 235 176 193 66 198 210 0 191 177 115 23 60 3 188 58 165 93 166 212 140 27 120 70 40 242 185 245 144 56 242 2 33 0 192 241 66 112 5 164 106 172 0 160 175 67 184 245 74 149 30 103 62 4 128 198 191 122 107 87 117 212 163 222 94 96)
      #t
      ())
    #(261
      "special case hash"
      #vu8(49 49 52 49 55 50 52 49 52 52 49)
      #vu8(48 68 2 32 69 127 248 99 105 228 239 214 149 146 177 97 174 162 176 145 83 243 124 246 144 6 144 122 117 88 153 138 179 75 56 164 2 32 18 105 47 252 86 152 73 220 142 59 159 210 205 124 111 66 32 123 180 192 120 50 212 144 201 211 90 112 38 101 206 88)
      #t
      ())
    #(262
      "special case hash"
      #vu8(50 50 54 56 50 52 54 52 57 51)
      #vu8(48 70 2 33 0 172 112 3 111 96 88 253 30 180 13 198 245 141 214 138 181 110 115 220 104 65 234 164 90 131 129 59 106 175 117 250 226 2 33 0 247 15 127 5 99 196 106 7 210 72 232 10 101 243 133 50 213 117 159 73 252 16 65 132 250 103 24 202 85 39 67 114)
      #t
      ())
    #(263
      "special case hash"
      #vu8(50 55 50 52 55 57 54 55 55 55)
      #vu8(48 68 2 32 89 186 171 163 153 45 171 11 89 74 46 159 188 76 52 76 253 171 231 134 142 78 119 244 122 49 13 148 145 109 48 206 2 32 32 177 108 56 48 133 238 116 64 33 87 212 242 218 95 126 62 153 93 187 245 62 229 9 133 212 247 9 104 130 237 218)
      #t
      ())
    #(264
      "special case hash"
      #vu8(57 55 51 51 57 53 49 49 57)
      #vu8(48 70 2 33 0 170 86 122 113 15 112 16 113 139 30 2 121 43 198 63 144 73 192 47 121 139 179 25 33 76 151 188 115 78 84 209 21 2 33 0 221 183 199 139 69 196 34 29 182 242 110 132 95 140 48 190 97 194 155 207 56 227 138 186 247 203 208 62 90 249 20 247)
      #t
      ())
    #(265
      "special case hash"
      #vu8(49 53 48 55 48 48 50 55 48 54)
      #vu8(48 68 2 32 106 193 140 6 8 26 81 172 95 182 208 160 115 90 245 16 221 10 213 41 32 110 127 192 193 182 208 234 54 206 196 168 2 32 100 212 149 36 204 38 239 142 218 33 173 95 44 55 18 3 214 238 248 221 250 93 167 166 195 125 134 242 158 252 31 202)
      #t
      ())
    #(266
      "special case hash"
      #vu8(51 55 52 51 53 54 56 55 56 50)
      #vu8(48 70 2 33 0 207 89 223 214 117 18 226 209 115 163 152 203 100 136 5 251 65 227 9 159 39 167 134 122 162 221 165 13 207 46 31 134 2 33 0 189 82 139 231 113 250 30 82 202 182 215 72 92 88 135 190 251 55 140 234 245 101 172 160 243 45 40 49 164 102 149 158)
      #t
      ())
    #(267
      "special case hash"
      #vu8(57 52 55 54 55 49 50 52 56)
      #vu8(48 68 2 32 69 95 28 68 6 181 152 252 130 141 219 59 199 125 247 173 4 186 173 57 159 180 151 95 84 43 25 174 237 253 90 17 2 32 78 5 85 217 191 66 17 211 171 23 62 46 108 126 219 153 8 103 248 249 130 246 175 193 180 182 115 46 233 106 10 240)
      #t
      ())
    #(268
      "special case hash"
      #vu8(55 50 53 52 52 52 51 50 52)
      #vu8(48 69 2 33 0 225 220 122 67 150 51 185 188 145 211 122 149 73 67 188 148 229 245 106 4 66 163 82 143 186 92 96 112 207 37 232 111 2 32 3 118 183 255 118 1 151 138 71 187 247 209 28 104 68 82 10 68 44 235 22 122 236 58 13 223 54 225 80 163 133 201)
      #t
      ())
    #(269
      "special case hash"
      #vu8(53 53 51 52 48 50 49 50 49 57)
      #vu8(48 70 2 33 0 174 238 239 1 12 249 127 50 78 111 137 243 22 54 86 48 87 40 165 115 184 133 197 46 197 151 62 186 134 58 8 218 2 33 0 144 76 37 249 49 231 142 43 89 250 154 19 140 184 10 92 34 52 22 1 161 133 1 211 100 175 54 29 105 205 11 184)
      #t
      ())
    #(270
      "special case hash"
      #vu8(49 50 51 48 49 56 49 51 55 57 51)
      #vu8(48 69 2 32 14 55 152 228 65 231 135 218 228 191 132 226 116 138 188 233 19 243 98 212 29 89 163 157 88 216 156 136 158 82 34 159 2 33 0 227 160 2 2 50 150 254 109 147 149 252 146 186 49 221 53 197 173 164 46 6 219 1 70 106 36 240 135 174 112 205 180)
      #t
      ())
    #(271
      "special case hash"
      #vu8(57 49 49 53 51 49 55 54 49 48)
      #vu8(48 70 2 33 0 155 254 158 9 196 15 173 64 187 68 46 176 69 33 108 32 220 18 130 211 204 75 167 127 226 227 219 146 211 18 253 128 2 33 0 138 21 42 250 33 100 84 139 110 223 214 97 0 70 238 0 31 223 176 101 85 103 124 152 188 80 91 106 239 41 125 21)
      #t
      ())
    #(272
      "special case hash"
      #vu8(50 56 57 52 51 57 55 57 54 50)
      #vu8(48 69 2 32 21 49 249 182 34 211 23 47 114 9 107 138 252 114 120 235 123 238 73 183 46 27 148 142 72 204 26 221 143 1 227 101 2 33 0 237 200 3 205 181 75 212 197 75 135 188 105 164 45 243 221 17 171 86 187 19 216 181 183 134 66 255 169 239 136 211 29)
      #t
      ())
    #(273
      "special case hash"
      #vu8(49 50 51 51 53 56 51 48 51 51)
      #vu8(48 68 2 32 121 115 51 54 23 104 15 248 151 152 198 182 75 180 47 67 107 231 119 24 135 194 209 74 152 221 51 151 230 137 110 10 2 32 17 183 11 35 166 47 217 206 27 39 193 182 105 200 81 24 124 9 233 8 31 10 166 174 1 20 17 66 95 105 73 41)
      #t
      ())
    #(274
      "special case hash"
      #vu8(50 49 49 50 54 57 50 53 54)
      #vu8(48 69 2 32 79 196 14 11 61 212 156 79 37 156 94 226 255 39 27 112 59 155 115 128 69 81 103 225 19 96 191 51 111 114 192 196 2 33 0 210 25 205 191 239 169 206 216 67 249 71 25 31 241 27 254 72 128 112 42 69 4 243 75 40 72 27 66 79 67 58 56)
      #t
      ())
    #(275
      "special case hash"
      #vu8(51 48 48 53 52 56 51 56 54 52)
      #vu8(48 70 2 33 0 129 108 54 158 123 134 114 204 227 37 218 225 173 47 42 83 48 209 119 254 13 163 153 200 229 32 243 97 172 119 3 137 2 33 0 133 140 156 223 26 44 164 14 249 193 224 47 136 59 52 112 29 193 118 10 157 19 186 113 76 87 221 136 98 130 172 216)
      #t
      ())
    #(276
      "special case hash"
      #vu8(56 51 53 54 55 54 50 55 50 53)
      #vu8(48 68 2 32 81 173 244 60 218 26 147 142 29 235 95 224 138 178 141 241 230 7 242 95 178 233 137 19 210 87 148 32 182 48 86 230 2 32 59 137 32 24 26 138 182 249 234 10 24 20 23 29 179 235 79 243 213 253 156 189 45 156 30 196 1 138 118 37 86 46)
      #t
      ())
    #(277
      "special case hash"
      #vu8(56 51 50 57 53 48 48 55 54 48)
      #vu8(48 69 2 32 66 206 158 15 135 123 117 134 231 192 235 47 222 111 124 75 31 76 200 136 245 68 2 242 183 187 153 222 220 43 127 7 2 33 0 240 65 62 118 54 203 102 5 224 215 40 76 120 4 215 201 163 204 9 36 211 127 202 125 73 67 217 224 201 129 116 39)
      #t
      ())
    #(278
      "special case hash"
      #vu8(49 57 50 55 48 56 52 49 54 53)
      #vu8(48 68 2 32 75 46 90 121 125 36 12 216 200 11 66 74 65 220 71 234 173 36 159 198 66 227 197 180 188 104 50 143 193 226 111 197 2 32 17 121 16 152 85 151 166 247 72 43 236 118 50 233 70 118 196 50 104 79 22 247 243 208 154 144 255 78 214 173 54 219)
      #t
      ())
    #(279
      "special case hash"
      #vu8(55 51 48 50 51 53 56 50 56 56)
      #vu8(48 68 2 32 66 191 154 22 71 35 239 63 92 181 155 82 137 102 174 100 142 128 41 23 133 164 224 6 114 131 167 175 89 121 91 183 2 32 1 126 29 36 150 42 52 216 80 217 65 135 210 105 131 106 212 55 57 106 15 241 52 6 123 27 174 222 246 155 89 81)
      #t
      ())
    #(280
      "special case hash"
      #vu8(49 51 52 55 51 55 51 55 51 56 51)
      #vu8(48 69 2 32 30 192 106 98 214 159 202 141 153 71 59 141 90 138 243 187 215 1 137 29 249 118 227 62 47 134 198 8 79 183 5 242 2 33 0 182 121 239 244 54 250 165 60 10 60 67 119 23 245 116 181 145 53 213 220 73 251 133 36 163 101 41 109 178 209 25 230)
      #t
      ())
    #(281
      "special case hash"
      #vu8(50 53 48 49 53 53 51 54 56 57)
      #vu8(48 68 2 32 24 60 129 171 52 167 215 198 116 46 222 65 152 245 199 94 215 251 121 232 49 88 153 239 13 210 111 149 227 196 186 38 2 32 115 240 25 110 69 158 185 128 182 231 172 68 216 104 171 99 45 100 33 209 120 139 159 150 81 251 130 123 26 142 93 204)
      #t
      ())
    #(282
      "special case hash"
      #vu8(51 53 51 53 48 52 48 48 50 57)
      #vu8(48 69 2 33 0 245 190 192 14 107 144 171 42 143 24 143 129 99 220 221 155 129 133 166 187 188 98 60 18 213 131 201 207 85 200 227 186 2 32 93 186 8 91 213 123 84 113 248 84 124 255 10 202 158 81 35 77 133 192 132 125 1 163 170 11 60 243 202 206 130 217)
      #t
      ())
    #(283
      "special case hash"
      #vu8(49 52 50 48 51 53 55 50 57 48)
      #vu8(48 68 2 32 124 24 137 20 153 175 146 207 161 219 85 56 199 175 189 68 96 91 23 221 14 222 87 50 6 219 133 175 35 211 254 157 2 32 40 206 255 150 131 57 150 235 171 171 239 51 43 5 55 34 9 132 77 220 196 194 19 79 217 49 19 151 231 51 177 10)
      #t
      ())
    #(284
      "special case hash"
      #vu8(57 48 53 49 55 53 48 54 56)
      #vu8(48 69 2 32 78 213 135 83 107 161 94 103 7 1 79 90 231 115 164 35 71 94 94 55 86 79 254 145 174 193 119 34 137 76 255 52 2 33 0 159 245 159 171 229 232 220 249 83 158 161 191 159 75 136 15 17 42 38 201 21 193 72 39 218 217 222 107 37 29 214 94)
      #t
      ())
    #(285
      "special case hash"
      #vu8(49 54 49 51 55 55 52 50 57 53)
      #vu8(48 68 2 32 79 182 21 119 45 86 182 209 186 96 243 113 235 4 197 87 224 201 65 76 78 236 0 129 156 118 71 217 30 125 238 1 2 32 38 35 198 196 163 191 252 89 108 181 242 247 10 90 56 25 66 211 80 223 4 195 89 120 246 96 125 223 125 87 228 227)
      #t
      ())
    #(286
      "special case hash"
      #vu8(56 55 51 54 55 51 52 57 49)
      #vu8(48 70 2 33 0 197 61 102 151 245 54 184 251 14 121 243 176 2 220 98 106 2 148 142 32 109 150 222 124 98 189 127 151 54 64 138 206 2 33 0 201 66 59 133 117 228 175 225 108 254 190 251 3 229 93 98 130 112 38 79 173 14 182 124 154 207 2 104 229 20 88 76)
      #t
      ())
    #(287
      "special case hash"
      #vu8(52 51 53 53 49 48 54 52 48 53)
      #vu8(48 68 2 32 8 1 44 253 55 19 6 141 139 166 243 250 69 59 233 218 149 175 166 87 42 137 56 130 7 94 213 214 77 98 164 23 2 32 60 93 27 243 65 130 58 76 202 37 28 214 125 67 166 188 214 181 228 115 3 8 43 126 84 200 13 245 172 187 172 130)
      #t
      ())
    #(288
      "special case hash"
      #vu8(52 53 51 57 53 55 53 56 55 54)
      #vu8(48 69 2 33 0 138 211 218 118 113 17 244 21 88 253 197 23 35 198 73 168 127 88 212 43 234 52 49 200 253 250 31 16 150 227 242 221 2 32 125 30 166 133 154 12 147 47 34 152 249 210 28 137 235 234 115 84 187 229 8 210 183 52 105 220 62 254 134 19 188 135)
      #t
      ())
    #(289
      "special case hash"
      #vu8(56 57 51 54 54 51 50 48 49)
      #vu8(48 69 2 32 98 190 207 90 251 8 131 95 103 104 136 44 88 162 108 80 31 39 126 205 97 164 141 31 230 131 182 167 140 73 206 130 2 33 0 137 209 18 48 222 105 83 161 238 235 107 48 119 79 198 191 208 147 193 231 192 66 42 114 83 66 139 161 126 249 105 206)
      #t
      ())
    #(290
      "special case hash"
      #vu8(51 56 48 54 48 54 56 48 51 56)
      #vu8(48 69 2 32 34 181 67 130 226 242 230 215 207 254 59 52 251 213 103 200 181 3 191 166 181 195 229 184 19 30 15 254 32 116 113 118 2 33 0 166 210 90 229 202 179 156 200 49 22 208 115 205 30 181 157 128 206 46 210 8 193 201 112 177 52 190 42 210 157 96 104)
      #t
      ())
    #(291
      "special case hash"
      #vu8(50 50 51 50 56 49 55 52 57 55)
      #vu8(48 69 2 33 0 226 217 245 195 125 219 37 151 142 212 114 123 99 165 225 117 70 41 37 38 135 126 144 63 17 211 210 152 116 233 82 200 2 32 92 40 235 175 162 194 210 133 237 127 20 61 73 182 212 125 175 18 173 33 195 111 120 237 127 24 203 83 217 194 159 118)
      #t
      ())
    #(292
      "special case hash"
      #vu8(52 48 55 52 51 50 50 53 53 56)
      #vu8(48 68 2 32 59 76 47 183 115 34 60 29 175 166 214 222 158 210 48 77 194 94 234 31 212 135 68 42 58 100 174 141 200 241 73 39 2 32 86 194 21 121 232 95 201 7 92 118 1 189 54 239 138 63 165 125 91 199 85 12 154 23 187 131 131 231 253 187 54 111)
      #t
      ())
    #(293
      "special case hash"
      #vu8(54 49 48 54 55 53 56 50 55)
      #vu8(48 68 2 32 5 39 111 97 89 226 133 63 198 136 76 41 57 153 123 90 59 231 174 97 93 173 117 23 214 0 98 8 17 29 214 120 2 32 5 158 163 71 75 198 144 140 86 93 251 91 199 47 209 168 66 49 54 60 247 140 76 49 122 6 29 191 27 3 204 7)
      #t
      ())
    #(294
      "special case hash"
      #vu8(49 55 52 49 56 55 51 57 50 49 51)
      #vu8(48 69 2 32 95 133 106 48 168 128 58 34 118 232 229 184 71 95 8 93 20 246 222 12 95 100 234 249 233 184 28 117 250 131 22 114 2 33 0 162 16 167 76 28 104 45 229 112 139 157 25 230 253 47 116 234 4 123 19 82 237 172 126 71 132 204 0 142 139 11 90)
      #t
      ())
    #(295
      "special case hash"
      #vu8(53 49 50 55 56 52 50 50 56 55)
      #vu8(48 68 2 32 28 5 141 174 177 127 153 92 186 164 176 47 193 204 240 161 33 251 118 115 215 185 183 187 170 44 157 133 15 155 167 65 2 32 62 84 0 172 201 146 105 141 190 156 65 226 85 71 198 238 8 200 65 214 96 77 228 87 85 142 232 175 17 213 68 70)
      #t
      ())
    #(296
      "special case hash"
      #vu8(53 48 51 56 54 57 48 56 55 57)
      #vu8(48 68 2 32 122 108 110 177 152 188 237 37 34 63 237 99 13 189 41 86 195 121 154 33 56 158 0 126 252 35 160 179 150 143 138 165 2 32 69 53 53 78 143 180 119 208 190 74 22 244 71 25 217 70 80 237 70 7 234 190 32 104 72 186 36 50 36 6 193 213)
      #t
      ())
    #(297
      "special case hash"
      #vu8(51 56 55 55 48 52 50 51 57 55)
      #vu8(48 70 2 33 0 157 5 164 63 141 234 44 74 60 8 56 229 152 125 137 158 99 49 122 23 250 95 96 154 75 170 55 100 218 201 137 154 2 33 0 215 193 131 52 133 240 166 145 78 86 51 17 83 48 165 155 42 222 81 83 176 27 42 26 240 168 21 244 77 127 10 170)
      #t
      ())
    #(298
      "special case hash"
      #vu8(51 50 49 55 48 56 49 55 56)
      #vu8(48 70 2 33 0 178 98 167 87 255 203 73 109 136 7 57 209 147 127 19 157 57 205 232 231 237 41 81 42 59 229 26 212 112 220 245 217 2 33 0 235 141 208 6 104 5 48 242 115 38 241 201 197 78 92 67 0 241 188 162 27 219 23 36 92 72 93 123 41 106 35 114)
      #t
      ())
    #(299
      "special case hash"
      #vu8(55 54 54 55 48 52 52 50 55 48)
      #vu8(48 68 2 32 72 10 104 117 183 190 228 237 128 247 2 6 64 13 241 2 100 195 139 228 43 7 68 60 111 241 156 10 171 88 4 68 2 32 120 227 250 28 47 225 18 8 193 137 163 158 113 123 25 165 31 81 114 5 72 145 192 131 147 24 97 199 145 157 71 69)
      #t
      ())
    #(300
      "special case hash"
      #vu8(49 49 48 52 55 52 53 48 52 50)
      #vu8(48 69 2 33 0 242 190 140 198 21 177 76 40 158 80 17 74 226 71 59 16 84 71 236 140 83 17 236 195 171 206 220 190 174 234 25 131 2 32 86 174 32 205 101 147 112 113 46 6 189 109 89 54 188 170 6 22 151 55 160 98 67 140 126 89 155 255 240 9 159 177)
      #t
      ())
    #(301
      "special case hash"
      #vu8(49 53 51 56 55 48 49 53 52)
      #vu8(48 69 2 33 0 190 211 143 136 253 82 191 28 196 180 204 88 189 216 168 26 248 148 197 164 91 216 34 172 244 104 238 224 138 104 53 132 2 32 28 159 119 171 44 130 29 170 137 110 115 185 246 237 78 223 114 206 98 166 196 139 92 170 230 165 172 158 221 141 41 83)
      #t
      ())
    #(302
      "special case hash"
      #vu8(50 50 54 49 51 56 53 48 52 57)
      #vu8(48 70 2 33 0 133 19 237 1 46 167 161 13 34 57 194 9 225 114 237 181 101 177 191 210 205 253 128 38 159 121 149 106 74 171 90 242 2 33 0 164 19 7 12 30 151 70 67 229 213 253 197 98 9 225 66 26 37 79 71 253 163 49 44 237 162 68 6 78 254 105 206)
      #t
      ())
    #(303
      "special case hash"
      #vu8(55 53 53 56 55 52 55 54 54 50)
      #vu8(48 69 2 32 37 188 28 56 178 145 165 246 11 123 1 238 200 165 2 92 105 114 59 24 63 144 144 21 10 127 10 200 116 100 242 245 2 33 0 201 134 160 48 37 203 249 189 250 78 154 9 136 130 45 174 68 196 134 36 188 99 162 3 7 44 156 177 184 19 16 45)
      #t
      ())
    #(304
      "special case hash"
      #vu8(51 52 57 57 51 54 52 49 56 50)
      #vu8(48 70 2 33 0 183 33 33 76 255 23 121 184 244 7 244 177 178 178 197 170 78 73 164 165 23 3 31 243 210 75 90 245 137 178 139 150 2 33 0 233 197 54 112 233 67 55 83 93 218 16 165 153 222 10 109 162 64 234 129 62 128 129 249 202 166 186 229 156 189 49 10)
      #t
      ())
    #(305
      "special case hash"
      #vu8(50 51 54 57 50 55 51 57 56 53)
      #vu8(48 70 2 33 0 134 149 6 75 189 21 215 107 105 142 75 184 192 24 59 194 99 74 92 36 85 214 189 44 63 131 35 164 38 142 223 224 2 33 0 199 6 246 101 7 181 45 44 136 101 227 235 89 89 38 115 7 245 31 219 5 101 194 50 1 50 242 202 20 18 52 82)
      #t
      ())
    #(306
      "special case hash"
      #vu8(52 57 51 56 51 57 53 54 53)
      #vu8(48 69 2 33 0 201 26 173 107 60 8 96 115 218 253 183 104 140 99 102 190 145 39 217 147 92 188 110 12 20 185 247 108 157 39 44 67 2 32 115 192 247 81 86 83 26 173 54 210 209 65 105 194 182 103 151 232 221 49 214 246 107 141 219 131 247 82 47 186 33 118)
      #t
      ())
    #(307
      "special case hash"
      #vu8(50 53 51 52 51 55 57 57 51 55)
      #vu8(48 70 2 33 0 129 37 131 46 221 25 148 147 40 177 112 177 6 126 175 204 23 179 183 159 92 19 157 251 108 16 154 17 7 172 118 200 2 33 0 252 231 247 112 226 36 94 234 177 108 51 162 48 246 222 162 206 29 166 125 17 48 42 140 231 220 97 69 195 10 43 249)
      #t
      ())
    #(308
      "special case hash"
      #vu8(56 51 52 56 48 49 53 57 56)
      #vu8(48 68 2 32 94 57 153 98 56 90 236 150 60 184 13 171 107 95 92 52 28 225 94 67 113 66 244 39 94 249 194 16 56 83 72 193 2 32 24 168 21 122 9 118 187 14 52 154 2 19 79 173 13 2 134 196 10 94 67 164 123 73 181 160 54 83 227 174 158 25)
      #t
      ())
    #(309
      "special case hash"
      #vu8(50 52 49 49 48 53 55 52 56 54)
      #vu8(48 70 2 33 0 173 161 71 213 147 115 49 208 55 8 60 11 205 165 154 219 97 37 72 90 158 167 142 246 136 76 20 50 233 62 64 147 2 33 0 181 234 34 59 136 244 85 51 130 106 139 36 252 145 237 128 174 53 96 84 49 2 254 209 216 35 96 55 41 136 221 116)
      #t
      ())
    #(310
      "special case hash"
      #vu8(55 56 54 52 54 56 54 51 53)
      #vu8(48 70 2 33 0 255 86 178 42 202 146 6 216 219 164 88 80 120 4 201 248 11 148 231 93 43 97 68 58 28 141 114 72 13 134 128 180 2 33 0 168 102 246 32 100 5 17 53 123 125 211 188 14 221 205 220 197 165 158 145 98 32 76 29 133 242 35 236 72 92 222 226)
      #t
      ())
    #(311
      "special case hash"
      #vu8(51 48 53 52 55 55 51 55 54 56)
      #vu8(48 70 2 33 0 207 53 85 210 119 235 143 111 166 41 232 237 135 93 241 68 3 82 229 63 50 249 80 156 238 207 34 44 65 151 197 222 2 33 0 132 130 154 18 134 249 140 41 158 197 194 22 154 20 208 203 244 137 42 151 186 202 131 16 39 157 155 76 152 253 239 71)
      #t
      ())
    #(312
      "special case hash"
      #vu8(49 57 50 55 48 49 55 55 51 56)
      #vu8(48 69 2 33 0 216 221 80 148 188 64 101 45 220 25 208 75 238 239 238 141 144 254 248 38 40 237 188 33 138 157 45 229 150 187 2 61 2 32 92 10 70 128 78 125 231 199 65 229 190 85 167 235 186 9 45 193 10 77 22 145 230 160 74 193 105 11 84 172 249 80)
      #t
      ())
    #(313
      "special case hash"
      #vu8(49 48 53 49 51 50 53 54 51 52)
      #vu8(48 68 2 32 37 35 107 0 160 166 126 18 234 120 26 229 58 146 158 19 195 121 148 221 206 120 79 60 12 51 64 42 67 180 166 240 2 32 17 115 49 229 179 159 226 161 31 92 139 191 165 187 79 220 54 89 172 10 14 252 208 58 148 54 32 129 164 192 229 121)
      #t
      ())
    #(314
      "special case hash"
      #vu8(52 48 49 57 56 54 54 54 56 50)
      #vu8(48 68 2 32 15 53 100 183 113 51 123 200 212 148 160 78 77 5 24 242 109 6 125 7 195 22 137 213 226 123 80 61 54 82 17 122 2 32 23 20 71 64 219 33 135 74 165 140 13 230 164 202 219 22 197 217 35 13 79 70 7 152 10 171 209 97 210 16 69 174)
      #t
      ())
    #(315
      "special case hash"
      #vu8(49 48 52 53 48 50 53 55 51 53 48)
      #vu8(48 69 2 33 0 191 247 6 210 125 195 200 197 153 81 195 66 36 78 60 53 82 33 107 146 37 137 141 225 48 198 165 168 245 142 239 66 2 32 14 32 203 155 255 210 13 136 254 112 229 209 249 9 5 21 40 197 94 251 173 191 215 205 204 230 125 232 83 246 70 50)
      #t
      ())
    #(316
      "special case hash"
      #vu8(51 50 54 57 53 56 53 56 48)
      #vu8(48 69 2 33 0 236 92 18 136 29 174 82 22 138 166 53 200 13 203 0 49 164 62 125 27 118 234 151 35 27 129 144 81 168 97 167 255 2 32 9 20 156 0 13 26 241 45 128 2 37 193 186 53 135 165 62 90 171 216 168 254 120 35 11 27 76 18 186 125 240 8)
      #t
      ())
    #(317
      "special case hash"
      #vu8(51 48 55 52 54 53 51 50 52 49)
      #vu8(48 69 2 33 0 202 237 162 255 39 238 240 199 26 48 194 119 221 161 40 105 46 72 80 229 137 208 127 132 4 99 66 221 174 249 132 42 2 32 105 212 34 33 84 57 21 13 29 160 10 8 17 210 18 109 229 181 197 168 91 225 143 211 192 110 182 56 112 62 96 49)
      #t
      ())
    #(318
      "special case hash"
      #vu8(55 55 49 52 54 56 51 52 56 48)
      #vu8(48 68 2 32 57 119 70 89 23 71 45 60 182 125 111 200 136 136 52 242 111 164 124 141 58 44 142 4 111 112 104 14 48 55 163 126 2 32 120 90 220 237 79 61 64 11 40 106 215 235 123 223 11 124 15 70 217 231 38 141 181 163 78 116 1 102 202 175 209 74)
      #t
      ())
    #(319
      "special case hash"
      #vu8(49 55 57 51 51 56 49 51 50 48)
      #vu8(48 69 2 32 5 27 37 41 52 241 198 95 57 101 42 137 62 149 23 240 73 175 66 37 153 54 131 44 195 248 255 86 215 243 204 84 2 33 0 134 123 197 122 150 235 157 141 195 175 214 219 17 181 39 241 158 74 216 192 49 19 74 230 236 155 43 110 224 146 84 155)
      #t
      ())
    #(320
      "special case hash"
      #vu8(52 56 56 48 54 50 53 53 54 54)
      #vu8(48 68 2 32 1 98 186 148 10 117 199 161 37 116 115 109 69 214 11 187 44 108 231 115 155 4 66 156 199 35 82 173 234 70 102 195 2 32 76 104 106 170 251 79 54 21 36 127 240 107 151 189 118 212 155 147 246 91 95 102 201 63 194 168 162 34 70 83 108 36)
      #t
      ())
    #(321
      "special case hash"
      #vu8(52 57 52 51 55 54 52 56 56 53 55)
      #vu8(48 69 2 33 0 247 78 101 221 180 28 108 1 86 75 51 68 252 170 141 178 183 183 63 143 209 86 229 0 134 90 4 130 108 94 74 176 2 32 110 192 55 102 117 184 195 105 47 57 115 65 38 150 103 234 220 96 105 109 86 216 69 12 237 133 166 93 233 211 207 225)
      #t
      ())
    #(322
      "special case hash"
      #vu8(52 55 48 56 54 56 57 55 56 54)
      #vu8(48 69 2 33 0 145 243 204 251 135 179 102 123 234 140 107 176 125 85 68 103 251 185 167 118 133 166 82 61 165 207 151 223 167 16 230 178 2 32 85 89 147 111 156 148 198 228 169 124 159 235 188 178 193 164 24 251 249 242 147 61 214 77 239 104 107 55 113 220 63 168)
      #t
      ())
    #(323
      "special case hash"
      #vu8(51 48 50 57 56 55 50 57 53 49)
      #vu8(48 68 2 32 10 253 205 207 104 102 158 204 83 176 25 215 173 190 141 201 67 244 83 183 68 81 51 90 99 26 42 61 213 103 47 131 2 32 119 234 131 52 104 149 62 20 189 66 134 99 238 188 228 179 205 239 65 233 130 23 4 251 145 209 81 93 32 7 142 146)
      #t
      ())
    #(324
      "special case hash"
      #vu8(51 48 49 55 49 57 48 51 56 53)
      #vu8(48 70 2 33 0 161 151 216 248 250 12 204 250 126 204 250 234 124 164 68 27 218 151 137 204 62 141 34 161 209 177 77 109 238 178 219 33 2 33 0 136 251 18 49 141 96 182 107 104 254 128 131 65 114 129 57 137 194 73 1 227 173 188 212 199 56 96 250 149 0 188 117)
      #t
      ())
    #(325
      "special case hash"
      #vu8(57 53 54 51 54 51 57 51 57)
      #vu8(48 68 2 32 75 62 238 175 80 233 249 186 224 191 230 78 39 118 191 45 177 129 171 68 199 99 57 49 54 146 120 39 243 173 178 78 2 32 49 122 190 193 49 237 223 33 23 226 126 162 187 64 8 232 253 15 74 50 170 65 247 78 236 123 22 89 192 145 253 156)
      #t
      ())
    #(326
      "special case hash"
      #vu8(53 51 48 48 55 54 52 51 53 48)
      #vu8(48 69 2 32 70 75 220 45 183 197 162 116 90 93 140 150 163 35 235 153 193 117 224 249 155 170 117 219 185 198 210 155 152 250 207 59 2 33 0 217 50 140 160 12 227 41 52 180 237 52 10 110 21 35 108 177 110 83 100 204 145 239 92 214 246 117 224 72 152 91 172)
      #t
      ())
    #(327
      "special case hash"
      #vu8(49 57 51 52 54 54 52 56 52 52)
      #vu8(48 68 2 32 39 2 80 197 145 203 32 199 151 141 159 69 113 4 175 167 195 72 72 121 207 220 249 220 106 200 231 133 225 253 32 160 2 32 9 96 29 197 151 193 35 237 126 118 189 190 45 20 104 99 189 220 243 87 249 33 119 19 223 225 175 216 244 152 145 182)
      #t
      ())
    #(328
      "special case hash"
      #vu8(51 53 53 52 53 48 53 53 57 54 50)
      #vu8(48 68 2 32 114 154 23 49 26 47 191 159 35 37 17 123 44 218 193 143 214 187 227 219 76 90 27 212 228 244 243 216 243 214 141 199 2 32 72 221 2 105 203 33 110 39 146 243 180 16 167 129 201 177 14 89 171 220 85 58 174 42 0 212 3 143 68 162 132 158)
      #t
      ())
    #(329
      "special case hash"
      #vu8(49 51 48 49 55 50 50 49 48 56)
      #vu8(48 69 2 32 82 40 249 126 93 13 251 98 206 198 130 0 41 23 88 103 215 214 59 23 157 179 232 169 231 238 205 30 197 94 11 144 2 33 0 220 84 125 123 123 104 11 64 188 190 12 191 154 45 116 151 135 134 65 88 175 60 14 15 142 240 141 252 187 179 111 126)
      #t
      ())
    #(330
      "special case hash"
      #vu8(53 54 49 55 54 57 49 54 57 50)
      #vu8(48 69 2 32 33 247 117 211 199 247 254 104 232 72 66 179 13 233 251 228 255 187 79 51 36 178 149 89 30 54 228 101 28 20 131 13 2 33 0 175 162 74 76 209 99 4 45 165 247 103 231 8 142 111 160 62 254 3 154 71 127 193 63 108 35 39 12 218 145 81 159)
      #t
      ())
    #(331
      "special case hash"
      #vu8(51 53 56 49 57 51 50 53 51 52)
      #vu8(48 69 2 33 0 218 190 196 46 156 68 240 194 48 211 108 69 149 108 212 168 37 15 54 101 182 242 145 247 0 231 61 6 254 32 55 68 2 32 35 182 135 194 158 3 188 105 197 73 23 116 88 142 60 81 159 161 234 250 226 255 142 222 47 253 74 0 78 35 50 21)
      #t
      ())
    #(332
      "special case hash"
      #vu8(49 53 55 49 54 54 55 56 55 52 52)
      #vu8(48 68 2 32 56 20 88 214 196 12 136 139 249 10 239 20 40 188 150 140 170 206 85 63 148 40 126 122 218 164 137 67 220 85 49 93 2 32 30 14 31 117 72 154 69 31 199 204 75 202 97 160 167 51 10 91 77 196 40 61 246 142 33 121 137 150 216 198 155 212)
      #t
      ())
    #(333
      "special case hash"
      #vu8(51 49 57 57 55 56 51 51 54 48)
      #vu8(48 69 2 33 0 224 136 129 218 205 122 214 68 31 128 190 29 85 16 183 226 157 164 200 80 77 101 134 52 241 62 95 60 252 242 161 109 2 32 55 146 84 21 72 240 216 145 221 249 94 228 11 129 95 195 172 22 12 191 232 205 148 142 7 134 219 124 194 11 56 210)
      #t
      ())
    #(334
      "special case hash"
      #vu8(55 52 48 52 55 53 48 56 50)
      #vu8(48 70 2 33 0 163 239 176 171 201 215 110 102 1 203 35 210 139 2 118 41 62 184 214 242 16 61 13 167 176 106 1 105 219 30 166 164 2 33 0 198 25 171 43 162 59 32 249 11 200 21 210 253 76 52 93 3 129 71 107 22 69 144 205 147 43 64 178 38 62 64 84)
      #t
      ())
    #(335
      "special case hash"
      #vu8(52 49 55 52 51 54 53 51 57)
      #vu8(48 68 2 32 97 116 109 241 213 243 211 4 3 245 40 23 103 203 102 1 23 43 38 86 78 151 195 93 76 104 251 116 38 219 79 253 2 32 124 162 176 164 251 13 88 161 25 168 223 57 26 211 242 222 71 203 59 26 143 223 4 214 236 35 95 99 159 228 64 128)
      #t
      ())
    #(336
      "special case hash"
      #vu8(49 50 51 53 54 53 56 56 56 57)
      #vu8(48 69 2 33 0 206 72 252 75 237 212 218 186 204 104 247 28 79 91 88 65 78 155 5 75 68 92 71 129 207 109 155 64 211 53 180 182 2 32 30 115 184 41 149 121 104 75 128 128 29 47 215 13 92 111 154 144 74 176 115 91 38 210 127 244 64 33 0 44 97 7)
      #t
      ())
    #(337
      "special case hash"
      #vu8(50 52 50 57 50 53 53 52 48 52)
      #vu8(48 70 2 33 0 140 147 107 4 76 246 219 219 227 12 255 222 185 235 64 180 170 72 230 151 151 88 5 221 64 69 94 68 250 77 109 251 2 33 0 240 59 216 43 199 61 199 169 213 24 1 47 156 171 83 96 214 218 160 109 208 20 87 101 181 18 38 59 19 195 216 81)
      #t
      ())
    #(338
      "special case hash"
      #vu8(53 49 56 48 51 48 50 53 52 54 54)
      #vu8(48 69 2 32 75 250 168 199 134 54 239 230 57 21 218 186 174 233 20 222 170 244 160 106 228 115 103 145 96 234 236 168 141 92 193 22 2 33 0 139 194 69 70 97 62 72 17 250 206 207 96 93 107 31 121 180 66 195 216 254 69 140 28 105 51 76 190 227 30 245 50)
      #t
      ())
    #(339
      "special case hash"
      #vu8(52 52 55 54 51 57 56 50 48 48)
      #vu8(48 68 2 32 19 15 198 100 236 206 206 123 113 160 169 202 220 83 105 251 91 213 76 204 83 253 44 81 94 94 242 50 172 209 185 101 2 32 67 114 166 158 243 78 194 178 150 219 233 76 94 138 136 129 100 91 156 15 107 108 66 112 193 155 129 73 62 181 148 33)
      #t
      ())
    #(340
      "special case hash"
      #vu8(57 48 54 48 48 51 53 50 49 50)
      #vu8(48 68 2 32 123 103 90 137 243 22 94 42 209 243 172 73 80 137 141 23 231 205 134 157 244 239 88 170 84 144 29 81 25 63 145 243 2 32 58 126 160 153 215 194 144 159 244 165 195 194 134 217 247 115 159 56 183 228 70 5 234 63 81 95 222 17 122 69 25 236)
      #t
      ())
    #(341
      "special case hash"
      #vu8(49 55 53 54 48 53 51 48 57 56)
      #vu8(48 68 2 32 57 58 5 106 92 231 109 193 97 218 241 166 167 122 251 114 202 203 128 157 65 115 185 18 110 99 106 1 207 124 206 161 2 32 8 89 228 25 81 36 225 30 64 219 57 26 123 240 79 62 205 125 255 226 165 98 154 172 147 116 70 143 232 241 112 27)
      #t
      ())
    #(342
      "special case hash"
      #vu8(52 57 56 48 56 54 48 48 51 56)
      #vu8(48 68 2 32 45 151 56 166 227 108 36 165 220 222 97 255 127 165 236 177 233 110 0 119 164 161 131 232 149 55 69 203 148 97 229 250 2 32 85 171 178 127 173 23 157 19 40 48 247 229 223 240 210 106 99 240 20 31 226 40 139 159 247 148 60 58 72 42 193 36)
      #t
      ())
    #(343
      "special case hash"
      #vu8(51 54 50 49 56 55 53 51 51 53)
      #vu8(48 68 2 32 70 15 82 139 182 248 173 181 86 38 197 22 108 69 114 169 60 56 37 221 26 105 88 34 168 28 158 117 227 127 232 253 2 32 1 151 200 184 49 147 17 15 4 38 164 23 250 231 236 59 153 252 102 147 113 241 231 222 187 189 56 80 246 149 108 20)
      #t
      ())
    #(344
      "special case hash"
      #vu8(54 54 52 51 51 51 52 55 50 49)
      #vu8(48 68 2 32 45 19 147 148 85 25 44 34 177 241 143 124 168 42 212 38 94 194 196 219 209 36 174 74 43 0 23 152 69 18 201 233 2 32 61 158 79 172 120 75 230 30 45 236 183 90 31 103 104 175 33 135 62 180 152 129 132 155 147 96 54 177 145 135 167 52)
      #t
      ())
    #(345
      "special case hash"
      #vu8(52 52 53 52 57 52 50 55 56 50)
      #vu8(48 69 2 33 0 143 37 35 187 212 162 244 209 68 192 183 247 181 218 132 206 32 208 212 245 81 207 94 10 210 176 203 6 198 162 7 240 2 32 5 228 106 133 246 30 22 118 222 245 157 129 146 32 237 205 244 33 219 54 239 190 0 189 167 249 227 49 213 110 140 225)
      #t
      ())
    #(346
      "special case hash"
      #vu8(50 48 49 56 52 52 48 50)
      #vu8(48 69 2 32 79 96 135 139 235 39 85 179 95 113 82 163 62 65 110 22 225 15 119 188 162 173 112 176 156 134 239 241 72 202 111 179 2 33 0 188 188 111 161 141 140 165 112 180 169 165 242 168 246 255 157 179 227 55 15 253 62 90 126 25 136 9 144 246 248 230 20)
      #t
      ())
    #(347
      "special case hash"
      #vu8(53 56 49 51 50 49 55 51)
      #vu8(48 69 2 33 0 155 20 140 99 88 142 232 242 36 54 166 29 82 174 138 96 195 243 80 7 221 232 187 110 49 153 125 153 32 89 115 179 2 32 32 21 84 133 99 22 143 73 108 123 17 91 255 84 31 215 31 201 38 68 138 69 84 161 95 151 197 143 221 3 144 21)
      #t
      ())
    #(348
      "special case hash"
      #vu8(49 49 56 51 56 54 49 56 49 49)
      #vu8(48 68 2 32 43 125 118 158 166 130 175 11 228 40 102 207 58 216 134 91 18 212 179 124 55 8 251 42 208 220 92 135 237 161 1 84 2 32 17 216 196 139 166 196 0 247 149 15 157 253 158 166 86 23 179 118 93 176 231 151 120 187 7 159 189 125 182 123 104 248)
      #t
      ())
    #(349
      "special case hash"
      #vu8(49 57 50 50 54 48 50 57 48 54)
      #vu8(48 69 2 33 0 191 211 172 67 110 92 77 66 241 95 188 224 109 152 89 173 130 212 96 211 34 168 196 193 208 110 195 24 253 255 79 81 2 32 51 91 213 208 97 154 82 144 199 252 228 42 170 151 204 213 45 128 82 138 9 166 42 76 232 209 231 207 0 219 122 38)
      #t
      ())
    #(350
      "special case hash"
      #vu8(57 55 53 49 52 51 50 48 55)
      #vu8(48 68 2 32 86 165 194 194 232 3 230 108 87 81 254 143 179 72 130 38 9 177 103 71 140 173 64 48 231 191 97 32 253 83 91 176 2 32 123 63 238 102 118 135 148 192 179 98 242 212 10 214 79 223 3 224 251 14 138 71 242 3 65 103 170 226 202 56 60 14)
      #t
      ())
    #(351
      "special case hash"
      #vu8(56 51 49 53 49 49 54 51 56 51)
      #vu8(48 68 2 32 113 188 57 158 86 67 161 216 226 175 195 23 231 138 44 67 215 107 109 135 241 122 88 9 167 182 209 159 146 44 46 98 2 32 5 126 118 21 162 201 3 62 240 209 163 211 2 9 119 0 35 149 225 150 211 184 32 108 154 254 207 185 138 189 82 216)
      #t
      ())
    #(352
      "special case hash"
      #vu8(51 50 54 51 49 54 56 49 50)
      #vu8(48 69 2 33 0 143 148 188 218 3 110 100 120 57 53 69 98 137 174 220 182 114 50 147 45 177 172 46 138 209 202 151 11 20 212 122 26 2 32 33 167 21 40 249 232 254 96 103 202 116 204 13 139 75 72 39 10 173 154 222 157 180 74 152 201 129 130 165 232 242 8)
      #t
      ())
    #(353
      "special case hash"
      #vu8(52 48 50 57 54 56 55 49 51 54)
      #vu8(48 69 2 32 39 122 12 79 52 178 116 159 213 143 85 160 243 115 67 15 60 134 139 177 244 133 212 119 16 43 62 121 124 234 85 96 2 33 0 188 203 236 125 193 226 116 7 81 183 203 137 104 231 211 136 225 54 215 100 122 41 198 132 91 207 55 89 244 75 243 137)
      #t
      ())
    #(354
      "special case hash"
      #vu8(54 51 50 48 56 56 49 49 57 49)
      #vu8(48 69 2 33 0 147 71 98 150 126 252 140 151 101 92 183 61 113 104 209 171 181 136 158 85 36 61 198 124 28 85 23 214 41 140 226 195 2 32 68 195 47 185 210 181 230 249 195 130 38 83 135 118 83 138 85 235 27 223 186 196 78 62 18 41 51 116 21 100 93 182)
      #t
      ())
    #(355
      "special case hash"
      #vu8(53 50 50 53 51 57 48 55 56 48)
      #vu8(48 69 2 33 0 143 5 40 2 18 111 34 43 163 173 233 207 237 245 159 196 121 161 32 237 142 89 54 107 27 228 243 3 148 128 0 78 2 32 62 20 233 32 155 233 220 109 0 237 118 205 220 161 194 229 184 95 17 43 255 210 119 159 69 242 70 203 96 195 25 168)
      #t
      ())
    #(356
      "special case hash"
      #vu8(49 51 52 57 51 57 51 54 57 52)
      #vu8(48 68 2 32 68 86 214 121 47 247 228 210 117 23 17 63 48 145 119 194 110 243 191 100 130 225 49 212 63 157 139 128 233 84 214 30 2 32 79 251 204 80 167 166 157 252 233 42 71 65 15 133 116 247 176 171 252 139 76 127 116 172 13 193 193 24 61 57 52 130)
      #t
      ())
    #(357
      "special case hash"
      #vu8(49 48 51 57 55 57 54 48 55 54 49)
      #vu8(48 69 2 33 0 192 226 122 138 211 6 244 237 77 215 126 220 239 182 26 109 143 26 159 101 70 169 150 158 121 68 50 252 181 118 205 73 2 32 103 253 202 179 57 94 235 229 61 208 59 156 173 211 235 98 216 67 39 222 21 73 139 96 166 11 2 63 234 153 4 54)
      #t
      ())
    #(358
      "Signature generated without truncating the hash"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 80 77 7 14 76 242 89 110 86 12 26 173 198 60 87 60 238 11 248 196 209 40 41 44 35 180 122 41 76 96 119 3 2 33 0 241 129 33 59 40 185 33 175 41 46 162 251 203 138 244 160 225 78 44 90 166 3 196 93 171 122 70 240 91 189 93 133)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 15 191 157 19 31 248 160 55 116 122 194 50 70 197 176 224 206 9 169 5 67 45 61 117 71 122 242 210 153 59 30 10 75 20 233 61 69 116 252 42 85 63 133 235 60 76 6 88 161 189 126 28 199 240 141 71 57 110 118 214 212 14 215 114)
  :der-encode
  #t
  :tests
  '(#(359
      "k*G has a large x-coordinate"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 16 67 25 5 83 88 232 97 123 12 70 53 61 3 156 218 171 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 78)
      #t
      ())
    #(360
      "r too large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 78)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 146 9 69 82 42 54 73 117 255 194 123 221 221 127 1 236 38 239 138 196 141 70 106 129 251 177 208 47 200 145 51 233 206 125 1 25 14 129 93 175 29 24 229 147 46 200 163 216 58 245 156 127 102 115 139 101 33 169 133 13 121 74 75 163)
  :der-encode
  #t
  :tests
  '(#(361
      "r,s are large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 79 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 78)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 224 206 109 85 218 226 87 209 10 6 190 79 183 51 62 104 71 84 7 164 1 222 132 255 134 169 49 172 2 42 69 19 128 44 165 108 154 29 47 103 232 164 87 3 177 116 240 86 45 251 126 106 83 46 177 116 59 60 235 73 249 190 164 32)
  :der-encode
  #t
  :tests
  '(#(362
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 144 145 53 189 182 121 146 134 23 15 94 173 45 228 246 81 20 83 254 80 145 79 61 242 222 84 163 99 131 223 141 212)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 12 91 174 251 105 118 76 58 85 233 211 239 16 167 111 101 47 250 105 119 148 171 145 22 152 120 17 109 5 132 32 227 204 215 185 21 54 148 21 30 226 208 80 72 228 15 224 114 216 224 244 129 175 93 61 10 158 140 243 158 30 247 224 187)
  :der-encode
  #t
  :tests
  '(#(363
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 39 180 87 124 160 9 55 111 113 48 63 213 221 34 125 206 245 222 183 115 173 95 90 132 54 6 68 102 156 162 73 165)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 26 76 179 154 103 75 240 190 196 190 26 91 3 90 225 134 52 244 182 129 163 48 193 249 27 66 54 106 10 124 117 50 11 63 128 24 218 84 168 208 219 48 247 194 179 240 77 192 17 164 161 195 131 34 30 82 24 118 50 165 101 229 121 92)
  :der-encode
  #t
  :tests
  '(#(364
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 5 2 1 1)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 28 215 32 149 253 133 108 242 159 175 184 28 37 247 255 36 222 227 78 234 234 204 0 37 213 18 9 27 31 30 130 43 66 126 179 187 185 21 32 158 6 75 251 225 161 121 143 246 218 200 208 173 214 215 83 191 244 241 40 254 231 224 15 137)
  :der-encode
  #t
  :tests
  '(#(365
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 5 2 1 3)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 105 124 213 133 108 140 52 127 223 188 164 194 203 47 193 190 18 241 97 31 25 3 51 184 10 92 244 224 247 212 141 171 93 8 116 9 54 187 196 108 144 177 218 145 109 94 243 156 61 159 185 9 47 87 154 67 217 17 71 32 34 167 250 144)
  :der-encode
  #t
  :tests
  '(#(366
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 5 2 1 5)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 105 211 31 245 45 188 9 53 80 135 85 205 72 207 63 48 240 234 120 251 103 0 72 152 59 224 235 172 244 222 16 118 119 60 157 206 154 162 75 120 61 134 136 214 53 71 220 152 125 70 80 242 12 17 121 230 174 93 79 20 246 213 92 193)
  :der-encode
  #t
  :tests
  '(#(367
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 5 2 1 6)
      #t
      ())
    #(368
      "r is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 37 86 2 1 6)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 34 85 75 149 252 209 140 183 205 247 219 74 87 178 89 243 212 15 92 124 213 204 144 122 29 8 97 179 184 53 251 47 99 185 41 147 137 63 20 191 23 251 155 222 251 203 185 64 76 25 133 231 161 150 153 208 72 72 55 2 247 226 85 71)
  :der-encode
  #t
  :tests
  '(#(369
      "s is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 5 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 117 251 216)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 47 92 70 79 72 66 58 135 128 110 136 226 230 180 230 249 71 238 161 165 242 192 113 120 151 64 109 151 221 60 40 101 97 182 46 150 154 191 4 184 64 190 149 135 162 161 108 10 131 255 59 246 129 43 114 87 193 6 162 107 226 231 29 37)
  :der-encode
  #t
  :tests
  '(#(370
      "small r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 39 2 2 1 0 2 33 0 143 30 60 120 98 197 139 22 187 118 237 219 183 110 221 187 81 106 244 246 63 45 116 215 110 13 40 201 187 117 234 136)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 39 82 125 155 163 81 246 146 133 203 217 186 20 75 158 124 108 149 125 65 140 139 246 57 37 251 147 74 181 135 211 133 33 106 98 99 7 226 71 195 213 188 244 137 181 42 212 193 152 121 115 215 212 204 144 251 91 31 72 141 128 19 70 86)
  :der-encode
  #t
  :tests
  '(#(371
      "smallish r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 7 45 155 77 52 121 82 214 2 33 0 239 48 67 231 50 149 129 219 179 151 68 151 113 10 177 21 5 238 28 135 255 144 123 238 186 221 25 90 15 254 109 122)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 27 252 16 109 121 17 47 8 67 154 79 250 78 6 38 27 186 179 3 31 247 237 50 86 129 114 202 174 171 174 47 144 184 148 236 200 146 42 206 119 110 214 209 82 107 119 113 242 204 67 176 232 75 172 64 5 65 97 158 20 35 25 5 159)
  :der-encode
  #t
  :tests
  '(#(372
      "100-bit r and small s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 50 2 13 16 51 230 126 55 179 43 68 85 128 191 78 255 2 33 0 139 116 139 116 0 0 0 0 139 116 139 116 139 116 139 116 102 231 105 173 74 22 211 220 216 113 41 184 233 29 27 77)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 113 225 49 145 34 145 151 238 254 146 36 190 17 33 120 120 99 80 86 253 142 85 139 116 18 16 54 4 60 183 80 23 9 160 155 192 4 255 201 138 64 81 163 251 151 152 203 159 213 193 121 25 236 171 159 248 69 154 125 86 31 48 88 178)
  :der-encode
  #t
  :tests
  '(#(373
      "small r and 100 bit s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 39 2 2 1 0 2 33 0 239 159 107 164 217 124 9 208 49 120 250 32 180 170 173 131 190 60 249 203 130 74 135 159 236 50 112 252 75 129 239 91)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 21 184 134 114 23 191 77 83 26 86 24 80 157 156 221 198 163 255 79 204 85 204 148 223 130 217 149 43 66 174 86 77 114 52 213 196 50 56 229 145 80 28 31 173 163 154 96 5 127 239 180 107 88 141 71 203 237 181 41 222 240 128 251 131)
  :der-encode
  #t
  :tests
  '(#(374
      "100-bit r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 50 2 13 6 37 34 187 211 236 190 124 57 233 62 124 37 2 33 0 239 159 107 164 217 124 9 208 49 120 250 32 180 170 173 131 190 60 249 203 130 74 135 159 236 50 112 252 75 129 239 91)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 231 193 252 199 117 184 212 103 112 38 28 65 50 145 188 157 145 60 119 133 119 152 112 235 71 95 116 55 218 62 225 160 22 173 137 134 247 239 99 212 35 122 156 128 46 94 73 71 29 36 142 77 246 66 131 231 118 8 238 25 30 198 31 63)
  :der-encode
  #t
  :tests
  '(#(375
      "r and s^-1 are close to n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 255 255 255 255 0 0 0 0 255 255 255 255 255 255 255 255 188 230 250 173 167 23 158 132 243 185 202 194 252 99 36 213 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 207 172 17 189 75 122 160 162 147 9 118 126 221 211 55 211 2 241 244 44 202 178 21 23 31 150 34 153 42 103 30 74 20 81 16 42 209 0 162 78 111 181 203 19 12 105 222 42 97 250 80 242 208 122 9 157 115 174 150 249 113 89 53 136)
  :der-encode
  #t
  :tests
  '(#(376
      "s == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 2 1 1)
      #t
      ())
    #(377
      "s == 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 2 1 0)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 202 153 232 202 203 150 185 183 58 126 207 71 134 23 38 159 8 151 28 48 122 186 149 134 146 56 22 150 194 68 68 59 92 93 241 247 64 219 48 22 176 173 41 137 151 19 28 234 104 91 43 164 5 195 176 247 34 198 153 43 218 166 253 58)
  :der-encode
  #t
  :tests
  '(#(378
      "point at infinity during verify"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 128 0 0 0 127 255 255 255 255 255 255 255 222 115 125 86 211 139 207 66 121 220 229 97 126 49 146 168 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 60 49 190 1 81 120 169 195 211 202 233 16 59 242 91 193 26 112 147 22 208 106 180 108 1 248 132 168 235 51 218 46 145 243 42 19 82 113 37 8 100 44 71 116 234 103 4 145 117 22 28 178 186 253 85 36 184 19 39 75 20 15 142 153)
  :der-encode
  #t
  :tests
  '(#(379
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 128 0 0 0 127 255 255 255 255 255 255 255 222 115 125 86 211 139 207 66 121 220 229 97 126 49 146 169 2 32 127 255 255 255 128 0 0 0 127 255 255 255 255 255 255 255 222 115 125 86 211 139 207 66 121 220 229 97 126 49 146 168)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 53 93 156 63 151 162 130 172 23 247 188 152 55 63 39 29 106 43 192 46 185 100 241 60 30 45 125 235 255 74 2 253 99 40 46 120 251 155 136 248 20 19 188 249 95 22 152 45 159 80 231 249 74 93 40 104 91 65 218 153 114 1 219 94)
  :der-encode
  #t
  :tests
  '(#(380
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 128 0 0 0 127 255 255 255 255 255 255 255 222 115 125 86 211 139 207 66 121 220 229 97 126 49 146 169 2 32 127 255 255 255 128 0 0 0 127 255 255 255 255 255 255 255 222 115 125 86 211 139 207 66 121 220 229 97 126 49 146 169)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 28 149 153 100 202 186 165 206 150 107 149 172 218 28 82 100 132 122 120 4 38 200 120 215 22 215 58 230 98 29 48 132 211 254 223 196 249 195 184 204 139 198 83 155 130 26 210 8 236 8 213 115 122 170 241 128 29 102 109 220 55 229 79 175)
  :der-encode
  #t
  :tests
  '(#(381
      "u1 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 2 32 52 45 174 117 26 99 163 202 129 137 207 52 43 59 52 234 170 37 101 226 199 226 97 33 193 191 213 67 84 71 241 195)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 152 66 168 42 131 147 45 90 68 218 171 20 175 183 153 104 221 36 217 255 197 142 99 133 134 169 11 15 37 181 33 221 56 178 192 92 141 84 139 207 90 178 169 6 226 243 251 221 231 240 185 187 222 203 133 34 151 213 90 227 66 87 248 243)
  :der-encode
  #t
  :tests
  '(#(382
      "u1 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 2 33 0 203 210 81 137 229 156 92 54 126 118 48 203 212 196 203 21 18 193 148 202 223 53 61 99 49 249 245 127 168 27 51 142)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 152 122 131 158 197 112 150 77 58 27 252 106 3 52 231 50 140 22 36 103 124 102 184 254 243 165 230 77 17 120 221 174 85 119 223 205 15 224 13 169 225 216 187 139 189 149 42 170 91 193 14 203 20 202 228 227 245 226 140 80 107 188 58 33)
  :der-encode
  #t
  :tests
  '(#(383
      "u2 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 171 101 144 173 81 52 248 225 191 69 129 207 144 202 3 152 206 185 40 97 194 175 6 146 140 192 48 61 150 84 202 62 29 130 31 106 53 125 193 115 242 42 59 119 20 92 5 122 99 43 181 111 49 81 78 49 214 210 237 127 221 234 222 85)
  :der-encode
  #t
  :tests
  '(#(384
      "u2 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 2 33 0 170 170 170 170 0 0 0 0 170 170 170 170 170 170 170 170 125 239 81 201 26 15 191 3 77 38 135 44 168 66 24 225)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 205 228 18 48 240 205 247 50 172 118 229 242 132 203 127 70 145 94 211 9 180 141 235 242 69 243 255 47 36 62 147 102 36 13 163 108 165 173 40 155 223 234 131 33 56 71 177 74 115 7 151 5 234 176 162 162 138 239 201 153 229 237 21 4)
  :der-encode
  #t
  :tests
  '(#(385
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 188 15 58 38 94 33 54 153 128 131 69 17 99 190 102 248 182 166 115 191 92 176 138 14 141 187 206 67 25 175 105 119)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 54 198 250 169 246 220 164 46 168 176 230 208 45 54 195 148 21 130 116 146 81 191 168 140 53 252 138 142 154 213 28 218 196 76 229 242 15 54 180 174 117 204 114 145 103 141 191 241 136 207 140 131 139 137 99 238 184 183 136 145 121 90 115 100)
  :der-encode
  #t
  :tests
  '(#(386
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 42 6 215 67 150 122 19 48 202 145 204 70 201 57 69 18 204 133 180 241 185 53 94 183 244 187 229 58 50 183 108 244)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 112 158 88 161 43 18 3 65 115 57 91 249 30 104 37 93 144 216 163 161 213 135 92 117 248 119 135 217 168 90 9 41 128 224 155 121 244 52 137 190 114 106 66 83 174 108 5 173 206 113 188 198 83 137 37 73 35 203 250 204 7 117 191 246)
  :der-encode
  #t
  :tests
  '(#(387
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 138 69 112 23 178 144 214 237 181 69 94 22 123 153 68 246 125 197 186 149 140 124 129 8 172 86 232 89 107 155 201 161)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 134 102 74 158 9 219 128 219 227 189 1 88 204 74 100 162 205 237 156 133 43 69 95 68 67 233 124 202 85 105 247 204 116 84 249 107 82 162 122 67 161 52 91 93 52 9 2 225 71 136 10 218 242 254 105 28 22 139 66 3 186 46 29 244)
  :der-encode
  #t
  :tests
  '(#(388
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 203 250 248 18 18 70 56 192 185 140 24 202 195 221 141 8 72 255 146 31 38 174 196 42 112 141 247 182 169 117 113 199)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 98 60 102 140 93 186 228 6 231 180 232 233 123 43 186 32 40 88 111 46 60 49 246 148 217 254 135 163 222 41 248 67 58 199 235 4 137 24 152 221 144 119 67 44 56 204 151 128 73 202 183 114 22 48 237 3 48 149 248 80 173 232 62 62)
  :der-encode
  #t
  :tests
  '(#(389
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 175 129 45 227 99 139 254 217 193 140 172 61 216 208 135 231 53 12 199 6 38 53 38 106 82 91 255 72 99 99 204 145)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 176 52 137 126 42 116 167 135 224 8 177 76 98 136 46 174 224 230 229 58 28 138 88 247 9 165 68 50 113 60 32 253 40 224 125 226 202 100 181 226 21 210 93 5 48 215 128 125 241 27 152 187 57 194 106 36 5 56 138 192 177 99 250 252)
  :der-encode
  #t
  :tests
  '(#(390
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 95 2 91 199 199 23 253 178 131 25 88 123 177 161 15 206 173 50 147 94 165 82 174 79 176 254 51 205 202 100 115 209)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 20 196 246 33 11 98 142 221 68 22 81 211 203 97 160 127 124 168 118 41 169 224 173 213 164 253 146 144 42 32 205 37 81 70 190 189 178 43 77 73 82 126 188 144 186 98 148 120 74 231 202 102 71 36 212 90 70 108 159 232 184 105 155 191)
  :der-encode
  #t
  :tests
  '(#(391
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 222 65 48 209 237 145 32 184 195 221 141 8 126 118 48 203 154 132 2 81 148 57 175 8 233 107 52 39 136 198 232 78)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 181 64 142 239 189 183 72 15 173 76 23 53 243 120 201 161 222 210 140 244 118 131 95 39 182 253 59 138 245 228 197 150 166 10 128 110 36 76 99 167 152 186 242 253 90 102 198 192 215 247 121 82 186 45 116 176 254 54 82 129 28 170 198 240)
  :der-encode
  #t
  :tests
  '(#(392
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 236 97 142 123 26 244 11 224 208 82 245 160 32 56 143 198 202 251 130 41 51 193 191 250 177 55 136 95 82 232 157 62)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 222 158 34 188 88 244 185 201 19 231 247 194 111 203 197 215 246 189 201 252 237 95 82 10 200 142 138 3 41 11 228 3 116 106 18 88 68 80 157 121 132 14 53 68 11 49 45 191 223 74 184 171 0 17 231 195 107 201 224 18 1 177 176 224)
  :der-encode
  #t
  :tests
  '(#(393
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 211 152 19 200 16 47 224 241 140 191 172 75 15 160 40 230 228 140 9 60 89 234 0 220 153 250 213 15 45 97 74 61)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 238 59 253 46 28 61 153 172 216 141 191 111 201 163 168 245 104 107 80 166 163 233 33 95 87 232 58 129 56 152 54 165 248 235 255 154 62 70 61 71 236 54 37 159 221 230 148 189 187 136 11 10 9 254 154 198 73 214 145 100 107 166 36 246)
  :der-encode
  #t
  :tests
  '(#(394
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 233 252 188 173 144 102 152 224 45 154 186 87 179 196 233 238 254 175 60 236 122 152 12 66 47 231 246 48 63 196 163 171)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 60 12 77 10 208 132 141 19 53 177 42 137 25 211 47 175 197 242 176 213 194 243 207 100 148 176 107 168 235 23 203 41 221 112 84 9 84 84 253 181 25 39 156 222 16 37 158 197 217 229 228 181 168 196 218 202 100 154 21 15 45 191 33 172)
  :der-encode
  #t
  :tests
  '(#(395
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 33 248 98 236 80 239 100 179 191 190 93 119 78 32 204 131 131 32 67 119 37 51 138 59 50 254 254 63 241 89 221 237)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 108 249 20 64 129 142 162 98 185 55 110 35 247 181 48 185 228 78 223 91 198 219 26 103 221 96 204 114 41 117 214 35 23 193 158 125 110 188 12 189 200 147 136 36 45 96 74 233 74 196 202 23 158 242 205 139 243 63 191 115 138 252 179 155)
  :der-encode
  #t
  :tests
  '(#(396
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 67 240 197 216 161 222 201 103 127 124 186 238 156 65 153 7 6 64 134 238 74 103 20 118 101 253 252 127 226 179 187 218)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 27 90 252 243 152 136 210 218 114 21 243 100 33 168 92 66 23 176 172 136 59 245 149 124 45 6 110 253 139 200 159 24 216 251 59 106 202 11 53 119 168 131 148 142 1 105 5 6 90 63 220 19 214 244 51 23 46 224 241 103 132 229 44 120)
  :der-encode
  #t
  :tests
  '(#(397
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 101 233 40 196 242 206 46 27 63 59 24 101 234 98 101 138 137 96 202 101 111 154 158 177 152 252 250 191 212 13 153 199)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 137 13 54 219 100 108 39 194 230 199 188 127 220 63 12 191 102 250 179 109 19 39 155 158 207 110 152 69 125 140 244 146 7 168 60 253 168 233 208 55 84 4 198 203 255 102 121 46 239 151 34 2 57 37 64 0 180 191 152 62 107 174 38 215)
  :der-encode
  #t
  :tests
  '(#(398
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 197 34 184 11 89 72 107 119 90 162 175 11 61 204 162 123 29 86 90 161 153 202 15 198 208 8 89 142 51 255 119 121)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 42 21 113 237 15 254 57 87 77 3 11 64 111 99 139 248 142 234 91 75 80 117 78 147 67 31 224 23 47 223 47 188 188 119 246 1 220 109 188 136 204 43 86 14 140 202 94 115 143 44 118 152 16 178 200 118 45 171 145 122 223 226 69 53)
  :der-encode
  #t
  :tests
  '(#(399
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 127 255 255 255 170 170 170 170 255 255 255 255 255 255 255 255 233 162 83 143 55 178 138 44 81 61 238 64 254 203 183 26)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 97 43 68 103 200 179 184 236 191 83 116 153 126 199 219 140 171 43 218 158 67 25 130 196 151 39 243 252 239 177 11 71 185 209 236 192 38 195 102 84 37 115 1 40 19 140 78 24 28 97 236 40 179 137 16 202 89 229 252 73 110 195 31 8)
  :der-encode
  #t
  :tests
  '(#(400
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 182 47 38 181 242 162 178 111 109 232 109 66 173 138 19 218 58 179 204 205 4 89 178 1 222 0 158 82 106 223 33 242)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 52 25 27 108 232 134 92 34 48 165 20 182 30 43 39 48 201 75 235 7 46 157 227 9 135 42 234 55 67 187 62 39 34 210 2 252 89 152 78 116 33 162 94 106 130 102 75 80 128 247 42 178 141 249 192 175 78 30 48 10 241 26 233 176)
  :der-encode
  #t
  :tests
  '(#(401
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 187 29 154 201 73 221 116 140 208 43 187 231 73 189 53 28 213 123 56 187 97 64 61 112 6 134 170 123 76 144 133 30)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 213 51 198 32 168 253 61 90 131 66 202 186 137 234 220 37 144 125 30 155 111 234 72 238 143 128 106 167 114 240 200 15 112 224 156 2 47 161 19 157 163 42 69 110 192 36 148 152 36 71 123 240 189 191 96 62 143 172 205 107 32 93 38 60)
  :der-encode
  #t
  :tests
  '(#(402
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 102 117 90 0 99 140 218 236 28 115 37 19 202 2 52 236 229 37 69 218 193 31 129 110 129 143 114 91 79 96 170 242)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 145 1 75 234 135 5 160 34 151 46 18 177 118 201 110 132 192 182 28 5 235 28 111 140 92 29 183 49 213 77 103 226 144 96 239 108 118 77 141 71 237 94 191 143 108 35 131 92 184 159 139 5 108 223 126 69 127 146 115 182 71 126 206 51)
  :der-encode
  #t
  :tests
  '(#(403
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 85 160 12 159 205 174 187 96 50 81 60 160 35 78 207 255 233 142 190 73 47 223 2 228 140 164 142 152 43 235 54 105)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 40 122 127 142 223 187 85 203 181 109 107 123 229 185 108 65 10 133 163 91 198 99 150 97 169 43 214 83 225 245 150 136 187 209 51 167 120 40 73 59 62 15 134 127 52 172 252 172 9 148 21 57 154 107 17 6 160 249 66 12 6 248 191 148)
  :der-encode
  #t
  :tests
  '(#(404
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 171 64 25 63 155 93 118 192 100 162 121 64 70 157 159 255 211 29 124 146 95 190 5 201 25 73 29 48 87 214 108 210)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 130 236 165 36 201 238 132 117 236 137 72 114 26 148 9 181 9 12 108 40 134 109 12 18 102 155 213 203 126 104 90 88 6 107 30 113 53 148 106 66 93 221 34 128 118 234 36 209 49 185 189 46 174 107 81 200 8 56 87 98 143 38 11 128)
  :der-encode
  #t
  :tests
  '(#(405
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 202 2 52 235 181 253 203 19 202 2 52 236 255 255 255 255 203 13 173 187 199 245 73 248 162 107 68 8 208 220 134 0)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 156 197 18 181 141 91 146 31 145 7 84 65 176 223 97 224 56 20 89 222 112 58 132 82 60 218 49 220 24 84 159 248 86 71 221 75 211 159 103 97 161 68 216 30 243 157 183 188 13 237 188 177 91 218 240 132 227 161 15 221 16 189 144 106)
  :der-encode
  #t
  :tests
  '(#(406
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 191 255 255 255 62 163 103 126 8 43 147 16 87 38 32 174 25 147 58 158 101 178 133 89 135 17 199 114 152 129 90 211)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 170 157 51 199 108 205 1 27 162 48 71 164 32 132 3 116 180 250 59 228 128 198 82 99 213 67 186 242 204 198 20 30 94 211 180 42 217 82 120 105 250 233 41 20 184 43 149 45 44 49 200 252 200 91 76 16 9 131 9 102 148 40 87 102)
  :der-encode
  #t
  :tests
  '(#(407
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 38 102 102 102 59 187 187 187 230 102 102 102 102 102 102 102 91 55 144 46 2 63 171 124 143 5 93 134 229 204 65 244)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 40 18 153 105 52 219 19 87 4 138 26 172 176 124 178 168 115 15 190 83 9 132 167 165 22 111 132 116 143 246 62 76 230 232 168 14 35 94 33 110 26 158 117 186 59 58 50 26 245 29 46 69 36 173 60 139 233 146 136 70 59 145 21 90)
  :der-encode
  #t
  :tests
  '(#(408
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 191 255 255 255 54 219 109 183 164 146 73 36 146 73 36 146 20 108 87 63 76 109 252 141 8 164 67 226 88 151 11 9)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 130 134 211 74 250 25 4 174 117 109 115 191 2 166 182 169 219 30 170 27 131 81 173 113 58 120 109 207 184 41 19 91 249 121 34 223 232 12 212 240 228 56 168 216 66 231 102 104 83 67 109 151 40 96 247 21 230 34 161 232 118 219 66 81)
  :der-encode
  #t
  :tests
  '(#(409
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 33 0 191 255 255 255 42 170 170 171 127 255 255 255 255 255 255 255 200 21 208 230 11 62 89 110 203 26 211 162 124 253 73 196)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 75 123 153 144 166 194 197 168 16 16 124 9 238 9 207 51 136 193 166 232 42 170 68 195 120 217 136 110 37 8 194 224 134 126 118 50 252 195 18 252 253 192 31 182 165 121 206 106 166 40 85 99 177 173 187 50 114 240 225 34 249 222 115 227)
  :der-encode
  #t
  :tests
  '(#(410
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 127 255 255 255 85 85 85 85 255 255 255 255 255 255 255 255 211 68 167 30 111 101 20 88 162 123 220 129 253 151 110 55)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 86 132 38 84 14 25 190 100 4 230 203 71 69 252 122 148 60 12 5 157 124 123 175 59 196 252 120 46 154 237 242 222 186 127 178 10 209 42 136 108 83 148 93 60 219 1 154 250 139 13 88 237 48 125 85 245 86 172 247 158 200 144 18 213)
  :der-encode
  #t
  :tests
  '(#(411
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 63 255 255 255 128 0 0 0 127 255 255 255 255 255 255 255 222 115 125 86 211 139 207 66 121 220 229 97 126 49 146 170)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 27 235 193 166 130 49 7 209 38 50 25 227 109 46 193 149 125 32 176 180 80 180 129 201 222 70 234 146 148 212 139 102 114 183 168 17 175 149 40 230 17 153 244 162 167 243 13 134 133 245 160 71 103 181 146 118 230 90 115 46 143 57 80 161)
  :der-encode
  #t
  :tests
  '(#(412
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 32 93 142 205 100 164 238 186 70 104 21 221 243 164 222 154 142 106 189 156 93 176 160 30 184 3 67 85 61 166 72 66 143)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 8 162 183 250 98 95 9 16 106 26 141 152 248 49 229 61 145 143 179 48 214 195 136 167 184 13 249 139 185 233 201 52 71 141 168 24 180 217 64 130 81 127 169 99 90 138 165 190 5 50 61 230 4 252 250 151 188 58 26 87 165 232 12 52)
  :der-encode
  #t
  :tests
  '(#(413
      "point duplication during verification"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 111 35 71 202 183 221 118 133 143 224 85 90 195 188 153 4 140 74 172 175 223 182 188 190 5 234 108 66 196 147 69 105 2 33 0 174 54 112 31 36 31 96 115 96 139 95 119 217 3 154 154 236 68 170 90 18 169 146 39 253 41 17 176 1 145 93 226)
      #t
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 8 162 183 250 98 95 9 16 106 26 141 152 248 49 229 61 145 143 179 48 214 195 136 167 184 13 249 139 185 233 201 52 184 114 87 230 75 38 191 126 174 128 86 156 165 117 90 65 250 205 194 26 251 3 5 104 67 197 229 168 90 23 243 203)
  :der-encode
  #t
  :tests
  '(#(414
      "duplication bug"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 111 35 71 202 183 221 118 133 143 224 85 90 195 188 153 4 140 74 172 175 223 182 188 190 5 234 108 66 196 147 69 105 2 33 0 174 54 112 31 36 31 96 115 96 139 95 119 217 3 154 154 236 68 170 90 18 169 146 39 253 41 17 176 1 145 93 226)
      #f
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 105 170 198 137 123 4 87 229 76 172 37 242 69 144 190 37 93 53 42 32 5 80 4 231 202 167 203 180 48 179 201 15 145 19 191 254 34 13 185 20 62 56 81 77 160 72 29 246 127 23 23 197 138 171 26 24 159 185 212 246 229 60 57 0)
  :der-encode
  #t
  :tests
  '(#(415
      "point with x-coordinate 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 1 1 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 68 159 246 221 190 196 191 155 204 49 73 184 223 228 128 249 166 119 195 184 226 3 210 114 243 224 162 207 144 162 206 167 135 252 188 7 153 169 50 61 163 247 253 219 72 24 184 155 29 151 179 43 150 46 27 62 218 210 251 237 71 181 141 65)
  :der-encode
  #t
  :tests
  '(#(416
      "point with x-coordinate 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 32 51 51 51 51 0 0 0 0 51 51 51 51 51 51 51 51 37 199 203 188 84 158 82 231 99 241 245 90 50 122 58 169)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 178 130 177 181 188 0 194 187 24 242 140 230 120 225 205 72 200 206 216 51 90 245 216 228 171 211 215 167 211 97 111 86 61 71 165 93 220 17 233 102 253 226 189 135 176 40 230 47 200 19 61 239 130 78 62 0 82 143 36 66 144 143 232 76)
  :der-encode
  #t
  :tests
  '(#(417
      "comparison with point at infinity "
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112 2 32 51 51 51 51 0 0 0 0 51 51 51 51 51 51 51 51 37 199 203 188 84 158 82 231 99 241 245 90 50 122 58 169)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 250 203 214 245 233 150 40 74 83 203 28 164 31 252 78 176 163 253 115 183 60 115 1 148 1 17 105 185 173 161 69 25 197 73 30 222 96 97 77 130 59 73 17 152 223 123 198 198 118 142 6 78 14 67 183 240 83 171 143 39 156 212 244 236)
  :der-encode
  #t
  :tests
  '(#(418
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 124 242 123 24 141 3 79 126 138 82 56 3 4 181 26 195 192 137 105 226 119 242 27 53 166 11 72 252 71 102 153 120 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 160 17 128 29 82 167 95 72 65 228 2 64 218 73 221 168 243 142 134 139 78 111 148 31 119 202 155 134 102 90 213 167 71 81 234 191 0 252 42 122 134 63 236 54 105 117 237 188 212 136 86 147 2 44 215 85 192 216 147 110 102 13 97 219)
  :der-encode
  #t
  :tests
  '(#(419
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 124 242 123 24 141 3 79 126 138 82 56 3 4 181 26 195 192 137 105 226 119 242 27 53 166 11 72 252 71 102 153 120 2 33 0 182 219 109 182 36 146 73 37 73 36 146 73 36 146 73 36 98 91 215 160 155 236 76 168 27 205 217 248 253 107 99 204)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 253 250 93 53 228 46 249 27 24 66 201 242 138 235 108 104 189 119 50 147 95 116 129 104 222 183 24 230 102 8 185 128 214 248 95 166 120 223 60 171 181 91 80 2 230 59 85 215 202 225 30 137 247 73 64 183 153 10 59 22 125 250 25 27)
  :der-encode
  #t
  :tests
  '(#(420
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 124 242 123 24 141 3 79 126 138 82 56 3 4 181 26 195 192 137 105 226 119 242 27 53 166 11 72 252 71 102 153 120 2 33 0 204 204 204 204 0 0 0 0 204 204 204 204 204 204 204 204 151 31 46 241 82 121 75 157 143 199 213 104 201 232 234 167)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 7 84 222 113 189 33 241 79 73 39 189 171 119 239 197 127 20 139 54 39 92 48 90 134 193 215 160 220 253 83 186 180 152 159 201 155 199 37 218 132 25 124 47 40 78 204 96 48 72 158 218 119 239 146 248 104 1 48 98 43 99 26 242 179)
  :der-encode
  #t
  :tests
  '(#(421
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 124 242 123 24 141 3 79 126 138 82 56 3 4 181 26 195 192 137 105 226 119 242 27 53 166 11 72 252 71 102 153 120 2 32 51 51 51 51 0 0 0 0 51 51 51 51 51 51 51 51 37 199 203 188 84 158 82 231 99 241 245 90 50 122 58 170)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 138 173 132 253 93 82 175 213 49 241 6 143 183 161 11 179 101 250 239 168 153 117 89 113 135 71 13 4 168 201 200 179 39 37 142 50 209 156 213 141 223 211 91 215 234 31 6 60 119 198 27 120 121 69 27 221 62 143 68 203 244 2 65 162)
  :der-encode
  #t
  :tests
  '(#(422
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 124 242 123 24 141 3 79 126 138 82 56 3 4 181 26 195 192 137 105 226 119 242 27 53 166 11 72 252 71 102 153 120 2 32 73 36 146 72 219 109 182 219 182 219 109 182 219 109 182 219 90 139 35 13 11 43 81 220 215 235 240 201 254 247 193 133)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 180 160 30 199 177 10 207 243 218 206 5 34 47 174 5 199 83 104 163 117 216 206 31 175 74 27 45 239 26 183 21 171 97 166 100 46 130 255 149 15 55 58 206 92 12 194 152 99 154 185 174 115 158 70 20 169 63 177 18 46 225 109 146 47)
  :der-encode
  #t
  :tests
  '(#(423
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 124 242 123 24 141 3 79 126 138 82 56 3 4 181 26 195 192 137 105 226 119 242 27 53 166 11 72 252 71 102 153 120 2 32 22 164 80 46 39 129 225 26 200 44 188 157 30 221 140 152 21 132 209 62 24 65 30 47 110 4 120 195 68 22 227 187)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 78 252 43 239 66 177 30 9 41 237 202 59 2 95 1 177 250 55 172 238 244 205 62 140 45 75 234 181 0 133 106 248 119 22 130 143 193 120 140 136 26 227 159 83 76 62 39 12 168 105 165 120 33 11 93 173 138 137 56 105 29 12 75 115)
  :der-encode
  #t
  :tests
  '(#(424
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 2 32 85 85 85 85 0 0 0 0 85 85 85 85 85 85 85 85 62 247 168 228 141 7 223 129 166 147 67 150 84 33 12 112)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 70 6 185 252 238 204 71 186 188 199 141 231 60 165 86 114 240 153 48 170 205 86 13 176 162 150 122 153 239 138 89 94 97 42 5 0 37 120 92 14 124 119 99 219 11 181 60 72 182 255 14 209 223 182 5 93 249 2 153 226 149 9 41 144)
  :der-encode
  #t
  :tests
  '(#(425
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 2 33 0 182 219 109 182 36 146 73 37 73 36 146 73 36 146 73 36 98 91 215 160 155 236 76 168 27 205 217 248 253 107 99 204)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 182 222 109 226 103 114 13 22 188 207 113 253 190 7 235 229 193 20 159 140 251 32 65 177 214 202 187 201 182 101 109 104 45 62 33 244 2 93 220 172 171 3 91 93 166 49 3 97 16 32 121 241 180 12 30 247 199 184 132 39 105 76 17 198)
  :der-encode
  #t
  :tests
  '(#(426
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 2 33 0 204 204 204 204 0 0 0 0 204 204 204 204 204 204 204 204 151 31 46 241 82 121 75 157 143 199 213 104 201 232 234 167)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 239 211 189 18 153 212 178 187 10 251 206 42 253 144 121 45 140 114 225 210 156 96 146 228 104 21 64 66 6 100 226 117 57 10 77 187 32 209 15 115 96 197 183 148 86 77 205 68 59 177 223 148 191 107 31 75 229 144 154 34 166 165 52 186)
  :der-encode
  #t
  :tests
  '(#(427
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 2 32 51 51 51 51 0 0 0 0 51 51 51 51 51 51 51 51 37 199 203 188 84 158 82 231 99 241 245 90 50 122 58 170)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 218 233 207 22 88 103 218 100 130 237 232 75 252 91 148 55 85 41 188 185 83 242 109 12 214 143 200 119 8 143 120 217 81 202 220 159 97 197 95 142 42 4 219 170 225 37 31 209 92 177 45 249 188 208 114 165 25 113 18 126 170 108 230 18)
  :der-encode
  #t
  :tests
  '(#(428
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 2 32 73 36 146 72 219 109 182 219 182 219 109 182 219 109 182 219 90 139 35 13 11 43 81 220 215 235 240 201 254 247 193 133)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 132 24 146 78 148 22 29 53 12 159 232 220 28 192 135 222 75 68 145 208 188 105 74 104 98 223 78 138 85 95 154 251 176 179 145 175 151 176 218 203 220 235 122 152 39 129 208 9 9 120 239 191 118 184 230 145 66 80 233 42 222 154 97 38)
  :der-encode
  #t
  :tests
  '(#(429
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 2 32 22 164 80 46 39 129 225 26 200 44 188 157 30 221 140 152 21 132 209 62 24 65 30 47 110 4 120 195 68 22 227 187)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 79 227 66 226 254 26 127 155 142 231 235 74 124 15 158 22 43 206 51 87 107 49 94 206 203 182 64 104 55 191 81 245)
  :der-encode
  #t
  :tests
  '(#(430
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 52 45 174 117 26 99 163 202 129 137 207 52 43 59 52 234 170 37 101 226 199 226 97 33 193 191 213 67 84 71 241 195 2 32 36 146 73 36 109 182 219 109 219 109 182 219 109 182 219 109 173 69 145 134 133 149 168 238 107 245 248 100 255 123 224 194)
      #f
      ())
    #(431
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 203 210 81 137 229 156 92 54 126 118 48 203 212 196 203 21 18 193 148 202 223 53 61 99 49 249 245 127 168 27 51 142 2 32 36 146 73 36 109 182 219 109 219 109 182 219 109 182 219 109 173 69 145 134 133 149 168 238 107 245 248 100 255 123 224 194)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 107 23 209 242 225 44 66 71 248 188 230 229 99 164 64 242 119 3 125 129 45 235 51 160 244 161 57 69 216 152 194 150 176 28 189 28 1 229 128 101 113 24 20 181 131 240 97 233 212 49 204 169 148 206 161 49 52 73 191 151 200 64 174 10)
  :der-encode
  #t
  :tests
  '(#(432
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 52 45 174 117 26 99 163 202 129 137 207 52 43 59 52 234 170 37 101 226 199 226 97 33 193 191 213 67 84 71 241 195 2 32 36 146 73 36 109 182 219 109 219 109 182 219 109 182 219 109 173 69 145 134 133 149 168 238 107 245 248 100 255 123 224 194)
      #f
      ())
    #(433
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 203 210 81 137 229 156 92 54 126 118 48 203 212 196 203 21 18 193 148 202 223 53 61 99 49 249 245 127 168 27 51 142 2 32 36 146 73 36 109 182 219 109 219 109 182 219 109 182 219 109 173 69 145 134 133 149 168 238 107 245 248 100 255 123 224 194)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 4 170 236 115 99 87 38 242 19 251 138 158 100 218 59 134 50 228 20 149 169 68 208 4 91 82 46 186 114 64 250 213 135 217 49 87 152 170 163 165 186 1 119 87 135 206 208 94 170 247 180 224 159 200 29 109 26 165 70 232 54 93 82 93)
  :der-encode
  #t
  :tests
  '(#(434
      "pseudorandom signature"
      #vu8()
      #vu8(48 70 2 33 0 221 181 119 103 13 90 155 147 102 109 242 175 127 155 170 221 130 86 252 160 200 29 235 45 92 215 48 26 75 57 16 95 2 33 0 162 188 217 246 34 138 10 160 164 240 102 170 103 75 155 8 218 37 43 2 167 127 209 178 247 162 216 89 41 232 180 145)
      #t
      ())
    #(435
      "pseudorandom signature"
      #vu8(77 115 103)
      #vu8(48 68 2 32 83 45 103 44 48 125 162 137 23 32 209 20 34 3 94 162 87 113 244 252 224 220 153 72 215 84 202 79 102 239 54 187 2 32 79 41 97 129 121 157 62 103 128 8 109 105 8 171 134 66 113 27 212 6 228 129 176 206 58 241 196 75 159 9 132 150)
      #t
      ())
    #(436
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 28 88 205 230 157 219 54 62 122 109 38 18 119 27 62 113 59 232 190 208 127 55 188 218 72 117 241 82 219 42 193 173 2 33 0 166 103 85 176 120 38 43 107 13 144 199 74 238 100 82 33 4 170 88 181 248 47 197 186 152 188 239 91 219 157 67 168)
      #t
      ())
    #(437
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(48 68 2 32 102 55 241 67 105 209 221 17 44 86 145 150 159 204 134 126 100 186 251 31 93 143 145 122 154 207 142 207 29 201 87 84 2 32 69 123 74 139 221 28 4 123 18 130 104 151 153 18 65 112 13 173 9 102 107 79 65 10 86 153 48 35 176 152 253 30)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 79 51 124 207 214 119 38 168 5 228 241 96 10 226 132 157 243 128 126 202 17 115 128 35 159 189 129 105 0 0 0 0 237 157 234 18 76 200 195 150 65 100 17 233 136 195 15 66 126 181 4 175 67 163 20 108 213 223 126 166 6 102 214 133)
  :der-encode
  #t
  :tests
  '(#(438
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 239 154 70 114 224 160 122 14 253 89 54 167 127 78 160 252 214 157 174 111 217 92 203 168 220 182 133 231 73 6 35 195 2 33 0 207 19 93 66 245 227 121 246 239 148 182 164 147 219 1 199 64 244 65 255 91 36 117 99 139 107 8 31 68 91 23 226)
      #t
      ())
    #(439
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 184 203 5 178 120 193 93 247 198 163 17 176 206 123 181 89 143 227 169 95 219 87 104 58 192 130 26 162 245 214 250 24 2 33 0 169 223 161 204 12 154 224 1 90 226 72 95 34 237 107 9 37 232 45 150 255 105 91 140 46 213 147 240 39 25 243 14)
      #t
      ())
    #(440
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 32 47 230 242 170 237 14 183 96 34 62 140 88 3 99 99 13 48 65 97 72 6 231 251 200 99 64 90 164 217 136 37 238 2 33 0 245 210 195 150 228 93 154 249 254 27 6 178 127 13 180 217 238 102 225 133 95 72 70 218 229 219 107 61 138 251 196 248)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 60 240 61 97 77 137 57 207 212 153 160 120 115 250 194 129 97 143 6 184 255 135 232 1 92 63 73 114 101 0 73 53 132 250 23 77 121 28 114 191 44 227 136 10 137 96 221 42 124 122 19 56 168 47 133 169 229 156 219 222 128 0 0 0)
  :der-encode
  #t
  :tests
  '(#(441
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 251 158 49 44 237 159 149 201 18 72 186 226 80 86 183 187 216 74 5 252 146 172 189 48 66 105 161 38 155 191 79 76 2 33 0 243 20 38 168 9 206 235 179 105 39 138 81 130 188 233 72 53 240 102 202 184 101 79 139 210 51 149 149 132 66 68 219)
      #t
      ())
    #(442
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 40 79 229 241 200 106 85 252 179 194 122 18 216 45 121 78 171 154 13 118 209 253 196 242 93 245 169 191 82 232 231 104 2 32 122 170 117 229 167 148 139 230 111 6 206 82 252 62 73 22 252 147 81 75 8 197 31 132 183 56 57 210 192 90 207 88)
      #t
      ())
    #(443
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 33 0 129 41 80 68 154 185 3 81 171 15 18 71 116 162 99 54 37 208 135 29 66 166 157 46 71 61 138 193 24 181 6 166 2 32 80 201 136 120 195 105 156 52 243 4 158 111 148 150 227 25 159 181 216 96 35 41 149 32 95 23 97 192 0 175 78 7)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 60 240 61 97 77 137 57 207 212 153 160 120 115 250 194 129 97 143 6 184 255 135 232 1 92 63 73 114 101 0 73 53 123 5 232 177 134 227 141 65 211 28 119 245 118 159 34 213 131 133 236 200 87 208 122 86 26 99 36 33 127 255 255 255)
  :der-encode
  #t
  :tests
  '(#(444
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 234 164 243 168 128 92 96 207 247 76 236 120 198 183 206 167 30 241 22 195 51 97 42 110 0 150 164 196 36 80 147 107 2 33 0 251 179 80 141 102 146 184 224 133 76 26 23 73 234 6 82 98 186 231 200 184 49 236 232 149 161 238 218 1 206 190 125)
      #t
      ())
    #(445
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 32 61 12 172 164 76 33 211 76 253 207 176 0 152 201 82 3 224 136 71 244 170 186 181 174 110 167 243 101 174 251 188 248 2 33 0 187 153 190 114 158 81 207 209 103 218 210 33 130 56 51 20 201 216 84 50 48 156 190 54 244 177 235 115 231 118 178 73)
      #t
      ())
    #(446
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 33 0 228 248 178 124 60 44 92 178 166 203 156 32 73 1 29 209 6 0 133 198 226 161 83 128 188 245 34 64 99 211 174 8 2 32 75 58 25 241 190 148 92 214 73 243 77 150 94 126 236 172 10 5 172 128 48 183 205 45 107 237 132 8 111 218 86 126)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 40 41 195 31 170 46 64 14 52 78 217 75 202 63 205 5 69 149 110 188 254 138 208 246 223 165 255 142 255 255 255 255 160 26 175 175 0 14 82 88 88 85 175 167 103 106 222 40 65 19 9 144 82 223 87 231 235 59 211 126 190 185 34 46)
  :der-encode
  #t
  :tests
  '(#(447
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 103 12 230 13 15 199 34 76 141 6 243 176 28 68 22 238 11 58 193 47 12 255 62 26 210 20 137 131 137 235 200 25 2 32 69 218 123 111 200 244 247 102 248 44 81 50 115 95 46 217 65 48 120 11 68 78 46 16 193 72 77 94 69 246 67 50)
      #t
      ())
    #(448
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 162 41 40 179 2 47 213 84 103 10 134 237 81 154 72 216 68 141 201 8 86 233 196 5 137 7 107 175 245 145 224 118 2 33 0 180 0 90 137 174 240 39 229 6 58 137 112 159 188 102 160 94 177 45 141 52 175 132 243 94 167 172 147 247 187 212 14)
      #t
      ())
    #(449
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 162 119 24 30 100 30 218 251 219 53 152 1 96 87 145 200 51 255 59 70 45 172 60 77 54 8 212 121 201 128 144 255 2 33 0 139 42 214 136 128 206 222 34 144 169 150 254 91 112 3 97 12 92 159 83 225 220 242 205 178 173 129 94 43 165 193 207)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 255 255 255 249 72 8 30 106 4 88 221 143 158 115 143 38 101 255 144 89 173 106 172 7 8 49 140 76 169 167 164 245 90 138 188 186 45 218 132 116 49 30 229 65 73 185 115 202 224 192 251 137 85 122 208 191 120 230 82 154 22 99 189 115)
  :der-encode
  #t
  :tests
  '(#(450
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 32 118 12 72 120 65 167 33 78 152 80 181 86 157 153 254 63 249 221 220 65 222 231 49 58 120 9 33 216 211 101 123 22 2 33 0 185 157 99 227 204 129 69 136 1 213 253 89 38 64 93 51 184 148 224 249 106 133 195 196 169 41 164 92 130 141 118 208)
      #t
      ())
    #(451
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 33 0 155 126 114 172 69 69 5 1 124 83 119 178 195 121 243 26 122 2 104 183 57 252 164 201 125 254 28 154 164 188 84 142 2 32 30 101 203 238 105 164 42 176 167 174 80 233 172 206 170 9 113 87 79 182 4 149 136 118 173 99 22 195 158 235 221 150)
      #t
      ())
    #(452
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 32 74 126 68 228 168 169 254 226 38 71 146 62 174 224 54 139 63 164 8 237 170 25 180 6 80 115 9 177 62 7 56 85 2 33 0 253 133 151 88 95 160 39 12 140 223 133 90 122 105 168 67 235 40 18 78 207 144 172 83 165 138 132 124 123 67 199 166)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 0 0 0 3 250 21 249 99 148 157 95 3 166 245 199 248 111 158 0 21 238 178 58 235 191 241 23 57 55 186 116 142 16 153 135 32 112 232 232 124 85 95 161 54 89 204 165 215 250 220 252 176 2 62 168 137 84 140 164 138 242 186 126 113)
  :der-encode
  #t
  :tests
  '(#(453
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 69 137 240 194 77 27 47 137 194 232 6 246 103 41 124 132 76 99 51 13 107 154 7 155 43 221 45 149 36 126 62 174 2 32 117 218 161 218 9 163 241 237 141 225 170 204 112 57 167 33 196 111 158 188 212 103 39 80 242 253 156 47 112 241 230 237)
      #t
      ())
    #(454
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 32 55 117 120 168 29 165 134 234 226 105 240 92 155 178 40 10 81 122 179 24 78 2 23 154 202 93 100 222 225 169 48 199 2 33 0 204 23 53 239 212 180 62 139 219 168 193 180 79 158 195 230 37 119 229 244 246 84 48 81 70 123 172 217 234 170 77 74)
      #t
      ())
    #(455
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 32 127 114 39 22 194 121 243 209 69 99 251 216 203 243 171 205 81 195 48 87 149 96 158 4 200 237 126 222 18 174 37 24 2 33 0 138 153 106 55 6 121 195 206 98 50 36 77 100 72 30 150 228 123 246 97 26 165 73 0 0 192 177 223 252 35 26 161)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 188 187 41 20 199 159 4 94 170 110 203 188 97 40 22 179 190 93 45 103 150 112 125 129 37 233 248 81 193 138 240 21 0 0 0 0 19 82 187 74 15 162 234 76 206 185 171 99 221 104 74 222 90 17 39 188 243 0 166 152 167 25 59 194)
  :der-encode
  #t
  :tests
  '(#(456
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 47 17 217 103 121 13 212 56 122 33 137 41 179 252 15 19 2 56 236 111 217 50 19 72 254 99 26 30 96 123 215 66 2 32 59 82 164 38 6 208 218 161 53 9 45 137 171 116 179 196 231 43 78 210 19 19 116 6 212 181 15 168 76 78 160 73)
      #t
      ())
    #(457
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 25 45 41 158 150 39 42 12 73 237 27 21 249 4 123 84 180 135 142 175 53 10 123 47 84 57 177 227 200 63 151 3 2 32 38 81 62 156 187 172 167 148 111 61 109 144 181 204 101 169 133 205 254 8 151 52 249 68 171 116 132 42 77 196 18 125)
      #t
      ())
    #(458
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 235 215 166 241 69 15 139 185 233 171 249 246 108 65 67 210 140 140 132 91 46 38 10 176 255 243 247 186 88 55 249 68 2 33 0 153 40 175 229 125 246 184 201 11 122 247 195 218 152 27 113 219 106 227 165 162 26 76 90 72 183 22 40 229 129 26 158)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256r1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 89 48 19 6 7 42 134 72 206 61 2 1 6 8 42 134 72 206 61 3 1 7 3 66 0 4 188 187 41 20 199 159 4 94 170 110 203 188 97 40 22 179 190 93 45 103 150 112 125 129 37 233 248 81 193 138 240 21 255 255 255 254 236 173 68 182 240 93 21 179 49 70 84 156 34 151 181 34 165 238 216 67 12 255 89 103 88 230 196 61)
  :der-encode
  #t
  :tests
  '(#(459
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 55 253 0 177 79 244 105 168 187 77 47 156 108 162 40 196 194 75 133 113 147 137 164 96 153 101 60 65 23 78 154 253 2 32 95 100 220 104 137 60 243 24 109 243 232 58 247 14 150 233 242 16 61 37 184 221 255 236 218 150 232 233 24 22 25 207)
      #t
      ())
    #(460
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 32 60 227 57 166 62 164 204 26 107 18 209 230 107 145 32 94 138 245 48 238 190 50 8 53 156 83 39 178 66 178 182 105 2 33 0 242 177 214 218 230 43 254 156 68 177 203 213 108 240 222 134 90 18 1 192 72 109 101 141 165 252 2 154 212 123 145 126)
      #t
      ())
    #(461
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 32 123 242 37 190 195 60 231 251 64 20 9 126 53 12 21 4 211 55 64 40 205 168 246 251 186 196 224 250 83 25 160 72 2 33 0 170 164 93 84 235 166 187 60 224 12 232 230 61 226 77 199 238 25 6 144 98 232 211 64 102 58 220 172 7 240 151 205)
      #t
      ())))
