(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 234 218 147 190 16 178 68 158 30 139 181 131 5 213 32 8 1 60 87 16 124 26 32 163 23 166 203 167 236 166 114 52 12 3 209 210 224 150 99 40 102 145 223 85 6 159 162 84 144 201 221 159 156 11 178 181)
  :der-encode
  #t
  :tests
  '(#(1
      "signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 28 57 71 102 251 103 166 95 224 175 108 21 79 124 189 40 94 161 128 180 198 21 12 218 250 251 15 111 15)
      #t
      ())
    #(2
      "Legacy:ASN encoding of s misses leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 28 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #t
      ("MissingZero"))
    #(3
      "valid"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #t
      ())
    #(4
      "long form encoding of length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ("BER"))
    #(5
      "length of sequence contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 130 0 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ("BER"))
    #(6
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(7
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(8
      "uint32 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 1 0 0 0 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(9
      "uint64 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 137 1 0 0 0 0 0 0 0 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(10
      "length of sequence = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 127 255 255 255 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(11
      "length of sequence = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 255 255 255 255 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(12
      "length of sequence = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 255 255 255 255 255 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(13
      "length of sequence = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 136 255 255 255 255 255 255 255 255 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(14
      "incorrect length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 255 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(15
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(16
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 128 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(17
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 128 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(18
      "removing sequence"
      #vu8(49 50 51 52 48 48)
      #vu8()
      #f
      ())
    #(19
      "lonely sequence tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48)
      #f
      ())
    #(20
      "appending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 0 0)
      #f
      ())
    #(21
      "prepending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 0 0 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(22
      "appending unused 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 0 0)
      #f
      ())
    #(23
      "appending null value to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 5 0)
      #f
      ())
    #(24
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 73 129 119 48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(25
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 65 37 0 48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(26
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 0 4 222 173 190 239)
      #f
      ())
    #(27
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 34 33 73 129 119 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(28
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 65 34 32 37 0 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(29
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 34 30 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 0 4 222 173 190 239 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(30
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 34 34 73 129 119 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(31
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 65 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 34 33 37 0 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(32
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 34 31 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 0 4 222 173 190 239)
      #f
      ())
    #(33
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 170 0 187 0 205 0 48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(34
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 170 2 170 187 48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(35
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 34 36 170 0 187 0 205 0 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(36
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 34 34 170 2 170 187 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(37
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 34 37 170 0 187 0 205 0 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(38
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 67 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 34 35 170 2 170 187 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(39
      "truncated length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129)
      #f
      ())
    #(40
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 0 0)
      #f
      ())
    #(41
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 65 34 128 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 0 0 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(42
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 65 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 34 128 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 0 0)
      #f
      ())
    #(43
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 49 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 0 0)
      #f
      ())
    #(44
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 65 34 128 3 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 0 0 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(45
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 65 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 34 128 3 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 0 0)
      #f
      ())
    #(46
      "Replacing sequence with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(5 0)
      #f
      ())
    #(47
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(46 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(48
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(47 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(49
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(49 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(50
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(50 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(51
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(255 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(52
      "dropping value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 0)
      #f
      ())
    #(53
      "using composition for sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 65 48 1 2 48 60 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(54
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187)
      #f
      ())
    #(55
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(56
      "indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 0 0)
      #f
      ("BER"))
    #(57
      "indefinite length with truncated delimiter"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 0)
      #f
      ())
    #(58
      "indefinite length with additional element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 5 0 0 0)
      #f
      ())
    #(59
      "indefinite length with truncated element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 6 8 17 34 0 0)
      #f
      ())
    #(60
      "indefinite length with garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 0 0 254 2 190 239)
      #f
      ())
    #(61
      "indefinite length with nonempty EOC"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 0 2 190 239)
      #f
      ())
    #(62
      "prepend empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 48 0 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(63
      "append empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 48 0)
      #f
      ())
    #(64
      "append garbage with high tag number"
      #vu8(49 50 51 52 48 48)
      #vu8(48 64 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 191 127 0)
      #f
      ())
    #(65
      "sequence of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(66
      "truncated sequence: removed last 1 elements"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171)
      #f
      ())
    #(67
      "repeating element in sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 92 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(68
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 129 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ("BER"))
    #(69
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 129 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ("BER"))
    #(70
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 130 0 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ("BER"))
    #(71
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 130 0 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ("BER"))
    #(72
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(73
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 27 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(74
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 30 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(75
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 28 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(76
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 133 1 0 0 0 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(77
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 133 1 0 0 0 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(78
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 137 1 0 0 0 0 0 0 0 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(79
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 137 1 0 0 0 0 0 0 0 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(80
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 65 2 132 127 255 255 255 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(81
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 65 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 132 127 255 255 255 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(82
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 65 2 132 255 255 255 255 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(83
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 65 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 132 255 255 255 255 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(84
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 133 255 255 255 255 255 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(85
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 133 255 255 255 255 255 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(86
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 136 255 255 255 255 255 255 255 255 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(87
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 136 255 255 255 255 255 255 255 255 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(88
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 255 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(89
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 255 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(90
      "removing integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 31 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(91
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 32 2 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(92
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 31 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2)
      #f
      ())
    #(93
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 30 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 0 0 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(94
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 31 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 0 0)
      #f
      ())
    #(95
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 30 0 0 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ("BER"))
    #(96
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 31 0 0 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ("BER"))
    #(97
      "appending unused 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 0 0 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(98
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 30 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 5 0 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(99
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 63 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 31 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46 5 0)
      #f
      ())
    #(100
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 129 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(101
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 32 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 129)
      #f
      ())
    #(102
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 5 0 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(103
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 32 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 5 0)
      #f
      ())
    #(104
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 0 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(105
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 1 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(106
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 3 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(107
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 4 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(108
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 255 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(109
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 0 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(110
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 1 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(111
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 3 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(112
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 4 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(113
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 255 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(114
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 0 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(115
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 32 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 0)
      #f
      ())
    #(116
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 65 34 32 2 1 105 2 27 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(117
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 65 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 34 33 2 1 0 2 28 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(118
      "modify first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 107 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(119
      "modify first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 2 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(120
      "modify last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 43 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(121
      "modify last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 174)
      #f
      ())
    #(122
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 27 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(123
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 27 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(124
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 28 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187)
      #f
      ())
    #(125
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 255 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(126
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 30 255 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(127
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 9 1 128 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(128
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 9 1 128)
      #f
      ())
    #(129
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 0 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(130
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 1 0)
      #f
      ())
    #(131
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 1 105 28 114 61 214 167 245 209 27 140 142 139 208 129 115 66 139 196 138 44 63 3 28 170 236 59 188 232 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(132
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 255 105 28 114 61 214 167 245 209 27 140 142 139 208 131 69 252 202 82 169 176 23 72 202 32 51 131 104 110 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(133
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 150 227 141 194 41 88 10 46 228 115 113 116 47 125 163 96 84 244 102 17 212 218 12 154 112 32 109 85 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(134
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 150 227 141 194 41 88 10 46 228 115 113 116 47 124 186 3 53 173 86 79 232 183 53 223 204 124 151 146 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(135
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 254 150 227 141 194 41 88 10 46 228 115 113 116 47 126 140 189 116 59 117 211 192 252 227 85 19 196 67 24 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(136
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 1 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(137
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 150 227 141 194 41 88 10 46 228 115 113 116 47 125 163 96 84 244 102 17 212 218 12 154 112 32 109 85 2 29 0 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(138
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 1 198 184 153 4 152 89 160 31 80 147 234 176 131 65 4 231 31 241 43 182 18 173 119 143 189 168 229 107)
      #f
      ())
    #(139
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 28 198 184 153 4 152 89 160 31 80 147 234 176 131 66 215 161 94 127 75 57 234 243 37 5 4 240 144 241)
      #f
      ())
    #(140
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 255 57 71 102 251 103 166 95 224 175 108 21 79 124 190 17 187 192 199 196 136 1 47 177 181 158 179 68 210)
      #f
      ())
    #(141
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 254 57 71 102 251 103 166 95 224 175 108 21 79 124 190 251 24 224 14 212 73 237 82 136 112 66 87 26 149)
      #f
      ())
    #(142
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 29 1 198 184 153 4 152 89 160 31 80 147 234 176 131 65 238 68 63 56 59 119 254 208 78 74 97 76 187 46)
      #f
      ())
    #(143
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 105 28 114 61 214 167 245 209 27 140 142 139 208 130 92 159 171 11 153 238 43 37 243 101 143 223 146 171 2 28 57 71 102 251 103 166 95 224 175 108 21 79 124 190 17 187 192 199 196 136 1 47 177 181 158 179 68 210)
      #f
      ())
    #(144
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 0)
      #f
      ("EdgeCase"))
    #(145
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 1)
      #f
      ("EdgeCase"))
    #(146
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 255)
      #f
      ("EdgeCase"))
    #(147
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 0 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(148
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 0 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(149
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 0 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(150
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 0 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(151
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 0 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(152
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 0 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(153
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 9 1 66)
      #f
      ("EdgeCase"))
    #(154
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 0)
      #f
      ("EdgeCase"))
    #(155
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 1)
      #f
      ("EdgeCase"))
    #(156
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 255)
      #f
      ("EdgeCase"))
    #(157
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(158
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(159
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(160
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(161
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(162
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(163
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 9 1 66)
      #f
      ("EdgeCase"))
    #(164
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 0)
      #f
      ("EdgeCase"))
    #(165
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 1)
      #f
      ("EdgeCase"))
    #(166
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 255)
      #f
      ("EdgeCase"))
    #(167
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 255 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(168
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 255 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(169
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 255 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(170
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 255 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(171
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 255 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(172
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 255 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(173
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 9 1 66)
      #f
      ("EdgeCase"))
    #(174
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 1 0)
      #f
      ("EdgeCase"))
    #(175
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 1 1)
      #f
      ("EdgeCase"))
    #(176
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 1 255)
      #f
      ("EdgeCase"))
    #(177
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(178
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(179
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(180
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(181
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(182
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(183
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61 9 1 66)
      #f
      ("EdgeCase"))
    #(184
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 1 0)
      #f
      ("EdgeCase"))
    #(185
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 1 1)
      #f
      ("EdgeCase"))
    #(186
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 1 255)
      #f
      ("EdgeCase"))
    #(187
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(188
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(189
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(190
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(191
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(192
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(193
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 9 1 66)
      #f
      ("EdgeCase"))
    #(194
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 1 0)
      #f
      ("EdgeCase"))
    #(195
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 1 1)
      #f
      ("EdgeCase"))
    #(196
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 1 255)
      #f
      ("EdgeCase"))
    #(197
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(198
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(199
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(200
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(201
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(202
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(203
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62 9 1 66)
      #f
      ("EdgeCase"))
    #(204
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 1 0)
      #f
      ("EdgeCase"))
    #(205
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 1 1)
      #f
      ("EdgeCase"))
    #(206
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 1 255)
      #f
      ("EdgeCase"))
    #(207
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(208
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(209
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(210
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(211
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(212
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(213
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1 9 1 66)
      #f
      ("EdgeCase"))
    #(214
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 1 0)
      #f
      ("EdgeCase"))
    #(215
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 1 1)
      #f
      ("EdgeCase"))
    #(216
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 1 255)
      #f
      ("EdgeCase"))
    #(217
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 61)
      #f
      ("EdgeCase"))
    #(218
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60)
      #f
      ("EdgeCase"))
    #(219
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 62)
      #f
      ("EdgeCase"))
    #(220
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 1)
      #f
      ("EdgeCase"))
    #(221
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2)
      #f
      ("EdgeCase"))
    #(222
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(223
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 0 0 0 2 9 1 66)
      #f
      ("EdgeCase"))
    #(224
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 12 1 48)
      #f
      ())
    #(225
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 5 2 1 1 12 0)
      #f
      ())
    #(226
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 9 12 2 37 115 12 3 115 37 115)
      #f
      ())
    #(227
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 48 3 2 1 0)
      #f
      ())
    #(228
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 3 2 1 1)
      #f
      ())
    #(229
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 1 1 0)
      #f
      ())
    #(230
      "Edge case for Shamir multiplication"
      #vu8(54 57 49 57 48)
      #vu8(48 60 2 28 50 107 192 99 83 247 249 201 247 123 143 75 85 70 78 134 25 148 78 120 121 64 44 202 87 46 4 26 2 28 34 26 37 235 156 200 221 102 253 241 86 178 246 171 96 26 182 217 197 9 36 127 141 229 210 103 26 150)
      #t
      ())
    #(231
      "special case hash"
      #vu8(51 57 52 57 49 57 52 49 55 50)
      #vu8(48 60 2 28 59 48 8 237 89 107 127 162 118 73 141 239 64 217 107 30 178 255 183 49 164 64 80 255 183 50 228 230 2 28 109 187 8 197 109 183 55 233 57 47 244 243 165 77 139 128 109 112 175 34 110 207 65 59 52 101 222 85)
      #t
      ())
    #(232
      "special case hash"
      #vu8(53 51 54 55 54 52 49 56 55 55)
      #vu8(48 61 2 29 0 209 254 38 156 48 97 228 185 70 4 232 214 18 215 8 135 6 140 199 213 35 44 213 169 183 41 35 161 2 28 60 28 188 2 125 51 251 36 81 213 45 206 58 130 138 140 126 204 73 10 40 169 78 94 91 178 196 215)
      #t
      ())
    #(233
      "special case hash"
      #vu8(53 54 55 49 52 56 49 48 57 53)
      #vu8(48 61 2 28 4 88 97 52 204 103 146 149 221 147 73 147 17 196 168 175 55 203 148 218 219 174 24 216 238 39 155 155 2 29 0 191 145 112 161 182 91 102 86 100 207 86 125 64 169 149 206 37 42 35 214 169 249 98 176 94 54 68 134)
      #t
      ())
    #(234
      "special case hash"
      #vu8(49 49 50 48 55 49 55 50 57 48 57)
      #vu8(48 61 2 29 0 193 245 16 9 185 53 180 119 51 116 54 78 195 238 215 42 36 183 9 38 224 52 156 119 134 47 52 117 2 28 70 223 61 152 241 4 186 102 2 248 4 26 91 245 73 95 178 64 225 3 209 189 23 242 250 135 137 35)
      #t
      ())
    #(235
      "special case hash"
      #vu8(49 49 50 57 56 48 51 52 50 51 54)
      #vu8(48 62 2 29 0 232 34 36 40 114 241 236 243 56 164 247 115 223 135 182 126 155 33 187 40 58 202 199 214 107 38 85 30 2 29 0 148 212 224 252 60 99 89 153 74 110 174 221 221 21 51 244 144 247 46 248 81 57 248 211 179 156 240 123)
      #t
      ())
    #(236
      "special case hash"
      #vu8(57 56 55 54 48 50 57 54 56 51)
      #vu8(48 60 2 28 127 212 85 40 235 123 252 55 16 226 115 196 70 143 11 80 235 249 63 148 205 14 122 96 42 73 41 166 2 28 70 97 61 209 255 216 93 248 215 31 52 152 0 23 33 253 164 152 44 39 161 194 145 53 155 5 177 184)
      #t
      ())
    #(237
      "special case hash"
      #vu8(50 48 50 48 52 50 57 54 53 49 57)
      #vu8(48 61 2 28 54 209 55 182 145 113 164 134 147 59 80 19 141 29 177 132 39 36 118 106 253 37 200 91 0 50 218 245 2 29 0 142 112 13 226 31 47 195 80 163 76 124 193 144 84 207 55 30 202 182 247 51 28 206 207 104 252 160 244)
      #t
      ())
    #(238
      "special case hash"
      #vu8(49 52 53 49 54 54 57 49 56 48)
      #vu8(48 62 2 29 0 218 59 67 105 8 245 168 47 38 188 23 168 87 122 210 167 130 148 110 58 117 135 176 29 37 59 29 208 2 29 0 166 84 78 56 242 78 129 23 55 12 4 155 93 31 103 18 234 20 51 122 148 81 18 36 223 68 150 163)
      #t
      ())
    #(239
      "special case hash"
      #vu8(49 48 57 51 54 56 53 57 53 49)
      #vu8(48 60 2 28 67 20 162 189 19 157 71 190 61 159 217 235 221 114 160 106 34 2 25 199 89 107 148 65 120 238 111 95 2 28 14 111 29 47 87 198 153 101 78 156 112 93 123 143 163 193 204 176 249 57 246 54 139 237 36 107 46 16)
      #t
      ())
    #(240
      "special case hash"
      #vu8(54 50 49 57 53 54 48 50 48 49)
      #vu8(48 61 2 28 106 37 100 52 100 104 38 121 216 73 112 198 3 146 127 74 140 168 62 126 249 113 93 209 237 132 194 143 2 29 0 147 43 120 209 101 194 37 165 37 62 98 1 192 177 222 208 137 139 162 77 228 75 35 35 62 183 128 84)
      #t
      ())
    #(241
      "special case hash"
      #vu8(53 54 56 50 52 55 52 51 48 51)
      #vu8(48 60 2 28 71 106 170 88 103 125 158 96 71 124 255 208 38 196 50 72 226 207 60 194 30 143 220 203 117 206 239 173 2 28 119 153 252 122 248 249 185 41 32 63 175 137 155 181 202 26 236 242 73 37 85 21 114 130 223 222 121 13)
      #t
      ())
    #(242
      "special case hash"
      #vu8(51 55 51 54 53 51 49 55 56 54)
      #vu8(48 61 2 28 99 169 134 20 161 66 30 46 187 39 141 229 59 97 97 139 175 199 87 18 38 71 175 253 53 140 102 122 2 29 0 142 219 168 6 224 167 228 56 202 53 249 132 5 168 173 45 92 62 140 194 213 196 56 66 51 174 240 165)
      #t
      ())
    #(243
      "special case hash"
      #vu8(52 55 57 53 57 48 51 55 57 50)
      #vu8(48 62 2 29 0 136 11 82 56 160 20 248 180 70 85 184 60 23 88 128 235 30 131 7 137 154 130 78 163 224 125 189 109 2 29 0 164 114 76 134 73 253 116 229 188 141 127 230 169 6 122 19 118 251 142 8 219 218 237 104 152 11 15 80)
      #t
      ())
    #(244
      "special case hash"
      #vu8(57 51 57 57 54 49 49 48 48 55)
      #vu8(48 62 2 29 0 248 116 53 136 35 70 52 221 152 145 244 242 244 15 78 70 183 127 151 184 45 197 219 226 52 170 107 93 2 29 0 128 101 110 82 98 188 37 225 88 243 183 143 81 174 13 106 65 204 140 202 26 164 87 34 27 46 183 251)
      #t
      ())
    #(245
      "special case hash"
      #vu8(49 48 56 55 52 57 49 49 56 53)
      #vu8(48 61 2 28 42 35 87 227 216 254 52 67 69 130 190 77 171 213 139 119 179 136 209 213 42 220 198 100 244 93 236 228 2 29 0 148 190 58 54 155 124 39 136 223 69 135 236 91 212 22 60 76 188 64 183 125 225 168 94 139 207 178 81)
      #t
      ())
    #(246
      "special case hash"
      #vu8(51 50 51 54 54 55 56 53 48 48)
      #vu8(48 61 2 29 0 182 176 192 171 166 198 17 48 14 202 216 129 98 66 196 21 241 131 162 189 77 70 205 119 105 3 61 155 2 28 119 80 178 75 224 47 34 220 11 101 111 228 175 55 116 19 249 69 61 255 153 34 105 21 219 182 224 143)
      #t
      ())
    #(247
      "special case hash"
      #vu8(49 52 52 56 57 57 55 55 48 51)
      #vu8(48 61 2 29 0 165 193 167 92 39 121 243 235 131 166 94 41 89 39 204 228 40 142 157 92 33 50 164 199 202 146 82 110 2 28 16 254 48 240 190 51 167 133 56 81 55 181 125 128 97 64 164 2 185 189 60 29 241 181 125 230 218 99)
      #t
      ())
    #(248
      "special case hash"
      #vu8(53 55 49 52 54 51 50 56 48 55)
      #vu8(48 61 2 29 0 185 43 85 33 209 167 171 231 126 133 36 219 211 0 17 33 207 131 192 128 23 227 145 123 197 139 93 28 2 28 34 75 17 55 121 1 127 106 82 33 113 237 249 48 241 181 212 245 231 222 220 109 45 81 79 215 136 60)
      #t
      ())
    #(249
      "special case hash"
      #vu8(50 50 54 52 56 55 52 57 50)
      #vu8(48 62 2 29 0 235 211 236 243 170 100 205 205 209 113 88 90 20 26 74 103 58 141 93 224 202 8 125 252 223 98 67 46 2 29 0 224 241 160 247 184 245 172 74 66 99 47 135 21 106 209 9 64 121 57 59 3 242 5 26 159 214 2 73)
      #t
      ())
    #(250
      "special case hash"
      #vu8(53 51 53 51 52 52 57 52 55 57)
      #vu8(48 61 2 28 108 56 84 41 126 31 38 123 100 162 142 12 214 20 142 15 173 207 133 188 141 92 35 148 117 67 188 184 2 29 0 170 5 148 238 17 49 47 93 71 103 210 150 229 202 131 223 104 7 40 17 248 26 141 39 225 120 202 93)
      #t
      ())
    #(251
      "special case hash"
      #vu8(52 55 56 55 51 48 51 56 56 48)
      #vu8(48 60 2 28 120 90 200 201 86 215 121 122 230 116 152 119 91 60 68 108 65 115 94 177 95 52 48 180 159 106 9 242 2 28 87 16 135 154 184 57 148 232 9 200 210 203 214 242 172 92 32 91 75 141 98 38 233 139 224 62 121 103)
      #t
      ())
    #(252
      "special case hash"
      #vu8(50 50 51 50 49 57 53 56 50 51)
      #vu8(48 62 2 29 0 241 243 208 22 105 49 37 186 115 152 28 143 154 23 72 229 220 225 217 99 67 85 242 111 165 54 25 14 2 29 0 181 116 233 125 239 96 220 208 233 23 113 6 72 55 145 178 237 180 171 3 66 185 245 235 185 87 213 176)
      #t
      ())
    #(253
      "special case hash"
      #vu8(49 48 55 51 57 51 57 49 57 49 55)
      #vu8(48 62 2 29 0 230 79 51 113 82 44 177 165 240 209 81 27 21 43 32 224 29 236 160 179 40 71 134 133 60 172 39 154 2 29 0 201 162 229 244 255 222 34 185 212 237 1 121 206 116 255 244 8 234 145 141 218 118 133 199 152 10 230 26)
      #t
      ())
    #(254
      "special case hash"
      #vu8(49 56 56 49 48 50 55 51 49 53)
      #vu8(48 61 2 28 31 153 221 110 247 47 238 237 166 193 35 186 164 250 187 18 109 125 237 182 65 48 250 227 244 35 7 151 2 29 0 228 65 236 81 220 166 39 27 4 62 149 117 60 64 67 215 203 78 118 253 193 61 106 234 69 251 242 67)
      #t
      ())
    #(255
      "special case hash"
      #vu8(54 48 54 49 54 57 51 57 48 55)
      #vu8(48 61 2 29 0 134 55 160 150 39 197 39 102 191 150 240 182 206 166 242 172 62 179 3 0 28 95 111 230 214 40 228 186 2 28 16 182 108 89 148 85 212 0 119 187 134 94 212 62 44 44 196 3 71 59 170 109 99 177 107 228 140 132)
      #t
      ())
    #(256
      "special case hash"
      #vu8(56 56 57 53 50 50 55 48 57 52)
      #vu8(48 60 2 28 82 160 16 162 62 79 158 187 69 155 190 159 48 87 230 193 151 97 251 153 210 92 155 22 184 240 7 216 2 28 82 109 193 243 68 68 222 0 68 123 162 60 118 149 15 44 21 149 121 213 72 182 51 93 18 126 163 33)
      #t
      ())
    #(257
      "special case hash"
      #vu8(49 53 56 48 50 51 52 48 57 52)
      #vu8(48 61 2 29 0 252 73 202 170 218 82 143 51 87 229 162 100 242 231 249 112 202 27 21 202 95 238 40 116 29 18 2 172 2 28 23 94 136 77 16 208 191 210 11 57 49 28 226 197 48 131 218 22 125 31 61 254 185 144 229 158 214 40)
      #t
      ())
    #(258
      "special case hash"
      #vu8(51 57 54 53 57 57 49 53 49 50)
      #vu8(48 61 2 29 0 217 93 83 154 133 201 237 172 212 224 46 222 39 176 224 183 55 9 150 18 209 102 198 55 200 58 159 52 2 28 89 147 106 43 144 183 243 243 218 131 246 77 236 142 52 122 59 250 87 186 173 249 172 234 24 192 113 216)
      #t
      ())
    #(259
      "special case hash"
      #vu8(50 50 56 56 55 51 50 49 57 56)
      #vu8(48 60 2 28 24 149 230 85 147 215 30 86 53 204 224 34 221 161 155 209 85 187 154 127 46 48 126 92 233 18 122 222 2 28 18 27 72 124 50 12 84 77 205 212 113 212 111 205 226 206 93 201 209 127 218 112 84 76 78 171 80 162)
      #t
      ())
    #(260
      "special case hash"
      #vu8(50 50 51 48 56 56 55 51 49 57)
      #vu8(48 61 2 29 0 181 244 200 91 19 181 26 93 168 26 35 111 17 5 147 127 61 152 133 109 42 235 87 16 27 107 73 156 2 28 59 231 74 231 112 250 100 103 247 106 116 46 185 229 4 168 21 164 166 14 116 179 139 202 168 159 155 6)
      #t
      ())
    #(261
      "special case hash"
      #vu8(49 50 57 48 53 54 57 51 55)
      #vu8(48 60 2 28 7 165 113 151 102 122 12 64 66 61 72 17 255 150 56 76 147 48 70 126 138 40 234 164 192 213 25 244 2 28 1 16 98 200 105 68 148 186 174 210 79 246 16 225 228 34 126 251 89 161 99 195 63 175 212 1 0 249)
      #t
      ())
    #(262
      "special case hash"
      #vu8(50 55 52 56 54 53 54 52 51 56)
      #vu8(48 60 2 27 127 113 134 21 186 29 10 157 39 168 197 166 120 166 34 95 254 18 51 237 139 65 124 147 67 179 16 2 29 0 207 106 135 228 73 103 37 198 162 97 47 64 52 221 244 179 28 116 53 226 252 58 22 62 146 212 99 186)
      #t
      ())
    #(263
      "special case hash"
      #vu8(55 53 56 51 53 48 50 54 48 52)
      #vu8(48 62 2 29 0 186 143 149 164 54 60 73 58 159 120 187 97 219 239 170 149 135 208 40 187 131 68 66 13 226 176 207 33 2 29 0 179 121 140 45 110 39 162 89 28 46 220 24 50 11 120 191 17 223 25 75 17 179 251 73 140 89 82 50)
      #t
      ())
    #(264
      "special case hash"
      #vu8(50 51 50 55 55 53 52 50 55 57)
      #vu8(48 60 2 28 89 107 116 7 120 1 219 46 136 157 59 42 170 57 144 254 24 10 188 21 45 72 82 131 133 202 149 93 2 28 56 191 253 65 111 119 152 67 250 211 137 117 0 3 235 7 8 17 42 72 52 197 84 244 118 163 224 209)
      #t
      ())
    #(265
      "special case hash"
      #vu8(55 55 53 53 48 56 53 56 52)
      #vu8(48 61 2 29 0 133 71 246 41 103 82 58 6 201 105 14 95 246 108 63 34 84 205 162 143 9 255 204 194 34 67 61 57 2 28 61 158 191 102 78 229 81 187 123 51 21 125 108 108 95 212 86 189 163 212 174 70 2 21 236 26 95 148)
      #t
      ())
    #(266
      "special case hash"
      #vu8(49 55 57 56 50 54 52 56 51 56 50)
      #vu8(48 61 2 29 0 144 238 63 171 156 108 227 115 161 179 95 193 53 254 135 130 128 238 37 229 138 75 215 82 158 145 180 240 2 28 100 81 231 82 101 5 180 78 136 71 43 70 237 163 253 38 121 130 77 205 252 68 94 103 243 94 163 130)
      #t
      ())
    #(267
      "special case hash"
      #vu8(50 51 57 54 55 55 55 51 54 53)
      #vu8(48 60 2 28 10 83 5 48 182 169 35 141 45 26 60 244 104 152 108 135 243 178 8 246 30 160 72 109 83 20 12 23 2 28 95 2 122 115 243 26 92 194 190 232 31 240 1 148 119 197 66 253 120 46 205 224 229 81 252 211 126 147)
      #t
      ())
    #(268
      "special case hash"
      #vu8(53 57 57 56 49 48 53 56 48 49)
      #vu8(48 62 2 29 0 190 171 74 189 35 223 94 42 207 255 7 200 46 36 93 250 125 88 125 2 56 194 201 171 156 136 169 106 2 29 0 152 198 80 118 53 83 104 64 237 246 4 249 186 174 100 8 206 77 63 190 230 148 219 58 189 130 80 17)
      #t
      ())
    #(269
      "special case hash"
      #vu8(49 54 54 55 55 56 50 55 48 53 55)
      #vu8(48 61 2 28 62 200 195 99 53 203 152 250 7 185 131 195 91 127 194 86 244 74 90 161 146 214 8 117 149 20 90 21 2 29 0 195 43 122 71 172 98 113 244 89 53 98 187 191 145 249 224 115 149 165 228 212 105 112 73 92 242 159 5)
      #t
      ())
    #(270
      "special case hash"
      #vu8(50 48 54 50 49 52 51 54 50)
      #vu8(48 61 2 29 0 189 99 90 116 31 31 42 29 154 193 105 139 175 92 252 73 29 94 63 142 21 241 202 203 228 255 228 220 2 28 75 182 6 207 124 193 29 13 125 150 184 57 102 244 34 118 9 92 204 68 88 130 237 90 253 218 191 30)
      #t
      ())
    #(271
      "special case hash"
      #vu8(54 56 52 50 52 57 54 48 52 53)
      #vu8(48 61 2 29 0 129 44 8 98 44 10 9 217 73 183 98 133 133 196 244 242 219 76 85 145 181 218 20 143 244 109 92 212 2 28 33 4 249 188 157 0 121 172 179 7 125 45 181 143 56 129 25 80 12 83 34 203 155 83 137 181 197 215)
      #t
      ())
    #(272
      "special case hash"
      #vu8(51 50 54 57 56 57 55 51 50 49)
      #vu8(48 62 2 29 0 250 78 28 139 0 6 242 105 200 85 235 73 95 163 161 19 246 67 250 139 31 239 43 8 171 20 89 148 2 29 0 254 133 184 181 34 199 249 232 148 62 15 98 100 51 149 189 31 205 171 200 146 195 21 209 8 183 95 101)
      #t
      ())
    #(273
      "special case hash"
      #vu8(49 51 56 55 51 50 52 54 57 50)
      #vu8(48 62 2 29 0 140 29 155 121 17 186 203 107 74 9 88 38 72 185 146 212 106 24 50 235 0 97 120 192 199 127 203 16 2 29 0 190 203 225 43 153 242 67 118 109 165 189 173 7 70 27 146 38 168 41 134 114 180 241 173 179 83 87 239)
      #t
      ())
    #(274
      "special case hash"
      #vu8(52 49 49 56 56 56 55 53 51 54)
      #vu8(48 60 2 28 120 133 10 64 83 10 162 88 228 120 231 197 71 211 165 228 148 77 53 36 241 103 100 67 228 223 179 125 2 28 104 112 88 225 202 71 143 82 163 12 154 63 142 46 234 157 140 64 89 156 212 126 246 107 148 48 209 125)
      #t
      ())
    #(275
      "special case hash"
      #vu8(57 56 56 54 48 54 53 52 53)
      #vu8(48 60 2 28 6 110 114 104 166 171 239 225 180 185 22 202 81 195 233 88 228 13 199 140 54 97 49 62 14 210 231 125 2 28 100 4 216 163 50 168 55 242 171 107 209 62 62 228 170 209 233 48 125 68 158 127 155 125 99 50 3 12)
      #t
      ())
    #(276
      "special case hash"
      #vu8(50 52 55 57 49 49 53 56 52 53)
      #vu8(48 60 2 28 78 202 115 112 154 103 196 22 3 202 90 244 148 200 19 36 131 255 194 224 191 23 27 82 222 90 94 129 2 28 44 121 19 124 210 173 211 206 58 118 121 34 112 227 71 34 26 58 215 134 234 252 38 130 179 155 207 149)
      #t
      ())
    #(277
      "special case hash"
      #vu8(53 48 55 54 56 56 55 51 54 55)
      #vu8(48 61 2 28 1 120 81 47 136 68 152 66 34 57 58 99 38 62 10 0 150 1 134 158 99 47 7 235 116 112 170 5 2 29 0 227 38 87 205 237 17 34 206 224 164 246 111 245 10 50 218 31 5 222 76 94 33 122 205 245 235 111 226)
      #t
      ())
    #(278
      "special case hash"
      #vu8(57 56 56 53 48 54 57 54 55)
      #vu8(48 61 2 29 0 226 199 191 18 34 202 35 165 100 146 135 60 45 63 166 199 3 12 193 102 214 147 20 45 206 162 114 182 2 28 113 90 76 130 253 164 64 66 23 222 166 192 187 243 172 36 248 250 162 180 53 251 198 213 26 50 196 168)
      #t
      ())
    #(279
      "special case hash"
      #vu8(50 55 50 49 51 48 54 49 51 49)
      #vu8(48 60 2 28 73 136 106 140 38 201 29 100 156 191 236 218 108 232 209 68 30 118 76 102 245 216 29 206 237 182 197 186 2 28 67 112 216 188 212 240 82 250 201 73 29 98 133 11 106 106 133 213 172 196 77 146 72 195 223 243 11 242)
      #t
      ())
    #(280
      "special case hash"
      #vu8(51 50 48 52 49 48 49 54 53 53)
      #vu8(48 62 2 29 0 225 174 34 94 26 236 164 7 71 255 62 122 209 247 94 185 188 144 214 55 22 10 127 88 206 18 229 145 2 29 0 185 124 190 163 169 50 49 16 49 87 96 183 226 237 228 150 81 75 48 240 238 197 33 255 235 7 166 52)
      #t
      ())
    #(281
      "special case hash"
      #vu8(51 49 53 48 54 56 48 57 53 48)
      #vu8(48 61 2 29 0 138 147 184 123 70 81 37 68 251 154 122 245 196 30 58 167 46 64 35 94 248 124 203 113 8 218 174 72 2 28 21 125 182 23 172 105 125 244 7 175 122 17 98 108 82 161 175 126 241 137 81 77 163 153 24 196 48 16)
      #t
      ())
    #(282
      "special case hash"
      #vu8(49 55 50 55 52 54 48 49 48 51)
      #vu8(48 62 2 29 0 235 222 190 99 136 185 244 96 252 230 216 79 170 103 222 209 232 100 239 9 231 126 163 206 88 165 222 255 2 29 0 190 80 82 3 62 180 3 128 194 177 50 95 233 125 204 85 132 30 20 122 137 240 42 41 107 69 5 239)
      #t
      ())
    #(283
      "special case hash"
      #vu8(49 52 53 55 49 52 54 49 50 50 53)
      #vu8(48 62 2 29 0 232 93 6 103 151 45 0 60 130 175 185 225 139 112 35 87 17 155 79 56 64 26 94 189 252 190 168 140 2 29 0 235 123 62 82 104 164 206 98 128 247 45 126 154 61 116 229 202 197 11 28 58 82 150 205 181 164 157 130)
      #t
      ())
    #(284
      "special case hash"
      #vu8(52 49 55 57 53 49 54 48 57 48)
      #vu8(48 60 2 28 61 36 53 129 192 135 79 212 235 77 128 248 150 197 6 116 41 173 69 83 20 136 25 81 171 94 198 227 2 28 14 196 122 186 8 204 186 136 193 166 221 194 137 245 149 189 160 141 194 221 52 209 45 206 251 104 9 77)
      #t
      ())
    #(285
      "special case hash"
      #vu8(53 56 57 50 55 49 51 48 53 52)
      #vu8(48 61 2 28 117 201 102 187 220 239 145 87 212 122 19 66 49 34 159 159 94 232 206 69 135 117 252 116 125 69 9 189 2 29 0 227 68 250 113 110 32 136 217 90 85 208 42 151 138 65 109 161 15 34 165 204 207 53 162 134 50 39 207)
      #t
      ())
    #(286
      "special case hash"
      #vu8(51 56 57 54 49 56 50 50 57 55)
      #vu8(48 62 2 29 0 207 223 89 158 152 109 119 11 115 120 77 151 20 159 153 69 253 22 210 44 48 43 183 150 21 110 127 180 2 29 0 198 64 151 133 4 123 0 131 240 8 119 27 64 219 133 2 88 50 8 182 28 137 132 103 26 203 9 41)
      #t
      ())
    #(287
      "special case hash"
      #vu8(56 50 56 51 51 52 54 55 51 50)
      #vu8(48 62 2 29 0 197 60 74 238 200 242 231 165 204 14 136 90 96 49 170 26 108 27 123 127 236 131 181 8 76 190 41 31 2 29 0 176 230 209 10 143 216 111 149 140 59 15 70 98 237 140 160 214 234 219 200 146 170 196 32 15 207 131 21)
      #t
      ())
    #(288
      "special case hash"
      #vu8(51 51 54 54 57 55 52 56 57 49)
      #vu8(48 61 2 28 35 134 85 13 110 117 53 11 204 50 80 123 252 155 235 156 38 215 47 248 47 103 28 31 82 130 233 139 2 29 0 165 91 141 232 8 196 53 159 181 41 184 10 128 217 252 110 221 181 206 8 8 44 59 103 124 104 153 145)
      #t
      ())
    #(289
      "special case hash"
      #vu8(50 49 57 57 49 53 51 50 50 57)
      #vu8(48 61 2 28 31 189 25 45 149 92 224 43 100 163 190 91 178 27 239 34 181 58 108 111 149 118 216 248 137 176 158 78 2 29 0 245 169 182 115 164 238 90 171 241 202 142 130 137 242 91 98 163 224 139 149 111 116 24 192 62 45 48 49)
      #t
      ())
    #(290
      "special case hash"
      #vu8(53 54 48 48 51 49 54 56 50 50)
      #vu8(48 61 2 29 0 184 15 251 164 81 219 159 194 25 78 69 11 221 67 188 15 83 167 208 244 167 137 0 192 159 184 217 188 2 28 1 36 238 234 185 3 91 108 132 89 89 231 11 4 209 225 135 213 84 128 125 103 81 175 171 204 24 2)
      #t
      ())
    #(291
      "special case hash"
      #vu8(56 54 57 54 53 49 54 57 53)
      #vu8(48 60 2 28 24 127 176 38 173 227 173 22 221 75 40 19 232 235 218 67 60 182 204 58 241 97 91 237 244 134 169 226 2 28 111 190 229 63 168 132 210 150 243 79 119 25 247 73 25 67 77 27 112 144 196 133 238 237 47 184 253 108)
      #t
      ())
    #(292
      "special case hash"
      #vu8(54 53 56 51 57 50 54 51 55 50)
      #vu8(48 61 2 29 0 229 152 161 111 225 45 167 158 152 20 246 152 92 154 147 52 1 15 40 125 201 227 141 232 87 202 95 192 2 28 25 224 237 84 240 224 138 208 145 161 99 180 199 184 109 6 52 218 44 134 167 168 153 31 93 135 6 216)
      #t
      ())
    #(293
      "special case hash"
      #vu8(49 51 50 48 53 48 49 53 55 50 53)
      #vu8(48 61 2 29 0 179 26 16 72 14 57 124 138 164 111 82 160 242 251 92 34 235 192 83 79 186 21 103 24 181 12 246 234 2 28 96 32 4 223 75 71 162 6 81 48 202 59 5 241 235 2 208 179 123 121 176 75 30 183 153 64 131 70)
      #t
      ())
    #(294
      "special case hash"
      #vu8(53 48 56 53 51 51 48 55 57 49)
      #vu8(48 62 2 29 0 188 71 226 66 209 157 204 99 33 145 57 128 215 57 35 228 48 188 102 35 210 25 82 157 88 102 25 182 2 29 0 129 57 125 210 245 40 17 181 52 237 117 74 147 125 144 79 4 167 222 39 143 163 188 137 38 222 105 70)
      #t
      ())
    #(295
      "special case hash"
      #vu8(55 56 54 54 56 49 51 49 49 57)
      #vu8(48 60 2 28 91 224 224 223 178 107 28 170 136 248 102 80 74 168 231 111 3 90 130 171 224 0 40 217 98 188 250 250 2 28 60 60 29 240 96 38 18 52 113 190 211 36 202 121 197 27 40 179 209 11 28 232 119 206 242 27 133 45)
      #t
      ())
    #(296
      "special case hash"
      #vu8(50 48 56 50 53 51 57 52 50 57)
      #vu8(48 62 2 29 0 254 121 208 207 228 85 114 71 146 203 90 176 88 10 212 242 145 140 20 3 236 18 240 189 210 206 101 40 2 29 0 241 53 124 212 175 196 2 153 74 184 104 176 22 63 65 112 30 15 0 229 97 253 217 126 13 182 247 185)
      #t
      ())
    #(297
      "special case hash"
      #vu8(49 48 48 54 53 57 53 54 54 57 55)
      #vu8(48 61 2 28 24 88 197 216 87 18 76 215 3 231 194 245 233 157 80 37 214 217 121 83 156 111 80 177 208 15 189 52 2 29 0 217 74 90 219 109 156 80 1 22 38 32 65 85 65 212 147 52 251 146 155 200 106 53 12 164 89 17 149)
      #t
      ())
    #(298
      "special case hash"
      #vu8(51 48 50 52 49 56 49 54 48 52)
      #vu8(48 62 2 29 0 230 178 236 150 124 250 37 245 114 52 185 239 29 135 197 148 85 2 203 189 88 49 200 98 240 7 116 209 2 29 0 202 234 38 54 139 255 200 229 98 178 189 3 170 108 157 196 28 82 150 89 254 254 101 151 252 233 205 156)
      #t
      ())
    #(299
      "special case hash"
      #vu8(55 55 54 55 56 53 50 56 55 52)
      #vu8(48 61 2 29 0 165 155 67 139 36 114 7 74 147 162 137 179 63 91 19 230 4 151 125 211 171 77 116 77 8 225 6 27 2 28 105 149 116 161 125 200 199 41 140 147 33 202 120 85 46 81 40 234 128 29 5 111 56 123 164 47 122 9)
      #t
      ())
    #(300
      "special case hash"
      #vu8(53 52 52 49 57 57 57 55 52)
      #vu8(48 61 2 28 116 132 129 112 156 104 130 196 161 48 25 56 52 165 127 75 199 20 144 98 17 236 108 193 44 64 13 255 2 29 0 238 198 201 213 160 103 134 248 33 168 17 126 236 61 192 37 237 58 199 78 57 233 138 22 164 170 40 92)
      #t
      ())
    #(301
      "special case hash"
      #vu8(53 56 52 51 52 56 48 51 57 49)
      #vu8(48 62 2 29 0 188 137 145 181 6 153 116 3 225 35 19 106 156 20 10 67 54 54 71 51 176 129 95 64 209 219 213 254 2 29 0 129 149 3 234 59 76 7 252 21 127 148 143 105 73 112 93 86 10 136 31 193 198 175 75 115 145 118 92)
      #t
      ())
    #(302
      "special case hash"
      #vu8(55 49 56 56 57 50 54 50 57)
      #vu8(48 60 2 28 28 174 206 117 200 227 27 176 197 204 235 8 66 242 54 131 184 85 122 151 3 101 116 234 136 206 234 189 2 28 100 90 211 39 106 174 226 43 105 54 71 240 13 206 95 145 160 59 103 139 120 155 102 124 211 184 231 81)
      #t
      ())
    #(303
      "special case hash"
      #vu8(49 55 52 51 50 50 51 52 52 51)
      #vu8(48 60 2 28 58 125 88 32 104 170 236 171 169 69 32 59 196 69 179 49 46 92 180 8 134 82 41 135 172 237 104 208 2 28 57 179 198 18 182 116 58 19 187 47 251 131 81 77 105 12 252 185 167 5 94 58 153 60 176 134 57 56)
      #t
      ())
    #(304
      "special case hash"
      #vu8(50 52 48 54 48 48 53 57 51 54)
      #vu8(48 62 2 29 0 247 115 196 159 208 100 87 22 209 110 85 158 34 195 145 1 223 38 108 223 167 203 97 206 70 248 82 128 2 29 0 223 97 9 253 119 162 65 3 28 240 59 55 110 0 29 138 60 210 166 182 70 237 191 158 87 129 51 241)
      #t
      ())
    #(305
      "special case hash"
      #vu8(49 54 49 52 48 51 54 57 56 56)
      #vu8(48 60 2 28 121 207 137 63 102 247 250 165 202 8 85 62 160 52 86 16 126 123 179 145 165 229 18 96 206 218 234 132 2 28 50 232 227 80 148 104 218 114 22 197 153 117 212 243 213 73 56 72 160 63 134 75 35 50 4 78 104 209)
      #t
      ())
    #(306
      "special case hash"
      #vu8(50 48 57 53 52 50 53 54 56 53)
      #vu8(48 61 2 28 2 94 205 26 122 183 101 251 253 37 166 215 205 60 70 30 23 244 101 230 149 139 206 159 73 43 122 90 2 29 0 161 202 149 3 134 3 211 2 118 30 65 105 53 172 189 107 113 106 49 108 155 121 197 125 64 83 203 121)
      #t
      ())
    #(307
      "special case hash"
      #vu8(49 48 48 56 48 57 56 57 56 51)
      #vu8(48 61 2 28 61 20 164 194 27 164 219 211 56 253 216 177 95 205 208 169 34 143 21 124 250 242 176 157 212 242 170 103 2 29 0 225 100 14 139 210 166 17 13 193 141 111 41 11 115 37 129 71 16 192 220 136 183 111 18 124 94 158 33)
      #t
      ())
    #(308
      "special case hash"
      #vu8(49 53 55 52 49 52 55 57 50 55)
      #vu8(48 60 2 28 37 141 206 145 110 247 139 157 138 135 190 175 110 221 53 188 204 192 140 93 228 136 88 110 27 123 116 154 2 28 79 245 0 219 77 102 92 112 98 23 156 9 155 41 133 168 20 249 159 191 164 74 58 112 144 36 213 137)
      #t
      ())
    #(309
      "special case hash"
      #vu8(50 56 54 54 55 55 49 53 50 50)
      #vu8(48 62 2 29 0 206 207 10 236 83 87 116 159 53 124 69 149 117 41 138 51 132 220 74 195 129 67 143 249 154 205 153 147 2 29 0 218 122 219 9 42 104 144 224 145 140 35 90 98 212 169 73 176 202 229 229 120 86 151 81 8 251 43 145)
      #t
      ())
    #(310
      "special case hash"
      #vu8(49 54 57 52 50 56 48 55 56 55)
      #vu8(48 61 2 29 0 215 127 46 84 127 214 141 93 179 20 144 29 161 255 126 202 243 208 193 126 192 71 169 116 167 206 195 62 2 28 68 58 151 175 223 136 34 114 191 2 51 200 196 168 210 60 147 82 173 137 177 119 12 38 36 15 102 80)
      #t
      ())
    #(311
      "special case hash"
      #vu8(57 57 50 49 54 57 50 53 54 56)
      #vu8(48 62 2 29 0 213 220 249 62 110 27 147 50 62 162 100 45 52 5 167 66 60 176 79 89 192 52 32 25 63 57 72 134 2 29 0 221 213 132 46 73 40 238 75 93 119 212 61 74 75 252 127 153 28 137 151 39 183 95 201 65 181 41 149)
      #t
      ())
    #(312
      "special case hash"
      #vu8(49 49 54 48 57 52 51 57 55 57 56)
      #vu8(48 61 2 29 0 169 188 62 188 110 227 68 33 50 103 17 206 41 81 141 2 189 64 62 173 128 106 62 69 2 239 160 206 2 28 18 97 11 137 166 22 137 168 235 110 6 45 37 36 39 129 85 254 73 159 254 204 14 13 148 13 72 167)
      #t
      ())
    #(313
      "special case hash"
      #vu8(55 49 56 54 49 54 50 49 48 48)
      #vu8(48 62 2 29 0 199 3 197 8 120 78 247 27 89 109 205 97 197 176 27 69 198 198 157 43 54 165 163 183 112 30 89 118 2 29 0 240 84 68 167 119 32 65 24 243 172 42 252 146 208 33 40 49 191 112 2 21 142 124 101 111 76 7 219)
      #t
      ())
    #(314
      "special case hash"
      #vu8(51 50 57 52 51 52 55 49 55 55)
      #vu8(48 62 2 29 0 128 103 75 116 11 100 211 131 103 124 4 154 111 75 174 178 20 244 166 181 147 48 51 133 62 99 69 120 2 29 0 155 58 128 76 117 237 121 14 49 150 107 194 87 48 183 66 138 248 199 60 101 251 80 60 6 197 151 235)
      #t
      ())
    #(315
      "special case hash"
      #vu8(49 56 53 49 52 52 53 53 49 50 48)
      #vu8(48 60 2 28 126 214 88 195 15 74 13 204 137 76 57 249 50 15 89 161 133 80 159 254 228 94 172 96 35 87 124 124 2 28 71 172 148 165 1 128 109 90 223 254 169 252 243 204 216 207 121 243 204 71 236 169 254 56 252 72 134 180)
      #t
      ())
    #(316
      "special case hash"
      #vu8(52 55 54 48 52 51 57 51 48)
      #vu8(48 61 2 28 57 127 102 156 195 153 169 29 169 108 22 239 210 51 246 254 96 209 183 202 163 151 204 37 120 67 179 11 2 29 0 241 147 117 254 102 234 228 115 142 201 220 91 126 245 28 179 61 76 178 88 243 105 68 211 125 210 69 203)
      #t
      ())
    #(317
      "special case hash"
      #vu8(50 53 54 55 51 55 56 55 52 49)
      #vu8(48 60 2 28 83 126 195 105 179 240 216 145 225 102 246 199 78 93 115 221 44 72 34 33 12 95 229 249 120 195 64 114 2 28 11 24 60 72 181 246 230 146 69 203 118 225 226 195 150 99 238 223 183 75 169 83 135 57 172 73 95 245)
      #t
      ())
    #(318
      "special case hash"
      #vu8(53 55 51 57 57 51 52 57 57 53)
      #vu8(48 61 2 29 0 208 237 113 89 204 58 121 152 143 60 39 146 135 202 142 209 11 184 240 44 139 90 98 4 174 173 18 35 2 28 117 238 30 92 0 232 24 153 191 168 84 94 220 198 79 223 112 125 174 31 97 217 118 210 240 136 55 119)
      #t
      ())
    #(319
      "special case hash"
      #vu8(51 52 55 56 51 54 54 49 51 57)
      #vu8(48 62 2 29 0 207 67 50 154 151 129 219 128 68 169 32 117 142 88 57 152 102 254 119 72 192 245 214 163 188 220 188 189 2 29 0 217 116 13 45 215 22 41 10 212 22 3 69 188 212 175 3 175 1 196 75 97 11 30 89 83 25 144 117)
      #t
      ())
    #(320
      "special case hash"
      #vu8(54 52 57 48 53 50 54 48 50)
      #vu8(48 62 2 29 0 138 178 233 44 140 145 67 249 216 218 59 219 29 147 92 206 58 182 10 233 155 60 207 232 99 177 93 20 2 29 0 136 200 147 2 232 169 197 145 198 237 22 177 174 70 249 102 0 77 11 38 133 68 152 66 226 145 215 66)
      #t
      ())
    #(321
      "special case hash"
      #vu8(52 55 54 51 56 56 55 52 57 54)
      #vu8(48 61 2 28 4 246 15 132 80 180 72 25 140 247 152 17 22 222 6 212 196 136 140 210 107 227 165 148 112 146 35 143 2 29 0 203 35 252 179 60 20 240 137 194 174 3 1 70 214 143 166 94 185 176 134 250 121 47 149 190 142 207 53)
      #t
      ())
    #(322
      "special case hash"
      #vu8(53 55 57 48 50 48 48 56 48)
      #vu8(48 62 2 29 0 242 112 247 167 10 150 160 249 22 199 83 12 109 234 113 120 230 192 135 221 188 198 10 172 216 167 197 83 2 29 0 139 44 55 133 84 18 19 101 161 128 173 78 223 26 18 229 102 186 85 238 171 245 37 53 103 131 230 3)
      #t
      ())
    #(323
      "special case hash"
      #vu8(53 51 52 52 55 56 55 56 52 56)
      #vu8(48 62 2 29 0 133 173 1 178 54 202 74 84 81 150 146 66 225 97 101 211 34 66 130 53 162 175 143 220 214 196 199 185 2 29 0 142 178 153 140 94 10 175 39 151 147 202 255 89 162 102 202 32 104 217 78 191 119 186 232 31 208 251 106)
      #t
      ())
    #(324
      "special case hash"
      #vu8(49 57 50 54 54 52 49 48 57 50 48)
      #vu8(48 61 2 29 0 207 253 184 214 75 91 132 180 144 255 115 215 126 81 204 119 151 191 103 197 238 10 73 153 222 241 114 48 2 28 59 175 75 52 225 163 94 150 6 164 96 179 149 6 58 85 66 100 169 196 60 195 2 171 90 191 71 62)
      #t
      ())
    #(325
      "special case hash"
      #vu8(51 55 48 51 57 49 53 55 48 53)
      #vu8(48 60 2 28 102 205 165 138 90 109 219 148 118 227 109 186 213 223 84 43 232 141 126 68 123 220 61 254 29 158 139 44 2 28 13 153 211 135 72 106 150 78 186 180 226 155 173 88 62 70 165 162 0 57 29 16 101 118 138 78 53 253)
      #t
      ())
    #(326
      "special case hash"
      #vu8(56 49 53 52 53 55 55 48)
      #vu8(48 60 2 28 50 0 118 25 2 130 91 211 83 144 138 204 210 190 107 72 38 69 100 105 113 249 109 196 144 112 106 55 2 28 62 215 120 153 239 219 228 24 55 15 167 153 141 243 183 201 36 190 214 134 69 53 39 127 128 92 137 79)
      #t
      ())
    #(327
      "special case hash"
      #vu8(49 57 53 53 51 48 51 55 55)
      #vu8(48 62 2 29 0 186 14 255 14 228 106 169 252 165 171 138 214 74 238 64 55 147 29 58 208 185 83 212 4 239 159 123 220 2 29 0 175 223 33 223 13 203 227 156 47 95 169 239 126 26 43 202 135 209 33 61 30 202 67 137 41 173 137 130)
      #t
      ())
    #(328
      "special case hash"
      #vu8(49 50 54 55 56 49 48 57 48 51)
      #vu8(48 62 2 29 0 162 12 104 131 252 110 193 202 75 179 120 172 136 237 103 10 116 42 98 132 17 61 95 163 24 42 24 88 2 29 0 224 167 59 145 59 148 22 49 117 210 100 34 76 199 7 54 242 251 142 141 88 233 20 177 140 146 19 35)
      #t
      ())
    #(329
      "special case hash"
      #vu8(49 49 49 56 48 55 50 48 56 49 53)
      #vu8(48 62 2 29 0 242 244 175 149 107 12 84 9 148 157 55 126 155 198 142 79 26 190 247 150 155 81 143 139 234 207 39 219 2 29 0 223 58 123 89 147 210 57 58 222 112 162 207 193 232 103 26 120 202 79 236 181 100 37 166 97 162 210 252)
      #t
      ())
    #(330
      "special case hash"
      #vu8(56 51 56 49 56 54 57 50 57 48)
      #vu8(48 60 2 28 51 26 26 85 52 148 248 82 74 219 78 138 114 45 85 137 101 251 112 58 228 50 191 60 189 178 85 194 2 28 90 182 227 222 230 162 81 111 196 224 172 136 230 223 200 29 43 195 124 152 148 156 192 62 82 29 56 157)
      #t
      ())
    #(331
      "special case hash"
      #vu8(51 49 51 49 50 56 55 50 55 55)
      #vu8(48 62 2 29 0 134 113 53 85 142 6 225 151 150 235 206 142 53 85 198 7 166 96 125 70 247 200 218 107 133 82 255 193 2 29 0 142 130 126 139 154 79 116 239 238 199 215 186 92 35 66 143 222 2 39 223 85 161 239 193 121 163 83 177)
      #t
      ())
    #(332
      "special case hash"
      #vu8(49 52 51 51 49 57 50 54 53 51 56)
      #vu8(48 61 2 28 103 70 144 60 160 149 191 211 246 55 138 112 9 39 35 72 60 161 144 178 57 45 139 26 211 55 150 159 2 29 0 243 59 250 224 131 92 35 168 14 201 243 60 233 169 3 92 25 40 54 160 178 250 221 52 125 128 63 150)
      #t
      ())
    #(333
      "special case hash"
      #vu8(51 52 52 57 48 56 50 51 54)
      #vu8(48 61 2 28 127 192 216 115 158 207 227 73 229 6 231 18 3 166 230 14 98 138 27 176 198 125 94 87 76 184 131 28 2 29 0 207 139 177 85 113 82 197 117 80 160 253 230 87 20 86 250 117 39 130 247 249 47 123 178 53 221 227 159)
      #t
      ())
    #(334
      "special case hash"
      #vu8(54 56 50 57 56 51 53 57 50 57)
      #vu8(48 62 2 29 0 180 72 110 49 57 224 177 84 40 146 219 61 63 81 176 82 72 148 225 156 176 12 208 123 3 238 156 151 2 29 0 173 151 40 215 122 139 123 79 164 53 179 52 88 71 134 12 51 45 101 216 21 42 166 80 58 177 135 85)
      #t
      ())
    #(335
      "special case hash"
      #vu8(51 52 52 53 49 53 56 48 50 51)
      #vu8(48 62 2 29 0 175 187 220 142 80 232 1 236 189 46 55 5 7 151 23 244 249 214 159 59 61 133 33 90 238 203 79 188 2 29 0 236 234 221 78 44 201 206 161 11 86 209 106 3 250 85 31 236 62 184 8 189 141 159 9 38 209 78 211)
      #t
      ())
    #(336
      "special case hash"
      #vu8(49 50 54 57 55 57 56 55 54 52 52)
      #vu8(48 61 2 28 74 118 47 125 20 111 158 175 255 90 209 26 105 120 38 12 129 139 128 28 52 136 221 96 65 31 92 246 2 29 0 158 167 117 18 88 86 32 239 44 250 232 184 201 216 23 18 41 163 33 151 225 148 149 97 187 117 160 73)
      #t
      ())
    #(337
      "special case hash"
      #vu8(51 57 57 50 52 50 53 53 51)
      #vu8(48 61 2 28 34 127 229 43 87 152 51 254 238 22 194 135 210 146 115 226 37 109 246 138 255 11 148 210 117 45 135 123 2 29 0 189 121 147 94 95 170 142 147 86 98 47 234 1 53 236 247 150 218 246 3 51 213 171 18 95 113 229 18)
      #t
      ())
    #(338
      "special case hash"
      #vu8(49 54 48 49 57 55 55 57 55 55)
      #vu8(48 62 2 29 0 205 83 101 152 62 177 101 219 57 186 12 102 195 164 91 44 225 55 12 154 209 74 154 167 109 212 99 58 2 29 0 168 199 124 228 42 177 200 136 166 181 208 75 113 19 159 216 130 50 134 34 225 94 128 37 46 92 247 218)
      #t
      ())
    #(339
      "special case hash"
      #vu8(49 48 56 55 56 55 53 53 49 52 53)
      #vu8(48 60 2 28 84 214 212 67 115 247 223 201 132 85 162 44 211 154 11 50 15 171 195 50 21 33 107 55 54 91 90 22 2 28 41 204 105 15 36 103 192 46 7 188 65 106 212 114 4 151 90 248 197 195 52 105 115 242 176 61 237 61)
      #t
      ())
    #(340
      "special case hash"
      #vu8(55 48 48 52 50 53 50 57 57 57)
      #vu8(48 60 2 28 47 80 72 201 239 159 48 218 124 179 254 70 36 85 34 0 249 229 122 70 215 157 176 72 74 13 156 242 2 28 6 218 211 164 104 39 37 133 40 105 161 164 89 190 200 101 102 30 26 56 169 229 70 238 170 199 203 132)
      #t
      ())
    #(341
      "special case hash"
      #vu8(49 53 54 53 51 50 53 50 56 51)
      #vu8(48 62 2 29 0 171 191 10 2 51 47 190 167 121 137 157 49 211 171 210 210 44 156 2 212 5 140 237 99 155 240 108 69 2 29 0 204 224 87 15 56 18 229 207 203 35 55 108 85 76 127 195 93 188 254 182 35 167 149 140 102 74 198 164)
      #t
      ())
    #(342
      "special case hash"
      #vu8(50 51 56 50 54 51 52 50 51 53 48)
      #vu8(48 61 2 28 28 48 203 139 194 16 135 183 126 177 33 110 232 98 158 54 118 217 37 241 174 21 7 124 198 49 218 79 2 29 0 238 153 129 87 189 239 183 125 16 68 233 131 166 175 236 125 145 162 61 149 201 55 252 92 101 72 201 137)
      #t
      ())
    #(343
      "special case hash"
      #vu8(49 52 52 55 56 52 55 48 54 53)
      #vu8(48 60 2 28 67 238 17 167 171 98 226 18 94 118 92 44 229 212 248 71 4 24 53 57 129 5 18 38 141 135 241 149 2 28 101 137 126 84 2 87 119 101 158 232 2 179 156 107 253 92 204 87 6 169 209 179 143 149 192 120 171 175)
      #t
      ())
    #(344
      "special case hash"
      #vu8(49 52 50 54 48 50 48 53 53 52 52)
      #vu8(48 62 2 29 0 161 254 63 77 63 67 170 163 220 175 167 158 217 159 188 4 92 17 195 82 202 172 216 159 15 99 132 126 2 29 0 202 46 55 189 44 19 185 251 63 138 85 183 166 126 176 52 36 3 149 171 211 159 236 222 117 20 19 54)
      #t
      ())
    #(345
      "special case hash"
      #vu8(49 57 57 51 56 51 53 50 56 53)
      #vu8(48 62 2 29 0 189 41 2 134 202 8 72 94 164 19 112 16 198 114 3 194 69 94 123 102 157 21 60 107 228 0 135 199 2 29 0 151 221 117 2 186 54 55 243 59 174 165 178 57 134 71 173 36 192 254 53 7 43 217 99 20 155 90 160)
      #t
      ())
    #(346
      "special case hash"
      #vu8(52 50 57 50 49 53 51 53 50 51)
      #vu8(48 62 2 29 0 201 23 38 154 90 76 232 11 127 229 74 139 237 73 50 107 80 82 122 77 47 176 163 9 49 130 181 165 2 29 0 161 149 236 14 105 227 23 46 133 78 135 221 101 27 68 67 63 205 125 203 183 189 89 81 93 42 254 142)
      #t
      ())
    #(347
      "special case hash"
      #vu8(52 52 53 57 57 48 49 52 57 54)
      #vu8(48 60 2 28 11 123 90 171 131 100 221 75 17 0 26 11 152 109 90 164 251 97 238 114 2 55 65 122 127 99 114 47 2 28 127 19 180 17 230 69 232 25 254 209 185 37 235 232 7 217 86 11 68 208 186 27 117 189 47 189 18 148)
      #t
      ())
    #(348
      "special case hash"
      #vu8(49 51 57 51 57 55 49 49 55 49)
      #vu8(48 60 2 28 80 91 151 79 142 207 7 182 15 253 189 43 45 249 50 77 233 43 57 71 110 183 99 164 194 95 18 106 2 28 28 54 237 29 238 119 44 114 66 5 247 23 195 131 244 154 135 165 188 60 170 14 248 19 96 249 216 0)
      #t
      ())
    #(349
      "special case hash"
      #vu8(50 51 57 48 54 57 54 52 57 53)
      #vu8(48 61 2 28 36 33 158 73 185 138 155 100 229 109 33 201 8 200 112 235 136 180 71 217 241 221 183 53 8 61 109 242 2 29 0 188 77 118 68 250 239 241 225 52 68 59 43 179 187 42 32 226 164 167 193 147 24 6 38 18 124 233 55)
      #t
      ())
    #(350
      "special case hash"
      #vu8(49 49 52 52 54 48 53 54 50 54 52)
      #vu8(48 61 2 28 8 50 70 8 28 242 248 197 225 205 66 182 4 80 252 108 172 59 10 176 61 56 189 210 113 205 115 112 2 29 0 141 17 126 195 45 191 147 147 148 73 159 125 188 42 183 114 144 233 34 45 109 96 234 2 206 69 197 138)
      #t
      ())
    #(351
      "special case hash"
      #vu8(54 56 53 48 48 52 55 53 48)
      #vu8(48 60 2 28 36 145 105 97 221 13 22 140 40 120 202 79 208 101 184 19 17 192 59 127 35 248 65 111 74 35 177 75 2 28 30 55 227 192 59 35 51 179 59 187 46 190 5 176 49 4 42 241 147 21 173 253 204 223 200 208 120 238)
      #t
      ())
    #(352
      "special case hash"
      #vu8(50 50 50 48 53 51 54 48 54 49 57)
      #vu8(48 62 2 29 0 141 245 70 139 18 59 146 71 122 92 87 234 134 197 76 92 158 65 209 25 55 13 193 137 34 170 131 3 2 29 0 134 189 240 107 117 244 212 157 2 197 128 105 38 245 208 27 26 79 106 129 70 102 74 3 250 130 7 114)
      #t
      ())
    #(353
      "special case hash"
      #vu8(54 50 49 53 54 54 53 49 50 52)
      #vu8(48 61 2 29 0 246 91 241 111 124 237 151 176 205 194 43 8 198 46 248 17 48 104 19 19 75 0 27 197 17 64 232 40 2 28 58 155 124 0 140 218 248 3 54 141 249 238 80 226 116 199 169 249 54 147 68 217 145 142 12 8 219 169)
      #t
      ())
    #(354
      "Signature generated without truncating the hash"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 98 57 135 116 48 226 104 241 163 173 162 201 3 87 36 124 108 166 104 127 73 2 59 237 15 181 181 151 2 28 53 92 96 192 159 13 172 185 215 75 124 205 231 24 6 197 15 218 135 80 198 236 183 171 186 145 10 199)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 68 8 229 201 94 51 42 182 194 130 58 99 149 147 145 214 10 109 105 197 158 177 247 189 39 34 6 185 245 39 142 144 31 180 119 58 238 178 216 37 91 164 223 60 243 219 126 5 87 219 198 19 76 85 243 166)
  :der-encode
  #t
  :tests
  '(#(355
      "k*G has a large x-coordinate"
      #vu8(49 50 51 52 48 48)
      #vu8(48 48 2 15 0 233 92 31 71 15 193 236 34 214 186 163 163 213 193 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 58)
      #t
      ())
    #(356
      "r too large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 255 255 255 255 255 255 255 255 255 254 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 58)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 49 90 131 0 141 186 0 179 81 195 249 252 160 129 28 58 225 136 79 169 162 167 94 109 94 113 242 105 80 75 190 106 37 190 37 59 88 46 250 180 184 185 230 19 114 118 122 122 58 66 60 9 67 18 114 150)
  :der-encode
  #t
  :tests
  '(#(357
      "r,s are large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 60 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 59)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 47 105 131 182 233 248 239 150 194 217 129 246 155 229 75 6 89 30 215 63 228 12 138 84 107 147 106 121 113 191 87 114 108 38 200 17 215 98 90 157 133 25 81 193 255 254 35 107 14 179 184 150 188 76 152 239)
  :der-encode
  #t
  :tests
  '(#(358
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 2 28 61 80 82 105 27 141 200 157 235 173 54 4 102 242 163 158 130 232 174 42 239 183 124 60 146 173 124 209)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 209 245 21 151 28 201 57 17 83 86 156 43 239 161 249 21 226 147 17 16 117 119 96 235 215 230 31 134 65 195 219 139 238 162 11 19 32 83 137 220 196 186 138 106 244 214 218 38 4 202 205 113 132 236 157 188)
  :der-encode
  #t
  :tests
  '(#(359
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 2 29 0 191 25 171 77 62 191 90 26 73 215 101 144 147 8 218 168 140 43 123 227 150 157 181 82 234 48 86 43)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 232 249 10 113 119 20 240 21 141 149 33 241 140 20 174 140 131 191 30 235 161 21 196 108 189 171 178 11 102 245 10 193 52 97 192 45 160 46 223 228 41 106 31 84 61 222 123 67 89 249 5 224 65 147 211 207)
  :der-encode
  #t
  :tests
  '(#(360
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 3 2 1 1)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 114 59 192 201 183 206 110 167 132 236 7 80 54 206 222 144 69 44 118 87 107 216 251 91 228 220 15 177 207 64 88 32 217 47 72 85 43 85 28 123 17 244 148 6 220 137 47 214 89 151 26 231 249 231 75 89)
  :der-encode
  #t
  :tests
  '(#(361
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 3 2 1 3)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 160 220 206 18 112 132 249 85 164 228 154 124 134 185 185 27 5 174 122 253 110 176 114 37 166 84 29 136 241 10 29 79 239 147 147 73 103 187 108 93 135 146 187 212 122 179 171 180 6 137 154 0 177 201 27 74)
  :der-encode
  #t
  :tests
  '(#(362
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 3 2 1 4)
      #t
      ())
    #(363
      "r is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 42 64 2 1 4)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 225 10 188 159 225 91 204 99 240 9 225 97 170 238 38 96 36 21 188 180 91 198 201 156 231 171 43 16 251 235 255 78 77 224 223 170 240 69 148 221 96 60 238 128 181 217 171 120 182 112 118 8 169 94 87 77)
  :der-encode
  #t
  :tests
  '(#(364
      "s is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 1 3 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 111 0 196)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 251 250 190 108 100 8 86 174 93 205 201 228 183 6 251 61 178 61 220 164 107 128 185 5 122 185 228 79 107 98 212 105 121 119 255 225 155 243 24 80 131 177 237 226 22 26 165 114 84 1 168 245 120 81 252 130)
  :der-encode
  #t
  :tests
  '(#(365
      "small r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 35 2 2 1 0 2 29 0 201 147 38 76 153 50 100 201 147 38 76 153 50 100 17 210 229 91 50 20 168 214 117 40 129 42 85 171)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 145 168 91 60 94 144 180 9 246 184 211 188 169 17 122 84 164 15 65 98 179 136 187 147 103 253 100 57 241 206 223 32 171 82 235 113 84 183 234 31 41 52 169 200 41 41 6 225 138 14 87 32 2 205 47 124)
  :der-encode
  #t
  :tests
  '(#(366
      "smallish r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 39 2 7 45 155 77 52 121 82 204 2 28 62 133 213 100 116 181 197 95 190 134 96 132 66 168 75 43 240 147 183 215 95 83 164 114 80 225 199 12)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 209 202 122 92 26 160 134 178 149 28 26 193 78 0 95 0 114 251 40 56 57 115 160 81 23 249 101 44 206 82 60 5 235 233 73 145 196 127 236 210 65 208 160 126 134 200 138 179 198 32 234 231 146 171 163 209)
  :der-encode
  #t
  :tests
  '(#(367
      "100-bit r and small s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 13 16 51 230 126 55 179 43 68 85 128 191 78 251 2 28 2 253 2 253 2 253 2 253 2 253 2 253 2 253 0 67 164 253 45 163 23 36 115 8 199 77 198 184)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 53 101 175 42 72 31 147 144 231 29 118 66 113 125 4 39 224 46 94 125 232 163 192 193 255 213 243 62 148 116 84 126 13 84 220 170 232 84 148 199 79 170 35 57 74 5 110 65 194 131 150 56 184 82 59 114)
  :der-encode
  #t
  :tests
  '(#(368
      "small r and 100 bit s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 35 2 2 1 0 2 29 0 208 84 52 171 172 216 89 237 116 24 94 117 183 81 198 217 246 12 121 33 218 207 187 142 25 205 186 142)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 41 198 148 121 15 189 35 119 124 253 228 52 186 220 176 97 163 38 165 83 66 100 188 254 25 60 113 108 23 138 148 63 123 212 251 19 37 101 186 96 35 88 177 52 51 165 33 122 192 76 192 53 86 108 115 248)
  :der-encode
  #t
  :tests
  '(#(369
      "100-bit r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 13 6 37 34 187 211 236 190 124 57 233 62 124 36 2 29 0 208 84 52 171 172 216 89 237 116 24 94 117 183 81 198 217 246 12 121 33 218 207 187 142 25 205 186 142)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 143 212 58 172 133 86 244 102 95 212 193 63 78 21 17 64 244 42 57 87 99 197 218 36 122 57 143 151 150 135 210 74 159 205 107 32 165 148 81 195 72 166 54 77 15 250 240 236 254 22 67 19 219 101 148 171)
  :der-encode
  #t
  :tests
  '(#(370
      "r and s^-1 are close to n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 22 162 224 184 240 62 19 221 41 69 92 92 41 189 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 194 174 14 53 122 67 249 117 73 167 37 174 55 4 68 144 81 201 107 243 99 51 85 195 91 110 183 233 106 132 223 182 212 81 125 29 228 107 24 120 106 80 97 120 114 75 244 174 79 158 65 140 117 171 23 239)
  :der-encode
  #t
  :tests
  '(#(371
      "s == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 1 1)
      #t
      ())
    #(372
      "s == 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 33 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 1 0)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 150 22 23 217 133 95 32 47 214 0 181 132 171 233 74 70 103 73 39 207 220 99 51 197 190 86 206 123 137 180 21 13 156 205 251 215 126 118 130 202 134 44 12 62 150 216 156 145 139 125 59 123 187 146 255 67)
  :der-encode
  #t
  :tests
  '(#(373
      "point at infinity during verify"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 30 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 141 181 63 228 22 141 244 62 229 56 188 157 117 139 140 38 250 67 63 176 16 27 203 173 3 149 133 222 35 16 223 194 8 53 55 158 164 6 153 48 54 253 75 176 246 125 20 118 14 30 180 20 195 45 209 243)
  :der-encode
  #t
  :tests
  '(#(374
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 31 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 30)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 11 127 166 25 131 231 162 39 247 56 132 125 69 127 62 140 240 164 8 92 49 47 182 220 236 130 37 112 238 116 52 206 47 243 251 204 29 9 96 55 152 118 233 221 91 237 40 170 213 118 238 162 51 164 75 13)
  :der-encode
  #t
  :tests
  '(#(375
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 31 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 31)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 85 178 18 145 156 214 136 107 19 205 122 37 86 67 12 228 66 232 105 66 241 191 110 70 24 174 54 62 121 92 102 74 233 96 238 17 6 48 139 125 186 145 36 10 176 195 239 139 235 125 10 77 122 16 42 127)
  :der-encode
  #t
  :tests
  '(#(376
      "u1 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 28 67 248 0 251 234 249 35 140 88 175 121 91 205 173 4 188 73 205 133 12 57 77 51 130 149 51 86 176)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 192 40 138 99 206 50 38 63 54 81 25 141 171 128 28 137 111 185 48 131 98 252 64 227 89 89 225 64 16 208 11 209 194 40 207 182 165 250 166 71 56 120 4 227 79 161 167 249 252 196 114 192 94 162 238 218)
  :der-encode
  #t
  :tests
  '(#(377
      "u1 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 29 0 188 7 255 4 21 6 220 115 167 80 134 164 50 82 17 230 150 235 107 49 218 143 245 194 199 40 211 141)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 12 142 44 181 246 169 3 225 204 207 58 194 212 101 241 208 220 52 82 35 127 217 232 164 223 93 83 65 208 68 202 140 238 203 84 161 185 81 39 9 113 229 171 78 178 38 17 108 72 197 83 73 157 26 72 153)
  :der-encode
  #t
  :tests
  '(#(378
      "u2 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 31 246 185 144 23 132 216 139 37 82 123 55 2 98 42 39 52 184 61 138 15 237 15 116 11 183 132 226 14 131 238 10 168 41 51 220 220 99 122 55 96 96 106 4 151 76 45 199 95 18 9 95 143 218 240 3)
  :der-encode
  #t
  :tests
  '(#(379
      "u2 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 29 0 170 170 170 170 170 170 170 170 170 170 170 170 170 170 15 23 64 123 74 212 13 62 27 131 146 232 28 41)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 178 31 172 161 123 104 5 135 82 217 67 168 31 133 59 128 5 98 223 139 33 114 225 80 149 60 98 66 1 194 192 245 237 59 52 41 86 202 205 38 249 9 117 98 208 251 10 61 218 185 28 90 231 233 12 1)
  :der-encode
  #t
  :tests
  '(#(380
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 193 82 170 254 163 168 97 46 200 58 125 201 68 142 102 0 174 106 119 45 117 173 44 175 25 249 57 14)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 244 146 120 65 158 79 80 104 137 176 22 139 31 206 31 135 238 91 97 239 160 231 60 120 51 238 178 156 177 179 52 248 27 232 240 95 59 46 152 211 139 3 12 255 87 148 123 150 19 94 196 70 92 94 83 243)
  :der-encode
  #t
  :tests
  '(#(381
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 78 21 142 248 108 197 48 84 241 99 92 116 230 85 8 32 96 72 146 147 21 224 151 165 159 21 25 226)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 117 198 168 134 226 43 192 75 153 109 74 25 87 92 224 198 104 107 68 155 110 5 239 19 1 189 139 162 51 171 41 246 93 242 212 20 77 162 178 30 144 53 154 6 71 101 201 94 50 91 183 229 76 162 142 64)
  :der-encode
  #t
  :tests
  '(#(382
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 226 172 11 36 81 46 132 246 251 1 86 32 214 137 211 13 20 115 108 240 12 24 131 135 83 195 129 79)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 245 84 1 76 193 79 49 156 24 245 250 108 215 57 36 144 117 255 53 186 59 42 253 171 83 41 239 15 210 197 1 242 90 112 74 221 189 133 192 224 34 116 137 86 229 153 141 153 195 135 251 253 52 60 137 224)
  :der-encode
  #t
  :tests
  '(#(383
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 108 82 33 243 194 222 12 111 188 7 255 4 21 6 121 181 127 87 81 43 129 79 65 58 235 175 231 49)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 188 250 141 183 4 172 165 111 235 35 189 75 64 73 33 50 51 170 101 32 69 160 168 26 46 13 166 76 9 27 53 159 123 231 174 0 160 233 119 125 149 16 248 71 67 11 93 253 168 120 230 109 79 176 214 47)
  :der-encode
  #t
  :tests
  '(#(384
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 34 31 60 45 224 198 251 192 127 240 65 80 109 199 27 90 49 32 99 216 123 235 76 48 194 137 33 15)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 159 212 216 40 174 152 5 107 229 143 166 158 175 156 222 152 202 14 217 180 21 214 70 63 161 134 77 159 178 165 228 31 16 232 120 148 80 33 125 170 253 37 159 32 74 237 135 176 226 97 0 244 63 124 91 173)
  :der-encode
  #t
  :tests
  '(#(385
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 68 62 120 91 193 141 247 128 255 224 130 160 219 142 54 180 98 64 199 176 247 214 152 97 133 18 66 30)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 97 35 163 57 105 242 224 54 252 39 136 95 85 117 93 57 28 176 194 211 250 251 12 64 86 193 153 93 160 59 180 144 4 126 136 254 126 96 137 18 166 32 91 101 249 80 168 160 163 96 54 45 51 57 230 44)
  :der-encode
  #t
  :tests
  '(#(386
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 194 222 12 111 188 7 255 4 21 6 220 115 167 79 213 1 54 135 139 126 19 65 82 27 47 136 11 25)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 161 11 122 167 120 91 47 39 145 177 212 196 62 18 122 171 86 105 97 45 116 11 56 171 170 13 48 110 193 120 242 22 250 211 121 173 128 186 160 234 197 123 249 165 109 68 109 104 85 118 55 27 116 118 35 130)
  :der-encode
  #t
  :tests
  '(#(387
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 159 86 170 128 174 43 207 104 155 226 193 27 93 183 227 162 137 131 180 167 89 6 146 237 207 95 141 182)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 224 18 194 60 104 103 233 85 51 19 208 23 158 157 185 83 222 124 54 140 219 89 171 224 95 28 82 186 211 82 165 123 181 156 69 21 147 82 193 20 238 182 150 236 59 121 202 168 53 239 92 42 231 29 220 250)
  :der-encode
  #t
  :tests
  '(#(388
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 62 173 85 1 92 87 158 209 55 197 130 54 187 112 176 162 50 78 121 16 158 47 252 150 66 98 241 47)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 185 204 215 240 243 89 73 84 170 114 155 218 75 232 131 225 7 231 241 34 100 101 182 76 44 167 16 87 137 130 157 120 112 22 197 193 24 211 186 51 23 162 218 10 13 170 245 109 48 4 193 9 98 51 58 159)
  :der-encode
  #t
  :tests
  '(#(389
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 222 3 255 130 10 131 110 57 211 168 67 82 25 40 148 68 187 210 45 183 247 54 143 132 17 194 126 229)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 50 26 23 222 2 79 232 156 24 100 225 40 185 224 175 62 107 72 128 10 112 214 232 2 184 182 223 254 177 168 174 150 145 29 219 222 184 57 72 169 146 177 176 254 49 102 121 198 72 20 182 164 94 197 111 233)
  :der-encode
  #t
  :tests
  '(#(390
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 241 86 5 146 40 151 66 123 125 128 171 16 107 68 116 215 250 150 46 151 15 250 214 102 88 15 213 198)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 8 132 47 25 177 20 209 107 226 123 180 182 151 19 119 237 107 29 9 21 225 51 169 235 240 22 116 238 76 151 115 139 105 18 255 113 85 60 74 116 124 120 46 221 217 210 162 15 190 174 56 134 77 33 120 89)
  :der-encode
  #t
  :tests
  '(#(391
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 178 54 74 232 80 20 177 73 184 108 116 30 184 190)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 132 214 81 89 111 210 52 143 27 181 200 174 157 34 200 178 28 79 117 9 36 11 96 154 186 213 204 36 49 150 182 123 76 250 255 175 13 206 37 171 0 191 234 161 166 72 33 51 46 250 109 237 216 124 201 231)
  :der-encode
  #t
  :tests
  '(#(392
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 133 95 91 45 200 228 110 196 40 165 147 247 50 25 207 101 218 231 147 232 52 110 48 204 55 1 48 156)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 143 190 57 231 91 196 253 138 21 228 181 46 75 190 190 32 71 213 67 133 167 17 126 23 164 208 178 178 7 171 219 64 130 69 56 229 120 124 113 141 101 72 88 63 82 63 107 91 191 162 57 167 246 34 200 160)
  :der-encode
  #t
  :tests
  '(#(393
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 45 181 246 26 234 129 114 118 175 32 100 225 4 199 163 14 50 3 76 181 38 221 10 172 250 86 86 111)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 195 54 179 64 188 153 212 108 44 82 223 84 40 182 160 196 235 45 167 108 66 53 48 247 103 204 118 82 243 171 153 129 189 5 210 149 81 35 147 90 55 156 187 45 67 97 161 125 25 135 134 115 225 225 125 204)
  :der-encode
  #t
  :tests
  '(#(394
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 132 166 199 81 62 95 72 192 127 255 255 255 255 255 135 19 243 203 161 41 62 79 62 149 89 127 230 189)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 129 111 220 243 112 130 126 63 119 113 86 78 26 167 62 215 62 98 85 109 234 218 216 151 17 206 246 99 237 205 160 234 66 35 95 76 154 140 19 247 135 53 31 254 92 235 50 241 95 192 204 178 78 10 64 156)
  :der-encode
  #t
  :tests
  '(#(395
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 108 117 19 229 244 140 7 255 255 255 255 255 255 255 157 33 253 27 49 84 76 177 60 168 106 117 178 94)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 100 41 210 183 176 122 176 213 234 53 41 2 223 14 252 3 109 114 112 160 166 237 57 246 53 208 79 57 79 121 50 136 59 196 83 148 21 19 36 170 178 106 226 155 189 115 133 250 106 66 195 219 132 67 40 151)
  :der-encode
  #t
  :tests
  '(#(396
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 216 234 39 203 233 24 15 255 255 255 255 255 255 255 58 67 250 54 98 168 153 98 121 80 212 235 100 188)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 40 143 56 253 119 221 22 3 255 2 117 203 17 203 162 128 174 52 8 175 250 106 118 15 57 111 26 30 200 76 166 253 119 44 106 198 204 82 60 199 44 46 126 149 235 106 54 166 107 92 202 90 88 186 7 138)
  :der-encode
  #t
  :tests
  '(#(397
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 62 95 72 192 127 255 255 255 255 255 255 255 255 255 199 36 150 140 14 207 158 215 131 116 74 115 55 179)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 199 105 193 56 249 215 31 255 241 19 39 59 113 164 175 222 79 153 150 161 196 190 101 138 57 3 207 127 67 14 81 43 134 139 55 187 150 188 23 160 155 10 176 27 38 47 46 35 243 79 0 65 143 107 99 214)
  :der-encode
  #t
  :tests
  '(#(398
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 191 255 255 255 255 255 255 255 255 255 255 255 255 255 61 135 187 68 200 51 187 56 77 15 34 76 205 222)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 117 240 7 193 27 147 230 244 110 154 129 92 183 101 153 10 131 5 211 173 141 34 199 111 230 178 87 204 113 181 193 149 27 93 70 76 102 223 124 41 12 240 164 241 86 187 245 47 30 65 167 157 198 58 188 229)
  :der-encode
  #t
  :tests
  '(#(399
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 100 108 149 208 160 41 98 147 112 216 232 61 113 127)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 18 85 251 148 160 242 14 111 170 37 5 195 148 204 60 57 240 125 239 65 7 18 125 255 196 218 203 110 234 115 193 4 69 68 161 73 101 96 189 27 4 159 246 21 230 138 224 212 131 34 3 39 86 152 132 225)
  :der-encode
  #t
  :tests
  '(#(400
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 28 63 255 255 255 255 255 255 255 255 255 255 255 255 255 139 81 112 92 120 31 9 238 148 162 174 46 21 32)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 246 86 166 50 160 128 76 246 136 68 107 38 18 8 247 147 55 60 95 244 69 75 209 224 168 130 17 63 48 162 93 111 88 110 2 221 77 203 247 61 150 175 62 72 59 122 203 95 143 76 6 69 13 236 25 130)
  :der-encode
  #t
  :tests
  '(#(401
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 29 0 150 218 251 13 117 64 185 59 87 144 50 112 130 99 92 216 137 94 30 121 157 93 25 249 43 89 64 86)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 143 181 114 222 77 175 118 112 38 36 206 78 216 25 208 38 118 34 36 232 165 66 21 191 129 178 2 163 240 116 210 14 29 167 35 45 39 148 97 115 43 193 186 224 197 65 106 185 214 150 48 134 34 231 255 232)
  :der-encode
  #t
  :tests
  '(#(402
      "point duplication during verification"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 196 69 3 218 232 93 213 33 7 128 240 41 40 179 217 39 23 28 87 143 134 3 209 107 36 6 99 199 2 29 0 236 12 227 250 114 92 16 39 71 90 95 91 244 238 152 13 230 28 59 72 117 175 232 182 84 178 78 226)
      #t
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 143 181 114 222 77 175 118 112 38 36 206 78 216 25 208 38 118 34 36 232 165 66 21 191 129 178 2 163 15 139 45 241 226 88 220 210 216 107 158 140 212 62 69 30 58 190 149 70 41 105 207 121 221 24 0 25)
  :der-encode
  #t
  :tests
  '(#(403
      "duplication bug"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 196 69 3 218 232 93 213 33 7 128 240 41 40 179 217 39 23 28 87 143 134 3 209 107 36 6 99 199 2 29 0 236 12 227 250 114 92 16 39 71 90 95 91 244 238 152 13 230 28 59 72 117 175 232 182 84 178 78 226)
      #f
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 229 70 45 58 131 141 74 20 222 150 167 176 177 7 30 182 34 174 110 113 237 232 249 95 240 28 33 33 54 142 58 144 216 88 78 25 70 22 211 33 26 117 65 246 160 150 3 57 202 178 142 139 253 107 29 253)
  :der-encode
  #t
  :tests
  '(#(404
      "comparison with point at infinity "
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20 2 28 51 51 51 51 51 51 51 51 51 51 51 51 51 51 4 134 249 190 150 114 208 197 213 13 223 69 162 12)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 93 151 103 12 31 18 31 127 27 165 65 80 86 9 242 1 67 179 18 167 187 73 211 118 105 14 24 49 193 180 86 113 65 167 181 52 226 27 210 247 6 174 3 65 105 171 156 63 133 54 20 121 4 222 140 95)
  :der-encode
  #t
  :tests
  '(#(405
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 210 103 82 120 218 45 125 170 131 115 221 99 183 170 70 203 20 118 101 113 194 216 9 139 131 161 2 165 105 155 87 45 75 149 20 151 65 138 55 105 48 2 45 72 254 89 150 107 21 143 160 131 64 226 75 152)
  :der-encode
  #t
  :tests
  '(#(406
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 2 29 0 219 109 182 219 109 182 219 109 182 219 109 182 219 108 238 212 192 158 132 199 126 189 145 22 225 115 145 235)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 90 92 209 22 35 136 52 135 52 218 226 14 34 53 174 44 70 74 222 240 161 150 249 170 240 36 130 202 42 233 78 139 154 2 67 117 3 100 41 182 50 171 72 94 2 197 169 102 91 40 155 138 71 186 222 143)
  :der-encode
  #t
  :tests
  '(#(407
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 2 28 51 51 51 51 51 51 51 51 51 51 51 51 51 51 4 134 249 190 150 114 208 197 213 13 223 69 162 12)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 202 205 147 235 17 168 33 222 61 136 43 171 116 17 231 199 127 35 192 141 161 116 24 156 201 135 220 65 113 111 227 120 171 132 33 97 188 22 222 246 224 55 212 186 157 48 216 203 65 173 48 207 6 86 229 11)
  :der-encode
  #t
  :tests
  '(#(408
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 28 112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 2 29 0 204 204 204 204 204 204 204 204 204 204 204 204 204 204 18 27 230 250 89 203 67 23 84 55 125 22 136 49)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 207 70 150 0 96 69 62 85 87 127 27 238 106 156 71 9 231 205 203 164 92 168 2 11 179 83 105 49 234 78 195 51 9 33 56 100 161 49 138 238 10 134 216 182 240 193 185 116 28 214 189 93 234 79 64 102)
  :der-encode
  #t
  :tests
  '(#(409
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 2 28 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 82)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 98 244 234 243 121 123 220 61 93 140 250 160 123 90 247 6 14 19 27 24 60 164 237 237 72 25 229 97 191 243 234 221 123 85 219 45 192 27 210 5 105 230 196 124 146 18 249 178 214 121 55 149 181 30 79 108)
  :der-encode
  #t
  :tests
  '(#(410
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 112 106 70 220 118 220 183 103 152 230 14 109 137 71 71 136 209 109 193 128 50 210 104 253 26 112 79 166 2 28 14 177 14 90 185 95 172 222 212 6 16 41 214 58 70 244 111 18 148 116 17 242 234 86 26 89 32 87)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 196 164 191 90 224 19 133 135 245 10 183 162 195 54 164 48 82 122 134 245 159 151 101 194 243 245 72 141 249 65 155 249 223 95 18 29 227 163 45 177 123 73 199 43 96 107 43 229 206 86 172 181 101 204 18 183)
  :der-encode
  #t
  :tests
  '(#(411
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 2 28 85 85 85 85 85 85 85 85 85 85 85 85 85 85 7 139 160 61 165 106 6 159 13 193 201 116 14 20)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 231 203 90 229 77 190 97 154 181 6 159 20 86 98 54 179 198 176 180 79 28 76 83 30 102 216 155 62 100 190 127 220 24 120 150 41 223 221 247 21 143 143 242 122 189 85 59 250 195 247 200 116 188 205 195 27)
  :der-encode
  #t
  :tests
  '(#(412
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 2 29 0 219 109 182 219 109 182 219 109 182 219 109 182 219 108 238 212 192 158 132 199 126 189 145 22 225 115 145 235)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 48 219 93 130 121 49 156 245 163 182 118 138 12 94 92 132 117 47 99 20 247 53 214 63 108 86 80 205 211 47 181 79 116 212 165 8 142 103 116 161 50 1 104 54 66 121 13 46 105 229 94 79 71 97 41 52)
  :der-encode
  #t
  :tests
  '(#(413
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 2 28 51 51 51 51 51 51 51 51 51 51 51 51 51 51 4 134 249 190 150 114 208 197 213 13 223 69 162 12)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 125 178 125 164 214 122 45 224 199 136 21 128 151 25 189 246 151 99 50 198 126 240 243 130 125 244 173 194 42 179 122 236 46 237 13 94 103 172 253 106 25 95 33 3 45 154 247 28 231 62 18 15 221 162 159 26)
  :der-encode
  #t
  :tests
  '(#(414
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 2 29 0 204 204 204 204 204 204 204 204 204 204 204 204 204 204 18 27 230 250 89 203 67 23 84 55 125 22 136 49)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 209 193 157 70 181 23 187 59 215 189 240 116 255 151 92 13 189 43 222 16 209 173 33 126 88 235 200 197 90 200 152 192 64 161 133 128 77 219 3 43 72 16 61 108 141 18 4 61 58 79 236 147 171 167 166 215)
  :der-encode
  #t
  :tests
  '(#(415
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 2 28 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 82)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 217 90 201 106 233 219 251 128 145 24 98 224 10 76 173 188 178 53 159 73 155 83 190 0 127 7 17 192 147 211 218 147 26 203 185 36 40 0 220 82 22 149 180 241 159 242 223 252 54 19 244 11 219 21 195 205)
  :der-encode
  #t
  :tests
  '(#(416
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 2 28 14 177 14 90 185 95 172 222 212 6 16 41 214 58 70 244 111 18 148 116 17 242 234 86 26 89 32 87)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 189 55 99 136 181 247 35 251 76 34 223 230 205 67 117 160 90 7 71 100 68 213 129 153 133 0 126 52)
  :der-encode
  #t
  :tests
  '(#(417
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 67 248 0 251 234 249 35 140 88 175 121 91 205 173 4 188 73 205 133 12 57 77 51 130 149 51 86 176 2 28 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 81)
      #f
      ())
    #(418
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 188 7 255 4 21 6 220 115 167 80 134 164 50 82 17 230 150 235 107 49 218 143 245 194 199 40 211 141 2 28 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 81)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 183 14 12 189 107 180 191 127 50 19 144 185 74 3 193 211 86 194 17 34 52 50 128 214 17 92 29 33 66 200 156 119 74 8 220 4 179 221 32 25 50 188 138 94 165 248 184 155 187 42 126 102 122 255 129 205)
  :der-encode
  #t
  :tests
  '(#(419
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 60 2 28 67 248 0 251 234 249 35 140 88 175 121 91 205 173 4 188 73 205 133 12 57 77 51 130 149 51 86 176 2 28 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 81)
      #f
      ())
    #(420
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 61 2 29 0 188 7 255 4 21 6 220 115 167 80 134 164 50 82 17 230 150 235 107 49 218 143 245 194 199 40 211 141 2 28 36 146 73 36 146 73 36 146 73 36 146 73 36 146 39 206 32 26 107 118 149 31 152 46 122 232 152 81)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 76 36 102 112 101 138 29 65 245 215 123 206 36 108 190 56 106 194 40 72 226 105 185 212 205 103 196 102 221 217 71 21 61 57 178 212 37 51 164 96 222 242 104 128 64 140 175 45 211 221 72 254 136 140 209 118)
  :der-encode
  #t
  :tests
  '(#(421
      "pseudorandom signature"
      #vu8()
      #vu8(48 62 2 29 0 247 41 21 214 217 22 1 66 121 97 97 134 134 154 1 34 143 205 159 27 64 120 53 48 24 179 153 171 2 29 0 182 127 43 145 238 235 145 3 129 245 180 97 164 163 156 100 42 234 71 146 1 61 78 182 61 161 131 43)
      #t
      ())
    #(422
      "pseudorandom signature"
      #vu8(77 115 103)
      #vu8(48 62 2 29 0 165 209 121 195 54 204 220 118 13 253 221 145 60 223 142 164 104 208 244 104 111 123 45 56 37 105 142 215 2 29 0 167 127 18 6 10 77 27 148 176 209 196 67 234 227 173 110 33 183 234 207 223 111 191 57 162 178 150 88)
      #t
      ())
    #(423
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(48 62 2 29 0 183 198 93 206 86 171 226 79 180 89 46 206 90 193 230 238 131 83 67 31 116 82 64 154 221 115 104 132 2 29 0 229 254 93 183 152 137 49 2 107 147 125 196 239 152 63 228 70 202 19 77 41 185 74 199 119 205 227 23)
      #t
      ())
    #(424
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(48 61 2 28 5 197 99 211 164 186 216 116 228 97 10 223 165 119 119 165 159 153 91 250 6 239 151 191 18 90 73 136 2 29 0 151 237 104 245 70 207 75 180 153 133 36 193 131 86 243 175 22 45 43 242 116 75 233 51 87 188 75 75)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 174 214 252 173 36 0 196 217 78 85 219 182 176 18 206 61 76 43 70 132 63 190 153 212 40 158 110 207 138 36 168 158 113 52 61 125 21 29 37 141 44 182 144 52 156 45 86 179 102 221 16 166 0 0 0 0)
  :der-encode
  #t
  :tests
  '(#(425
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 199 166 243 88 183 217 56 21 24 154 229 210 195 171 77 78 5 244 49 118 165 45 212 252 91 72 163 74 2 29 0 162 69 133 18 187 141 190 111 27 214 235 1 210 215 125 86 36 232 84 123 248 125 133 252 115 28 12 134)
      #t
      ())
    #(426
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 95 86 202 88 125 22 102 74 32 218 209 61 248 90 71 89 120 229 206 232 26 141 15 73 250 175 97 88 2 29 0 182 78 245 157 121 70 31 225 160 154 88 100 144 116 53 247 11 215 95 24 58 251 17 144 63 86 11 124)
      #t
      ())
    #(427
      "y-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 221 148 245 181 110 153 71 208 7 231 200 239 216 148 165 200 130 241 208 181 221 86 195 43 91 38 101 33 2 29 0 251 200 131 116 27 210 124 89 149 138 225 123 166 228 164 26 209 237 236 169 163 186 49 200 242 51 181 172)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 191 25 236 254 67 255 226 137 246 153 244 121 49 97 69 185 167 247 55 11 158 206 90 177 33 33 116 241 115 213 40 148 154 233 20 47 129 139 173 231 26 150 4 7 150 59 224 182 72 42 106 96 255 255 255 255)
  :der-encode
  #t
  :tests
  '(#(428
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 128 113 230 104 44 110 138 50 112 109 199 228 17 80 57 70 84 107 49 255 242 125 204 225 136 174 56 159 2 29 0 220 57 108 121 125 68 237 247 148 67 45 29 160 145 248 199 98 151 77 140 225 240 110 8 202 1 54 34)
      #t
      ())
    #(429
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 28 121 22 36 229 242 52 184 149 13 80 157 11 69 110 246 250 119 139 25 220 205 96 157 73 107 98 162 17 2 28 108 81 232 70 250 83 208 61 66 247 152 230 187 144 149 79 154 72 193 121 75 71 232 74 201 123 70 10)
      #t
      ())
    #(430
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 27 52 190 250 29 37 183 86 206 118 179 131 166 232 117 55 65 193 42 89 38 108 44 121 33 255 110 139 2 29 0 188 68 227 130 62 77 128 124 188 146 250 120 106 137 230 42 75 33 123 95 176 192 241 134 93 74 126 67)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 38 229 171 241 53 203 84 234 170 22 182 158 75 11 41 34 117 52 78 136 160 157 246 223 128 0 0 0 234 184 145 222 84 227 242 111 245 10 185 137 243 51 218 197 81 88 61 70 138 230 35 197 150 67 74 240)
  :der-encode
  #t
  :tests
  '(#(431
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 28 34 74 56 231 51 235 211 250 194 116 236 197 14 206 242 231 195 24 155 226 185 208 147 168 220 198 250 58 2 28 19 79 165 164 249 35 210 150 179 198 221 70 131 210 73 204 240 173 39 40 144 228 20 156 154 13 116 21)
      #t
      ())
    #(432
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 51 141 7 217 144 135 154 216 68 226 76 23 136 227 98 38 157 138 202 112 80 3 87 211 133 118 130 39 2 29 0 247 69 204 78 186 175 28 212 40 48 2 106 102 229 185 85 100 205 190 229 237 248 83 187 44 201 18 89)
      #t
      ())
    #(433
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 28 104 159 206 75 51 216 33 42 102 54 64 161 174 14 250 167 167 215 113 27 235 167 25 55 79 230 52 238 2 28 4 189 153 129 250 82 41 48 99 7 111 15 215 15 195 24 117 213 128 239 148 240 32 210 249 84 64 224)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 236 98 127 52 85 69 208 63 140 109 189 8 229 117 82 113 22 86 127 227 117 249 236 170 255 255 255 255 65 191 112 86 151 213 247 22 188 247 135 24 213 57 59 99 169 134 145 244 161 242 66 70 55 85 56 253)
  :der-encode
  #t
  :tests
  '(#(434
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 28 42 66 135 224 21 16 231 251 95 237 46 28 204 63 42 105 41 207 125 3 133 14 73 215 174 138 80 74 2 28 53 92 57 21 243 250 150 55 220 128 1 67 138 140 4 225 93 20 147 76 171 212 48 254 176 203 91 165)
      #t
      ())
    #(435
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 181 191 121 90 56 173 176 82 180 1 70 143 252 171 129 16 61 45 159 202 46 21 184 208 138 185 140 232 2 28 94 192 210 198 174 199 24 136 201 65 175 50 76 114 114 190 193 146 171 178 146 249 223 130 162 78 138 65)
      #t
      ())
    #(436
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 16 14 208 127 70 113 51 191 16 145 127 122 21 171 43 253 165 25 189 188 38 83 185 89 85 226 34 17 2 29 0 179 138 8 31 124 46 43 119 93 29 168 104 208 56 28 9 186 21 89 201 97 59 91 231 21 147 99 173)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 21 1 110 82 179 100 114 213 54 71 118 5 251 128 93 211 144 48 130 160 98 209 234 48 175 158 85 90 0 0 0 0 118 45 40 241 253 194 25 24 79 129 104 31 191 245 102 212 101 181 241 243 30 135 45 245)
  :der-encode
  #t
  :tests
  '(#(437
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 28 84 230 173 216 172 145 14 82 198 34 143 227 152 13 143 88 98 24 51 77 141 133 155 169 163 50 153 23 2 28 88 54 204 121 236 136 81 158 171 74 107 38 20 197 1 98 140 159 238 50 251 175 217 62 50 21 132 9)
      #t
      ())
    #(438
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 28 18 48 213 64 159 55 149 132 180 213 72 183 188 203 166 75 175 129 213 18 169 242 230 57 140 78 58 102 2 28 25 55 162 152 248 203 223 168 91 142 111 207 10 18 190 73 102 216 2 112 202 222 133 160 195 126 230 243)
      #t
      ())
    #(439
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 134 47 67 176 68 251 50 173 180 94 0 55 139 160 131 174 118 28 132 69 32 84 241 123 19 65 191 91 2 29 0 149 216 216 229 227 166 204 43 10 6 199 146 37 44 161 26 100 34 87 114 24 49 87 133 32 249 107 158)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 21 1 110 82 179 100 114 213 54 71 118 5 251 128 93 211 144 48 130 160 98 209 234 48 175 158 85 90 255 255 255 255 137 210 215 14 2 61 230 231 176 126 151 223 64 10 153 43 154 74 14 12 225 120 210 12)
  :der-encode
  #t
  :tests
  '(#(440
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 203 92 171 177 202 1 184 71 166 188 112 85 141 30 93 58 32 77 23 65 187 232 0 244 177 89 175 53 2 28 53 128 204 133 242 24 57 65 48 189 223 28 78 172 4 254 150 245 159 20 251 67 102 134 149 3 152 190)
      #t
      ())
    #(441
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 201 216 61 192 76 244 238 137 196 5 4 93 15 209 215 4 246 39 202 91 190 53 15 64 184 38 187 193 2 28 116 254 220 158 85 4 94 151 89 242 18 68 96 253 251 153 29 198 32 207 238 110 255 192 180 173 170 158)
      #t
      ())
    #(442
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 70 221 101 182 231 241 12 8 65 132 27 1 3 58 91 239 211 160 231 140 133 241 243 144 187 60 223 37 2 29 0 243 58 206 163 212 124 240 221 82 115 115 91 0 65 4 246 81 46 214 65 5 37 9 66 44 3 37 167)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 0 0 0 0 247 228 113 61 8 81 18 17 44 55 205 244 96 31 246 136 218 121 96 22 183 26 114 122 222 90 158 193 101 5 76 201 135 249 220 135 233 153 27 146 228 250 100 156 166 85 238 174 159 42 48 225)
  :der-encode
  #t
  :tests
  '(#(443
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 221 180 167 228 0 161 233 129 24 244 116 114 45 163 244 33 246 90 118 238 198 31 79 123 105 159 175 7 2 29 0 219 128 203 161 153 133 156 223 233 22 214 171 61 235 145 215 106 175 14 213 84 200 249 237 126 90 165 157)
      #t
      ())
    #(444
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 76 38 11 84 98 128 96 78 76 128 56 71 33 201 232 3 239 112 78 127 183 1 104 230 115 15 193 243 2 29 0 168 172 234 226 25 172 37 201 240 66 49 180 224 193 113 65 61 177 210 109 241 193 232 67 0 98 235 43)
      #t
      ())
    #(445
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 244 9 141 44 2 64 231 143 206 171 176 24 61 240 179 158 122 211 231 245 214 218 21 135 250 9 133 60 2 29 0 212 36 18 178 171 170 97 76 149 235 17 249 185 52 98 130 206 58 28 147 170 195 92 231 170 55 47 74)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 255 255 255 255 234 223 124 238 141 52 208 76 242 44 143 125 227 86 116 251 47 80 29 36 42 118 247 37 134 196 9 48 157 57 142 96 206 30 10 76 158 5 169 211 38 39 87 126 140 226 204 127 58 250 44 62)
  :der-encode
  #t
  :tests
  '(#(446
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 72 221 196 151 249 164 115 44 103 126 70 192 226 189 171 236 84 252 157 39 228 106 181 149 5 109 180 217 2 29 0 184 33 158 187 250 235 194 254 67 17 239 171 12 53 212 57 39 81 53 27 204 25 113 232 208 25 65 228)
      #t
      ())
    #(447
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 225 171 175 81 210 122 109 125 76 155 40 7 131 37 202 194 215 206 61 84 3 145 108 104 144 55 96 183 2 28 44 69 169 158 39 112 247 130 254 229 202 29 113 62 174 207 7 230 45 83 198 75 124 249 61 233 144 13)
      #t
      ())
    #(448
      "x-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 134 140 209 39 201 158 17 73 247 252 141 135 140 223 169 134 182 46 153 173 222 162 129 20 150 17 255 21 2 28 22 229 149 56 32 19 91 125 70 44 229 67 78 248 89 32 233 115 238 201 228 209 77 124 179 204 42 63)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 176 1 60 111 191 246 240 159 236 218 28 38 62 246 83 153 212 207 152 156 165 252 79 143 255 15 233 225 0 0 0 0 14 42 176 232 73 94 133 158 178 175 176 7 105 214 231 254 98 106 17 145 103 192 182 188)
  :der-encode
  #t
  :tests
  '(#(449
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 62 2 29 0 163 117 146 151 24 236 78 106 218 156 147 112 197 29 246 189 174 231 235 171 42 112 103 93 66 160 182 179 2 29 0 158 175 72 2 239 175 124 160 130 255 191 94 215 116 175 67 121 45 155 63 215 17 198 177 195 97 18 255)
      #t
      ())
    #(450
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 217 123 50 243 191 139 193 30 194 103 45 214 50 4 24 190 238 217 149 39 166 63 228 197 33 153 236 97 2 28 104 221 144 6 176 51 25 204 190 101 29 11 218 248 76 99 53 111 3 203 0 122 104 101 238 62 2 6)
      #t
      ())
    #(451
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 29 0 142 229 121 77 194 230 111 37 132 145 14 161 216 54 30 91 83 219 83 90 220 245 193 195 94 18 131 9 2 28 93 29 139 155 153 108 10 72 142 5 175 20 66 27 134 233 132 31 12 186 112 96 39 252 130 125 77 149)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp224r1_sha512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-512"
  :public-key
  #vu8(48 78 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 33 3 58 0 4 176 1 60 111 191 246 240 159 236 218 28 38 62 246 83 153 212 207 152 156 165 252 79 143 255 15 233 225 255 255 255 255 241 213 79 23 182 161 122 97 77 80 79 247 150 41 24 1 157 149 238 110 152 63 73 69)
  :der-encode
  #t
  :tests
  '(#(452
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 121 153 114 124 12 192 45 136 239 39 64 18 167 98 175 203 177 158 127 206 25 9 26 2 172 208 5 100 2 29 0 219 250 207 103 153 159 34 196 153 212 138 96 166 254 75 187 116 97 153 194 153 87 161 236 122 9 0 224)
      #t
      ())
    #(453
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 60 2 28 87 151 194 28 1 98 228 47 105 105 60 108 2 68 223 223 146 24 192 30 146 53 118 1 119 182 26 84 2 28 84 82 200 135 178 127 179 66 168 160 13 39 87 156 113 149 221 219 115 223 57 146 51 237 13 234 86 123)
      #t
      ())
    #(454
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 61 2 28 14 185 220 93 103 187 13 64 9 84 79 134 84 151 121 7 223 231 112 231 250 228 87 29 49 215 180 250 2 29 0 171 92 218 83 232 104 191 245 25 139 228 190 54 129 177 134 203 12 19 150 210 114 199 31 9 63 139 18)
      #t
      ())))
