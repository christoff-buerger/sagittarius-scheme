(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 228 217 255 229 236 23 219 73 151 81 157 10 228 33 156 71 216 16 68 152 177 172 57 41 111 35 155 177 128 8 182 113 21 69 135 60 159 173 226 88)
  :der-encode
  #t
  :tests
  '(#(1
      "signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 21 0 200 91 141 232 23 169 169 152 172 241 53 169 24 193 70 199 235 222 43 62)
      #t
      ())
    #(2
      "valid"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #t
      ())
    #(3
      "long form encoding of length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ("BER"))
    #(4
      "length of sequence contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 130 0 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ("BER"))
    #(5
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(6
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 43 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(7
      "uint32 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 1 0 0 0 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(8
      "uint64 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 137 1 0 0 0 0 0 0 0 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(9
      "length of sequence = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 127 255 255 255 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(10
      "length of sequence = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 255 255 255 255 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(11
      "length of sequence = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 255 255 255 255 255 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(12
      "length of sequence = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 136 255 255 255 255 255 255 255 255 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(13
      "incorrect length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 255 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(14
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(15
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 128 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(16
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 128 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(17
      "removing sequence"
      #vu8(49 50 51 52 48 48)
      #vu8()
      #f
      ())
    #(18
      "lonely sequence tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48)
      #f
      ())
    #(19
      "appending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 0 0)
      #f
      ())
    #(20
      "prepending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 0 0 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(21
      "appending unused 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 0 0)
      #f
      ())
    #(22
      "appending null value to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 5 0)
      #f
      ())
    #(23
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 49 73 129 119 48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(24
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 48 37 0 48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(25
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 0 4 222 173 190 239)
      #f
      ())
    #(26
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 49 34 25 73 129 119 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(27
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 48 34 24 37 0 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(28
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 34 22 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 0 4 222 173 190 239 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(29
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 49 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 34 25 73 129 119 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(30
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 48 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 34 24 37 0 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(31
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 34 22 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 0 4 222 173 190 239)
      #f
      ())
    #(32
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 170 0 187 0 205 0 48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(33
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 50 170 2 170 187 48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(34
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 34 28 170 0 187 0 205 0 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(35
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 50 34 26 170 2 170 187 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(36
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 34 28 170 0 187 0 205 0 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(37
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 50 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 34 26 170 2 170 187 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(38
      "truncated length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129)
      #f
      ())
    #(39
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 0 0)
      #f
      ())
    #(40
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 48 34 128 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 0 0 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(41
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 48 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 34 128 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 0 0)
      #f
      ())
    #(42
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 49 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 0 0)
      #f
      ())
    #(43
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 48 34 128 3 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 0 0 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(44
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 48 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 34 128 3 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 0 0)
      #f
      ())
    #(45
      "Replacing sequence with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(5 0)
      #f
      ())
    #(46
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(46 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(47
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(47 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(48
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(49 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(49
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(50 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(50
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(255 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(51
      "dropping value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 0)
      #f
      ())
    #(52
      "using composition for sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 48 48 1 2 48 43 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(53
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 43 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118)
      #f
      ())
    #(54
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 43 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(55
      "sequence of size 4141 to check for overflows"
      #vu8(49 50 51 52 48 48)
      #vu8(48 130 16 45 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ())
    #(56
      "indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 0 0)
      #f
      ("BER"))
    #(57
      "indefinite length with truncated delimiter"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 0)
      #f
      ())
    #(58
      "indefinite length with additional element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 5 0 0 0)
      #f
      ())
    #(59
      "indefinite length with truncated element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 6 8 17 34 0 0)
      #f
      ())
    #(60
      "indefinite length with garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 0 0 254 2 190 239)
      #f
      ())
    #(61
      "indefinite length with nonempty EOC"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 0 2 190 239)
      #f
      ())
    #(62
      "prepend empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 48 0 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(63
      "append empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 48 0)
      #f
      ())
    #(64
      "append garbage with high tag number"
      #vu8(49 50 51 52 48 48)
      #vu8(48 47 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 191 127 0)
      #f
      ())
    #(65
      "append null with explicit tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 48 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 160 2 5 0)
      #f
      ())
    #(66
      "append null with implicit tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 160 0)
      #f
      ())
    #(67
      "sequence of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(68
      "truncated sequence: removed last 1 elements"
      #vu8(49 50 51 52 48 48)
      #vu8(48 22 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208)
      #f
      ())
    #(69
      "repeating element in sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 66 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(70
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 129 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ("BER"))
    #(71
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 129 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ("BER"))
    #(72
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 130 0 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ("BER"))
    #(73
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 130 0 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ("BER"))
    #(74
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 21 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(75
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 19 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(76
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 21 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(77
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 19 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(78
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 49 2 133 1 0 0 0 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(79
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 49 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 133 1 0 0 0 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(80
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 137 1 0 0 0 0 0 0 0 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(81
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 53 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 137 1 0 0 0 0 0 0 0 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(82
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 48 2 132 127 255 255 255 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(83
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 48 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 132 127 255 255 255 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(84
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 48 2 132 255 255 255 255 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(85
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 48 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 132 255 255 255 255 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(86
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 49 2 133 255 255 255 255 255 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(87
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 49 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 133 255 255 255 255 255 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(88
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 136 255 255 255 255 255 255 255 255 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(89
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 52 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 136 255 255 255 255 255 255 255 255 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(90
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 255 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(91
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 255 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(92
      "removing integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 22 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(93
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 23 2 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(94
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 23 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2)
      #f
      ())
    #(95
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 22 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 0 0 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(96
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 22 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 0 0)
      #f
      ())
    #(97
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 22 0 0 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ("BER"))
    #(98
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 22 0 0 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ("BER"))
    #(99
      "appending unused 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 0 0 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(100
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 22 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 5 0 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(101
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 22 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 5 0)
      #f
      ())
    #(102
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 24 2 129 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(103
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 24 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 129)
      #f
      ())
    #(104
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 24 5 0 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(105
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 24 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 5 0)
      #f
      ())
    #(106
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 0 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(107
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 1 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(108
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 3 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(109
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 4 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(110
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 255 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(111
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 0 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(112
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 1 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(113
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 3 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(114
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 4 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(115
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 255 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(116
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 24 2 0 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(117
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 24 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 0)
      #f
      ())
    #(118
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 48 34 24 2 1 10 2 19 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(119
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 48 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 34 24 2 1 55 2 19 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(120
      "modifying first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 8 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(121
      "modifying first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 53 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(122
      "modifying last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 80 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(123
      "modifying last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 173)
      #f
      ())
    #(124
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 43 2 19 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(125
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 43 2 19 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(126
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 43 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 19 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118)
      #f
      ())
    #(127
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 43 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 19 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(128
      "integer of size 4117 to check for overflows"
      #vu8(49 50 51 52 48 48)
      #vu8(48 130 16 47 2 130 16 21 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(129
      "integer of size 4117 to check for overflows"
      #vu8(49 50 51 52 48 48)
      #vu8(48 130 16 47 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 130 16 21 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #f
      ())
    #(130
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 255 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(131
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 21 255 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(132
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 25 9 1 128 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(133
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 25 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 9 1 128)
      #f
      ())
    #(134
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 25 2 1 0 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(135
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 25 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 1 0)
      #f
      ())
    #(136
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 1 10 248 207 22 14 108 222 230 107 226 193 225 202 200 128 107 4 154 211 59 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(137
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 255 10 248 207 22 14 108 222 230 107 226 87 163 251 187 48 57 29 87 144 101 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(138
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 245 7 48 233 241 147 33 25 148 29 115 61 28 190 39 173 239 6 206 48 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(139
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 0 245 7 48 233 241 147 33 25 148 29 168 92 4 68 207 198 226 168 111 155 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(140
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 254 245 7 48 233 241 147 33 25 148 29 62 30 53 55 127 148 251 101 44 197 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(141
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 2 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(142
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 254 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(143
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 1 245 7 48 233 241 147 33 25 148 29 115 61 28 190 39 173 239 6 206 48 2 20 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(144
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 21 1 55 164 114 23 232 86 86 103 83 15 52 148 182 76 9 105 251 101 23 152)
      #f
      ())
    #(145
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 21 255 55 164 114 23 232 86 86 103 83 14 202 86 231 62 185 56 20 33 212 194)
      #f
      ())
    #(146
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 20 200 91 141 232 23 169 169 152 172 241 0 138 49 58 158 174 248 60 137 211)
      #f
      ())
    #(147
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 21 254 200 91 141 232 23 169 169 152 172 240 203 107 73 179 246 150 4 154 232 104)
      #f
      ())
    #(148
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 21 2 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(149
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 21 254 55 164 114 23 232 86 86 103 83 14 255 117 206 197 97 81 7 195 118 45)
      #f
      ())
    #(150
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 20 10 248 207 22 14 108 222 230 107 226 140 194 227 65 216 82 16 249 49 208 2 21 1 200 91 141 232 23 169 169 152 172 241 0 138 49 58 158 174 248 60 137 211)
      #f
      ())
    #(151
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 0)
      #f
      ("EdgeCase"))
    #(152
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 1)
      #f
      ("EdgeCase"))
    #(153
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 255)
      #f
      ("EdgeCase"))
    #(154
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 1 0 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 107)
      #f
      ("EdgeCase"))
    #(155
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 1 0 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 106)
      #f
      ("EdgeCase"))
    #(156
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 1 0 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 108)
      #f
      ("EdgeCase"))
    #(157
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 1 0 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 115)
      #f
      ("EdgeCase"))
    #(158
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 1 0 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 116)
      #f
      ("EdgeCase"))
    #(159
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 0 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(160
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 9 1 66)
      #f
      ("EdgeCase"))
    #(161
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 0)
      #f
      ("EdgeCase"))
    #(162
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 1)
      #f
      ("EdgeCase"))
    #(163
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 255)
      #f
      ("EdgeCase"))
    #(164
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 1 1 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 107)
      #f
      ("EdgeCase"))
    #(165
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 1 1 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 106)
      #f
      ("EdgeCase"))
    #(166
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 1 1 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 108)
      #f
      ("EdgeCase"))
    #(167
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 1 1 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 115)
      #f
      ("EdgeCase"))
    #(168
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 1 1 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 116)
      #f
      ("EdgeCase"))
    #(169
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(170
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 9 1 66)
      #f
      ("EdgeCase"))
    #(171
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 0)
      #f
      ("EdgeCase"))
    #(172
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 1)
      #f
      ("EdgeCase"))
    #(173
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 255)
      #f
      ("EdgeCase"))
    #(174
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 1 255 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 107)
      #f
      ("EdgeCase"))
    #(175
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 1 255 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 106)
      #f
      ("EdgeCase"))
    #(176
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 1 255 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 108)
      #f
      ("EdgeCase"))
    #(177
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 1 255 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 115)
      #f
      ("EdgeCase"))
    #(178
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 1 255 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 116)
      #f
      ("EdgeCase"))
    #(179
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 255 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(180
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 9 1 66)
      #f
      ("EdgeCase"))
    #(181
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 107 2 1 0)
      #f
      ("EdgeCase"))
    #(182
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 107 2 1 1)
      #f
      ("EdgeCase"))
    #(183
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 107 2 1 255)
      #f
      ("EdgeCase"))
    #(184
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 107 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 107)
      #f
      ("EdgeCase"))
    #(185
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 107 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 106)
      #f
      ("EdgeCase"))
    #(186
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 107 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 108)
      #f
      ("EdgeCase"))
    #(187
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 107 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 115)
      #f
      ("EdgeCase"))
    #(188
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 107 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 116)
      #f
      ("EdgeCase"))
    #(189
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 28 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 107 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(190
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 107 9 1 66)
      #f
      ("EdgeCase"))
    #(191
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 106 2 1 0)
      #f
      ("EdgeCase"))
    #(192
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 106 2 1 1)
      #f
      ("EdgeCase"))
    #(193
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 106 2 1 255)
      #f
      ("EdgeCase"))
    #(194
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 106 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 107)
      #f
      ("EdgeCase"))
    #(195
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 106 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 106)
      #f
      ("EdgeCase"))
    #(196
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 106 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 108)
      #f
      ("EdgeCase"))
    #(197
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 106 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 115)
      #f
      ("EdgeCase"))
    #(198
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 106 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 116)
      #f
      ("EdgeCase"))
    #(199
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 28 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 106 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(200
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 106 9 1 66)
      #f
      ("EdgeCase"))
    #(201
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 108 2 1 0)
      #f
      ("EdgeCase"))
    #(202
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 108 2 1 1)
      #f
      ("EdgeCase"))
    #(203
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 108 2 1 255)
      #f
      ("EdgeCase"))
    #(204
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 108 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 107)
      #f
      ("EdgeCase"))
    #(205
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 108 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 106)
      #f
      ("EdgeCase"))
    #(206
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 108 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 108)
      #f
      ("EdgeCase"))
    #(207
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 108 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 115)
      #f
      ("EdgeCase"))
    #(208
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 108 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 116)
      #f
      ("EdgeCase"))
    #(209
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 28 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 108 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(210
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 108 9 1 66)
      #f
      ("EdgeCase"))
    #(211
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 115 2 1 0)
      #f
      ("EdgeCase"))
    #(212
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 115 2 1 1)
      #f
      ("EdgeCase"))
    #(213
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 115 2 1 255)
      #f
      ("EdgeCase"))
    #(214
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 115 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 107)
      #f
      ("EdgeCase"))
    #(215
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 115 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 106)
      #f
      ("EdgeCase"))
    #(216
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 115 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 108)
      #f
      ("EdgeCase"))
    #(217
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 115 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 115)
      #f
      ("EdgeCase"))
    #(218
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 115 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 116)
      #f
      ("EdgeCase"))
    #(219
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 28 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 115 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(220
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 115 9 1 66)
      #f
      ("EdgeCase"))
    #(221
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 116 2 1 0)
      #f
      ("EdgeCase"))
    #(222
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 116 2 1 1)
      #f
      ("EdgeCase"))
    #(223
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 116 2 1 255)
      #f
      ("EdgeCase"))
    #(224
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 116 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 107)
      #f
      ("EdgeCase"))
    #(225
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 116 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 106)
      #f
      ("EdgeCase"))
    #(226
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 116 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 108)
      #f
      ("EdgeCase"))
    #(227
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 116 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 115)
      #f
      ("EdgeCase"))
    #(228
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 116 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 116)
      #f
      ("EdgeCase"))
    #(229
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 28 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 116 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(230
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 116 9 1 66)
      #f
      ("EdgeCase"))
    #(231
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 12 1 48)
      #f
      ())
    #(232
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 5 2 1 1 12 0)
      #f
      ())
    #(233
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 9 12 2 37 115 12 3 115 37 115)
      #f
      ())
    #(234
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 48 3 2 1 0)
      #f
      ())
    #(235
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 3 2 1 1)
      #f
      ())
    #(236
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 1 1 0)
      #f
      ())
    #(237
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 1 1 0 1 1 0)
      #f
      ())
    #(238
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 4 12 0 12 0)
      #f
      ())
    #(239
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 12 1 48 12 1 48)
      #f
      ())
    #(240
      "Edge case for Shamir multiplication"
      #vu8(50 52 53 49 56)
      #vu8(48 45 2 20 119 152 40 44 217 74 189 155 183 75 228 25 29 76 72 117 91 81 95 39 2 21 0 147 99 195 35 19 249 36 172 121 23 47 88 70 91 174 190 129 54 206 34)
      #t
      ())
    #(241
      "special case hash"
      #vu8(52 50 54 52 55 57 55 50 52)
      #vu8(48 46 2 21 0 132 121 109 247 155 115 42 55 47 148 225 142 80 165 142 95 141 237 147 110 2 21 0 143 193 236 205 36 244 56 90 97 29 106 167 174 59 241 133 229 65 197 71)
      #t
      ())
    #(242
      "special case hash"
      #vu8(55 49 51 56 54 56 52 56 57 49)
      #vu8(48 45 2 21 0 251 212 130 189 31 156 31 178 121 204 8 242 239 143 221 162 54 22 221 213 2 20 58 15 71 123 130 187 19 173 92 61 68 189 242 131 95 44 67 72 151 228)
      #t
      ())
    #(243
      "special case hash"
      #vu8(49 48 51 53 57 51 51 49 54 54 56)
      #vu8(48 44 2 20 57 176 201 157 246 39 171 176 99 80 27 147 188 14 194 249 254 26 186 201 2 20 1 233 87 254 28 84 181 186 34 31 121 182 79 194 118 63 255 168 5 36)
      #t
      ())
    #(244
      "special case hash"
      #vu8(51 57 52 57 52 48 49 50 49 53)
      #vu8(48 44 2 20 42 179 20 190 138 83 166 175 152 230 14 147 120 173 81 148 166 48 102 41 2 20 96 16 28 73 219 188 246 120 133 31 103 133 98 187 153 176 233 131 208 17)
      #t
      ())
    #(245
      "special case hash"
      #vu8(49 51 52 52 50 57 51 48 55 57)
      #vu8(48 45 2 21 0 166 125 141 233 119 0 207 245 97 244 240 137 238 6 160 127 17 174 73 127 2 20 103 90 78 227 165 10 50 241 215 253 85 3 184 32 221 235 59 28 132 170)
      #t
      ())
    #(246
      "special case hash"
      #vu8(51 55 48 54 50 49 49 55 49 50)
      #vu8(48 46 2 21 0 174 193 113 196 145 181 150 39 220 156 80 181 199 191 174 215 27 93 140 180 2 21 0 211 136 167 133 207 251 131 226 148 207 116 33 11 49 234 164 142 158 112 129)
      #t
      ())
    #(247
      "special case hash"
      #vu8(51 52 51 54 56 56 55 49 50)
      #vu8(48 45 2 20 30 204 144 89 183 96 185 86 27 253 147 57 86 36 26 14 51 85 31 156 2 21 0 192 238 99 108 147 198 243 196 143 39 5 34 106 166 51 255 88 131 23 150)
      #t
      ())
    #(248
      "special case hash"
      #vu8(49 51 53 49 53 51 48 51 55 48)
      #vu8(48 44 2 20 83 244 16 59 79 245 242 176 78 96 64 155 113 43 36 229 45 68 107 238 2 20 90 10 156 78 94 216 115 35 231 162 248 150 76 221 5 170 202 134 35 245)
      #t
      ())
    #(249
      "special case hash"
      #vu8(54 53 53 51 50 48 51 49 50 54)
      #vu8(48 44 2 20 98 58 150 26 225 51 232 252 196 51 212 26 251 199 212 121 187 172 245 167 2 20 18 15 70 98 196 79 216 96 160 144 87 208 22 234 34 245 156 158 164 138)
      #t
      ())
    #(250
      "special case hash"
      #vu8(49 53 54 52 51 52 54 54 48 51)
      #vu8(48 46 2 21 0 247 60 196 129 248 153 21 193 197 175 163 37 246 105 209 60 153 119 106 141 2 21 0 138 58 9 150 17 39 88 76 237 25 212 193 225 120 59 96 168 25 154 15)
      #t
      ())
    #(251
      "special case hash"
      #vu8(52 52 50 57 53 51 57 49 49 55)
      #vu8(48 46 2 21 0 179 246 82 188 107 209 127 191 7 118 23 156 26 229 6 162 187 225 119 206 2 21 0 202 138 188 40 120 168 205 70 188 188 90 77 186 131 93 39 130 30 174 38)
      #t
      ())
    #(252
      "special case hash"
      #vu8(49 48 57 53 51 50 54 49 51 53 49)
      #vu8(48 45 2 20 35 129 9 36 22 32 10 90 77 121 118 26 110 89 104 206 41 80 126 136 2 21 0 171 176 75 4 216 229 214 6 229 176 174 240 24 51 223 150 126 4 190 229)
      #t
      ())
    #(253
      "special case hash"
      #vu8(53 57 56 55 51 53 48 48 52 49)
      #vu8(48 45 2 20 11 31 65 31 86 147 251 29 254 194 59 196 142 65 92 131 16 28 146 117 2 21 0 237 119 31 85 116 28 83 68 107 61 220 189 204 225 67 119 74 29 231 213)
      #t
      ())
    #(254
      "special case hash"
      #vu8(51 52 54 51 48 48 54 56 55 56)
      #vu8(48 46 2 21 0 132 96 82 208 165 168 233 112 194 38 0 113 10 3 7 57 214 99 101 69 2 21 0 157 138 199 14 106 116 207 36 51 41 26 150 19 67 57 251 166 192 141 56)
      #t
      ())
    #(255
      "special case hash"
      #vu8(57 56 49 55 51 50 48 50 56 55)
      #vu8(48 44 2 20 85 162 112 223 8 42 77 97 131 164 182 255 16 167 55 224 44 72 180 184 2 20 80 38 18 146 6 183 125 107 13 233 33 71 222 176 208 174 124 34 96 253)
      #t
      ())
    #(256
      "special case hash"
      #vu8(51 50 50 50 48 52 49 48 52 54)
      #vu8(48 44 2 20 109 132 244 6 119 49 102 196 27 180 66 245 175 4 171 152 88 223 86 4 2 20 106 168 145 150 207 155 254 141 188 218 97 132 56 220 113 124 143 220 11 192)
      #t
      ())
    #(257
      "special case hash"
      #vu8(54 54 54 54 51 48 55 49 48 52)
      #vu8(48 45 2 20 1 86 103 244 192 149 118 135 109 89 240 118 37 237 218 141 240 201 211 214 2 21 0 247 2 124 2 148 7 202 97 146 103 238 253 101 64 132 25 173 215 216 165)
      #t
      ())
    #(258
      "special case hash"
      #vu8(49 48 51 53 57 53 49 56 57 56)
      #vu8(48 45 2 21 0 154 152 77 28 126 16 103 129 29 176 154 192 228 50 181 11 223 223 205 59 2 20 68 67 42 230 146 39 198 38 45 229 187 134 252 178 104 186 88 224 248 5)
      #t
      ())
    #(259
      "special case hash"
      #vu8(49 56 52 54 53 57 55 49 57 53)
      #vu8(48 45 2 21 0 167 164 62 126 167 104 1 3 85 240 216 55 154 82 138 14 129 9 175 147 2 20 127 83 110 119 70 23 212 86 116 146 77 14 87 27 156 145 102 86 64 232)
      #t
      ())
    #(260
      "special case hash"
      #vu8(51 49 51 54 48 52 54 49 56 57)
      #vu8(48 45 2 20 96 18 59 213 184 191 56 230 185 136 63 216 152 31 158 129 137 207 23 166 2 21 0 250 167 114 249 242 122 215 166 70 189 149 161 137 245 159 24 86 164 6 226)
      #t
      ())
    #(261
      "special case hash"
      #vu8(50 54 54 51 55 56 52 50 53 52)
      #vu8(48 44 2 20 37 149 33 81 165 251 225 92 65 132 160 177 242 18 168 113 15 81 214 101 2 20 99 198 151 5 210 229 37 181 83 59 181 69 85 13 66 31 101 168 17 251)
      #t
      ())
    #(262
      "special case hash"
      #vu8(49 54 53 50 49 48 48 53 50 52)
      #vu8(48 45 2 21 0 231 111 17 161 143 223 205 176 210 159 206 199 145 206 196 97 205 64 115 72 2 20 53 211 94 132 167 35 17 121 227 201 14 42 188 180 99 173 250 11 43 154)
      #t
      ())
    #(263
      "special case hash"
      #vu8(53 55 52 56 48 56 49 54 57 54)
      #vu8(48 46 2 21 0 246 140 85 211 7 191 243 180 61 65 113 118 36 169 89 95 45 133 196 202 2 21 0 159 41 94 226 117 123 149 27 124 91 51 205 155 227 237 198 68 39 251 200)
      #t
      ())
    #(264
      "special case hash"
      #vu8(54 51 52 51 57 49 51 52 54 56)
      #vu8(48 45 2 20 119 159 56 19 238 128 50 107 192 130 117 11 151 171 154 50 173 237 52 81 2 21 0 255 198 107 172 19 154 92 173 137 47 249 223 78 41 71 104 115 218 167 166)
      #t
      ())
    #(265
      "special case hash"
      #vu8(49 53 52 49 49 48 51 53 57 56)
      #vu8(48 44 2 20 95 22 20 189 62 216 255 23 85 24 107 58 22 208 180 108 152 212 54 58 2 20 112 254 208 252 19 10 62 21 8 109 61 213 21 11 69 44 201 35 77 194)
      #t
      ())
    #(266
      "special case hash"
      #vu8(49 48 52 55 56 53 56 48 49 50 56)
      #vu8(48 44 2 20 117 121 121 30 97 30 250 129 131 112 143 73 244 116 219 57 231 41 32 26 2 20 103 30 173 60 92 138 87 185 12 232 28 175 234 28 199 172 92 96 1 140)
      #t
      ())
    #(267
      "special case hash"
      #vu8(49 48 53 51 54 50 56 53 53 54 56)
      #vu8(48 45 2 20 104 33 110 119 161 192 23 119 52 30 54 120 46 75 53 10 207 84 251 86 2 21 0 141 172 20 105 207 48 243 73 243 139 55 46 200 121 233 137 225 23 42 234)
      #t
      ())
    #(268
      "special case hash"
      #vu8(57 53 51 57 48 52 49 48 53)
      #vu8(48 45 2 21 0 227 163 149 162 77 92 207 41 116 251 44 7 9 159 0 171 163 182 115 209 2 20 67 125 149 218 53 113 97 31 153 64 192 255 27 59 41 190 94 101 4 14)
      #t
      ())
    #(269
      "special case hash"
      #vu8(57 55 56 56 52 56 48 51 57)
      #vu8(48 44 2 20 14 205 249 153 43 94 187 238 103 112 218 211 174 239 172 234 188 97 6 238 2 20 94 132 159 240 96 121 82 104 43 81 200 136 157 75 29 192 55 31 71 254)
      #t
      ())
    #(270
      "special case hash"
      #vu8(51 54 49 48 54 55 50 52 52 50)
      #vu8(48 44 2 20 23 139 214 10 229 192 47 224 15 5 142 65 116 83 94 98 202 249 171 61 2 20 99 18 66 231 62 245 77 110 68 165 173 183 161 17 158 4 103 181 46 80)
      #t
      ())
    #(271
      "special case hash"
      #vu8(49 48 53 52 50 52 48 55 48 53)
      #vu8(48 44 2 20 117 94 109 166 199 174 191 236 113 105 119 29 112 171 162 101 187 189 148 183 2 20 0 193 146 98 183 203 94 59 230 164 18 142 84 184 239 117 111 60 144 133)
      #t
      ())
    #(272
      "special case hash"
      #vu8(53 49 55 52 52 52 56 49 57 55)
      #vu8(48 44 2 20 126 198 92 23 201 118 253 171 52 228 24 88 227 154 72 218 82 22 142 135 2 20 57 223 70 231 145 36 67 131 126 56 219 210 16 103 159 252 43 229 93 153)
      #t
      ())
    #(273
      "special case hash"
      #vu8(49 57 54 55 53 54 49 50 53 49)
      #vu8(48 45 2 21 0 155 128 47 19 24 191 63 176 9 118 41 120 29 164 38 132 240 133 134 96 2 20 14 131 131 114 24 193 95 44 211 165 195 239 154 171 94 75 24 240 42 68)
      #t
      ())
    #(274
      "special case hash"
      #vu8(51 52 52 55 50 53 51 51 52 51)
      #vu8(48 46 2 21 0 184 254 4 15 69 57 46 204 178 92 78 132 118 146 141 60 34 121 160 168 2 21 0 152 225 68 166 81 158 99 229 119 43 112 121 3 170 152 130 134 94 232 197)
      #t
      ())
    #(275
      "special case hash"
      #vu8(51 54 56 50 54 52 51 49 56)
      #vu8(48 44 2 20 70 89 28 201 153 83 188 149 189 121 29 241 212 152 82 255 77 21 89 51 2 20 113 159 242 15 135 13 198 153 194 11 231 173 208 112 28 110 249 244 124 40)
      #t
      ())
    #(276
      "special case hash"
      #vu8(51 50 54 49 49 57 56 54 48 56)
      #vu8(48 45 2 21 0 154 165 214 1 15 73 1 57 174 214 13 83 142 49 56 30 254 129 125 40 2 20 65 45 77 97 136 83 35 19 242 47 199 167 74 233 191 3 243 148 236 154)
      #t
      ())
    #(277
      "special case hash"
      #vu8(57 54 55 56 55 56 49 48 57 52)
      #vu8(48 45 2 20 47 164 96 83 163 245 154 239 201 27 75 40 106 21 195 18 5 129 43 251 2 21 0 132 83 210 250 218 172 221 126 214 247 183 98 57 21 204 150 164 16 244 106)
      #t
      ())
    #(278
      "special case hash"
      #vu8(52 57 53 56 56 50 51 56 50 51)
      #vu8(48 44 2 20 66 193 219 200 89 9 7 2 179 55 240 99 4 195 40 85 170 3 45 88 2 20 84 235 14 230 222 122 106 117 219 179 22 42 50 13 2 67 55 6 254 90)
      #t
      ())
    #(279
      "special case hash"
      #vu8(56 50 52 54 51 55 56 51 55)
      #vu8(48 45 2 20 126 134 140 93 177 208 136 128 36 166 179 96 244 249 17 50 26 36 225 191 2 21 0 158 117 101 225 88 133 178 150 36 134 213 200 213 86 105 23 93 85 188 35)
      #t
      ())
    #(280
      "special case hash"
      #vu8(49 49 48 50 48 56 51 51 55 55 54)
      #vu8(48 44 2 20 110 79 188 250 143 0 142 174 247 43 248 2 36 87 92 246 224 213 166 195 2 20 30 190 63 7 93 238 120 70 99 236 20 182 135 170 84 56 64 120 184 174)
      #t
      ())
    #(281
      "special case hash"
      #vu8(49 51 51 56 55 49 54 52 56)
      #vu8(48 46 2 21 0 170 124 236 188 140 162 86 153 233 234 75 132 235 104 104 242 31 236 58 120 2 21 0 190 200 106 227 236 129 76 168 227 247 74 157 180 156 120 0 224 150 240 18)
      #t
      ())
    #(282
      "special case hash"
      #vu8(51 50 50 49 52 52 49 54 50)
      #vu8(48 44 2 20 114 82 108 62 173 11 205 247 78 82 124 84 152 207 27 29 247 216 82 78 2 20 11 41 126 212 128 81 20 12 162 174 89 45 160 45 208 62 95 37 173 132)
      #t
      ())
    #(283
      "special case hash"
      #vu8(49 48 54 56 54 54 53 53 53 52 54)
      #vu8(48 45 2 20 70 211 40 143 241 38 117 195 68 231 27 226 144 212 226 215 101 80 15 2 2 21 0 247 254 112 10 12 71 88 218 18 82 167 173 237 20 246 26 167 152 105 79)
      #t
      ())
    #(284
      "special case hash"
      #vu8(54 50 49 53 53 50 52 54)
      #vu8(48 45 2 21 0 241 252 48 218 216 195 34 19 142 67 213 242 183 85 90 123 52 99 149 35 2 20 102 133 127 113 233 119 55 93 222 24 7 84 193 91 212 11 134 242 126 174)
      #t
      ())
    #(285
      "special case hash"
      #vu8(55 48 51 48 56 49 56 55 55 52)
      #vu8(48 44 2 20 117 138 2 170 15 121 255 148 183 181 96 134 248 3 104 128 114 170 37 168 2 20 40 26 90 105 228 87 22 70 51 60 237 184 14 213 101 209 26 48 249 100)
      #t
      ())
    #(286
      "special case hash"
      #vu8(53 57 50 52 53 50 51 55 52 52)
      #vu8(48 44 2 20 38 96 211 121 155 148 43 62 48 11 247 25 127 121 114 77 220 177 206 71 2 20 55 89 178 116 82 255 36 101 160 169 71 169 4 211 129 46 49 64 83 98)
      #t
      ())
    #(287
      "special case hash"
      #vu8(49 52 57 53 53 56 54 54 50 49)
      #vu8(48 45 2 20 104 39 155 231 81 32 35 17 107 65 232 1 67 9 159 88 119 49 217 96 2 21 0 237 1 81 12 60 194 219 149 28 59 126 79 84 187 7 40 166 2 25 246)
      #t
      ())
    #(288
      "special case hash"
      #vu8(52 48 48 53 51 49 52 52 48 54)
      #vu8(48 45 2 21 0 241 65 246 254 94 2 14 76 1 187 221 120 220 50 111 160 210 200 134 11 2 20 55 42 253 241 207 82 78 174 235 98 241 149 218 26 239 86 201 194 120 160)
      #t
      ())
    #(289
      "special case hash"
      #vu8(51 48 57 54 52 53 55 53 49 50)
      #vu8(48 45 2 21 0 145 22 30 197 27 148 247 173 198 73 150 117 196 181 8 166 156 222 39 40 2 20 65 249 9 118 177 223 196 231 213 157 245 65 231 228 57 4 243 240 64 78)
      #t
      ())
    #(290
      "special case hash"
      #vu8(50 55 56 52 48 50 53 54 50 48)
      #vu8(48 45 2 21 0 236 175 170 74 55 118 75 110 49 25 189 6 180 79 150 63 212 219 59 181 2 20 97 48 18 106 114 225 5 112 6 200 101 182 38 185 23 144 252 144 229 55)
      #t
      ())
    #(291
      "special case hash"
      #vu8(50 54 49 56 55 56 55 52 49 56)
      #vu8(48 46 2 21 0 141 114 219 24 164 79 166 96 6 242 50 77 102 171 138 134 252 40 162 75 2 21 0 213 40 109 198 29 68 91 238 167 149 45 48 191 31 50 255 114 91 228 125)
      #t
      ())
    #(292
      "special case hash"
      #vu8(49 54 52 50 54 50 53 50 54 50)
      #vu8(48 45 2 21 0 173 227 58 100 234 142 157 209 186 221 14 32 63 15 19 227 203 61 23 29 2 20 35 222 201 245 138 184 240 1 18 101 35 237 137 177 167 251 73 76 86 119)
      #t
      ())
    #(293
      "special case hash"
      #vu8(54 56 50 52 49 56 57 52 51 54)
      #vu8(48 46 2 21 0 255 75 167 186 69 85 82 230 78 181 109 200 135 45 16 254 208 154 97 218 2 21 0 251 206 38 110 63 52 4 87 211 38 80 207 134 146 248 138 116 202 202 160)
      #t
      ())
    #(294
      "special case hash"
      #vu8(52 56 52 50 52 53 52 50 53)
      #vu8(48 45 2 20 45 123 6 82 244 109 28 190 143 74 79 117 86 203 45 151 244 25 215 34 2 21 0 224 165 113 142 33 142 251 178 32 135 206 163 13 232 164 218 240 26 153 105)
      #t
      ())
    #(295
      "Signature generated without truncating the hash"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 0 132 57 121 210 16 153 189 162 201 247 123 203 63 168 175 225 248 166 35 199 2 20 5 42 9 156 58 171 66 129 184 84 234 103 45 34 179 18 157 225 95 175)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 231 227 173 236 215 68 253 146 135 163 234 157 183 174 244 51 133 94 185 71 193 95 169 227 184 147 240 159 70 197 75 77 32 239 14 205 38 102 135 126)
  :der-encode
  #t
  :tests
  '(#(296
      "k*G has a large x-coordinate"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 172 112 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 104)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 250 25 175 246 29 204 180 152 42 82 12 74 132 66 16 216 130 69 230 67 202 213 201 248 116 50 246 93 201 96 155 80 174 128 218 117 26 134 189 50)
  :der-encode
  #t
  :tests
  '(#(297
      "r,s are large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 24 2 10 53 30 231 134 168 25 243 161 244 245 2 10 53 30 231 134 168 25 243 161 244 244)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 217 106 58 157 163 235 65 136 94 248 230 193 225 213 155 198 88 196 131 205 136 104 66 152 65 44 94 234 169 200 178 13 21 208 220 37 210 50 183 104)
  :der-encode
  #t
  :tests
  '(#(298
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 30 2 5 1 0 0 83 139 2 21 0 185 90 17 12 40 145 205 62 179 74 97 73 155 86 189 170 16 221 204 76)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 13 210 214 206 121 77 240 9 73 53 107 218 76 229 147 59 65 235 228 91 113 167 153 65 51 105 195 81 55 63 24 246 110 229 236 63 8 152 108 145)
  :der-encode
  #t
  :tests
  '(#(299
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 29 2 5 1 0 0 83 139 2 20 70 182 71 13 200 180 58 127 95 225 57 236 149 158 175 166 131 242 143 46)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 116 21 17 34 253 48 29 236 145 57 225 39 125 225 6 56 16 252 249 198 241 121 126 66 51 48 63 114 121 232 191 240 23 70 106 41 99 218 123 83)
  :der-encode
  #t
  :tests
  '(#(300
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 3 2 1 1)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 175 30 232 230 129 181 219 132 121 173 109 44 60 206 27 182 218 140 135 195 66 124 127 141 196 222 5 199 138 15 252 245 65 46 243 67 187 19 126 18)
  :der-encode
  #t
  :tests
  '(#(301
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 3 2 1 3)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 190 189 230 161 81 138 56 188 183 254 207 182 231 13 146 236 93 233 226 252 147 24 22 242 28 210 255 124 115 23 174 204 245 10 153 74 111 180 76 113)
  :der-encode
  #t
  :tests
  '(#(302
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 3 2 1 4)
      #t
      ())
    #(303
      "r is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 161 161 110 2 1 4)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 36 145 167 112 22 14 224 245 196 150 78 62 54 16 21 179 37 231 181 92 175 194 136 111 240 7 20 224 10 30 0 44 101 65 20 28 239 251 162 209)
  :der-encode
  #t
  :tests
  '(#(304
      "s is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 1 3 2 21 1 0 0 0 0 0 0 0 0 0 0 53 30 231 134 168 24 243 180 119 242)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 199 162 118 126 14 226 252 252 251 159 89 86 114 137 119 214 203 151 106 55 17 98 117 39 238 222 157 173 54 248 3 2 193 211 158 87 7 103 65 7)
  :der-encode
  #t
  :tests
  '(#(305
      "small r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 2 1 0 2 20 78 157 58 116 233 211 167 78 157 58 133 57 222 71 150 100 99 1 65 178)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 50 193 77 146 197 187 246 227 68 12 68 40 190 206 1 199 124 76 132 124 60 240 95 46 92 86 230 124 142 88 61 152 43 107 78 244 152 193 207 219)
  :der-encode
  #t
  :tests
  '(#(306
      "smallish r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 31 2 7 45 155 77 52 121 82 204 2 20 107 114 95 221 97 202 211 169 50 249 59 115 232 251 147 157 123 127 152 160)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 113 21 98 156 76 236 110 207 10 150 72 10 142 49 50 108 174 165 104 4 44 113 62 186 174 214 246 154 21 239 30 181 167 159 56 190 70 129 4 183)
  :der-encode
  #t
  :tests
  '(#(307
      "100-bit r and small s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 13 16 51 230 126 55 179 43 68 85 128 191 78 252 2 21 0 218 37 218 37 218 37 218 37 218 38 7 106 6 10 39 165 178 184 140 138)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 169 48 157 42 160 82 14 130 3 156 172 148 78 198 236 223 47 131 8 137 66 145 239 224 239 175 41 217 94 4 27 26 66 58 59 79 77 48 197 7)
  :der-encode
  #t
  :tests
  '(#(308
      "small r and 100 bit s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 26 2 2 1 0 2 20 60 197 153 13 106 208 103 146 84 178 5 182 33 13 193 32 76 56 46 146)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 213 0 239 92 85 230 223 103 220 217 65 218 212 225 56 236 181 255 116 85 125 35 159 200 217 211 218 43 121 158 214 197 31 47 84 47 101 14 174 204)
  :der-encode
  #t
  :tests
  '(#(309
      "100-bit r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 13 6 37 34 187 211 236 190 124 57 233 62 124 36 2 20 60 197 153 13 106 208 103 146 84 178 5 182 33 13 193 32 76 56 46 146)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 194 172 153 215 245 2 140 148 246 81 54 23 83 65 213 54 108 59 203 23 51 42 180 10 13 231 82 233 201 80 145 56 243 126 188 87 97 119 105 119)
  :der-encode
  #t
  :tests
  '(#(310
      "r and s^-1 are close to n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 35 2 10 53 30 231 134 168 25 243 161 244 122 2 21 0 170 170 170 170 170 170 170 170 170 170 206 20 154 89 197 101 247 193 22 71)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 40 5 251 245 53 40 150 226 250 77 12 224 74 30 70 161 224 165 73 88 125 20 253 216 87 146 188 226 89 46 198 227 173 250 177 35 42 30 30 235)
  :der-encode
  #t
  :tests
  '(#(311
      "s == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 25 2 20 85 85 85 85 85 85 85 85 85 85 103 10 77 44 226 178 251 224 139 35 2 1 1)
      #t
      ())
    #(312
      "s == 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 25 2 20 85 85 85 85 85 85 85 85 85 85 103 10 77 44 226 178 251 224 139 35 2 1 0)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 160 42 116 67 253 209 92 128 126 244 92 233 122 53 177 29 29 14 188 183 178 36 185 127 109 218 245 40 213 119 44 14 39 100 44 68 236 121 202 130)
  :der-encode
  #t
  :tests
  '(#(313
      "point at infinity during verify"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 0 128 0 0 0 0 0 0 0 0 0 26 143 115 195 84 12 121 208 208 181 2 20 85 85 85 85 85 85 85 85 85 85 103 10 77 44 226 178 251 224 139 35)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 198 97 51 105 254 20 29 239 100 150 117 108 76 181 35 92 226 220 4 58 49 244 203 201 208 46 84 67 63 160 119 43 174 38 203 210 55 121 187 30)
  :der-encode
  #t
  :tests
  '(#(314
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 128 0 0 0 0 0 0 0 0 0 26 143 115 195 84 12 121 208 208 183 2 21 0 128 0 0 0 0 0 0 0 0 0 26 143 115 195 84 12 121 208 208 181)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 118 234 157 245 178 151 230 25 164 159 143 2 134 250 138 174 115 236 206 107 4 2 80 205 31 151 127 28 103 144 234 196 151 4 233 163 163 197 130 2)
  :der-encode
  #t
  :tests
  '(#(315
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 128 0 0 0 0 0 0 0 0 0 26 143 115 195 84 12 121 208 208 183 2 21 0 128 0 0 0 0 0 0 0 0 0 26 143 115 195 84 12 121 208 208 182)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 114 214 86 26 89 134 3 183 185 49 49 86 170 197 91 65 170 130 92 199 243 64 238 116 146 187 136 75 171 87 145 114 110 127 186 71 142 56 40 25)
  :der-encode
  #t
  :tests
  '(#(316
      "u1 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 20 85 85 85 85 85 85 85 85 85 85 103 10 77 44 226 178 251 224 139 35 2 21 1 118 180 165 232 95 57 36 195 218 134 195 235 40 69 67 198 0 109 207 134)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 109 105 117 116 167 145 81 188 83 186 2 76 22 179 127 230 184 119 120 246 133 2 113 222 235 118 38 40 49 55 130 40 236 66 117 174 243 226 20 51)
  :der-encode
  #t
  :tests
  '(#(317
      "u1 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 20 85 85 85 85 85 85 85 85 85 85 103 10 77 44 226 178 251 224 139 35 2 21 0 137 75 90 23 160 198 219 60 37 121 166 82 166 200 12 107 230 213 115 80)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 48 12 192 164 12 96 147 98 243 242 11 124 142 87 168 249 158 89 36 54 146 163 147 193 189 60 210 121 44 164 91 139 213 110 79 113 134 129 122 84)
  :der-encode
  #t
  :tests
  '(#(318
      "u2 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 85 85 85 85 85 85 85 85 85 85 103 10 77 44 226 178 251 224 139 35 2 20 85 85 85 85 85 85 85 85 85 85 103 10 77 44 226 178 251 224 139 35)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 59 119 172 234 33 218 77 121 64 254 76 125 192 243 239 228 118 243 109 251 251 197 29 197 185 219 11 167 238 183 89 120 105 53 205 229 207 75 6 24)
  :der-encode
  #t
  :tests
  '(#(319
      "u2 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 20 85 85 85 85 85 85 85 85 85 85 103 10 77 44 226 178 251 224 139 35 2 21 0 170 170 170 170 170 170 170 170 170 170 206 20 154 89 197 101 247 193 22 72)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 220 252 148 154 42 43 213 163 154 143 72 176 222 112 10 176 141 213 147 146 117 106 35 221 94 162 239 18 20 92 0 50 103 40 74 91 103 90 8 38)
  :der-encode
  #t
  :tests
  '(#(320
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 20 124 230 225 248 31 189 182 235 243 130 65 78 98 193 193 66 0 36 154 130)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 195 107 245 248 207 129 55 68 219 105 202 242 39 232 194 36 235 6 202 3 251 65 135 129 130 73 209 177 76 20 133 216 211 180 200 117 97 56 200 155)
  :der-encode
  #t
  :tests
  '(#(321
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 20 74 178 64 70 155 80 84 146 117 226 224 31 129 200 114 139 81 165 54 40)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 53 93 221 119 150 194 71 131 201 181 82 100 190 17 86 239 95 118 197 104 51 49 38 208 225 157 102 134 133 69 201 27 25 58 51 1 131 149 166 120)
  :der-encode
  #t
  :tests
  '(#(322
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 21 0 161 77 119 231 59 233 212 47 63 78 236 30 42 236 31 73 136 50 123 173)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 45 242 50 66 34 194 163 78 25 136 170 76 234 68 34 93 81 55 174 157 92 0 51 183 21 177 97 75 147 117 247 173 223 140 45 10 44 27 159 184)
  :der-encode
  #t
  :tests
  '(#(323
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 20 87 220 140 223 223 176 226 16 137 75 108 82 229 63 241 9 7 199 25 98)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 206 112 84 68 160 55 121 191 205 239 137 214 126 192 150 9 142 214 60 234 197 217 165 140 224 56 178 251 197 236 19 54 138 64 89 13 57 193 173 225)
  :der-encode
  #t
  :tests
  '(#(324
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 21 0 200 205 253 251 14 33 8 148 181 161 163 183 81 7 255 139 83 131 55 193)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 17 227 183 147 122 229 27 122 65 149 41 207 149 92 231 222 51 195 143 32 130 209 110 179 242 122 178 248 128 136 77 147 223 208 157 111 48 13 165 29)
  :der-encode
  #t
  :tests
  '(#(325
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 21 0 145 155 251 246 28 66 17 41 107 67 18 79 186 137 86 253 179 100 206 23)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 137 74 41 68 74 112 160 235 94 212 106 53 53 18 253 34 7 4 139 12 248 231 10 111 182 203 104 22 192 7 208 12 40 110 67 195 245 144 33 47)
  :der-encode
  #t
  :tests
  '(#(326
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 21 0 223 176 226 16 137 75 90 23 160 199 9 166 197 79 185 167 76 249 223 203)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 106 195 169 1 80 110 239 192 59 238 161 194 130 203 102 150 50 110 72 219 201 96 78 217 186 34 130 239 241 65 47 55 128 108 16 236 255 232 174 254)
  :der-encode
  #t
  :tests
  '(#(327
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 21 0 137 93 57 0 144 4 188 19 183 191 245 30 88 172 210 64 102 162 227 125)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 228 79 4 199 248 168 62 58 207 233 56 67 75 255 254 143 231 54 99 239 204 37 139 210 208 115 183 169 194 139 121 24 135 71 110 174 46 36 158 88)
  :der-encode
  #t
  :tests
  '(#(328
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 21 0 218 135 137 2 92 224 175 134 3 191 135 237 201 230 33 81 243 150 166 68)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 112 91 58 69 108 182 227 108 245 219 238 66 110 6 101 177 47 53 69 44 62 33 247 107 186 68 231 151 248 110 227 22 8 11 2 137 121 22 57 53)
  :der-encode
  #t
  :tests
  '(#(329
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 21 0 131 25 30 7 224 66 73 20 12 125 243 208 132 196 230 214 243 125 6 233)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 22 2 225 168 24 95 131 168 66 239 126 172 15 167 44 17 161 3 58 146 137 48 249 186 205 57 143 135 70 43 224 219 227 140 109 195 100 38 168 177)
  :der-encode
  #t
  :tests
  '(#(330
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 20 68 165 173 11 208 99 109 158 18 188 211 41 83 100 6 53 243 106 185 168)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 91 82 161 8 198 2 203 17 123 239 190 252 174 244 105 176 163 147 37 140 161 82 50 210 167 210 33 96 242 23 183 202 241 65 11 102 217 151 138 189)
  :der-encode
  #t
  :tests
  '(#(331
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 21 0 208 166 187 243 157 244 234 23 159 167 144 158 137 57 99 177 61 234 14 140)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 64 255 119 43 126 56 204 253 1 188 123 169 73 56 137 14 28 224 150 120 149 127 243 221 12 102 255 213 242 12 25 121 171 142 247 66 133 197 68 224)
  :der-encode
  #t
  :tests
  '(#(332
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 21 0 170 170 170 170 170 170 170 170 170 170 188 95 162 130 56 8 81 53 224 120)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 76 65 96 195 63 217 187 86 118 40 33 141 2 51 220 138 155 34 11 99 77 143 184 141 226 25 163 245 57 160 238 215 162 95 131 227 163 57 192 141)
  :der-encode
  #t
  :tests
  '(#(333
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 20 107 74 170 98 229 119 51 137 135 130 194 252 92 39 134 190 214 89 182 68)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 134 5 123 95 28 10 195 104 47 55 85 23 24 77 157 9 142 151 200 112 83 45 7 252 230 3 29 168 201 35 133 39 154 141 69 149 92 7 183 49)
  :der-encode
  #t
  :tests
  '(#(334
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 20 88 249 21 148 92 184 249 44 51 185 26 105 248 239 183 143 234 105 84 85)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 104 219 96 201 81 64 227 253 142 235 206 64 10 128 102 34 18 43 28 231 136 124 6 85 160 195 175 148 177 40 190 5 101 97 68 74 150 193 211 102)
  :der-encode
  #t
  :tests
  '(#(335
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 20 86 48 22 75 140 93 118 54 0 0 17 226 92 50 250 203 152 202 198 252)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 122 158 255 192 25 203 83 10 169 34 82 49 219 188 37 84 88 23 224 108 218 158 48 31 221 195 119 148 249 137 84 155 246 53 8 167 49 213 7 84)
  :der-encode
  #t
  :tests
  '(#(336
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 20 1 100 184 197 215 99 96 0 0 0 0 74 5 81 59 36 76 199 60 159)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 233 102 109 221 79 150 123 190 9 143 107 142 78 228 49 82 36 31 15 68 169 6 102 107 218 175 200 151 231 161 69 174 182 240 142 168 138 209 25 166)
  :der-encode
  #t
  :tests
  '(#(337
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 20 2 201 113 139 174 198 192 0 0 0 0 148 10 162 118 72 153 142 121 62)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 229 71 102 77 32 95 159 255 114 30 81 80 49 178 204 43 60 145 207 22 107 6 138 18 58 224 17 96 96 128 64 103 84 34 172 228 70 47 249 158)
  :der-encode
  #t
  :tests
  '(#(338
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 21 0 140 93 118 54 0 0 0 0 0 0 29 32 75 95 104 52 133 182 131 167)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 45 82 132 222 56 235 47 228 154 90 47 151 46 200 101 1 95 80 214 76 84 219 2 242 153 49 95 82 107 90 58 108 29 199 167 244 207 63 205 29)
  :der-encode
  #t
  :tests
  '(#(339
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 20 97 134 24 97 134 24 97 134 24 97 155 152 179 11 214 83 62 10 144 147)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 92 39 1 86 88 79 177 208 247 170 202 254 59 134 16 169 93 227 206 90 140 37 2 89 0 222 83 84 240 74 174 107 119 210 83 246 89 177 119 10)
  :der-encode
  #t
  :tests
  '(#(340
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 35 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 10 5 79 227 243 221 156 24 92 246 139)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 51 191 218 209 2 214 12 82 173 220 227 128 42 188 203 199 220 60 121 86 219 74 177 95 198 8 255 56 97 33 2 43 207 44 62 160 109 56 123 66)
  :der-encode
  #t
  :tests
  '(#(341
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 20 85 85 85 85 85 85 85 85 85 85 120 191 69 4 112 16 162 107 192 243)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 10 1 255 201 99 143 135 52 85 154 178 55 29 196 180 49 169 35 131 4 9 37 227 190 79 126 80 7 178 206 214 230 218 195 169 202 192 44 86 106)
  :der-encode
  #t
  :tests
  '(#(342
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 35 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 10 26 143 115 195 84 12 121 208 208 183)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 224 196 7 205 141 139 53 7 227 108 10 168 225 91 79 23 249 224 125 114 102 121 70 244 109 108 97 139 98 140 4 139 63 200 8 178 196 14 49 163)
  :der-encode
  #t
  :tests
  '(#(343
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 46 2 21 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 2 21 0 172 124 138 202 46 92 124 150 25 220 167 196 112 59 47 212 111 5 122 224)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 116 208 43 189 34 24 187 78 169 73 45 245 171 89 108 220 119 216 31 150 189 212 165 216 22 171 16 7 107 102 148 73 38 8 184 88 81 112 74 48)
  :der-encode
  #t
  :tests
  '(#(344
      "point duplication during verification"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 0 226 120 180 118 177 47 13 254 117 225 97 96 99 171 112 244 14 122 123 47 2 20 113 193 151 228 75 104 75 59 143 151 35 103 202 237 56 180 12 158 228 203)
      #t
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 116 208 43 189 34 24 187 78 169 73 45 245 171 89 108 220 119 216 31 150 66 43 90 39 233 84 239 248 148 153 107 182 217 247 71 166 174 143 98 67)
  :der-encode
  #t
  :tests
  '(#(345
      "duplication bug"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 0 226 120 180 118 177 47 13 254 117 225 97 96 99 171 112 244 14 122 123 47 2 20 113 193 151 228 75 104 75 59 143 151 35 103 202 237 56 180 12 158 228 203)
      #f
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 177 38 230 31 178 76 153 50 161 44 80 161 72 68 136 118 119 39 107 202 212 113 11 132 239 52 168 178 142 41 1 121 232 100 171 53 12 118 23 133)
  :der-encode
  #t
  :tests
  '(#(346
      "point with x-coordinate 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 25 2 1 1 2 20 85 85 85 85 85 85 85 85 85 85 103 10 77 44 226 178 251 224 139 35)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 135 27 83 75 37 213 115 143 68 193 148 60 139 99 76 203 116 68 241 209 181 129 204 174 21 29 129 147 1 4 127 4 66 203 182 117 107 64 248 44)
  :der-encode
  #t
  :tests
  '(#(347
      "point with x-coordinate 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 20 51 51 51 51 51 51 51 51 51 51 61 210 251 26 238 107 99 237 32 72)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 224 200 35 138 90 184 159 25 42 1 144 130 27 149 137 134 16 61 9 102 189 100 186 247 226 65 114 18 217 155 74 137 146 100 225 34 219 103 233 155)
  :der-encode
  #t
  :tests
  '(#(348
      "comparison with point at infinity "
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 85 85 85 85 85 85 85 85 85 85 103 10 77 44 226 178 251 224 139 35 2 20 51 51 51 51 51 51 51 51 51 51 61 210 251 26 238 107 99 237 32 72)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 173 69 119 247 243 0 138 165 235 190 20 149 9 173 61 228 183 186 194 112 159 26 107 164 129 73 189 226 126 191 58 143 171 75 132 131 103 107 76 149)
  :der-encode
  #t
  :tests
  '(#(349
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 38 120 141 43 164 26 3 89 84 221 99 141 136 62 19 106 185 0 200 205 2 20 85 85 85 85 85 85 85 85 85 85 103 10 77 44 226 178 251 224 139 35)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 185 108 150 63 108 76 134 119 240 218 118 151 114 223 87 108 86 135 107 11 253 147 188 156 246 246 64 227 99 66 199 100 173 156 229 232 250 134 195 227)
  :der-encode
  #t
  :tests
  '(#(350
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 20 38 120 141 43 164 26 3 89 84 221 99 141 136 62 19 106 185 0 200 205 2 21 0 146 73 36 146 73 36 146 73 36 146 103 127 95 186 169 50 212 92 92 61)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 135 121 217 212 4 112 223 156 75 108 83 194 115 48 160 240 199 72 192 31 171 229 193 97 130 137 159 227 215 2 238 137 187 20 165 26 168 255 108 199)
  :der-encode
  #t
  :tests
  '(#(351
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 38 120 141 43 164 26 3 89 84 221 99 141 136 62 19 106 185 0 200 205 2 20 102 102 102 102 102 102 102 102 102 102 123 165 246 53 220 214 199 218 64 145)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 13 112 208 16 24 245 94 54 70 71 130 51 156 44 143 74 27 150 55 56 52 209 36 2 141 119 238 49 254 42 62 44 16 194 164 247 165 250 13 222)
  :der-encode
  #t
  :tests
  '(#(352
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 20 38 120 141 43 164 26 3 89 84 221 99 141 136 62 19 106 185 0 200 205 2 21 0 153 153 153 153 153 153 153 153 153 153 185 120 241 80 203 66 43 199 96 218)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 167 175 217 48 189 159 147 146 72 50 69 204 214 40 190 66 142 15 101 85 54 201 69 254 229 5 197 254 133 81 135 238 114 84 2 153 92 176 231 1)
  :der-encode
  #t
  :tests
  '(#(353
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 38 120 141 43 164 26 3 89 84 221 99 141 136 62 19 106 185 0 200 205 2 20 109 182 219 109 182 219 109 182 219 109 205 159 135 203 254 230 31 69 69 46)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 69 251 147 100 113 221 243 80 89 197 113 247 148 183 253 111 35 247 82 255 63 169 96 63 140 90 55 13 166 143 63 129 40 2 240 218 93 33 175 116)
  :der-encode
  #t
  :tests
  '(#(354
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 38 120 141 43 164 26 3 89 84 221 99 141 136 62 19 106 185 0 200 205 2 20 14 176 241 188 158 175 106 216 91 45 148 229 225 181 57 55 223 97 162 136)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 73 208 6 76 165 81 193 95 172 63 19 249 204 68 168 48 156 49 231 33 61 64 63 59 238 156 234 162 67 228 146 203 154 143 131 233 44 60 17 182)
  :der-encode
  #t
  :tests
  '(#(355
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 82 220 176 52 41 58 17 126 31 79 241 27 48 247 25 157 49 68 206 109 2 20 85 85 85 85 85 85 85 85 85 85 103 10 77 44 226 178 251 224 139 35)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 176 143 218 59 181 155 66 110 55 76 62 211 167 238 193 116 55 153 4 173 114 254 185 252 57 34 20 7 133 158 179 12 26 17 102 170 171 207 92 21)
  :der-encode
  #t
  :tests
  '(#(356
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 20 82 220 176 52 41 58 17 126 31 79 241 27 48 247 25 157 49 68 206 109 2 21 0 146 73 36 146 73 36 146 73 36 146 103 127 95 186 169 50 212 92 92 61)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 73 26 145 11 117 245 122 76 252 47 167 200 120 192 162 58 114 89 82 213 174 235 25 224 171 168 132 218 76 214 69 116 231 133 171 147 35 208 246 129)
  :der-encode
  #t
  :tests
  '(#(357
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 82 220 176 52 41 58 17 126 31 79 241 27 48 247 25 157 49 68 206 109 2 20 102 102 102 102 102 102 102 102 102 102 123 165 246 53 220 214 199 218 64 145)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 215 241 197 215 160 62 210 14 120 110 133 110 102 97 132 242 202 84 26 172 158 236 105 180 104 236 184 127 171 76 173 227 133 210 189 159 215 98 48 143)
  :der-encode
  #t
  :tests
  '(#(358
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 20 82 220 176 52 41 58 17 126 31 79 241 27 48 247 25 157 49 68 206 109 2 21 0 153 153 153 153 153 153 153 153 153 153 185 120 241 80 203 66 43 199 96 218)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 153 112 74 139 84 60 158 224 106 145 59 148 118 214 225 183 65 226 131 104 223 140 183 23 67 239 153 3 35 29 207 234 220 172 180 230 64 25 35 151)
  :der-encode
  #t
  :tests
  '(#(359
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 82 220 176 52 41 58 17 126 31 79 241 27 48 247 25 157 49 68 206 109 2 20 109 182 219 109 182 219 109 182 219 109 205 159 135 203 254 230 31 69 69 46)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 58 129 163 175 168 24 230 81 27 174 213 200 213 44 97 114 35 205 54 8 243 241 58 140 48 191 244 203 251 173 93 7 137 248 225 43 206 153 91 67)
  :der-encode
  #t
  :tests
  '(#(360
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 20 82 220 176 52 41 58 17 126 31 79 241 27 48 247 25 157 49 68 206 109 2 20 14 176 241 188 158 175 106 216 91 45 148 229 225 181 57 55 223 97 162 136)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 82 220 176 52 41 58 17 126 31 79 241 27 48 247 25 157 49 68 206 109 254 175 254 242 227 49 242 150 224 113 250 13 249 152 44 254 167 212 63 46)
  :der-encode
  #t
  :tests
  '(#(361
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 1 118 180 165 232 95 57 36 195 218 134 195 235 40 69 67 198 0 109 207 134 2 20 36 146 73 36 146 73 36 146 73 36 153 223 215 238 170 76 181 23 23 15)
      #f
      ())
    #(362
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 0 137 75 90 23 160 198 219 60 37 121 166 82 166 200 12 107 230 213 115 80 2 20 36 146 73 36 146 73 36 146 73 36 153 223 215 238 170 76 181 23 23 15)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 82 220 176 52 41 58 17 126 31 79 241 27 48 247 25 157 49 68 206 109 1 80 1 13 28 206 13 105 31 142 5 242 6 103 211 0 88 43 109 69)
  :der-encode
  #t
  :tests
  '(#(363
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 1 118 180 165 232 95 57 36 195 218 134 195 235 40 69 67 198 0 109 207 134 2 20 36 146 73 36 146 73 36 146 73 36 153 223 215 238 170 76 181 23 23 15)
      #f
      ())
    #(364
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 21 0 137 75 90 23 160 198 219 60 37 121 166 82 166 200 12 107 230 213 115 80 2 20 36 146 73 36 146 73 36 146 73 36 153 223 215 238 170 76 181 23 23 15)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp160r2_sha256_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA-256"
  :public-key
  #vu8(48 62 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 30 3 42 0 4 70 241 167 73 59 19 31 60 96 50 233 97 43 142 27 211 209 163 16 76 227 206 243 200 2 12 39 123 164 91 201 58 154 54 79 7 235 168 48 44)
  :der-encode
  #t
  :tests
  '(#(365
      "pseudorandom signature"
      #vu8()
      #vu8(48 45 2 20 43 94 186 244 33 17 88 198 135 98 89 34 189 144 50 83 137 44 248 52 2 21 0 174 211 105 20 105 14 13 153 99 123 146 67 149 57 161 59 216 230 216 0)
      #t
      ())
    #(366
      "pseudorandom signature"
      #vu8(77 115 103)
      #vu8(48 44 2 20 109 134 36 191 247 113 155 83 218 184 17 189 192 228 52 165 233 240 46 141 2 20 11 80 230 220 224 245 193 167 87 41 14 237 141 240 170 128 146 178 255 144)
      #t
      ())
    #(367
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(48 45 2 20 32 57 241 104 163 161 249 240 163 237 79 17 190 157 93 10 152 7 235 140 2 21 0 202 24 194 235 214 191 240 206 70 220 222 253 22 171 69 95 179 99 145 210)
      #t
      ())
    #(368
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(48 45 2 20 79 113 161 35 191 124 73 131 245 112 124 23 206 71 130 200 51 232 51 240 2 21 0 220 251 18 60 245 71 15 33 55 94 98 186 64 84 255 217 168 54 144 140)
      #t
      ())))
