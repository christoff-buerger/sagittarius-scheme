(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 184 56 255 68 229 188 23 123 242 17 137 208 118 96 130 252 157 132 50 38 136 127 201 118 3 113 16 11 126 226 10 111 240 201 215 91 251 167 179 26 107 202 25 116 73 110 235 86 222 53 112 113 149 93 131 196 177 186 218 160 178 24 50 233)
  :der-encode
  #t
  :tests
  '(#(1
      "signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 32 89 241 0 167 228 167 116 207 143 4 87 126 189 154 185 171 47 9 207 197 166 190 16 255 208 51 133 36 230 194 108 170)
      #t
      ())
    #(2
      "Legacy:ASN encoding of s misses leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 32 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #t
      ("MissingZero"))
    #(3
      "valid"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #t
      ())
    #(4
      "long form encoding of length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ("BER"))
    #(5
      "length of sequence contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 130 0 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ("BER"))
    #(6
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(7
      "wrong length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(8
      "uint32 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 1 0 0 0 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(9
      "uint64 overflow in length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 137 1 0 0 0 0 0 0 0 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(10
      "length of sequence = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 127 255 255 255 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(11
      "length of sequence = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 132 255 255 255 255 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(12
      "length of sequence = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 133 255 255 255 255 255 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(13
      "length of sequence = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 136 255 255 255 255 255 255 255 255 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(14
      "incorrect length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 255 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(15
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(16
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 128 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(17
      "indefinite length without termination"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 128 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(18
      "removing sequence"
      #vu8(49 50 51 52 48 48)
      #vu8()
      #f
      ())
    #(19
      "lonely sequence tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48)
      #f
      ())
    #(20
      "appending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 0 0)
      #f
      ())
    #(21
      "prepending 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 0 0 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(22
      "appending unused 0's to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 0 0)
      #f
      ())
    #(23
      "appending null value to sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 5 0)
      #f
      ())
    #(24
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 73 129 119 48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(25
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 37 0 48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(26
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 0 4 222 173 190 239)
      #f
      ())
    #(27
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 34 37 73 129 119 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(28
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 34 36 37 0 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(29
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 34 34 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 0 4 222 173 190 239 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(30
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 34 38 73 129 119 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(31
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 34 37 37 0 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(32
      "including garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 34 35 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 0 4 222 173 190 239)
      #f
      ())
    #(33
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 170 0 187 0 205 0 48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(34
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 75 170 2 170 187 48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(35
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 34 40 170 0 187 0 205 0 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(36
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 75 34 38 170 2 170 187 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(37
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 34 41 170 0 187 0 205 0 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(38
      "including undefined tags"
      #vu8(49 50 51 52 48 48)
      #vu8(48 75 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 34 39 170 2 170 187 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(39
      "truncated length of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 129)
      #f
      ())
    #(40
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 0 0)
      #f
      ())
    #(41
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 34 128 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 0 0 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(42
      "using composition with indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 34 128 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 0 0)
      #f
      ())
    #(43
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 49 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 0 0)
      #f
      ())
    #(44
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 34 128 3 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 0 0 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(45
      "using composition with wrong tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 34 128 3 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 0 0)
      #f
      ())
    #(46
      "Replacing sequence with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(5 0)
      #f
      ())
    #(47
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(46 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(48
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(47 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(49
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(49 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(50
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(50 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(51
      "changing tag value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(255 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(52
      "dropping value of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 0)
      #f
      ())
    #(53
      "using composition for sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 48 1 2 48 68 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(54
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212)
      #f
      ())
    #(55
      "truncated sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(56
      "indefinite length"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 0 0)
      #f
      ("BER"))
    #(57
      "indefinite length with truncated delimiter"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 0)
      #f
      ())
    #(58
      "indefinite length with additional element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 5 0 0 0)
      #f
      ())
    #(59
      "indefinite length with truncated element"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 6 8 17 34 0 0)
      #f
      ())
    #(60
      "indefinite length with garbage"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 0 0 254 2 190 239)
      #f
      ())
    #(61
      "indefinite length with nonempty EOC"
      #vu8(49 50 51 52 48 48)
      #vu8(48 128 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 0 2 190 239)
      #f
      ())
    #(62
      "prepend empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 48 0 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(63
      "append empty sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 48 0)
      #f
      ())
    #(64
      "append garbage with high tag number"
      #vu8(49 50 51 52 48 48)
      #vu8(48 72 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 191 127 0)
      #f
      ())
    #(65
      "sequence of sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(66
      "truncated sequence: removed last 1 elements"
      #vu8(49 50 51 52 48 48)
      #vu8(48 34 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230)
      #f
      ())
    #(67
      "repeating element in sequence"
      #vu8(49 50 51 52 48 48)
      #vu8(48 104 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(68
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 129 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ("BER"))
    #(69
      "long form encoding of length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 129 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ("BER"))
    #(70
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 130 0 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ("BER"))
    #(71
      "length of integer contains leading 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 130 0 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ("BER"))
    #(72
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(73
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 31 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(74
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 34 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(75
      "wrong length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 32 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(76
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 133 1 0 0 0 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(77
      "uint32 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 133 1 0 0 0 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(78
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 78 2 137 1 0 0 0 0 0 0 0 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(79
      "uint64 overflow in length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 78 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 137 1 0 0 0 0 0 0 0 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(80
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 132 127 255 255 255 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(81
      "length of integer = 2**31 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 132 127 255 255 255 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(82
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 132 255 255 255 255 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(83
      "length of integer = 2**32 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 132 255 255 255 255 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(84
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 133 255 255 255 255 255 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(85
      "length of integer = 2**40 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 74 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 133 255 255 255 255 255 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(86
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 2 136 255 255 255 255 255 255 255 255 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(87
      "length of integer = 2**64 - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 77 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 136 255 255 255 255 255 255 255 255 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(88
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 255 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(89
      "incorrect length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 255 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(90
      "removing integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 35 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(91
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(92
      "lonely integer tag"
      #vu8(49 50 51 52 48 48)
      #vu8(48 35 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2)
      #f
      ())
    #(93
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 34 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 0 0 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(94
      "appending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 35 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 0 0)
      #f
      ())
    #(95
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 34 0 0 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ("BER"))
    #(96
      "prepending 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 35 0 0 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ("BER"))
    #(97
      "appending unused 0's to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 0 0 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(98
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 34 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 5 0 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(99
      "appending null value to integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 71 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 35 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151 5 0)
      #f
      ())
    #(100
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 129 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(101
      "truncated length of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 129)
      #f
      ())
    #(102
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 5 0 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(103
      "Replacing integer with NULL"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 5 0)
      #f
      ())
    #(104
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 0 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(105
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 1 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(106
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 3 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(107
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 4 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(108
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 255 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(109
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 0 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(110
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 1 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(111
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 3 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(112
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 4 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(113
      "changing tag value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 255 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(114
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 0 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(115
      "dropping value of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 36 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 0)
      #f
      ())
    #(116
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 34 36 2 1 125 2 31 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(117
      "using composition for integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 73 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 34 37 2 1 0 2 32 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(118
      "modify first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(119
      "modify first byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 2 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(120
      "modify last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 102 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(121
      "modify last byte of integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 23)
      #f
      ())
    #(122
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 31 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(123
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 31 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(124
      "truncated integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 32 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212)
      #f
      ())
    #(125
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 255 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(126
      "leading ff in integer"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 34 255 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(127
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 9 1 128 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(128
      "replaced integer by infinity"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 9 1 128)
      #f
      ())
    #(129
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(130
      "replacing integer with zero"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 1 0)
      #f
      ())
    #(131
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 1 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 165 195 169 55 16 173 58 156 17 55 25 139 90 31 104 237 39 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(132
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 255 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 168 78 75 125 67 78 169 91 153 183 116 206 64 126 252 106 165 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(133
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 130 151 138 133 62 104 157 181 26 56 130 5 228 196 34 88 247 5 165 214 2 14 4 42 136 184 211 50 176 205 84 26 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(134
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 130 151 138 133 62 104 157 181 26 56 130 5 228 196 34 87 177 180 130 188 177 86 164 102 72 139 49 191 129 3 149 91 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(135
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 254 130 151 138 133 62 104 157 181 26 56 130 5 228 196 34 90 60 86 200 239 82 197 99 238 200 230 116 165 224 151 18 217 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(136
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 1 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(137
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 130 151 138 133 62 104 157 181 26 56 130 5 228 196 34 88 247 5 165 214 2 14 4 42 136 184 211 50 176 205 84 26 2 33 0 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(138
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 1 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 82 70 83 234 7 183 211 47 119 175 113 55 244 185 170 21 216)
      #f
      ())
    #(139
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 32 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 84 208 246 48 58 89 65 239 0 47 204 122 219 25 61 147 86)
      #f
      ())
    #(140
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 255 89 241 0 167 228 167 116 207 143 4 87 126 189 154 185 172 116 90 242 222 247 117 112 196 16 97 38 152 22 140 43 105)
      #f
      ())
    #(141
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 254 89 241 0 167 228 167 116 207 143 4 87 126 189 154 185 173 185 172 21 248 72 44 208 136 80 142 200 11 70 85 234 40)
      #f
      ())
    #(142
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 33 1 166 14 255 88 27 88 139 48 112 251 168 129 66 101 70 83 139 165 13 33 8 138 143 59 239 158 217 103 233 115 212 151)
      #f
      ())
    #(143
      "Modified r or s, e.g. by adding or subtracting the order of the group"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 125 104 117 122 193 151 98 74 229 199 125 250 27 59 221 167 8 250 90 41 253 241 251 213 119 71 44 205 79 50 171 230 2 32 89 241 0 167 228 167 116 207 143 4 87 126 189 154 185 172 116 90 242 222 247 117 112 196 16 97 38 152 22 140 43 105)
      #f
      ())
    #(144
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 0)
      #f
      ("EdgeCase"))
    #(145
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 1)
      #f
      ("EdgeCase"))
    #(146
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 2 1 255)
      #f
      ("EdgeCase"))
    #(147
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(148
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(149
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(150
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(151
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 0 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(152
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 0 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(153
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 0 9 1 66)
      #f
      ("EdgeCase"))
    #(154
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 0)
      #f
      ("EdgeCase"))
    #(155
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 1)
      #f
      ("EdgeCase"))
    #(156
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 255)
      #f
      ("EdgeCase"))
    #(157
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(158
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(159
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(160
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(161
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(162
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(163
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 9 1 66)
      #f
      ("EdgeCase"))
    #(164
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 0)
      #f
      ("EdgeCase"))
    #(165
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 1)
      #f
      ("EdgeCase"))
    #(166
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 2 1 255)
      #f
      ("EdgeCase"))
    #(167
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(168
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(169
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(170
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(171
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 255 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(172
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 255 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(173
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 255 9 1 66)
      #f
      ("EdgeCase"))
    #(174
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 2 1 0)
      #f
      ("EdgeCase"))
    #(175
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 2 1 1)
      #f
      ("EdgeCase"))
    #(176
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 2 1 255)
      #f
      ("EdgeCase"))
    #(177
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(178
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(179
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(180
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(181
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(182
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(183
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65 9 1 66)
      #f
      ("EdgeCase"))
    #(184
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 2 1 0)
      #f
      ("EdgeCase"))
    #(185
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 2 1 1)
      #f
      ("EdgeCase"))
    #(186
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 2 1 255)
      #f
      ("EdgeCase"))
    #(187
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(188
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(189
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(190
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(191
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(192
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(193
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64 9 1 66)
      #f
      ("EdgeCase"))
    #(194
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 2 1 0)
      #f
      ("EdgeCase"))
    #(195
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 2 1 1)
      #f
      ("EdgeCase"))
    #(196
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 2 1 255)
      #f
      ("EdgeCase"))
    #(197
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(198
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(199
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(200
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(201
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(202
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(203
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 9 1 66)
      #f
      ("EdgeCase"))
    #(204
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 2 1 0)
      #f
      ("EdgeCase"))
    #(205
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 2 1 1)
      #f
      ("EdgeCase"))
    #(206
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 2 1 255)
      #f
      ("EdgeCase"))
    #(207
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(208
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(209
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(210
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(211
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(212
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(213
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47 9 1 66)
      #f
      ("EdgeCase"))
    #(214
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 2 1 0)
      #f
      ("EdgeCase"))
    #(215
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 2 1 1)
      #f
      ("EdgeCase"))
    #(216
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 2 1 255)
      #f
      ("EdgeCase"))
    #(217
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 65)
      #f
      ("EdgeCase"))
    #(218
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 64)
      #f
      ("EdgeCase"))
    #(219
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66)
      #f
      ("EdgeCase"))
    #(220
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 47)
      #f
      ("EdgeCase"))
    #(221
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48)
      #f
      ("EdgeCase"))
    #(222
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 40 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 9 3 128 254 1)
      #f
      ("EdgeCase"))
    #(223
      "Signature with special case values for r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 48 9 1 66)
      #f
      ("EdgeCase"))
    #(224
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 12 1 48)
      #f
      ())
    #(225
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 5 2 1 1 12 0)
      #f
      ())
    #(226
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 9 12 2 37 115 12 3 115 37 115)
      #f
      ())
    #(227
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 8 2 1 1 48 3 2 1 0)
      #f
      ())
    #(228
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 3 2 1 1)
      #f
      ())
    #(229
      "Signature encoding contains wrong types."
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 1 1 0)
      #f
      ())
    #(230
      "Edge case for Shamir multiplication"
      #vu8(55 54 51 56)
      #vu8(48 70 2 33 0 221 27 125 9 167 189 130 24 150 16 52 163 154 135 254 207 83 20 240 12 77 37 235 88 160 122 200 94 133 234 181 22 2 33 0 245 19 59 65 119 74 24 82 71 114 13 42 165 216 130 107 110 197 175 76 7 105 54 200 234 165 46 214 205 245 148 8)
      #t
      ())
    #(231
      "special case hash"
      #vu8(50 55 50 57 55 50 54 52 49 55)
      #vu8(48 70 2 33 0 144 75 43 182 233 222 143 115 36 63 167 236 193 154 90 159 224 52 172 173 43 117 185 124 140 200 74 121 197 243 87 116 2 33 0 129 69 35 66 152 112 64 212 63 80 199 47 42 82 70 67 10 167 85 155 238 108 86 102 63 209 32 41 80 122 145 95)
      #t
      ())
    #(232
      "special case hash"
      #vu8(52 51 49 52 55 55 54 49 55)
      #vu8(48 69 2 33 0 176 129 34 240 39 7 111 146 76 209 220 135 124 147 101 158 207 148 36 16 119 47 186 88 136 28 145 9 49 27 202 83 2 32 2 135 160 3 61 247 192 105 251 250 183 250 239 255 221 215 18 25 8 253 239 118 192 74 26 64 45 89 159 4 148 46)
      #t
      ())
    #(233
      "special case hash"
      #vu8(54 54 48 51 52 51 56 48 51 51)
      #vu8(48 68 2 32 72 192 68 185 77 232 128 152 152 24 78 55 106 138 9 3 112 118 121 53 14 55 206 41 15 133 140 139 238 247 140 109 2 32 108 205 131 57 78 138 191 77 242 164 10 251 0 28 164 40 77 145 61 107 156 175 110 242 37 214 107 221 223 158 180 93)
      #t
      ())
    #(234
      "special case hash"
      #vu8(50 56 50 57 54 50 49 52 53 53)
      #vu8(48 68 2 32 5 83 95 195 146 120 38 14 178 184 207 186 0 34 108 179 21 93 117 192 207 107 65 138 197 109 246 59 124 11 30 155 2 32 49 174 189 67 232 72 135 67 71 179 138 214 78 241 114 250 49 95 218 9 100 92 135 82 192 224 16 21 46 67 65 139)
      #t
      ())
    #(235
      "special case hash"
      #vu8(52 51 49 49 56 50 49 55 51 54)
      #vu8(48 68 2 32 120 149 124 79 90 0 10 240 95 196 119 204 129 60 198 220 217 68 84 56 33 91 28 73 55 128 182 204 189 57 169 101 2 32 103 2 49 39 204 222 65 107 146 203 58 117 96 67 105 80 171 100 59 191 8 56 62 201 244 246 134 44 219 48 32 149)
      #t
      ())
    #(236
      "special case hash"
      #vu8(49 49 55 55 48 55 55 52 49 55 53)
      #vu8(48 69 2 33 0 234 27 127 213 186 16 238 183 10 69 108 20 157 73 79 163 117 122 32 144 147 196 223 207 3 115 13 28 213 72 41 229 2 32 60 210 4 187 132 101 100 53 227 101 111 165 231 110 220 77 243 238 121 97 95 127 26 223 175 56 138 126 236 79 129 114)
      #t
      ())
    #(237
      "special case hash"
      #vu8(49 53 57 56 53 49 53 53 54 53)
      #vu8(48 70 2 33 0 201 97 25 82 171 96 55 83 208 96 30 12 151 222 145 166 210 146 125 56 175 235 27 43 98 46 163 132 150 140 187 232 2 33 0 220 50 196 44 230 39 242 134 247 209 74 164 176 55 88 138 191 194 2 185 22 167 191 144 81 195 208 82 124 102 220 164)
      #t
      ())
    #(238
      "special case hash"
      #vu8(50 56 56 49 49 48 49 54 49 56)
      #vu8(48 68 2 32 18 201 96 227 252 254 225 115 51 81 35 254 21 205 127 140 139 197 95 111 132 160 113 228 64 176 228 24 204 156 12 44 2 32 63 73 66 70 192 136 155 66 19 21 12 231 123 111 95 41 87 71 109 63 175 137 129 53 213 108 20 95 211 175 53 239)
      #t
      ())
    #(239
      "special case hash"
      #vu8(50 48 48 52 55 56 51 51 51 50)
      #vu8(48 69 2 33 0 220 146 25 18 167 106 34 88 25 212 149 106 127 240 102 11 205 246 149 189 242 134 40 136 88 204 213 162 96 1 39 113 2 32 107 197 135 145 56 178 7 195 228 230 146 212 65 44 154 63 223 249 26 197 138 102 158 200 48 182 139 28 213 98 229 86)
      #t
      ())
    #(240
      "special case hash"
      #vu8(57 53 48 48 50 52 55 55 56 55)
      #vu8(48 70 2 33 0 227 26 52 203 100 125 220 101 176 63 155 208 90 163 229 230 42 128 12 111 181 103 148 132 59 96 111 31 8 137 5 36 2 33 0 231 242 228 255 41 27 211 9 176 97 116 120 218 15 219 169 37 53 55 106 105 220 67 6 23 131 179 239 146 129 19 173)
      #t
      ())
    #(241
      "special case hash"
      #vu8(50 50 48 57 53 48 48 48 54 48)
      #vu8(48 68 2 32 71 184 37 189 214 124 181 217 31 1 125 82 234 119 245 155 29 225 224 91 228 138 70 153 120 252 136 202 87 125 186 44 2 32 83 238 54 157 91 137 191 88 179 199 98 24 183 206 207 18 222 104 18 113 82 145 124 88 238 21 94 232 93 198 100 242)
      #t
      ())
    #(242
      "special case hash"
      #vu8(56 49 57 51 55 56 57 50 50 55)
      #vu8(48 69 2 33 0 133 178 213 250 166 92 209 98 230 102 223 53 190 181 53 199 151 231 162 162 8 54 211 81 235 207 247 152 195 67 48 155 2 32 25 106 131 122 171 193 159 164 82 44 95 172 76 142 99 231 207 58 88 25 201 127 206 193 14 128 243 62 65 242 102 162)
      #t
      ())
    #(243
      "special case hash"
      #vu8(51 54 53 48 54 48 51 50 57 56)
      #vu8(48 69 2 33 0 222 83 141 202 242 32 51 74 202 159 188 17 209 87 102 67 102 44 102 88 94 38 139 192 235 51 22 8 173 149 35 237 2 32 27 29 50 121 13 70 198 146 90 185 9 64 129 112 131 159 131 230 160 58 118 50 236 136 119 160 193 145 255 251 238 121)
      #t
      ())
    #(244
      "special case hash"
      #vu8(49 54 51 56 51 57 53 51 53 50 51)
      #vu8(48 70 2 33 0 181 212 94 127 225 25 107 245 224 118 253 118 116 44 30 18 238 250 121 52 222 130 109 115 149 100 108 148 168 1 63 188 2 33 0 245 71 90 186 182 93 158 246 70 22 253 233 91 60 166 183 95 168 100 117 137 80 1 84 65 164 65 74 205 208 200 148)
      #t
      ())
    #(245
      "special case hash"
      #vu8(50 48 57 49 55 54 56 50 48 53)
      #vu8(48 70 2 33 0 217 115 248 242 12 51 119 36 19 242 20 209 184 112 156 206 170 209 89 201 33 28 207 51 126 116 119 218 25 125 73 83 2 33 0 141 76 57 238 102 83 46 44 238 162 240 134 30 224 39 129 186 3 57 238 251 48 188 6 33 143 74 99 253 134 193 26)
      #t
      ())
    #(246
      "special case hash"
      #vu8(57 51 54 52 55 48 50 56 50 53)
      #vu8(48 70 2 33 0 196 135 171 6 107 139 218 193 43 92 114 133 134 166 30 66 208 161 190 161 111 181 68 211 189 86 254 222 119 187 61 185 2 33 0 210 112 34 161 121 87 220 35 189 118 13 15 0 233 63 16 24 156 103 211 42 158 197 72 149 20 241 64 228 146 114 211)
      #t
      ())
    #(247
      "special case hash"
      #vu8(57 50 54 56 54 56 55 57 49)
      #vu8(48 69 2 33 0 247 119 118 72 177 90 248 154 244 12 249 234 10 60 135 90 160 217 215 54 236 165 41 175 78 182 35 143 120 165 98 210 2 32 59 112 212 110 20 57 188 93 148 27 218 232 80 118 37 151 28 28 100 220 244 197 27 205 180 59 28 163 174 3 115 212)
      #t
      ())
    #(248
      "special case hash"
      #vu8(53 49 55 56 49 51 52 56 50 49)
      #vu8(48 68 2 32 123 180 100 108 136 112 98 166 195 230 128 177 73 24 84 196 178 106 71 40 229 242 178 193 204 48 135 199 128 218 183 179 2 32 98 144 15 85 184 133 97 127 155 60 126 243 76 103 236 195 123 247 142 17 160 76 214 185 5 46 184 15 151 86 85 156)
      #t
      ())
    #(249
      "special case hash"
      #vu8(52 55 51 53 48 49 48 55 53 49)
      #vu8(48 69 2 32 74 150 237 103 208 149 13 151 168 103 92 48 47 97 2 33 92 224 236 131 127 245 63 191 6 181 123 1 5 38 181 116 2 33 0 141 235 95 122 124 140 190 255 1 195 68 55 0 184 218 18 144 136 119 28 140 43 244 206 202 42 95 168 17 56 165 52)
      #t
      ())
    #(250
      "special case hash"
      #vu8(49 52 51 53 51 57 49 49 54 56 57)
      #vu8(48 70 2 33 0 217 195 147 138 75 145 208 102 15 109 218 232 84 10 123 190 174 43 13 113 123 222 31 51 230 144 66 128 25 116 113 147 2 33 0 155 2 45 101 71 171 249 190 249 128 191 143 214 124 54 110 35 78 255 58 235 238 88 167 238 86 211 53 223 128 122 41)
      #t
      ())
    #(251
      "special case hash"
      #vu8(49 51 56 52 53 52 57 50 48 52)
      #vu8(48 69 2 33 0 248 85 162 210 55 1 107 30 14 195 7 103 42 121 54 104 182 17 210 182 212 229 172 254 43 32 136 170 221 98 150 167 2 32 19 198 10 203 94 111 165 31 3 238 140 190 58 34 15 58 193 206 82 125 174 224 94 157 116 48 52 48 48 222 167 231)
      #t
      ())
    #(252
      "special case hash"
      #vu8(50 55 54 50 49 57 50 55 56 57)
      #vu8(48 69 2 33 0 184 221 177 237 110 128 5 111 185 206 162 89 11 27 99 207 209 232 9 140 39 84 126 200 198 202 205 120 230 235 253 219 2 32 117 20 172 102 68 149 87 68 148 111 203 86 23 248 176 103 133 10 62 207 130 157 130 31 24 67 90 94 17 164 165 139)
      #t
      ())
    #(253
      "special case hash"
      #vu8(49 56 51 49 54 53 52 51 51 49)
      #vu8(48 70 2 33 0 233 3 183 234 212 84 255 141 232 113 253 246 123 107 174 77 220 136 37 76 53 179 51 169 139 163 162 246 86 38 120 165 2 33 0 247 19 225 2 147 174 198 14 99 194 167 155 24 145 41 229 73 25 167 76 218 106 32 74 39 39 193 59 182 58 37 186)
      #t
      ())
    #(254
      "special case hash"
      #vu8(50 52 51 54 56 57 57 48 51 48)
      #vu8(48 69 2 32 97 82 8 208 107 57 44 65 143 186 85 199 82 254 247 185 171 142 212 125 152 244 7 118 216 111 244 191 163 233 84 100 2 33 0 244 3 213 152 77 68 106 203 32 62 186 88 165 70 131 114 38 127 144 4 242 99 170 161 234 162 8 101 34 151 219 91)
      #t
      ())
    #(255
      "special case hash"
      #vu8(50 48 52 48 52 49 50 50 50)
      #vu8(48 69 2 32 14 182 90 91 195 56 205 146 10 23 70 72 221 132 237 84 67 243 116 23 216 215 48 206 171 13 211 251 154 32 70 243 2 33 0 199 168 109 126 9 245 225 66 252 109 69 161 54 180 88 30 8 31 102 162 111 224 37 95 1 43 129 45 124 249 1 137)
      #t
      ())
    #(256
      "special case hash"
      #vu8(51 51 51 55 49 49 57 57 55 53)
      #vu8(48 68 2 32 34 100 100 80 31 28 204 50 241 225 72 47 255 70 36 244 148 147 67 199 154 130 13 75 157 246 55 180 147 171 91 35 2 32 78 180 125 15 209 77 180 72 206 221 97 30 29 174 151 43 223 39 206 15 207 193 157 158 197 189 169 104 48 129 89 141)
      #t
      ())
    #(257
      "special case hash"
      #vu8(54 54 57 53 54 50 48 54 55 56)
      #vu8(48 69 2 33 0 188 13 112 107 95 223 16 40 5 207 131 246 108 225 122 151 174 189 94 59 110 125 92 0 140 213 17 100 117 10 241 8 2 32 101 19 136 209 144 218 41 116 141 243 67 220 97 226 60 36 140 117 48 19 165 104 134 82 202 67 210 34 237 209 191 180)
      #t
      ())
    #(258
      "special case hash"
      #vu8(50 48 57 51 48 49 55 55 52 55)
      #vu8(48 69 2 32 57 161 217 146 115 86 214 132 155 126 150 205 52 165 130 139 173 17 38 135 25 134 55 231 184 73 0 237 146 250 208 183 2 33 0 155 92 117 62 46 16 97 158 25 147 184 216 23 26 122 164 196 129 58 135 33 172 161 247 155 239 6 192 250 133 132 98)
      #t
      ())
    #(259
      "special case hash"
      #vu8(49 50 51 52 49 55 57 49 54)
      #vu8(48 69 2 33 0 213 122 221 168 146 106 107 117 165 201 148 160 184 171 199 85 52 230 139 215 155 2 184 234 235 26 122 221 76 92 66 50 2 32 59 52 148 49 227 119 64 198 15 146 197 93 204 138 159 85 231 14 39 185 247 61 130 227 125 114 139 167 38 108 221 246)
      #t
      ())
    #(260
      "special case hash"
      #vu8(49 55 54 52 51 53 48 54 56 55)
      #vu8(48 68 2 32 125 91 76 41 89 158 151 8 86 134 83 79 132 61 113 210 95 34 185 109 137 199 11 64 48 171 203 230 171 215 53 89 2 32 40 121 126 216 113 32 196 191 80 227 123 7 4 210 211 180 224 177 185 140 39 230 24 235 153 86 139 8 18 58 27 233)
      #t
      ())
    #(261
      "special case hash"
      #vu8(49 49 52 49 55 50 52 49 52 52 49)
      #vu8(48 68 2 32 13 182 197 71 161 231 187 183 21 180 139 121 116 16 75 109 118 24 241 223 237 119 1 157 170 41 189 89 178 115 192 135 2 32 87 240 84 88 124 221 86 40 119 44 20 221 224 167 125 197 193 186 208 104 40 65 12 92 99 185 193 179 95 224 68 16)
      #t
      ())
    #(262
      "special case hash"
      #vu8(50 50 54 56 50 52 54 52 57 51)
      #vu8(48 68 2 32 9 74 30 23 32 18 217 54 120 82 242 40 244 156 56 43 189 241 154 107 53 75 133 17 128 126 88 92 212 110 144 127 2 32 14 80 116 13 163 4 25 169 135 204 213 103 70 184 115 122 167 74 18 146 137 46 239 153 163 64 37 174 187 109 210 9)
      #t
      ())
    #(263
      "special case hash"
      #vu8(50 55 50 52 55 57 54 55 55 55)
      #vu8(48 69 2 32 115 165 68 88 149 224 121 102 134 220 40 195 228 205 91 193 248 83 104 179 38 75 69 93 71 10 124 190 183 89 45 145 2 33 0 138 159 250 191 159 101 146 23 52 147 77 101 5 58 0 191 163 195 83 172 129 204 155 111 96 39 22 53 2 108 208 225)
      #t
      ())
    #(264
      "special case hash"
      #vu8(57 55 51 51 57 53 49 49 57)
      #vu8(48 68 2 32 6 48 242 198 39 126 158 4 20 183 232 218 100 49 24 80 182 243 145 33 147 151 15 214 226 244 223 121 223 114 12 124 2 32 108 205 175 71 164 78 225 4 59 118 239 98 179 222 58 238 135 108 38 244 239 228 146 203 54 73 66 62 89 151 83 208)
      #t
      ())
    #(265
      "special case hash"
      #vu8(49 53 48 55 48 48 50 55 48 54)
      #vu8(48 69 2 32 30 27 117 163 73 91 181 206 178 173 184 75 128 241 23 103 43 121 197 188 113 233 83 209 162 116 177 29 196 35 135 41 2 33 0 220 244 141 147 13 137 192 211 1 233 127 144 131 72 126 99 203 57 18 115 16 176 245 227 200 118 158 152 229 178 96 93)
      #t
      ())
    #(266
      "special case hash"
      #vu8(51 55 52 51 53 54 56 55 56 50)
      #vu8(48 69 2 33 0 235 146 225 168 10 215 244 64 216 162 233 216 138 199 101 197 203 247 36 189 54 127 65 76 157 145 204 25 4 175 228 151 2 32 116 254 14 199 204 1 34 238 164 230 60 77 22 200 158 223 106 87 130 49 120 195 116 123 1 231 175 243 223 113 0 7)
      #t
      ())
    #(267
      "special case hash"
      #vu8(57 52 55 54 55 49 50 52 56)
      #vu8(48 68 2 32 124 153 225 174 105 65 244 188 245 78 166 84 145 202 252 161 128 238 225 96 90 46 217 8 196 118 238 103 203 221 115 115 2 32 31 148 240 62 212 124 201 103 74 187 41 76 254 126 123 16 173 103 16 27 140 178 69 168 181 251 136 58 33 160 109 217)
      #t
      ())
    #(268
      "special case hash"
      #vu8(55 50 53 52 52 52 51 50 52)
      #vu8(48 68 2 32 41 189 20 169 218 251 229 98 224 196 192 212 174 203 100 145 187 211 127 112 113 51 247 143 197 203 51 19 54 83 119 183 2 32 46 161 216 98 70 216 237 173 49 19 47 61 190 100 44 172 72 134 144 132 155 221 116 56 213 198 38 207 140 151 57 112)
      #t
      ())
    #(269
      "special case hash"
      #vu8(53 53 51 52 48 50 49 50 49 57)
      #vu8(48 70 2 33 0 207 114 25 220 193 142 34 189 72 123 111 89 198 73 79 99 124 95 12 203 24 25 46 158 96 23 134 33 34 11 73 252 2 33 0 160 93 90 187 226 90 97 12 142 54 21 207 125 1 198 149 99 221 191 231 109 114 53 253 164 95 4 106 240 62 80 255)
      #t
      ())
    #(270
      "special case hash"
      #vu8(49 50 51 48 49 56 49 51 55 57 51)
      #vu8(48 68 2 32 21 137 222 97 205 49 91 160 191 127 14 87 127 0 88 157 40 247 33 49 244 199 175 65 198 187 49 174 139 162 113 218 2 32 47 248 42 154 31 82 144 28 76 111 139 138 65 192 246 231 96 241 96 218 38 109 120 141 165 189 201 69 8 77 255 141)
      #t
      ())
    #(271
      "special case hash"
      #vu8(57 49 49 53 51 49 55 54 49 48)
      #vu8(48 70 2 33 0 168 197 153 66 144 112 57 136 107 195 116 193 127 244 82 182 4 56 92 53 55 185 182 198 17 60 27 25 215 46 104 169 2 33 0 211 118 188 134 108 200 45 120 202 23 180 97 237 241 111 174 164 78 87 118 89 177 254 240 44 236 15 65 189 46 116 124)
      #t
      ())
    #(272
      "special case hash"
      #vu8(50 56 57 52 51 57 55 57 54 50)
      #vu8(48 70 2 33 0 153 204 101 36 18 220 223 197 116 182 252 37 37 97 94 103 17 202 175 125 85 140 199 129 163 161 28 243 113 244 15 113 2 33 0 134 109 212 171 107 88 181 214 55 159 11 67 31 154 37 19 153 222 253 85 22 191 107 181 73 85 17 224 91 36 248 1)
      #t
      ())
    #(273
      "special case hash"
      #vu8(49 50 51 51 53 56 51 48 51 51)
      #vu8(48 69 2 33 0 180 124 173 92 136 22 30 41 98 9 87 6 30 36 205 244 111 63 255 151 194 102 177 99 95 207 46 156 180 217 40 121 2 32 19 84 159 59 27 99 158 235 51 244 12 179 56 236 208 137 185 9 77 150 37 183 103 52 243 128 62 157 64 161 235 38)
      #t
      ())
    #(274
      "special case hash"
      #vu8(50 49 49 50 54 57 50 53 54)
      #vu8(48 69 2 33 0 244 243 160 67 181 189 197 107 212 113 135 110 45 241 94 168 12 203 24 155 37 72 110 106 185 0 124 255 225 33 172 252 2 32 120 232 227 179 88 149 128 218 193 206 41 154 24 245 112 73 1 16 76 210 18 5 49 118 8 195 48 173 200 211 82 114)
      #t
      ())
    #(275
      "special case hash"
      #vu8(51 48 48 53 52 56 51 56 54 52)
      #vu8(48 69 2 32 93 244 94 144 249 65 57 8 180 127 124 187 5 214 196 58 129 235 98 55 90 185 97 210 176 101 198 17 128 35 192 24 2 33 0 215 32 162 162 60 52 236 227 172 193 165 22 7 11 222 107 252 173 40 253 137 196 130 215 43 105 216 17 59 25 3 246)
      #t
      ())
    #(276
      "special case hash"
      #vu8(56 51 53 54 55 54 50 55 50 53)
      #vu8(48 68 2 32 120 11 185 63 82 213 55 82 169 168 119 218 176 87 140 119 2 209 234 136 153 96 225 104 46 132 248 39 64 177 190 93 2 32 8 227 102 255 232 247 45 4 20 38 174 229 122 239 252 231 130 43 32 156 52 178 130 85 165 222 103 25 8 112 206 66)
      #t
      ())
    #(277
      "special case hash"
      #vu8(56 51 50 57 53 48 48 55 54 48)
      #vu8(48 69 2 33 0 247 67 167 124 134 220 224 148 204 38 90 135 178 224 83 200 204 119 51 112 133 29 188 123 161 165 44 88 223 36 213 84 2 32 37 22 228 97 77 215 204 211 106 35 203 187 27 88 194 159 144 13 77 162 17 62 123 154 201 86 191 136 121 144 118 128)
      #t
      ())
    #(278
      "special case hash"
      #vu8(49 57 50 55 48 56 52 49 54 53)
      #vu8(48 69 2 32 11 119 178 171 33 165 201 44 176 227 242 245 184 89 78 220 192 221 108 112 219 238 169 217 211 99 163 113 140 100 223 180 2 33 0 145 194 214 81 95 246 242 151 127 208 161 80 203 4 198 0 16 47 10 224 122 144 97 153 50 68 120 62 98 242 51 122)
      #t
      ())
    #(279
      "special case hash"
      #vu8(55 51 48 50 51 53 56 50 56 56)
      #vu8(48 69 2 32 65 240 162 32 209 26 1 77 254 67 248 154 182 71 171 234 67 12 245 169 112 48 136 242 140 18 34 171 183 126 136 87 2 33 0 248 17 197 132 193 10 37 251 166 33 97 19 105 142 90 45 197 45 142 163 64 217 44 231 161 29 53 111 109 90 19 130)
      #t
      ())
    #(280
      "special case hash"
      #vu8(49 51 52 55 51 55 51 55 51 56 51)
      #vu8(48 69 2 33 0 237 112 126 60 172 139 213 106 79 10 49 24 85 142 132 2 221 71 123 231 220 170 26 127 244 72 176 188 191 192 250 193 2 32 61 153 51 224 29 126 148 57 5 153 115 250 73 156 55 184 150 33 59 4 52 107 178 146 248 103 255 58 88 195 208 122)
      #t
      ())
    #(281
      "special case hash"
      #vu8(50 53 48 49 53 53 51 54 56 57)
      #vu8(48 70 2 33 0 128 53 209 13 253 83 62 1 113 143 169 208 161 119 62 85 180 36 119 4 21 229 112 174 247 102 234 44 190 87 124 39 2 33 0 129 91 15 20 214 247 244 202 69 25 20 40 217 140 155 65 72 113 255 236 218 195 208 113 125 40 90 71 62 93 219 6)
      #t
      ())
    #(282
      "special case hash"
      #vu8(51 53 51 53 48 52 48 48 50 57)
      #vu8(48 69 2 33 0 251 195 87 106 100 142 189 99 49 82 252 137 106 230 180 130 124 85 130 79 176 201 111 221 33 127 178 207 227 187 230 54 2 32 11 55 169 91 21 88 150 99 219 50 46 31 8 154 168 19 41 101 237 100 144 54 45 36 62 247 73 198 9 69 39 242)
      #t
      ())
    #(283
      "special case hash"
      #vu8(49 52 50 48 51 53 55 50 57 48)
      #vu8(48 69 2 33 0 222 8 204 132 0 77 63 179 5 33 184 224 173 230 107 109 82 115 76 205 24 44 172 232 163 75 160 227 144 254 168 147 2 32 44 30 61 235 121 209 97 23 237 132 200 152 34 118 212 55 9 197 150 61 87 189 43 16 165 48 235 241 97 218 26 61)
      #t
      ())
    #(284
      "special case hash"
      #vu8(57 48 53 49 55 53 48 54 56)
      #vu8(48 69 2 32 78 239 121 93 199 177 126 253 233 93 197 32 98 227 182 10 179 96 211 119 4 128 15 201 21 120 94 119 57 184 52 217 2 33 0 198 131 86 234 204 53 9 191 77 43 98 65 43 36 114 242 35 131 209 143 168 133 21 39 41 75 31 173 25 76 123 207)
      #t
      ())
    #(285
      "special case hash"
      #vu8(49 54 49 51 55 55 52 50 57 53)
      #vu8(48 69 2 33 0 203 132 91 159 207 160 126 136 233 1 31 3 17 202 233 243 247 64 81 110 125 22 217 129 155 125 15 111 199 100 218 199 2 32 61 127 59 165 23 62 19 9 55 176 43 183 184 218 37 197 6 172 230 24 43 143 154 228 237 137 31 125 33 108 3 120)
      #t
      ())
    #(286
      "special case hash"
      #vu8(56 55 51 54 55 51 52 57 49)
      #vu8(48 69 2 32 125 25 255 62 252 113 37 143 116 126 116 215 111 9 17 7 177 250 71 200 124 99 135 32 181 81 120 192 101 93 203 204 2 33 0 184 166 83 227 25 49 219 210 255 196 233 87 103 92 104 194 135 25 184 17 142 195 237 55 120 197 124 227 239 241 97 63)
      #t
      ())
    #(287
      "special case hash"
      #vu8(52 51 53 53 49 48 54 52 48 53)
      #vu8(48 69 2 32 16 212 101 224 56 41 218 215 126 130 70 173 17 202 248 198 170 138 169 24 194 190 245 169 169 230 1 197 169 25 246 143 2 33 0 243 101 167 167 84 13 203 100 45 233 14 109 108 207 12 116 9 74 128 5 222 174 212 6 46 57 78 28 242 188 216 251)
      #t
      ())
    #(288
      "special case hash"
      #vu8(52 53 51 57 53 55 53 56 55 54)
      #vu8(48 69 2 32 103 67 48 234 90 93 69 215 31 202 31 59 160 49 73 77 238 154 134 35 224 217 233 173 187 40 34 121 74 203 79 18 2 33 0 174 77 56 48 21 124 130 11 194 63 167 146 24 139 148 187 85 156 58 98 18 118 141 122 197 157 207 54 247 68 2 246)
      #t
      ())
    #(289
      "special case hash"
      #vu8(56 57 51 54 54 51 50 48 49)
      #vu8(48 70 2 33 0 166 50 198 118 246 103 102 155 218 27 14 207 95 51 250 103 170 175 138 238 70 188 158 159 43 213 189 16 195 108 187 149 2 33 0 169 147 82 202 205 107 212 43 120 169 57 8 0 140 35 238 194 211 110 94 79 208 170 52 157 86 52 252 84 49 153 197)
      #t
      ())
    #(290
      "special case hash"
      #vu8(51 56 48 54 48 54 56 48 51 56)
      #vu8(48 69 2 32 12 157 46 137 53 248 85 230 157 204 216 119 217 82 72 48 62 27 109 175 143 97 218 80 1 80 24 95 85 101 250 151 2 33 0 228 206 50 143 0 226 24 170 19 212 150 216 91 115 181 184 145 207 11 124 102 235 239 229 230 185 43 29 167 248 55 169)
      #t
      ())
    #(291
      "special case hash"
      #vu8(50 50 51 50 56 49 55 52 57 55)
      #vu8(48 68 2 32 71 72 192 15 68 166 179 168 114 111 96 77 123 147 51 3 217 140 212 88 184 80 255 45 124 185 12 17 213 149 10 199 2 32 118 109 247 170 76 139 63 139 3 176 235 138 236 101 63 183 14 171 116 51 168 78 126 242 213 127 54 138 5 27 112 77)
      #t
      ())
    #(292
      "special case hash"
      #vu8(52 48 55 52 51 50 50 53 53 56)
      #vu8(48 68 2 32 78 79 238 55 176 185 61 125 109 190 232 155 71 218 176 192 101 24 110 232 28 175 34 39 187 38 232 81 73 187 249 239 2 32 62 184 56 80 237 218 154 27 16 17 17 143 236 205 3 228 123 62 30 200 21 131 123 183 248 134 114 136 173 141 248 49)
      #t
      ())
    #(293
      "special case hash"
      #vu8(54 49 48 54 55 53 56 50 55)
      #vu8(48 70 2 33 0 158 133 32 197 232 41 105 53 254 147 218 45 173 85 150 59 159 31 136 24 127 118 129 15 255 83 192 166 233 91 12 7 2 33 0 209 133 222 79 104 42 151 210 143 195 6 125 86 163 210 79 116 63 50 212 122 111 57 0 104 178 206 183 22 120 250 223)
      #t
      ())
    #(294
      "special case hash"
      #vu8(49 55 52 49 56 55 51 57 50 49 51)
      #vu8(48 68 2 32 60 172 182 115 100 163 252 26 55 149 87 247 230 245 208 245 1 151 127 212 130 38 102 149 108 147 86 20 107 125 146 47 2 32 104 110 39 190 98 23 4 90 80 16 200 128 3 221 57 86 168 100 121 140 138 230 135 113 79 200 183 39 127 123 82 15)
      #t
      ())
    #(295
      "special case hash"
      #vu8(53 49 50 55 56 52 50 50 56 55)
      #vu8(48 69 2 32 93 247 2 199 125 70 56 164 48 45 33 169 253 215 11 190 49 164 164 167 156 125 83 29 79 76 130 131 151 15 102 74 2 33 0 247 45 121 154 188 227 205 34 152 92 92 252 104 247 175 200 249 111 78 125 206 132 133 237 92 89 94 220 30 31 29 75)
      #t
      ())
    #(296
      "special case hash"
      #vu8(53 48 51 56 54 57 48 56 55 57)
      #vu8(48 69 2 32 36 58 133 125 253 22 123 147 132 146 196 33 189 101 118 89 209 1 148 71 54 250 121 185 3 207 145 236 28 73 232 227 2 33 0 186 179 240 79 19 13 115 121 147 236 143 69 80 51 118 171 232 22 194 184 229 171 61 236 176 219 202 79 94 24 29 8)
      #t
      ())
    #(297
      "special case hash"
      #vu8(51 56 55 55 48 52 50 51 57 55)
      #vu8(48 69 2 32 103 167 153 107 118 128 233 88 72 10 194 249 112 132 242 5 81 148 179 142 14 207 130 36 109 200 121 24 238 25 84 168 2 33 0 222 24 125 251 238 252 227 131 220 234 26 127 215 19 98 56 93 9 198 210 90 172 223 163 78 162 112 169 30 201 124 245)
      #t
      ())
    #(298
      "special case hash"
      #vu8(51 50 49 55 48 56 49 55 56)
      #vu8(48 69 2 33 0 171 108 240 3 170 120 101 207 128 16 234 1 148 79 160 210 248 37 172 106 153 122 66 127 138 78 121 30 121 122 198 246 2 32 40 167 166 200 5 130 186 143 136 141 32 8 251 214 150 121 149 97 233 45 154 81 146 44 198 2 174 194 19 95 8 170)
      #t
      ())
    #(299
      "special case hash"
      #vu8(55 54 54 55 48 52 52 50 55 48)
      #vu8(48 70 2 33 0 159 159 11 233 146 253 211 224 105 22 117 153 220 85 227 49 201 241 137 210 194 48 174 21 209 181 180 65 211 132 60 116 2 33 0 248 229 180 237 142 173 3 82 224 50 247 155 95 4 117 240 151 94 55 56 215 132 216 149 233 228 0 43 38 118 43 121)
      #t
      ())
    #(300
      "special case hash"
      #vu8(49 49 48 52 55 52 53 48 52 50)
      #vu8(48 68 2 32 55 59 133 135 119 125 43 79 244 97 253 223 82 26 189 143 197 211 161 202 202 132 127 74 84 97 218 182 186 36 45 131 2 32 81 169 141 162 98 135 36 1 141 255 128 76 38 169 103 31 125 243 226 68 144 57 42 45 26 145 253 199 245 13 234 178)
      #t
      ())
    #(301
      "special case hash"
      #vu8(49 53 51 56 55 48 49 53 52)
      #vu8(48 69 2 33 0 144 166 40 106 39 29 143 250 114 221 181 94 140 146 71 147 224 59 42 247 60 225 15 45 234 232 87 150 28 176 112 112 2 32 40 223 43 99 121 80 17 16 193 42 193 103 24 159 158 168 135 62 29 98 255 199 110 106 218 131 242 207 65 46 165 211)
      #t
      ())
    #(302
      "special case hash"
      #vu8(50 50 54 49 51 56 53 48 52 57)
      #vu8(48 69 2 32 16 116 52 168 36 236 5 86 141 82 33 154 179 232 71 4 111 1 73 63 29 181 122 130 250 190 117 69 85 131 130 146 2 33 0 209 194 247 193 236 181 175 188 155 14 99 226 15 207 52 207 193 107 178 96 176 116 131 67 235 134 196 64 18 68 155 143)
      #t
      ())
    #(303
      "special case hash"
      #vu8(55 53 53 56 55 52 55 54 54 50)
      #vu8(48 69 2 32 75 115 127 183 36 201 115 72 251 103 169 148 232 136 22 177 9 25 81 183 114 52 241 144 71 23 236 126 241 170 149 29 2 33 0 255 114 43 102 155 212 52 46 107 133 98 50 181 165 192 61 44 241 111 9 179 211 132 45 10 135 252 25 217 16 172 212)
      #t
      ())
    #(304
      "special case hash"
      #vu8(51 52 57 57 51 54 52 49 56 50)
      #vu8(48 70 2 33 0 171 232 4 246 199 111 163 241 71 12 15 36 74 126 217 104 7 221 255 255 64 49 146 108 250 217 162 201 247 62 215 115 2 33 0 228 131 82 101 60 204 70 245 245 167 109 126 179 153 125 253 65 32 1 251 22 146 49 39 136 247 194 151 239 121 47 167)
      #t
      ())
    #(305
      "special case hash"
      #vu8(50 51 54 57 50 55 51 57 56 53)
      #vu8(48 68 2 32 125 85 165 218 50 1 222 83 67 112 63 248 238 54 59 125 219 203 61 120 106 252 168 241 87 178 94 124 144 208 157 232 2 32 61 252 181 90 205 125 239 66 24 171 211 249 137 233 1 248 36 204 45 78 211 163 123 135 148 17 121 117 16 63 240 4)
      #t
      ())
    #(306
      "special case hash"
      #vu8(52 57 51 56 51 57 53 54 53)
      #vu8(48 68 2 32 37 210 200 143 11 121 242 40 159 146 211 236 182 222 17 159 171 118 79 180 58 181 40 99 145 249 162 130 200 42 193 152 2 32 16 95 68 250 39 175 228 220 152 0 230 161 101 40 49 77 224 27 23 115 126 151 65 134 47 147 237 12 195 59 48 243)
      #t
      ())
    #(307
      "special case hash"
      #vu8(50 53 51 52 51 55 57 57 51 55)
      #vu8(48 69 2 33 0 215 37 194 115 26 109 184 214 35 2 122 146 106 102 94 157 186 15 149 233 10 95 230 128 122 132 178 0 17 31 4 236 2 32 52 97 64 191 251 132 115 31 15 28 248 87 25 61 234 37 162 247 33 70 61 195 184 90 142 114 199 63 247 43 218 148)
      #t
      ())
    #(308
      "special case hash"
      #vu8(56 51 52 56 48 49 53 57 56)
      #vu8(48 68 2 32 79 169 112 77 62 170 87 96 218 11 151 171 192 222 31 135 40 64 229 139 253 177 168 249 216 190 63 150 249 80 202 125 2 32 106 225 91 87 44 125 26 73 201 158 26 165 77 229 251 43 190 5 93 69 104 103 112 245 121 192 142 231 153 36 237 233)
      #t
      ())
    #(309
      "special case hash"
      #vu8(50 52 49 49 48 53 55 52 56 54)
      #vu8(48 69 2 32 52 51 83 200 190 53 202 34 42 56 119 27 25 255 53 80 171 228 27 145 242 255 222 169 201 244 136 125 112 176 39 130 2 33 0 194 133 227 118 28 102 69 179 219 79 249 154 122 196 8 3 40 111 40 71 91 162 139 156 213 92 172 222 251 51 9 132)
      #t
      ())
    #(310
      "special case hash"
      #vu8(55 56 54 52 54 56 54 51 53)
      #vu8(48 69 2 32 82 155 18 29 91 60 204 180 38 24 157 115 67 213 113 173 240 92 250 238 132 54 105 218 103 34 247 40 193 146 187 130 2 33 0 134 73 10 118 134 33 95 178 155 24 161 102 188 34 193 184 169 130 253 125 87 171 89 51 24 173 248 53 86 132 180 95)
      #t
      ())
    #(311
      "special case hash"
      #vu8(51 48 53 52 55 55 51 55 54 56)
      #vu8(48 69 2 33 0 255 101 112 113 119 187 154 161 53 197 253 119 75 247 46 179 5 142 128 175 199 216 189 234 143 127 209 128 64 234 153 89 2 32 13 78 209 63 158 1 186 184 170 170 64 215 245 201 35 167 132 112 136 131 117 180 105 14 17 100 168 63 223 19 98 1)
      #t
      ())
    #(312
      "special case hash"
      #vu8(49 57 50 55 48 49 55 55 51 56)
      #vu8(48 69 2 32 71 30 191 204 69 222 7 189 65 24 249 75 2 132 240 197 132 141 217 49 73 162 23 181 107 73 226 11 175 88 60 237 2 33 0 173 73 139 121 214 21 27 246 78 0 63 80 47 202 143 183 176 91 33 6 169 108 161 185 119 238 0 44 115 188 114 27)
      #t
      ())
    #(313
      "special case hash"
      #vu8(49 48 53 49 51 50 53 54 51 52)
      #vu8(48 68 2 32 30 39 154 221 80 206 97 72 221 74 61 49 27 173 137 103 69 161 105 54 78 246 139 148 230 54 15 196 142 148 155 159 2 32 114 48 251 228 0 127 183 214 164 39 76 57 96 129 243 122 28 155 37 89 181 38 219 30 254 67 94 173 21 228 183 78)
      #t
      ())
    #(314
      "special case hash"
      #vu8(52 48 49 57 56 54 54 54 56 50)
      #vu8(48 68 2 32 82 223 186 187 203 153 101 16 33 192 37 163 8 83 11 156 208 71 50 244 52 99 187 197 17 96 205 84 45 144 40 223 2 32 14 190 244 246 135 11 206 28 163 2 231 18 5 96 229 23 0 103 192 251 61 200 102 132 72 184 157 212 130 27 83 251)
      #t
      ())
    #(315
      "special case hash"
      #vu8(49 48 52 53 48 50 53 55 51 53 48)
      #vu8(48 70 2 33 0 218 189 25 174 184 127 213 97 25 163 53 76 70 143 68 41 252 20 66 28 84 232 190 158 155 146 121 65 87 154 229 94 2 33 0 177 10 115 150 201 115 224 82 175 41 68 211 114 71 233 1 102 130 212 218 124 171 45 84 40 97 140 225 32 162 16 86)
      #t
      ())
    #(316
      "special case hash"
      #vu8(51 50 54 57 53 56 53 56 48)
      #vu8(48 68 2 32 43 153 80 196 0 93 234 142 96 63 254 15 217 179 246 107 124 15 7 80 158 80 145 59 184 37 239 125 223 46 110 119 2 32 98 201 252 223 121 2 111 96 248 48 231 202 228 175 129 77 178 203 88 181 169 72 86 39 114 218 19 6 19 187 239 148)
      #t
      ())
    #(317
      "special case hash"
      #vu8(51 48 55 52 54 53 51 50 52 49)
      #vu8(48 69 2 32 9 216 129 227 0 68 139 158 172 51 198 127 16 192 97 194 201 133 196 21 164 20 208 156 137 24 71 227 238 200 133 152 2 33 0 231 84 85 165 8 73 53 6 248 116 96 116 248 187 54 152 212 54 47 152 169 218 162 15 169 22 246 196 2 55 100 174)
      #t
      ())
    #(318
      "special case hash"
      #vu8(55 55 49 52 54 56 51 52 56 48)
      #vu8(48 68 2 32 45 181 166 217 177 108 97 200 136 165 222 6 79 98 30 69 34 122 182 62 251 166 30 242 16 254 78 248 28 147 224 15 2 32 4 184 229 122 115 115 179 100 46 88 219 12 198 82 214 218 84 29 109 37 199 179 44 30 210 180 8 201 227 195 151 25)
      #t
      ())
    #(319
      "special case hash"
      #vu8(49 55 57 51 51 56 49 51 50 48)
      #vu8(48 69 2 32 123 212 109 190 19 45 149 175 248 84 190 191 28 13 209 233 3 3 50 143 216 77 56 30 147 33 119 35 209 164 188 24 2 33 0 247 149 160 198 141 108 49 140 3 141 195 123 210 45 54 188 232 8 48 150 99 126 137 18 195 208 28 186 189 63 238 199)
      #t
      ())
    #(320
      "special case hash"
      #vu8(52 56 56 48 54 50 53 53 54 54)
      #vu8(48 69 2 32 12 160 59 235 109 52 141 61 54 210 233 246 119 62 88 130 222 214 111 230 2 108 156 39 184 71 227 69 35 199 124 44 2 33 0 135 112 182 240 182 170 124 152 46 132 35 95 24 64 166 23 35 134 164 26 231 95 217 175 250 199 145 108 189 25 248 195)
      #t
      ())
    #(321
      "special case hash"
      #vu8(52 57 52 51 55 54 52 56 56 53 55)
      #vu8(48 69 2 32 63 26 116 193 218 182 191 195 25 218 56 205 231 168 18 105 91 83 12 96 179 109 42 227 250 17 167 32 107 32 49 213 2 33 0 240 127 142 181 130 91 45 86 66 68 49 133 214 175 210 38 78 152 153 109 195 146 81 159 129 40 131 219 224 226 71 252)
      #t
      ())
    #(322
      "special case hash"
      #vu8(52 55 48 56 54 56 57 55 56 54)
      #vu8(48 68 2 32 26 225 195 236 150 248 89 26 58 35 93 231 198 247 57 32 17 4 56 30 235 234 181 251 94 229 35 245 119 182 199 250 2 32 7 172 26 147 72 252 137 70 150 79 190 240 175 17 220 139 45 166 254 179 238 232 207 71 92 73 38 202 156 213 113 163)
      #t
      ())
    #(323
      "special case hash"
      #vu8(51 48 50 57 56 55 50 57 53 49)
      #vu8(48 70 2 33 0 198 239 84 35 198 149 65 202 163 187 143 54 31 79 169 202 236 163 15 179 41 160 218 128 110 169 86 39 14 10 153 40 2 33 0 192 69 222 82 5 235 139 200 97 188 21 149 34 180 28 13 102 230 47 172 15 88 115 8 97 0 12 223 158 39 189 150)
      #t
      ())
    #(324
      "special case hash"
      #vu8(51 48 49 55 49 57 48 51 56 53)
      #vu8(48 68 2 32 48 151 210 41 35 155 64 133 227 251 49 136 16 109 93 165 52 86 117 41 118 210 196 186 130 220 255 106 185 109 25 9 2 32 86 246 10 183 109 51 188 148 235 174 48 66 161 213 106 115 20 41 241 190 209 98 191 62 247 38 157 145 42 174 234 113)
      #t
      ())
    #(325
      "special case hash"
      #vu8(57 53 54 51 54 51 57 51 57)
      #vu8(48 68 2 32 108 158 203 141 213 184 186 221 73 234 27 38 174 58 226 175 114 54 203 225 198 38 170 107 39 2 158 241 214 208 89 1 2 32 6 201 191 53 100 65 248 66 21 176 6 199 33 160 6 151 206 222 105 65 161 143 188 15 156 91 60 38 126 234 163 113)
      #t
      ())
    #(326
      "special case hash"
      #vu8(53 51 48 48 55 54 52 51 53 48)
      #vu8(48 69 2 32 67 174 86 25 249 27 113 26 97 190 7 101 129 249 29 56 44 57 254 83 213 0 177 54 248 27 230 57 190 167 106 221 2 33 0 130 69 148 240 129 133 71 151 49 237 9 83 103 192 77 239 47 241 150 34 156 91 19 107 56 53 235 139 184 25 197 109)
      #t
      ())
    #(327
      "special case hash"
      #vu8(49 57 51 52 54 54 52 56 52 52)
      #vu8(48 69 2 32 19 232 220 70 10 13 42 242 48 90 106 191 234 200 52 115 125 68 65 87 107 25 79 232 49 71 183 215 209 36 116 121 2 33 0 197 144 167 183 253 109 232 194 214 88 170 43 222 151 222 132 80 89 133 226 151 154 178 165 39 101 129 34 202 250 246 30)
      #t
      ())
    #(328
      "special case hash"
      #vu8(51 53 53 52 53 48 53 53 57 54 50)
      #vu8(48 69 2 32 39 254 176 106 76 91 176 70 22 36 103 229 35 180 182 44 44 141 171 242 109 237 153 126 176 115 125 62 175 209 108 138 2 33 0 156 232 124 76 214 185 61 30 195 179 197 210 159 164 21 207 145 142 221 36 224 254 189 123 32 13 108 130 201 30 95 120)
      #t
      ())
    #(329
      "special case hash"
      #vu8(49 51 48 49 55 50 50 49 48 56)
      #vu8(48 69 2 33 0 157 118 160 93 88 3 162 218 23 220 39 130 236 70 156 128 36 177 210 147 163 140 35 172 78 235 48 88 89 90 36 167 2 32 34 101 149 177 146 234 131 54 250 164 70 112 254 245 232 8 255 153 17 204 218 133 161 118 92 25 236 68 103 27 5 5)
      #t
      ())
    #(330
      "special case hash"
      #vu8(53 54 49 55 54 57 49 54 57 50)
      #vu8(48 68 2 32 121 16 136 115 101 97 244 25 50 205 134 240 102 204 166 214 61 68 115 174 187 134 155 204 112 201 35 239 128 167 253 149 2 32 51 64 41 115 231 168 36 96 39 18 165 171 247 3 11 173 47 24 62 107 79 164 12 102 57 154 20 174 72 226 136 227)
      #t
      ())
    #(331
      "special case hash"
      #vu8(51 53 56 49 57 51 50 53 51 52)
      #vu8(48 68 2 32 82 104 94 239 95 33 104 89 140 41 72 112 24 140 4 61 255 4 150 99 128 55 23 7 99 239 87 120 183 182 252 31 2 32 121 168 141 62 123 44 58 68 190 75 59 51 5 228 186 213 252 254 7 209 121 19 111 90 201 38 49 95 249 212 120 122)
      #t
      ())
    #(332
      "special case hash"
      #vu8(49 53 55 49 54 54 55 56 55 52 52)
      #vu8(48 69 2 32 93 184 131 181 163 118 106 42 20 171 38 162 94 197 152 247 189 31 151 88 95 224 181 83 65 231 218 37 26 98 236 30 2 33 0 191 99 198 110 153 44 145 253 229 19 171 219 213 155 79 159 84 40 129 207 220 43 227 251 243 231 114 185 126 80 91 61)
      #t
      ())
    #(333
      "special case hash"
      #vu8(51 49 57 57 55 56 51 51 54 48)
      #vu8(48 69 2 32 126 47 128 48 10 76 129 84 62 50 78 156 137 115 187 182 241 101 153 195 211 55 238 130 174 216 22 98 72 67 243 112 2 33 0 128 168 7 233 32 222 174 186 243 195 36 112 16 203 60 145 207 206 33 176 213 173 105 81 119 217 52 238 90 127 124 190)
      #t
      ())
    #(334
      "special case hash"
      #vu8(55 52 48 52 55 53 48 56 50)
      #vu8(48 70 2 33 0 222 18 235 51 183 23 253 136 127 214 132 166 74 249 67 154 39 238 131 178 138 197 117 23 114 36 158 96 8 86 181 158 2 33 0 141 202 54 123 215 188 131 112 159 37 176 252 78 31 74 14 126 116 123 224 184 162 151 122 171 210 87 80 160 186 96 194)
      #t
      ())
    #(335
      "special case hash"
      #vu8(52 49 55 52 51 54 53 51 57)
      #vu8(48 69 2 33 0 222 225 18 237 112 0 192 119 107 164 250 176 159 67 154 132 74 221 184 108 80 70 34 51 151 73 138 215 45 5 157 228 2 32 112 57 183 21 133 30 75 56 110 161 94 155 176 137 156 162 26 78 111 78 203 188 228 247 6 210 146 116 128 100 0 182)
      #t
      ())
    #(336
      "special case hash"
      #vu8(49 50 51 53 54 53 56 56 56 57)
      #vu8(48 69 2 33 0 157 1 3 45 149 202 197 150 231 223 108 117 150 92 54 105 242 156 184 229 140 201 169 51 188 93 96 193 169 126 148 110 2 32 28 242 206 57 223 115 204 115 75 180 24 14 240 157 232 131 186 215 200 216 42 177 165 134 29 38 91 72 170 25 91 182)
      #t
      ())
    #(337
      "special case hash"
      #vu8(50 52 50 57 50 53 53 52 48 52)
      #vu8(48 69 2 32 111 21 19 209 46 33 18 236 79 57 110 244 234 56 50 65 2 236 60 127 182 62 228 159 72 92 180 33 160 125 206 87 2 33 0 167 143 189 101 178 88 42 64 49 195 76 122 140 40 240 63 22 239 43 161 142 45 164 30 241 115 238 90 133 175 31 227)
      #t
      ())
    #(338
      "special case hash"
      #vu8(53 49 56 48 51 48 50 53 52 54 54)
      #vu8(48 70 2 33 0 195 251 89 103 28 184 198 219 72 189 81 166 103 6 4 40 247 81 36 181 233 144 175 30 153 127 214 54 51 80 114 213 2 33 0 199 151 231 36 92 252 141 152 188 163 174 31 66 57 184 134 132 202 222 218 44 98 143 9 174 97 5 62 235 104 55 113)
      #t
      ())
    #(339
      "special case hash"
      #vu8(52 52 55 54 51 57 56 50 48 48)
      #vu8(48 70 2 33 0 232 181 179 243 68 61 89 215 82 29 9 56 132 72 110 122 103 50 226 117 236 19 49 59 212 209 120 242 129 40 224 117 2 33 0 210 153 176 98 146 142 95 5 140 112 90 204 60 98 242 65 40 236 112 60 40 40 139 13 41 66 22 55 12 173 105 176)
      #t
      ())
    #(340
      "special case hash"
      #vu8(57 48 54 48 48 51 53 50 49 50)
      #vu8(48 69 2 33 0 206 67 33 141 68 225 19 236 56 213 203 207 64 47 61 191 168 125 88 130 106 118 15 11 242 200 143 17 152 31 119 25 2 32 100 143 62 208 209 183 109 236 84 55 203 104 93 218 122 21 18 239 7 244 235 7 141 197 14 65 142 254 177 175 136 73)
      #t
      ())
    #(341
      "special case hash"
      #vu8(49 55 53 54 48 53 51 48 57 56)
      #vu8(48 70 2 33 0 253 201 144 71 134 94 239 252 182 159 139 135 40 160 8 227 31 159 107 167 143 105 143 174 98 183 28 206 121 80 24 136 2 33 0 240 102 18 245 147 135 58 19 69 150 149 165 196 203 80 74 204 42 140 86 23 155 104 85 62 96 242 49 156 144 91 78)
      #t
      ())
    #(342
      "special case hash"
      #vu8(52 57 56 48 56 54 48 48 51 56)
      #vu8(48 69 2 32 37 110 92 79 76 209 33 226 222 225 152 123 231 178 65 182 233 31 144 212 131 33 10 171 154 75 54 125 181 97 49 116 2 33 0 247 80 96 219 75 214 205 82 187 142 106 169 79 122 182 132 136 166 56 135 53 21 120 126 192 215 230 27 173 88 171 127)
      #t
      ())
    #(343
      "special case hash"
      #vu8(51 54 50 49 56 55 53 51 51 53)
      #vu8(48 70 2 33 0 199 162 105 152 107 106 213 64 221 48 230 32 209 96 110 50 103 147 92 127 213 85 27 51 17 253 78 132 5 16 194 72 2 33 0 141 183 200 196 100 16 156 240 237 184 147 87 230 99 222 110 136 43 111 89 6 173 222 109 88 87 92 224 162 204 226 87)
      #t
      ())
    #(344
      "special case hash"
      #vu8(54 54 52 51 51 51 52 55 50 49)
      #vu8(48 69 2 32 11 234 50 71 88 234 128 237 74 10 86 247 216 54 252 115 191 25 110 67 251 197 157 149 63 12 227 74 187 165 123 34 2 33 0 240 64 39 36 142 131 189 72 251 21 113 41 28 161 165 240 136 235 62 137 240 9 4 215 27 158 168 214 103 127 120 147)
      #t
      ())
    #(345
      "special case hash"
      #vu8(52 52 53 52 57 52 50 55 56 50)
      #vu8(48 68 2 32 91 83 201 109 122 25 95 2 207 172 45 21 90 167 225 50 251 195 93 89 175 176 128 246 73 220 19 5 98 72 173 223 2 32 43 21 125 178 21 75 213 220 14 242 252 110 236 216 103 250 189 198 51 210 202 104 58 72 243 249 9 87 69 53 26 166)
      #t
      ())
    #(346
      "special case hash"
      #vu8(50 48 49 56 52 52 48 50)
      #vu8(48 68 2 32 36 23 74 129 210 33 164 191 216 151 143 49 42 206 196 218 204 79 8 248 248 205 242 155 32 36 186 210 23 119 88 223 2 32 115 252 27 243 56 128 9 227 33 156 244 199 230 46 74 234 255 193 185 97 75 40 49 64 90 1 64 60 134 147 100 82)
      #t
      ())
    #(347
      "special case hash"
      #vu8(53 56 49 51 50 49 55 51)
      #vu8(48 69 2 32 93 231 232 12 227 19 127 87 5 210 51 151 25 124 134 231 116 158 94 104 33 4 241 59 235 90 99 101 166 55 128 234 2 33 0 243 218 43 253 100 66 99 141 166 2 1 190 104 254 42 210 6 54 90 249 228 12 76 21 49 205 58 5 219 26 211 198)
      #t
      ())
    #(348
      "special case hash"
      #vu8(49 49 56 51 56 54 49 56 49 49)
      #vu8(48 69 2 33 0 220 220 40 248 31 245 237 145 250 21 241 95 196 241 211 143 156 221 252 61 246 91 178 211 165 85 130 250 247 192 145 13 2 32 81 91 119 89 161 48 214 103 239 247 255 49 103 195 5 204 161 1 190 58 7 148 95 215 203 106 19 89 193 109 182 120)
      #t
      ())
    #(349
      "special case hash"
      #vu8(49 57 50 50 54 48 50 57 48 54)
      #vu8(48 69 2 32 116 7 38 28 151 128 24 204 110 146 163 64 222 128 237 211 4 74 110 113 22 235 159 169 176 34 162 174 179 24 198 94 2 33 0 187 88 38 149 62 11 133 173 105 116 82 73 246 149 7 118 90 147 248 33 152 188 161 228 71 95 213 222 125 251 21 202)
      #t
      ())
    #(350
      "special case hash"
      #vu8(57 55 53 49 52 51 50 48 55)
      #vu8(48 68 2 32 57 98 82 14 162 239 1 203 167 213 19 81 23 167 252 181 171 18 11 40 186 246 227 29 226 230 236 153 147 216 213 188 2 32 37 131 101 159 189 248 51 153 48 155 221 200 158 165 243 159 226 33 135 103 31 49 73 217 79 150 250 35 74 96 19 219)
      #t
      ())
    #(351
      "special case hash"
      #vu8(56 51 49 53 49 49 54 51 56 51)
      #vu8(48 70 2 33 0 190 195 234 53 132 68 82 187 115 157 146 178 8 130 229 182 114 220 110 255 50 60 211 29 26 45 179 125 185 55 145 232 2 33 0 142 247 123 60 112 157 96 185 213 217 152 248 29 63 114 196 102 253 123 185 156 104 26 232 188 156 88 13 177 247 194 19)
      #t
      ())
    #(352
      "special case hash"
      #vu8(51 50 54 51 49 54 56 49 50)
      #vu8(48 69 2 33 0 184 251 223 237 238 83 118 207 201 23 125 150 196 94 0 63 144 183 54 122 164 12 243 125 99 228 131 191 170 75 233 81 2 32 77 202 205 251 228 29 247 137 147 130 96 116 137 187 117 66 47 62 182 120 34 137 14 163 187 253 128 205 69 111 193 39)
      #t
      ())
    #(353
      "special case hash"
      #vu8(52 48 50 57 54 56 55 49 51 54)
      #vu8(48 69 2 33 0 223 34 140 26 139 179 104 75 127 250 46 63 119 118 67 195 105 225 188 34 153 214 106 102 200 237 39 164 237 89 183 131 2 32 71 49 74 175 54 41 160 222 2 49 61 240 108 12 179 99 228 224 25 170 253 32 236 6 190 99 183 180 194 21 56 237)
      #t
      ())
    #(354
      "special case hash"
      #vu8(54 51 50 48 56 56 49 49 57 49)
      #vu8(48 68 2 32 82 135 70 178 128 216 160 229 72 81 203 153 137 74 252 1 206 36 207 247 237 214 1 22 227 216 218 228 42 219 73 97 2 32 78 178 100 98 158 92 244 171 167 126 5 197 71 116 189 12 242 11 5 113 66 161 172 33 3 9 157 102 76 44 93 238)
      #t
      ())
    #(355
      "special case hash"
      #vu8(53 50 50 53 51 57 48 55 56 48)
      #vu8(48 69 2 32 68 195 145 248 44 245 238 184 15 135 195 71 165 191 228 97 196 159 216 119 147 17 226 55 171 192 91 25 246 174 208 147 2 33 0 134 104 83 97 147 57 183 22 9 45 244 70 106 160 204 158 98 86 251 126 24 167 152 84 182 12 204 83 75 182 223 16)
      #t
      ())
    #(356
      "special case hash"
      #vu8(49 51 52 57 51 57 51 54 57 52)
      #vu8(48 69 2 32 3 209 39 166 247 36 101 189 28 2 16 159 150 5 32 43 36 103 99 9 124 117 98 53 216 248 162 104 72 235 96 156 2 33 0 131 213 81 66 127 49 185 87 43 97 24 12 241 139 200 92 32 48 108 13 226 195 157 0 67 11 63 201 29 197 12 107)
      #t
      ())
    #(357
      "special case hash"
      #vu8(49 48 51 57 55 57 54 48 55 54 49)
      #vu8(48 69 2 32 80 68 239 35 98 200 230 195 47 193 69 132 176 117 30 218 142 142 137 1 217 56 35 84 4 13 38 21 217 204 7 193 2 33 0 221 22 118 89 17 220 231 167 174 95 59 100 179 206 58 94 18 229 72 120 69 151 220 10 55 159 123 184 244 252 168 121)
      #t
      ())
    #(358
      "Signature generated without truncating the hash"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 206 100 95 15 28 203 99 132 78 84 189 118 3 164 40 14 160 101 227 193 71 210 110 115 207 190 88 198 17 107 12 241 2 32 64 204 194 49 136 170 32 69 61 127 149 211 56 104 242 71 179 215 124 81 107 112 228 195 81 180 140 162 235 239 0 39)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 15 163 103 105 131 93 29 33 95 21 109 94 130 190 210 250 118 170 177 52 189 177 211 189 64 151 95 175 90 193 156 198 230 125 103 90 143 13 196 118 11 63 143 190 15 8 83 168 11 88 175 141 210 196 164 26 251 249 203 12 114 208 22 202)
  :der-encode
  #t
  :tests
  '(#(359
      "k*G has a large x-coordinate"
      #vu8(49 50 51 52 48 48)
      #vu8(48 54 2 17 1 69 81 35 25 80 183 95 196 64 45 161 114 47 201 186 235 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 62)
      #t
      ())
    #(360
      "r too large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 255 255 252 44 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 62)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 47 29 176 137 90 141 97 87 121 163 141 220 190 172 173 148 88 243 86 136 181 135 171 238 218 28 181 168 145 233 84 165 181 145 71 142 59 129 245 136 29 215 31 147 184 17 19 10 103 234 105 127 69 47 172 205 92 81 23 250 193 95 95 147)
  :der-encode
  #t
  :tests
  '(#(361
      "r,s are large"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 63 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 62)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 70 33 85 23 75 100 221 5 6 1 182 215 194 41 114 81 129 93 65 62 38 201 185 29 18 53 54 231 111 211 251 19 95 10 32 248 101 40 223 242 70 236 199 29 93 0 91 41 53 228 216 224 176 118 253 103 146 212 162 179 253 43 123 185)
  :der-encode
  #t
  :tests
  '(#(362
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 62 154 117 130 136 96 137 198 47 184 64 207 59 131 6 28 209 207 243 174 67 65 128 139 181 189 238 97 145 23 65 119)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 142 137 224 255 242 215 104 199 193 57 178 43 144 170 102 178 75 59 28 237 67 69 196 105 228 57 178 200 13 111 237 8 78 185 202 20 134 255 52 17 219 70 89 15 120 0 141 109 106 10 156 249 207 54 178 190 248 51 64 122 245 188 136 62)
  :der-encode
  #t
  :tests
  '(#(363
      "r and s^-1 have a large Hamming weight"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 36 35 142 112 180 49 177 166 78 253 249 3 38 105 147 157 75 119 242 73 80 63 198 144 95 235 117 64 222 163 230 210)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 244 194 215 223 124 166 22 188 228 146 18 228 126 209 18 16 100 69 244 124 241 20 120 38 38 116 13 55 225 197 150 223 16 136 177 155 202 240 209 6 9 164 107 189 253 98 106 131 209 62 98 212 5 119 90 227 148 23 85 178 120 164 67 192)
  :der-encode
  #t
  :tests
  '(#(364
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 1)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 67 5 63 165 116 54 160 178 111 15 136 123 36 3 204 217 209 143 20 183 134 110 29 165 147 131 94 147 205 16 58 21 96 57 215 204 246 195 85 172 148 237 89 34 90 171 138 90 161 144 200 156 66 47 128 231 18 70 185 152 129 142 205 84)
  :der-encode
  #t
  :tests
  '(#(365
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 2)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 155 39 228 64 156 73 171 233 216 209 185 14 220 100 54 125 174 219 67 214 138 65 197 1 3 45 186 93 115 239 16 33 12 212 44 200 72 142 176 88 134 128 185 78 147 79 247 68 244 230 203 7 151 55 190 181 238 171 190 86 253 17 167 187)
  :der-encode
  #t
  :tests
  '(#(366
      "small r and s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 6 2 1 1 2 1 3)
      #t
      ())
    #(367
      "r is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 66 2 1 3)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 110 63 14 27 5 229 190 215 232 161 200 222 123 138 18 115 103 55 49 21 30 58 4 221 200 62 24 201 141 132 41 67 207 29 65 5 138 107 114 114 160 20 198 202 255 148 219 63 2 51 224 242 28 193 1 234 21 154 177 75 200 72 55 69)
  :der-encode
  #t
  :tests
  '(#(368
      "s is larger than n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 1 1 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 73 23 200)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 6 178 193 183 47 18 132 107 188 206 218 104 24 51 114 211 240 94 197 145 196 53 105 54 22 70 245 145 106 0 167 32 34 130 209 91 112 241 157 185 20 198 253 216 250 241 90 185 12 237 59 212 195 245 154 36 123 228 22 16 73 117 148 198)
  :der-encode
  #t
  :tests
  '(#(369
      "small r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 39 2 2 1 1 2 33 0 197 139 22 44 88 177 98 197 139 22 44 88 177 98 197 138 27 36 41 115 133 62 22 219 117 200 161 167 29 164 211 157)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 78 97 34 110 11 28 30 90 64 118 121 86 199 181 48 234 206 131 213 80 3 142 50 189 20 197 37 140 72 201 57 253 87 208 105 33 94 162 16 179 134 130 10 45 66 111 199 17 134 43 207 179 76 125 234 174 212 4 209 118 146 137 44 196)
  :der-encode
  #t
  :tests
  '(#(370
      "smallish r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 44 2 7 45 155 77 52 121 82 204 2 33 0 252 188 81 3 208 218 38 116 119 209 121 20 97 207 42 164 75 249 212 49 152 247 149 7 189 135 121 214 154 19 16 142)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 207 37 154 82 247 105 238 202 181 7 28 11 70 118 188 76 196 116 71 75 116 103 95 232 189 22 96 223 91 112 206 27 114 47 119 74 96 26 97 242 232 227 100 71 123 12 206 164 87 183 105 119 171 48 1 57 196 238 14 31 187 127 232 249)
  :der-encode
  #t
  :tests
  '(#(371
      "100-bit r and small s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 50 2 13 16 51 230 126 55 179 43 68 85 128 191 78 252 2 33 0 144 111 144 111 144 111 144 111 144 111 144 111 144 111 144 110 216 228 38 247 177 150 140 53 162 4 35 106 87 151 35 210)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 103 186 120 50 140 255 166 235 63 113 25 9 106 223 23 227 252 166 178 218 150 108 3 188 102 23 76 41 132 161 213 83 154 189 222 121 137 214 245 8 49 135 38 19 147 166 225 98 235 80 138 230 39 73 228 28 175 85 178 190 20 217 169 96)
  :der-encode
  #t
  :tests
  '(#(372
      "small r and 100 bit s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 38 2 2 1 1 2 32 120 50 102 233 15 67 218 254 92 217 179 176 190 134 222 34 249 222 131 103 125 15 80 113 58 70 142 199 47 207 93 87)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 143 140 95 223 113 26 255 125 220 128 124 67 8 161 50 177 9 158 62 149 218 191 128 60 162 146 131 221 65 176 144 85 143 96 199 27 74 129 62 123 67 100 176 167 38 7 101 4 45 54 150 169 88 5 72 245 133 190 18 99 58 195 184 36)
  :der-encode
  #t
  :tests
  '(#(373
      "100-bit r and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 49 2 13 6 37 34 187 211 236 190 124 57 233 62 124 38 2 32 120 50 102 233 15 67 218 254 92 217 179 176 190 134 222 34 249 222 131 103 125 15 80 113 58 70 142 199 47 207 93 87)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 251 120 196 95 22 222 155 78 9 141 220 158 246 235 52 11 5 90 106 73 196 56 184 123 247 150 157 194 79 121 103 221 42 249 235 171 165 91 103 19 224 110 157 249 228 43 121 234 147 100 64 94 186 177 25 158 162 48 174 56 236 131 185 26)
  :der-encode
  #t
  :tests
  '(#(374
      "r and s^-1 are close to n"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 64 193 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 192)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 183 185 21 56 120 98 114 231 10 96 60 252 128 197 47 135 240 87 163 105 20 152 72 219 200 101 168 210 244 69 236 38 189 144 186 136 68 245 141 182 116 75 95 49 164 112 229 158 191 238 24 145 190 54 238 101 177 139 161 114 229 234 249 67)
  :der-encode
  #t
  :tests
  '(#(375
      "s == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 193 2 1 1)
      #t
      ())
    #(376
      "s == 0"
      #vu8(49 50 51 52 48 48)
      #vu8(48 37 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 193 2 1 0)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 156 12 70 38 88 246 73 50 149 119 94 217 147 72 219 88 149 174 132 113 200 25 161 237 154 225 181 24 3 151 240 143 243 134 209 77 110 86 117 141 29 175 165 7 85 175 79 224 121 35 60 19 148 54 171 246 26 146 8 248 183 248 147 175)
  :der-encode
  #t
  :tests
  '(#(377
      "point at infinity during verify"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 93 87 110 115 87 164 80 29 223 233 47 70 104 27 32 160 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 192)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 137 230 49 39 201 125 212 203 25 251 128 47 34 34 157 236 208 216 82 99 155 61 152 43 37 137 129 122 126 82 0 73 225 253 112 177 94 94 93 62 164 171 116 137 3 202 137 26 179 150 79 244 215 191 72 177 124 96 7 149 122 94 32 33)
  :der-encode
  #t
  :tests
  '(#(378
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 93 87 110 115 87 164 80 29 223 233 47 70 104 27 32 160 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 93 87 110 115 87 164 80 29 223 233 47 70 104 27 32 160)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 235 137 200 56 84 37 55 195 245 48 182 232 188 98 209 230 40 78 212 233 184 198 174 169 110 130 151 13 138 189 239 255 88 202 224 223 97 135 77 48 194 175 160 92 138 112 56 0 172 128 86 67 151 104 139 25 165 20 159 101 5 75 19 143)
  :der-encode
  #t
  :tests
  '(#(379
      "edge case for signature malleability"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 93 87 110 115 87 164 80 29 223 233 47 70 104 27 32 160 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 93 87 110 115 87 164 80 29 223 233 47 70 104 27 32 161)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 114 189 180 45 55 156 216 7 232 220 221 89 126 92 104 196 100 236 180 33 30 232 133 247 33 14 85 255 82 233 54 136 52 35 31 57 33 131 156 138 58 44 199 255 89 100 241 247 156 119 242 200 129 62 38 89 104 78 225 216 191 113 37 192)
  :der-encode
  #t
  :tests
  '(#(380
      "u1 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 184 2 32 52 45 174 117 26 99 163 202 129 137 207 52 43 59 52 234 170 37 101 226 199 226 97 33 193 191 213 67 84 71 241 195)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 87 207 44 105 135 109 138 152 34 166 183 150 73 42 168 137 195 159 161 55 31 199 48 197 161 85 50 172 74 161 151 179 140 147 109 0 65 130 30 28 168 29 243 241 253 10 73 92 12 137 116 168 31 180 28 236 70 34 204 27 252 204 243 210)
  :der-encode
  #t
  :tests
  '(#(381
      "u1 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 184 2 33 0 203 210 81 138 229 156 92 53 126 118 48 203 212 196 203 20 16 137 119 3 231 102 63 25 254 18 137 73 123 238 79 126)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 10 116 19 128 10 101 113 176 49 0 217 243 39 198 138 137 170 174 242 231 255 146 43 10 10 169 94 57 160 130 196 251 55 70 110 176 78 211 129 135 190 223 215 103 222 124 69 65 101 119 188 164 189 150 29 227 216 137 11 234 52 9 246 151)
  :der-encode
  #t
  :tests
  '(#(382
      "u2 == 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 184 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 184)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 126 39 137 58 219 55 157 64 166 22 104 173 102 14 220 37 96 4 187 252 18 213 88 137 251 213 18 30 172 86 160 110 154 54 244 37 152 219 125 100 56 66 167 37 98 254 109 134 221 195 134 35 131 14 66 161 125 68 77 68 162 71 43 95)
  :der-encode
  #t
  :tests
  '(#(383
      "u2 == n - 1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 184 2 33 0 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 169 209 201 232 153 202 48 106 210 127 225 148 93 224 36 43 137)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 59 101 244 10 36 141 145 167 230 55 123 251 89 137 244 125 86 43 218 175 54 78 169 130 131 15 97 183 25 87 189 165 228 33 8 197 211 136 242 225 115 33 15 134 118 51 22 126 176 245 203 198 147 170 123 185 34 58 232 241 170 162 105 131)
  :der-encode
  #t
  :tests
  '(#(384
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 188 15 58 39 8 203 225 67 128 131 69 17 99 190 102 248 10 129 10 144 12 209 53 221 192 118 219 116 81 145 124 23)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 5 133 36 159 244 163 172 187 153 110 237 111 23 167 10 123 131 166 223 233 110 128 237 192 205 76 199 89 78 128 109 89 183 87 101 8 219 180 234 177 35 224 237 104 138 158 102 37 208 86 199 173 129 52 119 98 82 114 141 202 227 117 205 132)
  :der-encode
  #t
  :tests
  '(#(385
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 98 191 67 186 52 231 60 195 200 146 47 38 214 78 59 248 130 241 45 204 6 224 179 12 131 99 239 166 186 220 255 85)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 221 107 166 104 85 227 123 127 201 26 209 96 188 74 124 80 137 248 99 58 192 225 34 152 166 171 163 77 182 128 225 107 121 143 85 115 189 147 117 110 57 221 99 93 156 95 142 135 99 100 68 90 28 154 67 242 145 139 235 145 55 186 59 146)
  :der-encode
  #t
  :tests
  '(#(386
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 57 66 38 35 164 56 96 51 204 250 150 173 79 130 40 251 136 172 147 100 174 139 60 208 113 94 225 136 196 103 87 44)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 206 45 138 132 50 103 5 21 178 19 54 137 217 110 115 105 222 207 233 148 200 126 57 162 142 86 54 137 122 54 15 42 186 67 247 250 119 254 186 118 222 150 52 182 173 253 228 127 177 111 112 183 144 188 154 26 80 101 239 22 246 253 36 103)
  :der-encode
  #t
  :tests
  '(#(387
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 98 51 188 248 85 139 174 2 203 210 81 138 229 156 92 53 1 171 98 14 252 189 123 64 216 221 31 114 136 255 93 172)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 108 239 216 156 148 144 105 196 239 95 239 210 5 18 166 253 233 46 8 162 223 196 8 105 74 5 210 169 116 189 2 132 174 71 105 73 108 33 154 89 56 58 127 214 220 30 6 144 194 85 6 38 75 0 136 224 54 40 151 224 218 89 16 58)
  :der-encode
  #t
  :tests
  '(#(388
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 59 207 133 88 186 224 44 189 37 24 174 89 197 195 87 231 23 11 84 38 45 4 190 227 169 252 238 110 56 232 78 29)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 51 166 238 26 18 28 202 178 91 0 251 236 200 96 190 21 100 26 91 170 75 75 235 53 217 166 218 211 90 22 145 250 54 186 35 35 228 99 214 132 33 154 27 209 92 94 179 4 135 141 130 209 218 17 60 82 199 102 60 250 227 245 117 26)
  :der-encode
  #t
  :tests
  '(#(389
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 119 159 10 177 117 192 89 122 74 49 92 179 139 134 175 206 46 22 168 76 90 9 125 199 83 249 220 220 113 208 156 58)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 162 210 233 129 11 248 249 136 175 108 223 17 31 47 21 6 41 0 210 206 6 187 114 201 193 221 28 169 13 105 197 140 54 194 79 188 19 35 53 159 252 61 124 253 214 100 81 221 62 149 10 217 124 199 241 221 237 243 14 58 164 66 92 15)
  :der-encode
  #t
  :tests
  '(#(390
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 85 139 174 2 203 210 81 138 229 156 92 53 126 118 48 203 104 15 90 62 233 128 69 151 122 2 28 144 145 146 13 8)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 233 61 101 142 195 169 65 141 174 208 238 33 157 24 24 13 6 132 253 103 110 210 79 105 59 205 235 126 53 142 196 77 105 20 133 11 210 39 238 178 43 242 42 2 195 191 214 40 199 105 176 240 229 0 64 181 15 211 170 163 36 161 212 206)
  :der-encode
  #t
  :tests
  '(#(391
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 25 255 163 47 213 31 183 150 198 21 65 103 52 123 119 115 217 5 141 219 20 143 218 239 140 40 127 239 132 143 47 123)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 235 231 225 39 134 54 41 12 176 156 125 69 84 199 28 17 115 55 210 237 64 199 119 137 67 60 39 234 244 212 188 50 115 2 87 82 202 73 34 56 182 34 136 76 159 226 135 206 55 35 174 4 235 250 165 53 5 225 75 142 134 197 219 172)
  :der-encode
  #t
  :tests
  '(#(392
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 61 24 9 146 193 163 141 223 212 158 207 61 24 19 176 177 149 198 155 6 187 212 28 241 1 254 64 218 201 201 230 186)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 209 21 5 48 186 194 30 53 82 79 249 225 183 208 7 49 64 16 114 213 145 230 150 161 123 179 136 180 215 229 202 25 188 198 107 206 63 193 118 210 218 74 44 185 84 200 54 191 155 129 241 145 50 48 186 153 234 110 80 84 7 61 223 111)
  :der-encode
  #t
  :tests
  '(#(393
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 211 152 19 200 229 133 54 70 12 191 172 75 15 160 40 230 13 93 69 193 54 18 215 159 153 100 165 140 179 59 225 133)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 82 51 161 222 221 187 220 41 192 153 79 212 60 237 163 176 32 179 92 70 94 2 209 193 47 210 144 23 48 107 232 123 195 29 181 192 227 47 189 63 4 86 100 172 240 136 1 74 17 22 235 51 121 242 72 134 179 161 63 0 150 40 223 66)
  :der-encode
  #t
  :tests
  '(#(394
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 233 252 188 174 126 29 116 76 246 191 76 160 216 87 51 18 161 49 252 179 185 14 178 107 237 108 127 107 169 8 171 83)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 161 96 171 65 253 63 231 208 136 238 135 76 139 130 216 174 151 200 237 153 70 117 121 208 27 151 186 222 35 236 70 166 174 112 154 8 139 203 199 35 66 153 110 254 237 14 145 63 138 93 216 200 135 139 28 174 197 201 224 87 227 93 92 254)
  :der-encode
  #t
  :tests
  '(#(395
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 33 248 98 236 123 154 15 94 63 190 93 119 78 32 204 131 88 22 233 43 81 59 181 46 255 173 193 140 63 82 98 149)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 29 145 94 203 191 76 37 187 192 210 33 109 182 209 163 218 143 128 5 134 83 162 72 133 73 74 255 136 254 21 153 252 136 22 137 141 149 143 165 67 27 181 87 209 123 107 27 82 12 63 189 171 107 197 152 65 9 209 70 139 108 193 65 240)
  :der-encode
  #t
  :tests
  '(#(396
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 67 240 197 216 247 52 30 188 127 124 186 238 156 65 153 6 176 45 210 86 162 119 106 93 255 91 131 24 126 164 197 42)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 149 152 16 31 135 4 226 221 14 136 158 202 185 255 231 165 231 83 111 62 230 13 95 5 17 28 230 245 164 202 4 5 196 195 155 188 163 76 106 104 124 70 166 221 255 101 232 29 10 154 120 168 193 4 249 30 166 99 106 124 142 166 129 154)
  :der-encode
  #t
  :tests
  '(#(397
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 101 233 40 197 114 206 46 26 191 59 24 101 234 98 101 138 8 68 187 129 243 179 31 140 255 9 68 164 189 247 39 191)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 89 238 158 10 0 11 174 251 227 251 89 234 97 215 55 13 247 124 88 222 233 216 41 182 197 232 159 170 224 25 149 27 191 97 167 86 199 163 13 4 155 211 112 16 183 177 194 86 112 212 221 182 206 184 241 215 199 212 73 227 147 70 89 89)
  :der-encode
  #t
  :tests
  '(#(398
      "edge case for u1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 28 161 19 17 210 28 48 25 230 125 75 86 167 193 20 125 196 86 73 178 87 69 158 104 56 175 112 196 98 51 171 150)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 209 241 221 209 44 113 13 124 53 97 122 14 210 252 53 244 208 152 136 241 112 52 164 127 224 167 132 21 133 142 102 162 95 205 166 171 237 195 165 143 252 85 188 93 159 50 12 96 235 107 76 154 34 131 62 19 81 27 46 20 14 241 64 87)
  :der-encode
  #t
  :tests
  '(#(399
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 213 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 124 116 147 68 116 219 21 125 42 140 63 8 138 206 214 42)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 60 154 80 7 241 158 198 36 167 60 231 95 182 26 179 225 103 54 213 25 238 54 56 20 151 242 75 253 59 182 145 181 52 180 43 1 52 225 114 34 239 240 95 59 84 119 50 58 50 36 49 11 16 140 74 143 201 177 120 51 18 140 184 34)
  :der-encode
  #t
  :tests
  '(#(400
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 193 119 124 136 83 147 142 83 98 19 192 36 100 169 54 0 11 161 226 28 15 198 32 117 212 108 98 78 35 181 47 49)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 247 162 241 2 114 65 200 81 75 43 231 9 122 62 181 178 8 232 255 208 154 112 14 93 114 252 58 246 150 75 59 191 8 49 138 144 67 217 89 168 252 139 175 165 212 3 211 73 14 78 69 217 177 225 86 255 62 42 238 56 236 230 110 136)
  :der-encode
  #t
  :tests
  '(#(401
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 48 187 183 148 219 88 131 99 180 6 121 246 193 130 165 13 60 233 103 154 205 211 255 190 54 215 129 61 172 189 200 24)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 229 141 138 186 120 125 84 255 203 229 48 197 186 89 85 245 78 40 109 49 241 167 85 141 206 137 36 0 13 122 27 150 245 172 189 244 121 179 19 56 3 37 237 187 173 188 98 135 224 142 152 204 134 226 186 131 57 135 55 36 67 124 232 19)
  :der-encode
  #t
  :tests
  '(#(402
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 44 55 253 153 86 34 196 251 127 255 255 255 255 255 255 255 199 206 231 69 17 12 180 90 181 88 237 124 144 193 90 47)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 22 125 240 9 206 194 239 212 73 145 165 35 220 47 212 161 62 77 227 231 99 144 56 45 76 16 136 89 63 51 218 101 131 143 98 19 143 46 215 63 188 123 227 22 186 91 106 121 164 118 143 209 244 234 7 223 158 176 238 238 249 136 171 115)
  :der-encode
  #t
  :tests
  '(#(403
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 127 217 149 98 44 79 183 255 255 255 255 255 255 255 255 255 93 136 63 250 181 179 38 82 204 220 170 41 15 204 185 125)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 1 163 168 223 138 238 39 138 163 6 132 77 96 217 197 17 62 89 109 102 204 146 163 86 106 176 121 124 208 22 56 37 0 98 73 69 115 221 201 162 23 6 3 15 215 149 112 139 63 224 208 242 36 172 1 229 149 122 208 209 29 110 226 101)
  :der-encode
  #t
  :tests
  '(#(404
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 255 179 42 196 88 159 111 255 255 255 255 255 255 255 255 254 187 16 127 245 107 102 76 165 153 185 84 82 31 153 114 250)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 214 208 244 93 191 161 42 180 234 91 41 168 72 199 25 35 209 236 181 123 20 142 193 201 105 180 54 98 161 141 0 249 136 194 114 141 33 80 138 66 26 246 182 18 164 67 60 75 124 151 245 93 193 43 36 219 44 246 203 127 173 164 63 21)
  :der-encode
  #t
  :tests
  '(#(405
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 86 34 196 251 127 255 255 255 255 255 255 255 255 255 255 255 146 138 143 28 122 199 190 193 128 139 159 97 192 30 195 39)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 105 33 65 152 56 141 162 160 209 160 201 70 76 110 179 115 26 212 78 39 40 124 23 205 36 191 115 195 173 166 124 42 72 223 171 191 165 217 18 127 236 159 183 152 111 179 134 203 92 126 190 63 96 157 149 231 26 112 173 127 131 51 69 132)
  :der-encode
  #t
  :tests
  '(#(406
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 68 16 65 4 16 65 4 16 65 4 16 65 4 16 65 3 184 120 83 253 59 125 63 142 23 81 37 180 56 47 37 237)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 132 103 46 45 224 66 223 38 104 119 87 51 201 176 204 113 110 221 125 117 52 235 133 146 121 49 110 197 24 109 119 51 186 220 129 233 51 171 243 212 206 117 250 224 13 26 71 179 13 105 222 135 84 102 106 41 75 76 146 88 7 220 62 204)
  :der-encode
  #t
  :tests
  '(#(407
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 39 57 206 115 156 231 57 206 115 156 231 57 206 115 156 231 5 86 2 152 209 242 240 141 196 25 172 39 58 91 84 217)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 201 190 156 25 6 167 55 137 169 175 26 103 127 96 221 65 99 197 250 6 199 244 92 9 147 166 48 81 170 12 15 48 50 5 222 190 229 220 65 62 74 187 62 31 106 245 80 172 100 196 27 151 228 37 204 46 250 42 131 60 46 231 34 33)
  :der-encode
  #t
  :tests
  '(#(408
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 183 119 119 119 119 119 119 119 119 119 119 119 119 119 119 118 136 230 161 254 128 138 151 163 72 103 18 34 255 22 184 99)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 2 103 148 247 181 168 72 73 244 17 65 198 141 50 72 249 201 12 77 231 237 173 79 184 244 70 227 7 111 251 121 98 201 142 123 103 25 34 150 239 224 67 121 198 164 2 128 180 241 19 135 105 129 180 75 115 187 103 106 136 31 57 135 144)
  :der-encode
  #t
  :tests
  '(#(409
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 100 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 6 221 58 25 184 213 251 135 82 53 150 60 89 59 210 211)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 24 189 101 221 70 248 192 227 38 85 59 229 94 94 35 75 180 49 136 172 31 221 179 112 3 209 47 9 26 167 161 185 233 192 10 3 228 213 69 43 169 166 7 149 29 78 77 138 115 145 169 82 16 157 150 89 146 102 209 226 217 171 33 153)
  :der-encode
  #t
  :tests
  '(#(410
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 149 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 124 116 147 68 116 219 21 125 42 140 63 8 138 206 214 44)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 184 106 231 100 242 249 94 185 51 26 245 56 250 81 111 215 132 53 121 78 187 36 76 9 12 109 107 40 103 80 249 76 243 113 47 118 116 149 161 15 46 129 53 6 98 175 59 160 157 239 162 224 230 242 126 206 234 53 81 48 50 218 251 97)
  :der-encode
  #t
  :tests
  '(#(411
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 42 170 170 170 170 170 170 170 170 170 170 170 170 170 170 170 62 58 73 162 58 109 138 190 149 70 31 132 69 103 107 23)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 224 69 204 90 148 20 228 94 99 241 176 134 72 226 14 34 154 153 80 171 86 236 48 78 27 144 121 137 232 26 242 191 33 229 45 180 137 133 61 196 112 113 58 174 205 106 173 199 191 216 80 74 156 130 208 36 63 110 119 70 0 181 234 10)
  :der-encode
  #t
  :tests
  '(#(412
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 33 0 191 255 255 255 255 255 255 255 255 255 255 255 255 255 255 254 186 174 220 230 175 72 160 59 191 210 94 140 208 54 65 67)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 55 227 119 250 234 138 134 127 73 75 180 2 3 44 112 193 42 246 253 87 254 179 134 107 252 90 95 193 208 169 9 240 8 220 188 83 253 65 182 112 115 164 231 26 129 243 254 87 141 164 213 173 208 214 152 4 26 155 127 56 169 161 155 255)
  :der-encode
  #t
  :tests
  '(#(413
      "edge case for u2"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 127 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 2 32 24 93 219 202 109 172 65 177 218 3 60 251 96 193 82 134 158 116 179 205 102 233 255 223 27 107 192 158 214 94 228 12)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 9 163 49 16 103 110 74 79 138 151 113 80 167 190 41 30 10 38 156 174 150 120 113 11 29 135 248 6 139 15 233 97 4 58 111 100 232 98 120 166 86 163 158 68 104 179 71 37 151 175 178 220 217 48 204 186 27 30 162 201 136 193 52 80)
  :der-encode
  #t
  :tests
  '(#(414
      "point duplication during verification"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 50 176 209 13 141 14 4 188 141 77 6 77 39 6 153 232 124 255 201 180 156 92 32 115 14 28 38 246 16 93 220 218 2 33 0 197 82 5 244 35 97 28 126 150 97 91 204 32 20 25 69 253 226 75 188 233 86 212 156 212 62 20 171 76 239 54 89)
      #t
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 9 163 49 16 103 110 74 79 138 151 113 80 167 190 41 30 10 38 156 174 150 120 113 11 29 135 248 6 139 15 233 97 251 197 144 155 23 157 135 89 169 92 97 187 151 76 184 218 104 80 77 35 38 207 51 69 228 225 93 53 119 62 199 223)
  :der-encode
  #t
  :tests
  '(#(415
      "duplication bug"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 50 176 209 13 141 14 4 188 141 77 6 77 39 6 153 232 124 255 201 180 156 92 32 115 14 28 38 246 16 93 220 218 2 33 0 197 82 5 244 35 97 28 126 150 97 91 204 32 20 25 69 253 226 75 188 233 86 212 156 212 62 20 171 76 239 54 89)
      #f
      ("PointDuplication"))))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 183 2 31 174 191 64 129 166 48 148 216 234 120 202 32 4 208 42 48 59 191 54 52 112 234 74 100 155 8 193 153 91 222 94 251 162 92 157 47 73 15 24 30 22 121 93 92 117 248 59 92 17 200 29 103 237 226 234 141 248 29 151 12 239)
  :der-encode
  #t
  :tests
  '(#(416
      "comparison with point at infinity "
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 192 2 32 51 51 51 51 51 51 51 51 51 51 51 51 51 51 51 50 242 34 248 250 239 219 83 63 38 93 70 28 41 164 115 115)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 77 224 36 255 42 190 122 249 79 181 233 245 60 135 212 180 191 28 84 71 199 195 154 146 128 131 159 18 229 46 56 216 60 230 148 31 195 41 151 142 121 74 191 145 162 94 131 70 63 142 171 207 16 109 118 212 220 217 44 10 224 84 147 243)
  :der-encode
  #t
  :tests
  '(#(417
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 198 4 127 148 65 237 125 109 48 69 64 110 149 192 124 216 92 119 142 75 140 239 60 167 171 172 9 185 92 112 158 229 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 192)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 66 94 19 124 95 224 142 132 44 59 204 78 251 182 196 188 168 158 221 168 214 190 177 48 225 72 153 222 47 32 183 75 177 175 102 239 91 174 173 50 231 137 33 96 222 221 203 87 244 53 3 16 77 188 51 31 162 10 141 227 118 229 189 23)
  :der-encode
  #t
  :tests
  '(#(418
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 198 4 127 148 65 237 125 109 48 69 64 110 149 192 124 216 92 119 142 75 140 239 60 167 171 172 9 185 92 112 158 229 2 33 0 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 181 243 15 48 18 125 51 224 42 173 150 67 137 39 2 46 156)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 108 99 216 47 34 187 235 27 209 200 235 164 198 128 174 23 220 43 77 25 106 13 160 225 145 220 121 254 253 133 227 103 168 131 1 143 184 209 96 202 1 209 114 52 250 11 6 10 97 146 21 204 185 223 234 98 157 107 249 44 253 142 211 75)
  :der-encode
  #t
  :tests
  '(#(419
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 70 2 33 0 198 4 127 148 65 237 125 109 48 69 64 110 149 192 124 216 92 119 142 75 140 239 60 167 171 172 9 185 92 112 158 229 2 33 0 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 152 214 104 234 240 207 145 249 189 115 23 210 84 124 237 90 90)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 219 247 124 86 111 116 131 215 64 127 0 149 184 180 104 239 223 133 183 71 110 97 75 134 88 188 245 231 30 111 213 136 65 59 80 64 125 240 222 240 27 143 203 165 98 16 40 166 203 9 114 131 28 137 62 61 60 32 6 91 117 168 232 230)
  :der-encode
  #t
  :tests
  '(#(420
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 198 4 127 148 65 237 125 109 48 69 64 110 149 192 124 216 92 119 142 75 140 239 60 167 171 172 9 185 92 112 158 229 2 32 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 101 228 69 241 245 223 182 166 126 76 186 140 56 83 72 230 231)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 167 150 123 251 84 207 189 141 19 73 43 154 196 33 217 103 215 196 176 163 177 142 251 100 8 164 36 145 71 137 200 239 144 150 150 40 230 85 56 152 201 120 186 72 235 133 39 20 249 226 32 229 233 60 173 169 20 120 206 26 248 148 143 216)
  :der-encode
  #t
  :tests
  '(#(421
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 198 4 127 148 65 237 125 109 48 69 64 110 149 192 124 216 92 119 142 75 140 239 60 167 171 172 9 185 92 112 158 229 2 32 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 72 199 159 172 212 50 20 192 17 18 60 27 3 169 52 18 165)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 50 95 215 171 123 200 205 125 133 150 135 147 122 144 8 63 27 70 119 108 43 143 223 76 226 189 158 46 128 140 104 177 187 13 104 156 166 245 66 192 148 201 156 113 145 143 84 85 199 96 133 20 20 145 72 71 4 148 224 90 164 255 97 16)
  :der-encode
  #t
  :tests
  '(#(422
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 198 4 127 148 65 237 125 109 48 69 64 110 149 192 124 216 92 119 142 75 140 239 60 167 171 172 9 185 92 112 158 229 2 32 14 177 14 90 185 95 47 39 83 72 216 42 210 228 215 148 156 129 147 128 13 140 156 117 223 88 227 67 240 235 186 123)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 214 55 220 60 99 6 10 11 33 184 13 109 200 169 122 182 165 67 194 28 24 203 94 92 99 173 128 195 184 96 80 251 29 104 187 155 156 54 173 228 157 221 132 199 250 58 229 199 15 69 84 149 146 238 3 162 58 73 10 137 28 199 14 187)
  :der-encode
  #t
  :tests
  '(#(423
      "extreme value for k and edgecase s"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 2 32 85 85 85 85 85 85 85 85 85 85 85 85 85 85 85 84 232 228 244 76 229 24 53 105 63 240 202 46 240 18 21 192)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 107 200 124 230 4 122 49 100 190 21 173 120 30 243 45 18 186 216 202 174 247 112 122 195 225 90 83 237 117 239 201 12 142 238 40 110 42 192 200 249 246 240 53 11 139 186 148 182 197 191 173 232 123 162 17 173 192 202 213 243 129 128 145 224)
  :der-encode
  #t
  :tests
  '(#(424
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 2 33 0 182 219 109 182 219 109 182 219 109 182 219 109 182 219 109 181 243 15 48 18 125 51 224 42 173 150 67 137 39 2 46 156)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 218 194 71 4 4 136 190 194 141 195 236 154 129 169 144 112 31 69 192 186 75 182 226 37 115 218 64 14 250 166 94 46 125 227 117 72 110 23 87 182 199 180 38 155 238 66 62 219 132 199 244 179 51 193 85 123 93 223 186 13 217 131 204 243)
  :der-encode
  #t
  :tests
  '(#(425
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 2 33 0 153 153 153 153 153 153 153 153 153 153 153 153 153 153 153 152 214 104 234 240 207 145 249 189 115 23 210 84 124 237 90 90)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 29 77 7 49 144 179 39 171 78 79 90 206 141 140 139 104 225 0 253 37 101 161 164 196 97 11 202 48 159 230 169 195 226 116 161 155 65 228 150 176 131 46 158 66 245 34 159 192 0 112 108 150 109 37 87 243 68 29 50 61 143 172 161 41)
  :der-encode
  #t
  :tests
  '(#(426
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 2 32 102 102 102 102 102 102 102 102 102 102 102 102 102 102 102 101 228 69 241 245 223 182 166 126 76 186 140 56 83 72 230 231)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 39 75 168 218 33 228 237 68 226 24 50 13 170 16 63 13 66 39 187 53 27 103 216 74 210 98 134 41 184 47 168 39 76 144 209 220 254 85 254 126 230 101 113 255 69 38 199 85 202 200 200 237 22 176 28 77 184 48 183 221 157 234 231 73)
  :der-encode
  #t
  :tests
  '(#(427
      "extreme value for k and s^-1"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 2 32 73 36 146 73 36 146 73 36 146 73 36 146 73 36 146 72 199 159 172 212 50 20 192 17 18 60 27 3 169 52 18 165)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 180 84 6 249 81 211 25 117 233 83 172 17 194 92 35 128 70 167 151 93 210 251 179 141 137 9 19 193 200 180 81 203 202 224 190 104 142 110 64 10 146 101 189 154 89 186 16 71 225 100 48 110 246 205 53 139 192 255 0 233 224 39 233 87)
  :der-encode
  #t
  :tests
  '(#(428
      "extreme value for k"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 2 32 14 177 14 90 185 95 47 39 83 72 216 42 210 228 215 148 156 129 147 128 13 140 156 117 223 88 227 67 240 235 186 123)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 72 58 218 119 38 163 196 101 93 164 251 252 14 17 8 168 253 23 180 72 166 133 84 25 156 71 208 143 251 16 212 184)
  :der-encode
  #t
  :tests
  '(#(429
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 52 45 174 117 26 99 163 202 129 137 207 52 43 59 52 234 170 37 101 226 199 226 97 33 193 191 213 67 84 71 241 195 2 32 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 99 207 214 106 25 10 96 8 137 30 13 129 212 154 9 82)
      #f
      ())
    #(430
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 203 210 81 138 229 156 92 53 126 118 48 203 212 196 203 20 16 137 119 3 231 102 63 25 254 18 137 73 123 238 79 126 2 32 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 99 207 214 106 25 10 96 8 137 30 13 129 212 154 9 82)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 121 190 102 126 249 220 187 172 85 160 98 149 206 135 11 7 2 155 252 219 45 206 40 217 89 242 129 91 22 248 23 152 183 197 37 136 217 92 59 154 162 91 4 3 241 238 247 87 2 232 75 183 89 122 171 230 99 184 47 111 4 239 39 119)
  :der-encode
  #t
  :tests
  '(#(431
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 68 2 32 52 45 174 117 26 99 163 202 129 137 207 52 43 59 52 234 170 37 101 226 199 226 97 33 193 191 213 67 84 71 241 195 2 32 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 99 207 214 106 25 10 96 8 137 30 13 129 212 154 9 82)
      #f
      ())
    #(432
      "testing point duplication"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 33 0 203 210 81 138 229 156 92 53 126 118 48 203 212 196 203 20 16 137 119 3 231 102 63 25 254 18 137 73 123 238 79 126 2 32 36 146 73 36 146 73 36 146 73 36 146 73 36 146 73 36 99 207 214 106 25 10 96 8 137 30 13 129 212 154 9 82)
      #f
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 120 44 142 209 126 59 42 120 59 84 100 243 59 9 101 42 113 198 120 224 94 197 30 132 226 188 252 102 58 61 233 99 175 154 203 66 128 184 199 247 196 47 78 249 171 166 36 94 193 236 23 18 253 56 160 250 150 65 141 140 214 170 97 82)
  :der-encode
  #t
  :tests
  '(#(433
      "pseudorandom signature"
      #vu8()
      #vu8(48 68 2 32 34 187 0 0 233 100 138 14 230 89 249 182 169 171 101 19 220 144 171 150 142 196 157 57 83 246 76 130 189 220 133 32 2 32 74 160 223 208 71 176 120 110 17 130 49 239 247 232 99 17 72 126 201 209 188 132 170 239 31 115 111 65 120 194 136 249)
      #t
      ())
    #(434
      "pseudorandom signature"
      #vu8(77 115 103)
      #vu8(48 70 2 33 0 133 91 96 84 158 13 132 237 57 89 171 40 0 238 224 203 201 162 206 202 226 229 16 237 81 233 242 121 117 205 204 78 2 33 0 198 13 204 128 163 220 206 153 17 203 156 251 161 35 182 166 248 93 32 171 105 90 158 231 212 110 11 217 238 179 55 249)
      #t
      ())
    #(435
      "pseudorandom signature"
      #vu8(49 50 51 52 48 48)
      #vu8(48 69 2 32 92 215 58 165 129 136 101 142 165 19 248 236 240 217 226 218 158 181 214 188 199 203 173 205 106 74 142 12 186 81 118 222 2 33 0 169 240 144 187 93 63 207 91 127 167 225 109 40 119 24 119 63 95 75 160 151 59 50 154 55 136 205 69 180 189 55 101)
      #t
      ())
    #(436
      "pseudorandom signature"
      #vu8(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
      #vu8(48 69 2 32 127 158 235 173 42 50 63 131 70 68 93 30 47 205 228 122 186 76 150 173 70 134 23 43 235 207 250 166 4 232 219 227 2 33 0 236 9 215 49 229 142 58 51 126 160 58 183 38 18 177 248 1 184 142 172 87 27 211 160 49 37 10 198 242 227 79 218)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 110 130 53 85 69 41 20 9 145 130 198 178 193 214 240 181 210 141 80 204 208 5 175 44 225 187 165 65 170 64 202 255 0 0 0 1 6 4 146 213 165 103 62 15 37 216 213 15 183 229 140 73 216 109 70 212 33 105 85 224 170 61 64 225)
  :der-encode
  #t
  :tests
  '(#(437
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 194 138 209 86 254 128 158 211 109 200 8 18 174 47 50 216 77 187 251 185 64 1 35 48 92 51 37 81 196 241 13 57 2 33 0 252 91 149 176 199 251 194 231 204 78 193 191 1 2 15 128 80 38 12 226 202 69 195 191 91 100 167 178 174 239 172 233)
      #t
      ())
    #(438
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 163 107 253 224 245 226 63 110 59 61 108 200 14 222 61 158 78 161 194 203 147 55 34 19 136 247 10 165 45 236 94 83 2 33 0 194 126 29 177 13 41 114 10 18 12 38 37 199 224 117 103 144 32 11 45 155 204 235 23 10 19 86 225 213 71 126 60)
      #t
      ())
    #(439
      "y-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 33 0 129 141 238 151 48 240 27 63 82 93 170 156 192 213 66 59 12 74 240 65 76 100 123 110 11 200 133 70 219 156 13 117 2 32 97 193 106 144 222 29 187 26 177 227 199 145 126 137 22 50 245 87 244 147 180 16 111 34 85 23 239 24 106 188 15 249)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 110 130 53 85 69 41 20 9 145 130 198 178 193 214 240 181 210 141 80 204 208 5 175 44 225 187 165 65 170 64 202 255 255 255 255 254 249 251 109 42 90 152 193 240 218 39 42 240 72 26 115 182 39 146 185 43 222 150 170 30 85 194 187 78)
  :der-encode
  #t
  :tests
  '(#(440
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 83 204 14 223 198 136 227 210 100 237 71 85 249 207 0 100 24 225 110 36 220 151 132 83 166 239 20 251 236 255 97 127 2 32 36 105 76 0 211 140 19 37 153 115 170 109 184 138 223 124 196 155 86 115 230 40 179 198 94 127 224 111 38 101 219 134)
      #t
      ())
    #(441
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 33 0 202 205 20 64 98 17 237 133 216 222 27 80 225 103 245 157 236 104 133 116 82 76 111 193 118 44 146 104 33 78 59 186 2 32 40 156 248 148 159 113 118 38 194 88 51 160 161 89 214 61 119 208 34 180 142 22 16 7 70 79 89 245 7 45 248 167)
      #t
      ())
    #(442
      "y-coordinate of the public key is large"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 33 0 193 164 201 209 254 239 72 4 88 19 217 17 246 171 177 136 80 46 6 210 107 52 25 79 45 234 163 86 229 120 167 105 2 32 64 99 211 54 123 43 171 82 191 159 188 76 211 246 112 102 117 105 204 177 207 176 90 124 124 21 102 34 186 89 61 69)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 0 0 0 1 63 210 34 72 214 77 149 247 60 41 180 138 180 134 49 133 11 229 3 253 0 248 70 139 95 15 112 224 246 238 122 164 59 194 198 253 37 177 216 38 146 65 203 221 157 187 13 172 150 220 150 35 31 67 7 5 248 56 113 125)
  :der-encode
  #t
  :tests
  '(#(443
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 90 245 104 52 103 180 203 61 104 189 22 140 95 226 41 160 123 126 177 222 47 146 184 169 116 63 180 108 54 145 135 42 2 32 76 190 53 203 230 104 5 114 158 144 116 98 22 156 19 181 196 254 180 151 170 182 88 119 75 236 30 205 123 216 134 60)
      #t
      ())
    #(444
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 5 30 95 130 90 92 41 249 42 16 138 61 220 220 191 127 252 227 122 179 41 21 152 89 120 81 46 137 162 168 59 12 2 32 99 64 172 24 112 119 167 251 67 115 83 123 69 149 163 146 153 173 11 163 81 219 35 188 174 145 118 18 92 97 237 237)
      #t
      ())
    #(445
      "x-coordinate of the public key is small"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 32 52 226 141 236 191 116 171 211 15 85 21 94 226 255 150 246 33 6 96 1 168 83 172 239 145 108 219 57 167 208 123 64 2 33 0 135 86 26 150 22 112 22 251 125 214 243 199 37 159 140 86 63 33 68 51 46 187 154 72 233 59 149 18 211 191 83 146)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 37 175 214 137 172 171 174 214 124 31 41 109 229 148 6 248 197 80 245 113 70 160 180 236 44 151 135 109 255 255 255 255 250 70 167 110 82 3 34 223 188 73 30 196 240 204 25 116 32 252 78 165 136 61 143 109 213 60 53 75 196 246 124 53)
  :der-encode
  #t
  :tests
  '(#(446
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 202 253 237 27 201 138 75 223 231 110 29 249 171 117 52 42 127 237 22 176 193 104 138 46 116 77 135 27 148 4 190 20 2 33 0 161 31 203 87 209 33 32 104 175 237 134 163 126 114 145 170 2 6 30 117 184 131 233 185 167 175 58 82 232 31 80 51)
      #t
      ())
    #(447
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 37 79 149 65 174 189 79 202 156 231 19 111 168 230 237 99 103 119 138 254 223 54 32 23 121 176 234 106 97 168 47 59 2 32 56 102 129 3 238 188 165 231 134 224 93 255 253 139 159 29 135 212 161 85 139 28 223 192 238 185 138 96 106 182 84 198)
      #t
      ())
    #(448
      "x-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 249 152 232 50 43 42 17 1 187 223 155 139 128 188 20 126 82 37 99 44 219 107 26 140 76 76 37 194 156 211 49 157 2 33 0 238 107 62 123 89 98 31 214 43 50 83 239 100 106 215 205 74 77 83 221 17 55 32 56 176 179 20 206 208 226 229 169)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 209 46 108 102 182 119 52 195 200 77 38 1 207 93 53 220 9 126 39 99 127 10 202 74 79 219 116 182 170 221 59 185 63 91 223 248 139 213 115 109 248 152 230 153 0 110 215 80 241 28 240 124 88 102 205 122 215 12 113 33 255 255 255 255)
  :der-encode
  #t
  :tests
  '(#(449
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 12 66 106 63 37 245 208 37 9 40 172 78 94 160 60 249 73 211 68 68 40 58 193 138 73 236 99 138 42 110 164 197 2 32 9 240 223 47 231 143 140 227 1 5 124 115 76 243 194 80 93 114 25 119 95 183 120 117 132 97 54 11 22 142 44 142)
      #t
      ())
    #(450
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 68 2 32 19 9 186 116 41 153 173 102 174 241 4 204 20 2 70 188 87 107 209 74 204 107 176 190 114 133 119 228 159 79 142 213 2 32 49 226 159 237 202 181 153 157 102 178 122 79 79 252 149 13 204 128 102 251 124 219 173 154 99 98 39 12 6 106 80 10)
      #t
      ())
    #(451
      "y-coordinate of the public key has many trailing 1's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 33 0 203 86 94 191 212 128 68 209 125 46 36 27 124 213 254 198 8 158 61 11 238 131 81 107 113 15 104 213 131 204 209 198 2 32 38 214 213 161 241 42 224 99 82 142 126 75 26 106 156 92 118 10 243 143 40 40 219 148 7 196 57 72 79 42 233 193)
      #t
      ())))
(test-signature/testvector
  "ecdsa_secp256k1_sha3_512_test"
  :algorithm
  "ECDSA"
  :digest
  "SHA3-512"
  :public-key
  #vu8(48 86 48 16 6 7 42 134 72 206 61 2 1 6 5 43 129 4 0 10 3 66 0 4 109 74 127 96 212 119 74 79 10 168 187 222 219 149 60 126 234 121 9 64 126 49 100 117 86 100 188 40 0 0 0 0 230 89 211 78 77 243 141 158 140 158 170 223 186 54 97 44 118 145 149 190 134 199 122 172 63 54 231 139 83 134 128 251)
  :der-encode
  #t
  :tests
  '(#(452
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 33 0 166 196 25 244 120 0 124 228 235 7 205 141 235 36 139 141 157 17 225 108 2 54 78 24 57 26 185 52 198 243 233 29 2 32 54 58 180 97 184 212 12 134 73 152 166 223 169 201 199 116 25 147 11 147 54 240 205 71 27 116 120 107 9 171 162 123)
      #t
      ())
    #(453
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 70 2 33 0 226 42 180 111 136 60 110 165 141 233 127 152 47 253 62 245 129 116 159 229 86 143 129 33 118 21 102 80 145 69 176 200 2 33 0 252 74 83 218 244 18 42 161 11 152 164 209 140 46 73 32 179 119 68 68 127 13 132 63 249 237 29 121 212 130 215 60)
      #t
      ())
    #(454
      "x-coordinate of the public key has many trailing 0's"
      #vu8(77 101 115 115 97 103 101)
      #vu8(48 69 2 33 0 146 26 22 234 36 30 105 201 212 243 189 230 186 44 199 225 10 39 201 223 216 185 32 118 208 164 166 217 248 174 10 179 2 32 57 182 110 226 175 215 219 16 153 254 226 205 140 105 201 241 234 41 4 126 250 204 28 110 142 233 46 90 34 68 164 11)
      #t
      ())))
